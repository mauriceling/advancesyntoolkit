''' -------------------------------------
Python ODE script generated by ASModeller
(a package in AdvanceSynToolKit)

Date Time: 2025-10-31 4:5:5:141563

name: models/bigg/iAF1260.xml
author: iAF1260
------------------------------------- '''

def m_acgam_p(t, y):
    R1 = (13.7 * 1e-6 * y[83] * y[406])/(130e-6 + 1e-6 * y[83] * y[406])
    R83 = (13.7 * 1e-6 * y[1328])/(130e-6 + 1e-6 * y[1328])
    R81 = (13.7 * 1e-6 * y[0] * y[563])/(130e-6 + 1e-6 * y[0] * y[563])
    return (R1 + R83) - (R81)
 
def m_pi_p(t, y):
    R1 = (13.7 * 1e-6 * y[83] * y[406])/(130e-6 + 1e-6 * y[83] * y[406])
    R123 = (13.7 * 1e-6 * y[142] * y[406])/(130e-6 + 1e-6 * y[142] * y[406])
    R564 = (13.7 * 1e-6 * y[39] * y[406])/(130e-6 + 1e-6 * y[39] * y[406])
    R570 = (13.7 * 1e-6 * y[62] * y[406])/(130e-6 + 1e-6 * y[62] * y[406])
    R577 = (13.7 * 1e-6 * y[75] * y[406])/(130e-6 + 1e-6 * y[75] * y[406])
    R594 = (13.7 * 1e-6 * y[76] * y[406])/(130e-6 + 1e-6 * y[76] * y[406])
    R930 = (13.7 * 1e-6 * y[574] * y[37])/(130e-6 + 1e-6 * y[574] * y[37])
    R1087 = (13.7 * 1e-6 * y[653] * y[406])/(130e-6 + 1e-6 * y[653] * y[406])
    R1091 = (13.7 * 1e-6 * y[742] * y[406])/(130e-6 + 1e-6 * y[742] * y[406])
    R1148 = (13.7 * 1e-6 * y[697] * y[37])/(130e-6 + 1e-6 * y[697] * y[37])
    R1150 = (13.7 * 1e-6 * y[696] * y[37])/(130e-6 + 1e-6 * y[696] * y[37])
    R1154 = (13.7 * 1e-6 * y[661] * y[406])/(130e-6 + 1e-6 * y[661] * y[406])
    R1242 = (13.7 * 1e-6 * y[749] * y[37])/(130e-6 + 1e-6 * y[749] * y[37])
    R1334 = (13.7 * 1e-6 * y[735] * y[406])/(130e-6 + 1e-6 * y[735] * y[406])
    R1608 = (13.7 * 1e-6 * y[907] * y[37])/(130e-6 + 1e-6 * y[907] * y[37])
    R1725 = (13.7 * 1e-6 * y[263] * y[406])/(130e-6 + 1e-6 * y[263] * y[406])
    R1726 = (13.7 * 1e-6 * y[406] * y[1281])/(130e-6 + 1e-6 * y[406] * y[1281])
    R1729 = (13.7 * 1e-6 * y[406] * y[826])/(130e-6 + 1e-6 * y[406] * y[826])
    R1732 = (13.7 * 1e-6 * y[484] * y[406])/(130e-6 + 1e-6 * y[484] * y[406])
    R1734 = (13.7 * 1e-6 * y[530] * y[406])/(130e-6 + 1e-6 * y[530] * y[406])
    R1735 = (13.7 * 1e-6 * y[748] * y[406])/(130e-6 + 1e-6 * y[748] * y[406])
    R1736 = (13.7 * 1e-6 * y[535] * y[406])/(130e-6 + 1e-6 * y[535] * y[406])
    R1742 = (13.7 * 1e-6 * y[406] * y[1270])/(130e-6 + 1e-6 * y[406] * y[1270])
    R1745 = (13.7 * 1e-6 * y[467] * y[406])/(130e-6 + 1e-6 * y[467] * y[406])
    R1748 = (13.7 * 1e-6 * y[779] * y[406])/(130e-6 + 1e-6 * y[779] * y[406])
    R1751 = (13.7 * 1e-6 * y[399] * y[406])/(130e-6 + 1e-6 * y[399] * y[406])
    R1753 = (13.7 * 1e-6 * y[532] * y[406])/(130e-6 + 1e-6 * y[532] * y[406])
    R1759 = (13.7 * 1e-6 * y[442] * y[406])/(130e-6 + 1e-6 * y[442] * y[406])
    R1812 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1815 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1817 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1819 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1828 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1836 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1838 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1897 = (13.7 * 1e-6 * y[406] * y[1046])/(130e-6 + 1e-6 * y[406] * y[1046])
    R1900 = (13.7 * 1e-6 * y[406] * y[1047])/(130e-6 + 1e-6 * y[406] * y[1047])
    R1905 = (13.7 * 1e-6 * y[406] * y[1048])/(130e-6 + 1e-6 * y[406] * y[1048])
    R1908 = (13.7 * 1e-6 * y[406] * y[1049])/(130e-6 + 1e-6 * y[406] * y[1049])
    R1911 = (13.7 * 1e-6 * y[406] * y[1050])/(130e-6 + 1e-6 * y[406] * y[1050])
    R1913 = (13.7 * 1e-6 * y[406] * y[1052])/(130e-6 + 1e-6 * y[406] * y[1052])
    R1915 = (13.7 * 1e-6 * y[406] * y[1054])/(130e-6 + 1e-6 * y[406] * y[1054])
    R1951 = (13.7 * 1e-6 * y[406] * y[949])/(130e-6 + 1e-6 * y[406] * y[949])
    R1953 = (13.7 * 1e-6 * y[1519])/(130e-6 + 1e-6 * y[1519])
    R2025 = (13.7 * 1e-6 * y[406] * y[1137])/(130e-6 + 1e-6 * y[406] * y[1137])
    R2050 = (13.7 * 1e-6 * y[406] * y[1150])/(130e-6 + 1e-6 * y[406] * y[1150])
    R2074 = (13.7 * 1e-6 * y[406] * y[1215])/(130e-6 + 1e-6 * y[406] * y[1215])
    R2138 = (13.7 * 1e-6 * y[406] * y[1192])/(130e-6 + 1e-6 * y[406] * y[1192])
    R2294 = (13.7 * 1e-6 * y[406] * y[1264])/(130e-6 + 1e-6 * y[406] * y[1264])
    R2353 = (13.7 * 1e-6 * y[406] * y[549])/(130e-6 + 1e-6 * y[406] * y[549])
    R1952 = (13.7 * 1e-6 * y[61] * y[1])/(130e-6 + 1e-6 * y[61] * y[1])
    R1954 = (13.7 * 1e-6 * y[278] * y[173] * y[1])/(130e-6 + 1e-6 * y[278] * y[173] * y[1])
    return (R1 + R123 + R564 + R570 + R577 + R594 + R930 + R1087 + R1091 + R1148 + R1150 + R1154 + R1242 + R1334 + R1608 + R1725 + R1726 + R1729 + R1732 + R1734 + R1735 + R1736 + R1742 + R1745 + R1748 + R1751 + R1753 + R1759 + R1812 + R1815 + R1817 + R1819 + R1828 + R1836 + R1838 + R1897 + R1900 + R1905 + R1908 + R1911 + R1913 + R1915 + R1951 + R1953 + R2025 + R2050 + R2074 + R2138 + R2294 + R2353) - (R1952 + R1954)
 
def m_2tdecg3p_c(t, y):
    R2 = (13.7 * 1e-6 * y[1097])/(130e-6 + 1e-6 * y[1097])
    R1541 = (13.7 * 1e-6 * y[2] * y[173])/(130e-6 + 1e-6 * y[2] * y[173])
    return (R2) - (R1541)
 
def m_2tdec7eg3p_c(t, y):
    R4 = (13.7 * 1e-6 * y[1098])/(130e-6 + 1e-6 * y[1098])
    R1542 = (13.7 * 1e-6 * y[3] * y[173])/(130e-6 + 1e-6 * y[3] * y[173])
    return (R4) - (R1542)
 
def m_2hdecg3p_c(t, y):
    R5 = (13.7 * 1e-6 * y[1102])/(130e-6 + 1e-6 * y[1102])
    R1543 = (13.7 * 1e-6 * y[4] * y[173])/(130e-6 + 1e-6 * y[4] * y[173])
    return (R5) - (R1543)
 
def m_3hoctaACP_c(t, y):
    R6 = (13.7 * 1e-6 * y[30] * y[36] * y[201])/(130e-6 + 1e-6 * y[30] * y[36] * y[201])
    R478 = (13.7 * 1e-6 * y[5])/(130e-6 + 1e-6 * y[5])
    return (R6) - (R478)
 
def m_nadp_c(t, y):
    R6 = (13.7 * 1e-6 * y[30] * y[36] * y[201])/(130e-6 + 1e-6 * y[30] * y[36] * y[201])
    R8 = (13.7 * 1e-6 * y[31] * y[36] * y[201])/(130e-6 + 1e-6 * y[31] * y[36] * y[201])
    R10 = (13.7 * 1e-6 * y[849] * y[36] * y[201])/(130e-6 + 1e-6 * y[849] * y[36] * y[201])
    R12 = (13.7 * 1e-6 * y[32] * y[36] * y[201])/(130e-6 + 1e-6 * y[32] * y[36] * y[201])
    R13 = (13.7 * 1e-6 * y[33] * y[36] * y[201])/(130e-6 + 1e-6 * y[33] * y[36] * y[201])
    R58 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R229 = (13.7 * 1e-6 * y[36] * y[94] * y[201])/(130e-6 + 1e-6 * y[36] * y[94] * y[201])
    R287 = (13.7 * 1e-6 * y[515] * y[36] * y[201])/(130e-6 + 1e-6 * y[515] * y[36] * y[201])
    R319 = (13.7 * 1e-6 * y[1367] * y[36] * y[201])/(130e-6 + 1e-6 * y[1367] * y[36] * y[201])
    R347 = (13.7 * 1e-6 * y[1377] * y[36] * y[201])/(130e-6 + 1e-6 * y[1377] * y[36] * y[201])
    R350 = (13.7 * 1e-6 * y[479] * y[36] * y[201])/(130e-6 + 1e-6 * y[479] * y[36] * y[201])
    R559 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R561 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R592 = (13.7 * 1e-6 * y[505] * y[36] * y[201])/(130e-6 + 1e-6 * y[505] * y[36] * y[201])
    R600 = (13.7 * 1e-6 * y[506] * y[36] * y[201])/(130e-6 + 1e-6 * y[506] * y[36] * y[201])
    R610 = (13.7 * 1e-6 * y[14] * y[36] * y[201])/(130e-6 + 1e-6 * y[14] * y[36] * y[201])
    R615 = (13.7 * 1e-6 * y[1023] * y[36] * y[201])/(130e-6 + 1e-6 * y[1023] * y[36] * y[201])
    R634 = (13.7 * 1e-6 * y[18] * y[36] * y[201])/(130e-6 + 1e-6 * y[18] * y[36] * y[201])
    R639 = (13.7 * 1e-6 * y[19] * y[36] * y[201])/(130e-6 + 1e-6 * y[19] * y[36] * y[201])
    R640 = (13.7 * 1e-6 * y[440] * y[36] * y[201])/(130e-6 + 1e-6 * y[440] * y[36] * y[201])
    R645 = (13.7 * 1e-6 * y[544] * y[36] * y[201])/(130e-6 + 1e-6 * y[544] * y[36] * y[201])
    R646 = (13.7 * 1e-6 * y[20] * y[36] * y[201])/(130e-6 + 1e-6 * y[20] * y[36] * y[201])
    R648 = (13.7 * 1e-6 * y[36] * y[201] * y[445])/(130e-6 + 1e-6 * y[36] * y[201] * y[445])
    R650 = (13.7 * 1e-6 * y[36] * y[201] * y[463])/(130e-6 + 1e-6 * y[36] * y[201] * y[463])
    R659 = (13.7 * 1e-6 * y[23] * y[36] * y[201])/(130e-6 + 1e-6 * y[23] * y[36] * y[201])
    R660 = (13.7 * 1e-6 * y[36] * y[201] * y[360])/(130e-6 + 1e-6 * y[36] * y[201] * y[360])
    R662 = (13.7 * 1e-6 * y[36] * y[201] * y[371])/(130e-6 + 1e-6 * y[36] * y[201] * y[371])
    R669 = (13.7 * 1e-6 * y[36] * y[201] * y[374])/(130e-6 + 1e-6 * y[36] * y[201] * y[374])
    R672 = (13.7 * 1e-6 * y[28] * y[36] * y[201])/(130e-6 + 1e-6 * y[28] * y[36] * y[201])
    R676 = (13.7 * 1e-6 * y[36] * y[201] * y[393])/(130e-6 + 1e-6 * y[36] * y[201] * y[393])
    R678 = (13.7 * 1e-6 * y[36] * y[201] * y[401])/(130e-6 + 1e-6 * y[36] * y[201] * y[401])
    R682 = (13.7 * 1e-6 * y[36] * y[201] * y[410])/(130e-6 + 1e-6 * y[36] * y[201] * y[410])
    R684 = (13.7 * 1e-6 * y[36] * y[201] * y[421])/(130e-6 + 1e-6 * y[36] * y[201] * y[421])
    R691 = (13.7 * 1e-6 * y[36] * y[201] * y[428])/(130e-6 + 1e-6 * y[36] * y[201] * y[428])
    R692 = (13.7 * 1e-6 * y[29] * y[36] * y[201])/(130e-6 + 1e-6 * y[29] * y[36] * y[201])
    R694 = (13.7 * 1e-6 * y[36] * y[201] * y[438])/(130e-6 + 1e-6 * y[36] * y[201] * y[438])
    R995 = (13.7 * 1e-6 * y[282] * y[36] * y[201])/(130e-6 + 1e-6 * y[282] * y[36] * y[201])
    R1080 = (13.7 * 1e-6 * y[1174] * y[36] * y[201])/(130e-6 + 1e-6 * y[1174] * y[36] * y[201])
    R1083 = (13.7 * 1e-6 * y[36] * y[201] * y[285])/(130e-6 + 1e-6 * y[36] * y[201] * y[285])
    R1094 = (13.7 * 1e-6 * y[284] * y[36] * y[201])/(130e-6 + 1e-6 * y[284] * y[36] * y[201])
    R1140 = (13.7 * 1e-6 * y[718] * y[36] * y[201])/(130e-6 + 1e-6 * y[718] * y[36] * y[201])
    R1206 = (13.7 * 1e-6 * y[213] * y[710] * y[36] * y[201])/(130e-6 + 1e-6 * y[213] * y[710] * y[36] * y[201])
    R1207 = (13.7 * 1e-6 * y[730] * y[36] * y[201])/(130e-6 + 1e-6 * y[730] * y[36] * y[201])
    R1245 = (13.7 * 1e-6 * y[222] * y[36] * y[201])/(130e-6 + 1e-6 * y[222] * y[36] * y[201])
    R1256 = (13.7 * 1e-6 * y[703] * y[36] * y[201])/(130e-6 + 1e-6 * y[703] * y[36] * y[201])
    R1263 = (13.7 * 1e-6 * y[593] * y[36] * y[201])/(130e-6 + 1e-6 * y[593] * y[36] * y[201])
    R1296 = (13.7 * 1e-6 * y[310] * y[36] * y[201])/(130e-6 + 1e-6 * y[310] * y[36] * y[201])
    R1382 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R1401 = (13.7 * 1e-6 * y[36] * y[1631] * y[201])/(130e-6 + 1e-6 * y[36] * y[1631] * y[201])
    R1457 = (13.7 * 1e-6 * y[103] * y[36] * y[201])/(130e-6 + 1e-6 * y[103] * y[36] * y[201])
    R1716 = (13.7 * 1e-6 * y[201] * y[966] * y[335])/(130e-6 + 1e-6 * y[201] * y[966] * y[335])
    R1784 = (13.7 * 1e-6 * y[692] * y[36] * y[201])/(130e-6 + 1e-6 * y[692] * y[36] * y[201])
    R2146 = (13.7 * 1e-6 * y[278] * y[236])/(130e-6 + 1e-6 * y[278] * y[236])
    R2155 = (13.7 * 1e-6 * y[36] * y[201] * y[444])/(130e-6 + 1e-6 * y[36] * y[201] * y[444])
    R2163 = (13.7 * 1e-6 * y[529] * y[36] * y[201])/(130e-6 + 1e-6 * y[529] * y[36] * y[201])
    R2164 = (13.7 * 1e-6 * y[36] * y[441] * y[201])/(130e-6 + 1e-6 * y[36] * y[441] * y[201])
    R2181 = (13.7 * 1e-6 * y[495] * y[36] * y[201])/(130e-6 + 1e-6 * y[495] * y[36] * y[201])
    R2222 = (13.7 * 1e-6 * y[236] * y[201])/(130e-6 + 1e-6 * y[236] * y[201])
    R2237 = (13.7 * 1e-6 * y[36] * y[201] * y[415])/(130e-6 + 1e-6 * y[36] * y[201] * y[415])
    R2245 = (13.7 * 1e-6 * y[36] * y[201] * y[522])/(130e-6 + 1e-6 * y[36] * y[201] * y[522])
    R2265 = (13.7 * 1e-6 * y[1249] * y[36] * y[201])/(130e-6 + 1e-6 * y[1249] * y[36] * y[201])
    R2350 = (13.7 * 1e-6 * y[36] * y[201] * y[1278])/(130e-6 + 1e-6 * y[36] * y[201] * y[1278])
    R188 = (13.7 * 1e-6 * y[175] * y[6] * y[37])/(130e-6 + 1e-6 * y[175] * y[6] * y[37])
    R249 = (13.7 * 1e-6 * y[132] * y[173] * y[6])/(130e-6 + 1e-6 * y[132] * y[173] * y[6])
    R258 = (13.7 * 1e-6 * y[173] * y[6] * y[1356])/(130e-6 + 1e-6 * y[173] * y[6] * y[1356])
    R328 = (13.7 * 1e-6 * y[1372] * y[6])/(130e-6 + 1e-6 * y[1372] * y[6])
    R336 = (13.7 * 1e-6 * y[821] * y[6] * y[37])/(130e-6 + 1e-6 * y[821] * y[6] * y[37])
    R344 = (13.7 * 1e-6 * y[1376] * y[173] * y[6])/(130e-6 + 1e-6 * y[1376] * y[173] * y[6])
    R622 = (13.7 * 1e-6 * y[6] * y[525])/(130e-6 + 1e-6 * y[6] * y[525])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1112 = (13.7 * 1e-6 * y[743] * y[6])/(130e-6 + 1e-6 * y[743] * y[6])
    R1145 = (13.7 * 1e-6 * y[108] * y[6])/(130e-6 + 1e-6 * y[108] * y[6])
    R1184 = (13.7 * 1e-6 * y[715] * y[173] * y[6])/(130e-6 + 1e-6 * y[715] * y[173] * y[6])
    R1195 = (13.7 * 1e-6 * y[110] * y[173] * y[6])/(130e-6 + 1e-6 * y[110] * y[173] * y[6])
    R1253 = (13.7 * 1e-6 * y[754] * y[6])/(130e-6 + 1e-6 * y[754] * y[6])
    R1370 = (13.7 * 1e-6 * y[174] * y[6])/(130e-6 + 1e-6 * y[174] * y[6])
    R1402 = (13.7 * 1e-6 * y[1627] * y[6])/(130e-6 + 1e-6 * y[1627] * y[6])
    R1455 = (13.7 * 1e-6 * y[1426] * y[6])/(130e-6 + 1e-6 * y[1426] * y[6])
    R1528 = (13.7 * 1e-6 * y[6] * y[500])/(130e-6 + 1e-6 * y[6] * y[500])
    R1627 = (13.7 * 1e-6 * y[643] * y[6])/(130e-6 + 1e-6 * y[643] * y[6])
    R1926 = (13.7 * 1e-6 * y[717] * y[6])/(130e-6 + 1e-6 * y[717] * y[6])
    R2161 = (13.7 * 1e-6 * y[61] * y[113] * y[6])/(130e-6 + 1e-6 * y[61] * y[113] * y[6])
    R2192 = (13.7 * 1e-6 * y[173] * y[6])/(130e-6 + 1e-6 * y[173] * y[6])
    R2200 = (13.7 * 1e-6 * y[173] * y[6] * y[111])/(130e-6 + 1e-6 * y[173] * y[6] * y[111])
    return (R6 + R8 + R10 + R12 + R13 + R58 + R229 + R287 + R319 + R347 + R350 + R559 + R561 + R592 + R600 + R610 + R615 + R634 + R639 + R640 + R645 + R646 + R648 + R650 + R659 + R660 + R662 + R669 + R672 + R676 + R678 + R682 + R684 + R691 + R692 + R694 + R995 + R1080 + R1083 + R1094 + R1140 + R1206 + R1207 + R1245 + R1256 + R1263 + R1296 + R1382 + R1401 + R1457 + R1716 + R1784 + R2146 + R2155 + R2163 + R2164 + R2181 + R2222 + R2237 + R2245 + R2265 + R2350) - (R188 + R249 + R258 + R328 + R336 + R344 + R622 + R926 + R1112 + R1145 + R1184 + R1195 + R1253 + R1370 + R1402 + R1455 + R1528 + R1627 + R1926 + R2161 + R2192 + R2200)
 
def m_2hdec9eg3p_c(t, y):
    R7 = (13.7 * 1e-6 * y[1103])/(130e-6 + 1e-6 * y[1103])
    R1550 = (13.7 * 1e-6 * y[7] * y[173])/(130e-6 + 1e-6 * y[7] * y[173])
    return (R7) - (R1550)
 
def m_3hcvac11eACP_c(t, y):
    R8 = (13.7 * 1e-6 * y[31] * y[36] * y[201])/(130e-6 + 1e-6 * y[31] * y[36] * y[201])
    R494 = (13.7 * 1e-6 * y[8])/(130e-6 + 1e-6 * y[8])
    return (R8) - (R494)
 
def m_2odecg3p_c(t, y):
    R9 = (13.7 * 1e-6 * y[1105])/(130e-6 + 1e-6 * y[1105])
    R1551 = (13.7 * 1e-6 * y[9] * y[173])/(130e-6 + 1e-6 * y[9] * y[173])
    return (R9) - (R1551)
 
def m_3haACP_c(t, y):
    R10 = (13.7 * 1e-6 * y[849] * y[36] * y[201])/(130e-6 + 1e-6 * y[849] * y[36] * y[201])
    R501 = (13.7 * 1e-6 * y[10])/(130e-6 + 1e-6 * y[10])
    return (R10) - (R501)
 
def m_2odec11eg3p_c(t, y):
    R11 = (13.7 * 1e-6 * y[1106])/(130e-6 + 1e-6 * y[1106])
    R1552 = (13.7 * 1e-6 * y[11] * y[173])/(130e-6 + 1e-6 * y[11] * y[173])
    return (R11) - (R1552)
 
def m_3hhexACP_c(t, y):
    R12 = (13.7 * 1e-6 * y[32] * y[36] * y[201])/(130e-6 + 1e-6 * y[32] * y[36] * y[201])
    R510 = (13.7 * 1e-6 * y[12])/(130e-6 + 1e-6 * y[12])
    return (R12) - (R510)
 
def m_3hoctACP_c(t, y):
    R13 = (13.7 * 1e-6 * y[33] * y[36] * y[201])/(130e-6 + 1e-6 * y[33] * y[36] * y[201])
    R533 = (13.7 * 1e-6 * y[13])/(130e-6 + 1e-6 * y[13])
    return (R13) - (R533)
 
def m_3odecACP_c(t, y):
    R14 = (13.7 * 1e-6 * y[36] * y[918] * y[89])/(130e-6 + 1e-6 * y[36] * y[918] * y[89])
    R610 = (13.7 * 1e-6 * y[14] * y[36] * y[201])/(130e-6 + 1e-6 * y[14] * y[36] * y[201])
    return (R14) - (R610)
 
def m_ACP_c(t, y):
    R14 = (13.7 * 1e-6 * y[36] * y[918] * y[89])/(130e-6 + 1e-6 * y[36] * y[918] * y[89])
    R16 = (13.7 * 1e-6 * y[88] * y[36] * y[918])/(130e-6 + 1e-6 * y[88] * y[36] * y[918])
    R17 = (13.7 * 1e-6 * y[1236] * y[36] * y[918])/(130e-6 + 1e-6 * y[1236] * y[36] * y[918])
    R18 = (13.7 * 1e-6 * y[86] * y[36] * y[918])/(130e-6 + 1e-6 * y[86] * y[36] * y[918])
    R21 = (13.7 * 1e-6 * y[555] * y[36] * y[918])/(130e-6 + 1e-6 * y[555] * y[36] * y[918])
    R26 = (13.7 * 1e-6 * y[36] * y[918] * y[72])/(130e-6 + 1e-6 * y[36] * y[918] * y[72])
    R27 = (13.7 * 1e-6 * y[36] * y[918] * y[74])/(130e-6 + 1e-6 * y[36] * y[918] * y[74])
    R28 = (13.7 * 1e-6 * y[36] * y[918] * y[79])/(130e-6 + 1e-6 * y[36] * y[918] * y[79])
    R29 = (13.7 * 1e-6 * y[36] * y[81] * y[918])/(130e-6 + 1e-6 * y[36] * y[81] * y[918])
    R30 = (13.7 * 1e-6 * y[538] * y[36] * y[918])/(130e-6 + 1e-6 * y[538] * y[36] * y[918])
    R31 = (13.7 * 1e-6 * y[36] * y[541] * y[918])/(130e-6 + 1e-6 * y[36] * y[541] * y[918])
    R165 = (13.7 * 1e-6 * y[1340] * y[99])/(130e-6 + 1e-6 * y[1340] * y[99])
    R173 = (13.7 * 1e-6 * y[656] * y[86])/(130e-6 + 1e-6 * y[656] * y[86])
    R174 = (13.7 * 1e-6 * y[657] * y[72])/(130e-6 + 1e-6 * y[657] * y[72])
    R179 = (13.7 * 1e-6 * y[658] * y[74])/(130e-6 + 1e-6 * y[658] * y[74])
    R180 = (13.7 * 1e-6 * y[659] * y[79])/(130e-6 + 1e-6 * y[659] * y[79])
    R185 = (13.7 * 1e-6 * y[660] * y[81])/(130e-6 + 1e-6 * y[660] * y[81])
    R186 = (13.7 * 1e-6 * y[663] * y[84])/(130e-6 + 1e-6 * y[663] * y[84])
    R187 = (13.7 * 1e-6 * y[664] * y[82])/(130e-6 + 1e-6 * y[664] * y[82])
    R687 = (13.7 * 1e-6 * y[86] * y[991])/(130e-6 + 1e-6 * y[86] * y[991])
    R688 = (13.7 * 1e-6 * y[557] * y[72])/(130e-6 + 1e-6 * y[557] * y[72])
    R689 = (13.7 * 1e-6 * y[81] * y[991])/(130e-6 + 1e-6 * y[81] * y[991])
    R695 = (13.7 * 1e-6 * y[559] * y[72])/(130e-6 + 1e-6 * y[559] * y[72])
    R935 = (13.7 * 1e-6 * y[88] * y[173])/(130e-6 + 1e-6 * y[88] * y[173])
    R937 = (13.7 * 1e-6 * y[86] * y[173])/(130e-6 + 1e-6 * y[86] * y[173])
    R941 = (13.7 * 1e-6 * y[173] * y[72])/(130e-6 + 1e-6 * y[173] * y[72])
    R942 = (13.7 * 1e-6 * y[173] * y[74])/(130e-6 + 1e-6 * y[173] * y[74])
    R943 = (13.7 * 1e-6 * y[173] * y[79])/(130e-6 + 1e-6 * y[173] * y[79])
    R944 = (13.7 * 1e-6 * y[173] * y[81])/(130e-6 + 1e-6 * y[173] * y[81])
    R945 = (13.7 * 1e-6 * y[173] * y[89])/(130e-6 + 1e-6 * y[173] * y[89])
    R1095 = (13.7 * 1e-6 * y[86] * y[743])/(130e-6 + 1e-6 * y[86] * y[743])
    R1097 = (13.7 * 1e-6 * y[743] * y[72])/(130e-6 + 1e-6 * y[743] * y[72])
    R1098 = (13.7 * 1e-6 * y[743] * y[74])/(130e-6 + 1e-6 * y[743] * y[74])
    R1100 = (13.7 * 1e-6 * y[743] * y[79])/(130e-6 + 1e-6 * y[743] * y[79])
    R1101 = (13.7 * 1e-6 * y[743] * y[81])/(130e-6 + 1e-6 * y[743] * y[81])
    R1104 = (13.7 * 1e-6 * y[743] * y[84])/(130e-6 + 1e-6 * y[743] * y[84])
    R1105 = (13.7 * 1e-6 * y[743] * y[82])/(130e-6 + 1e-6 * y[743] * y[82])
    R1458 = (13.7 * 1e-6 * y[149] * y[36] * y[918])/(130e-6 + 1e-6 * y[149] * y[36] * y[918])
    R2307 = (13.7 * 1e-6 * y[543] * y[1304])/(130e-6 + 1e-6 * y[543] * y[1304])
    R2321 = (13.7 * 1e-6 * y[543] * y[1288])/(130e-6 + 1e-6 * y[543] * y[1288])
    R63 = (13.7 * 1e-6 * y[15] * y[278] * y[577])/(130e-6 + 1e-6 * y[15] * y[278] * y[577])
    R64 = (13.7 * 1e-6 * y[15] * y[278] * y[578])/(130e-6 + 1e-6 * y[15] * y[278] * y[578])
    R69 = (13.7 * 1e-6 * y[15] * y[278] * y[579])/(130e-6 + 1e-6 * y[15] * y[278] * y[579])
    R71 = (13.7 * 1e-6 * y[15] * y[278] * y[580])/(130e-6 + 1e-6 * y[15] * y[278] * y[580])
    R72 = (13.7 * 1e-6 * y[15] * y[278] * y[583])/(130e-6 + 1e-6 * y[15] * y[278] * y[583])
    R74 = (13.7 * 1e-6 * y[15] * y[278] * y[582])/(130e-6 + 1e-6 * y[15] * y[278] * y[582])
    R76 = (13.7 * 1e-6 * y[15] * y[278] * y[576])/(130e-6 + 1e-6 * y[15] * y[278] * y[576])
    R78 = (13.7 * 1e-6 * y[15] * y[278] * y[575])/(130e-6 + 1e-6 * y[15] * y[278] * y[575])
    R79 = (13.7 * 1e-6 * y[15] * y[278] * y[581])/(130e-6 + 1e-6 * y[15] * y[278] * y[581])
    R133 = (13.7 * 1e-6 * y[15] * y[127])/(130e-6 + 1e-6 * y[15] * y[127])
    R1632 = (13.7 * 1e-6 * y[15] * y[138])/(130e-6 + 1e-6 * y[15] * y[138])
    return (R14 + R16 + R17 + R18 + R21 + R26 + R27 + R28 + R29 + R30 + R31 + R165 + R173 + R174 + R179 + R180 + R185 + R186 + R187 + R687 + R688 + R689 + R695 + R935 + R937 + R941 + R942 + R943 + R944 + R945 + R1095 + R1097 + R1098 + R1100 + R1101 + R1104 + R1105 + R1458 + R2307 + R2321) - (R63 + R64 + R69 + R71 + R72 + R74 + R76 + R78 + R79 + R133 + R1632)
 
def m_co2_c(t, y):
    R14 = (13.7 * 1e-6 * y[36] * y[918] * y[89])/(130e-6 + 1e-6 * y[36] * y[918] * y[89])
    R16 = (13.7 * 1e-6 * y[88] * y[36] * y[918])/(130e-6 + 1e-6 * y[88] * y[36] * y[918])
    R17 = (13.7 * 1e-6 * y[1236] * y[36] * y[918])/(130e-6 + 1e-6 * y[1236] * y[36] * y[918])
    R18 = (13.7 * 1e-6 * y[86] * y[36] * y[918])/(130e-6 + 1e-6 * y[86] * y[36] * y[918])
    R21 = (13.7 * 1e-6 * y[555] * y[36] * y[918])/(130e-6 + 1e-6 * y[555] * y[36] * y[918])
    R26 = (13.7 * 1e-6 * y[36] * y[918] * y[72])/(130e-6 + 1e-6 * y[36] * y[918] * y[72])
    R27 = (13.7 * 1e-6 * y[36] * y[918] * y[74])/(130e-6 + 1e-6 * y[36] * y[918] * y[74])
    R28 = (13.7 * 1e-6 * y[36] * y[918] * y[79])/(130e-6 + 1e-6 * y[36] * y[918] * y[79])
    R29 = (13.7 * 1e-6 * y[36] * y[81] * y[918])/(130e-6 + 1e-6 * y[36] * y[81] * y[918])
    R30 = (13.7 * 1e-6 * y[538] * y[36] * y[918])/(130e-6 + 1e-6 * y[538] * y[36] * y[918])
    R31 = (13.7 * 1e-6 * y[36] * y[541] * y[918])/(130e-6 + 1e-6 * y[36] * y[541] * y[918])
    R89 = (13.7 * 1e-6 * y[1214] * y[36] * y[92])/(130e-6 + 1e-6 * y[1214] * y[36] * y[92])
    R91 = (13.7 * 1e-6 * y[36] * y[92])/(130e-6 + 1e-6 * y[36] * y[92])
    R198 = (13.7 * 1e-6 * y[921] * y[36])/(130e-6 + 1e-6 * y[921] * y[36])
    R203 = (13.7 * 1e-6 * y[213] * y[99] * y[236])/(130e-6 + 1e-6 * y[213] * y[99] * y[236])
    R262 = (13.7 * 1e-6 * y[258] * y[173] * y[36])/(130e-6 + 1e-6 * y[258] * y[173] * y[36])
    R278 = (13.7 * 1e-6 * y[312] * y[36])/(130e-6 + 1e-6 * y[312] * y[36])
    R279 = (13.7 * 1e-6 * y[235] * y[36] * y[1360])/(130e-6 + 1e-6 * y[235] * y[36] * y[1360])
    R285 = (13.7 * 1e-6 * y[300] * y[36])/(130e-6 + 1e-6 * y[300] * y[36])
    R318 = (13.7 * 1e-6 * y[303] * y[36])/(130e-6 + 1e-6 * y[303] * y[36])
    R446 = (13.7 * 1e-6 * y[305])/(130e-6 + 1e-6 * y[305])
    R474 = (13.7 * 1e-6 * y[425] * y[36] * y[782])/(130e-6 + 1e-6 * y[425] * y[36] * y[782])
    R477 = (13.7 * 1e-6 * y[1252] * y[36] * y[335])/(130e-6 + 1e-6 * y[1252] * y[36] * y[335])
    R481 = (13.7 * 1e-6 * y[921] * y[1252])/(130e-6 + 1e-6 * y[921] * y[1252])
    R505 = (13.7 * 1e-6 * y[443] * y[36])/(130e-6 + 1e-6 * y[443] * y[36])
    R602 = (13.7 * 1e-6 * y[968] * y[36] * y[1012])/(130e-6 + 1e-6 * y[968] * y[36] * y[1012])
    R647 = (13.7 * 1e-6 * y[480] * y[36] * y[92])/(130e-6 + 1e-6 * y[480] * y[36] * y[92])
    R1020 = (13.7 * 1e-6 * y[620] * y[36] * y[444])/(130e-6 + 1e-6 * y[620] * y[36] * y[444])
    R1021 = (13.7 * 1e-6 * y[620] * y[36] * y[441])/(130e-6 + 1e-6 * y[620] * y[36] * y[441])
    R1079 = (13.7 * 1e-6 * y[252] * y[36])/(130e-6 + 1e-6 * y[252] * y[36])
    R1194 = (13.7 * 1e-6 * y[110] * y[36])/(130e-6 + 1e-6 * y[110] * y[36])
    R1224 = (13.7 * 1e-6 * y[593] * y[36])/(130e-6 + 1e-6 * y[593] * y[36])
    R1253 = (13.7 * 1e-6 * y[754] * y[6])/(130e-6 + 1e-6 * y[754] * y[6])
    R1259 = (13.7 * 1e-6 * y[261] * y[236] * y[206])/(130e-6 + 1e-6 * y[261] * y[236] * y[206])
    R1370 = (13.7 * 1e-6 * y[174] * y[6])/(130e-6 + 1e-6 * y[174] * y[6])
    R1392 = (13.7 * 1e-6 * y[1142] * y[36])/(130e-6 + 1e-6 * y[1142] * y[36])
    R1458 = (13.7 * 1e-6 * y[149] * y[36] * y[918])/(130e-6 + 1e-6 * y[149] * y[36] * y[918])
    R1461 = (13.7 * 1e-6 * y[127] * y[36] * y[918])/(130e-6 + 1e-6 * y[127] * y[36] * y[918])
    R1486 = (13.7 * 1e-6 * y[317] * y[36])/(130e-6 + 1e-6 * y[317] * y[36])
    R1529 = (13.7 * 1e-6 * y[36] * y[334])/(130e-6 + 1e-6 * y[36] * y[334])
    R1564 = (13.7 * 1e-6 * y[36] * y[918])/(130e-6 + 1e-6 * y[36] * y[918])
    R1565 = (13.7 * 1e-6 * y[886] * y[236])/(130e-6 + 1e-6 * y[886] * y[236])
    R1626 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1627 = (13.7 * 1e-6 * y[643] * y[6])/(130e-6 + 1e-6 * y[643] * y[6])
    R1639 = (13.7 * 1e-6 * y[36] * y[924])/(130e-6 + 1e-6 * y[36] * y[924])
    R1696 = (13.7 * 1e-6 * y[36] * y[983] * y[1185])/(130e-6 + 1e-6 * y[36] * y[983] * y[1185])
    R1778 = (13.7 * 1e-6 * y[213] * y[36] * y[1201])/(130e-6 + 1e-6 * y[213] * y[36] * y[1201])
    R1820 = (13.7 * 1e-6 * y[36] * y[298])/(130e-6 + 1e-6 * y[36] * y[298])
    R1835 = (13.7 * 1e-6 * y[835] * y[36])/(130e-6 + 1e-6 * y[835] * y[36])
    R1846 = (13.7 * 1e-6 * y[99] * y[236] * y[92])/(130e-6 + 1e-6 * y[99] * y[236] * y[92])
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    R1850 = (13.7 * 1e-6 * y[36] * y[1652])/(130e-6 + 1e-6 * y[36] * y[1652])
    R1854 = (13.7 * 1e-6 * y[776] * y[36])/(130e-6 + 1e-6 * y[776] * y[36])
    R1857 = (13.7 * 1e-6 * y[36] * y[151])/(130e-6 + 1e-6 * y[36] * y[151])
    R1968 = (13.7 * 1e-6 * y[173] * y[92] * y[444])/(130e-6 + 1e-6 * y[173] * y[92] * y[444])
    R1992 = (13.7 * 1e-6 * y[1126] * y[36])/(130e-6 + 1e-6 * y[1126] * y[36])
    R1993 = (13.7 * 1e-6 * y[278] * y[298])/(130e-6 + 1e-6 * y[278] * y[298])
    R2008 = (13.7 * 1e-6 * y[236] * y[350])/(130e-6 + 1e-6 * y[236] * y[350])
    R2009 = (13.7 * 1e-6 * y[36] * y[350])/(130e-6 + 1e-6 * y[36] * y[350])
    R2029 = (13.7 * 1e-6 * y[36] * y[1151])/(130e-6 + 1e-6 * y[36] * y[1151])
    R2030 = (13.7 * 1e-6 * y[36] * y[1152])/(130e-6 + 1e-6 * y[36] * y[1152])
    R2031 = (13.7 * 1e-6 * y[36] * y[1154])/(130e-6 + 1e-6 * y[36] * y[1154])
    R2039 = (13.7 * 1e-6 * y[36] * y[1155])/(130e-6 + 1e-6 * y[36] * y[1155])
    R2040 = (13.7 * 1e-6 * y[36] * y[1158])/(130e-6 + 1e-6 * y[36] * y[1158])
    R2041 = (13.7 * 1e-6 * y[36] * y[1159])/(130e-6 + 1e-6 * y[36] * y[1159])
    R2046 = (13.7 * 1e-6 * y[36] * y[1162])/(130e-6 + 1e-6 * y[36] * y[1162])
    R2112 = (13.7 * 1e-6 * y[173] * y[36] * y[311])/(130e-6 + 1e-6 * y[173] * y[36] * y[311])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R2250 = (13.7 * 1e-6 * y[213] * y[335] * y[1244])/(130e-6 + 1e-6 * y[213] * y[335] * y[1244])
    R2270 = (13.7 * 1e-6 * y[36] * y[1311])/(130e-6 + 1e-6 * y[36] * y[1311])
    R2290 = (13.7 * 1e-6 * y[173] * y[335] * y[1279])/(130e-6 + 1e-6 * y[173] * y[335] * y[1279])
    R2361 = (13.7 * 1e-6 * y[236] * y[1298])/(130e-6 + 1e-6 * y[236] * y[1298])
    R2368 = (13.7 * 1e-6 * y[173] * y[36] * y[257])/(130e-6 + 1e-6 * y[173] * y[36] * y[257])
    R392 = (13.7 * 1e-6 * y[278] * y[16] * y[95])/(130e-6 + 1e-6 * y[278] * y[16] * y[95])
    R531 = (13.7 * 1e-6 * y[278] * y[16] * y[249])/(130e-6 + 1e-6 * y[278] * y[16] * y[249])
    R1319 = (13.7 * 1e-6 * y[16] * y[173])/(130e-6 + 1e-6 * y[16] * y[173])
    R1991 = (13.7 * 1e-6 * y[16] * y[173] * y[563])/(130e-6 + 1e-6 * y[16] * y[173] * y[563])
    return (R14 + R16 + R17 + R18 + R21 + R26 + R27 + R28 + R29 + R30 + R31 + R89 + R91 + R198 + R203 + R262 + R278 + R279 + R285 + R318 + R446 + R474 + R477 + R481 + R505 + R602 + R647 + R1020 + R1021 + R1079 + R1194 + R1224 + R1253 + R1259 + R1370 + R1392 + R1458 + R1461 + R1486 + R1529 + R1564 + R1565 + R1626 + R1627 + R1639 + R1696 + R1778 + R1820 + R1835 + R1846 + R1849 + R1850 + R1854 + R1857 + R1968 + R1992 + R1993 + R2008 + R2009 + R2029 + R2030 + R2031 + R2039 + R2040 + R2041 + R2046 + R2112 + R2205 + R2250 + R2270 + R2290 + R2361 + R2368) - (R392 + R531 + R1319 + R1991)
 
def m_2agpe120_c(t, y):
    R15 = (13.7 * 1e-6 * y[1107])/(130e-6 + 1e-6 * y[1107])
    R121 = (13.7 * 1e-6 * y[17] * y[278] * y[576])/(130e-6 + 1e-6 * y[17] * y[278] * y[576])
    R1500 = (13.7 * 1e-6 * y[17] * y[173])/(130e-6 + 1e-6 * y[17] * y[173])
    R1558 = (13.7 * 1e-6 * y[17] * y[241])/(130e-6 + 1e-6 * y[17] * y[241])
    return (R15) - (R121 + R1500 + R1558)
 
def m_3oddecACP_c(t, y):
    R16 = (13.7 * 1e-6 * y[88] * y[36] * y[918])/(130e-6 + 1e-6 * y[88] * y[36] * y[918])
    R634 = (13.7 * 1e-6 * y[18] * y[36] * y[201])/(130e-6 + 1e-6 * y[18] * y[36] * y[201])
    return (R16) - (R634)
 
def m_3ocddec5eACP_c(t, y):
    R17 = (13.7 * 1e-6 * y[1236] * y[36] * y[918])/(130e-6 + 1e-6 * y[1236] * y[36] * y[918])
    R639 = (13.7 * 1e-6 * y[19] * y[36] * y[201])/(130e-6 + 1e-6 * y[19] * y[36] * y[201])
    return (R17) - (R639)
 
def m_3omrsACP_c(t, y):
    R18 = (13.7 * 1e-6 * y[86] * y[36] * y[918])/(130e-6 + 1e-6 * y[86] * y[36] * y[918])
    R646 = (13.7 * 1e-6 * y[20] * y[36] * y[201])/(130e-6 + 1e-6 * y[20] * y[36] * y[201])
    return (R18) - (R646)
 
def m_12dgr120_c(t, y):
    R19 = (13.7 * 1e-6 * y[1005])/(130e-6 + 1e-6 * y[1005])
    R1808 = (13.7 * 1e-6 * y[173] * y[187])/(130e-6 + 1e-6 * y[173] * y[187])
    R536 = (13.7 * 1e-6 * y[21] * y[278])/(130e-6 + 1e-6 * y[21] * y[278])
    return (R19 + R1808) - (R536)
 
def m_12dgr140_c(t, y):
    R20 = (13.7 * 1e-6 * y[1007])/(130e-6 + 1e-6 * y[1007])
    R1813 = (13.7 * 1e-6 * y[173] * y[188])/(130e-6 + 1e-6 * y[173] * y[188])
    R539 = (13.7 * 1e-6 * y[22] * y[278])/(130e-6 + 1e-6 * y[22] * y[278])
    return (R20 + R1813) - (R539)
 
def m_3ocmrs7eACP_c(t, y):
    R21 = (13.7 * 1e-6 * y[555] * y[36] * y[918])/(130e-6 + 1e-6 * y[555] * y[36] * y[918])
    R659 = (13.7 * 1e-6 * y[23] * y[36] * y[201])/(130e-6 + 1e-6 * y[23] * y[36] * y[201])
    return (R21) - (R659)
 
def m_12dgr141_c(t, y):
    R22 = (13.7 * 1e-6 * y[1008])/(130e-6 + 1e-6 * y[1008])
    R1816 = (13.7 * 1e-6 * y[173] * y[192])/(130e-6 + 1e-6 * y[173] * y[192])
    R541 = (13.7 * 1e-6 * y[24] * y[278])/(130e-6 + 1e-6 * y[24] * y[278])
    return (R22 + R1816) - (R541)
 
def m_2agpe140_c(t, y):
    R23 = (13.7 * 1e-6 * y[1111])/(130e-6 + 1e-6 * y[1111])
    R134 = (13.7 * 1e-6 * y[25] * y[278] * y[577])/(130e-6 + 1e-6 * y[25] * y[278] * y[577])
    R1502 = (13.7 * 1e-6 * y[25] * y[173])/(130e-6 + 1e-6 * y[25] * y[173])
    R1559 = (13.7 * 1e-6 * y[25] * y[247])/(130e-6 + 1e-6 * y[25] * y[247])
    return (R23) - (R134 + R1502 + R1559)
 
def m_12dgr160_c(t, y):
    R24 = (13.7 * 1e-6 * y[1009])/(130e-6 + 1e-6 * y[1009])
    R1818 = (13.7 * 1e-6 * y[173] * y[193])/(130e-6 + 1e-6 * y[173] * y[193])
    R545 = (13.7 * 1e-6 * y[26] * y[278])/(130e-6 + 1e-6 * y[26] * y[278])
    return (R24 + R1818) - (R545)
 
def m_12dgr161_c(t, y):
    R25 = (13.7 * 1e-6 * y[1013])/(130e-6 + 1e-6 * y[1013])
    R1827 = (13.7 * 1e-6 * y[173] * y[198])/(130e-6 + 1e-6 * y[173] * y[198])
    R546 = (13.7 * 1e-6 * y[27] * y[278])/(130e-6 + 1e-6 * y[27] * y[278])
    return (R25 + R1827) - (R546)
 
def m_3opalmACP_c(t, y):
    R26 = (13.7 * 1e-6 * y[36] * y[918] * y[72])/(130e-6 + 1e-6 * y[36] * y[918] * y[72])
    R672 = (13.7 * 1e-6 * y[28] * y[36] * y[201])/(130e-6 + 1e-6 * y[28] * y[36] * y[201])
    return (R26) - (R672)
 
def m_3ocpalm9eACP_c(t, y):
    R27 = (13.7 * 1e-6 * y[36] * y[918] * y[74])/(130e-6 + 1e-6 * y[36] * y[918] * y[74])
    R692 = (13.7 * 1e-6 * y[29] * y[36] * y[201])/(130e-6 + 1e-6 * y[29] * y[36] * y[201])
    return (R27) - (R692)
 
def m_3ooctdACP_c(t, y):
    R28 = (13.7 * 1e-6 * y[36] * y[918] * y[79])/(130e-6 + 1e-6 * y[36] * y[918] * y[79])
    R6 = (13.7 * 1e-6 * y[30] * y[36] * y[201])/(130e-6 + 1e-6 * y[30] * y[36] * y[201])
    return (R28) - (R6)
 
def m_3ocvac11eACP_c(t, y):
    R29 = (13.7 * 1e-6 * y[36] * y[81] * y[918])/(130e-6 + 1e-6 * y[36] * y[81] * y[918])
    R8 = (13.7 * 1e-6 * y[31] * y[36] * y[201])/(130e-6 + 1e-6 * y[31] * y[36] * y[201])
    return (R29) - (R8)
 
def m_3ohexACP_c(t, y):
    R30 = (13.7 * 1e-6 * y[538] * y[36] * y[918])/(130e-6 + 1e-6 * y[538] * y[36] * y[918])
    R12 = (13.7 * 1e-6 * y[32] * y[36] * y[201])/(130e-6 + 1e-6 * y[32] * y[36] * y[201])
    return (R30) - (R12)
 
def m_3ooctACP_c(t, y):
    R31 = (13.7 * 1e-6 * y[36] * y[541] * y[918])/(130e-6 + 1e-6 * y[36] * y[541] * y[918])
    R13 = (13.7 * 1e-6 * y[33] * y[36] * y[201])/(130e-6 + 1e-6 * y[33] * y[36] * y[201])
    return (R31) - (R13)
 
def m_LalaDgluMdap_c(t, y):
    R32 = (13.7 * 1e-6 * y[38] * y[278] * y[173])/(130e-6 + 1e-6 * y[38] * y[278] * y[173])
    R38 = (13.7 * 1e-6 * y[63] * y[173])/(130e-6 + 1e-6 * y[63] * y[173])
    R144 = (13.7 * 1e-6 * y[167] * y[173])/(130e-6 + 1e-6 * y[167] * y[173])
    R237 = (13.7 * 1e-6 * y[166] * y[173])/(130e-6 + 1e-6 * y[166] * y[173])
    R1445 = (13.7 * 1e-6 * y[34] * y[173])/(130e-6 + 1e-6 * y[34] * y[173])
    R2373 = (13.7 * 1e-6 * y[34] * y[278] * y[1292])/(130e-6 + 1e-6 * y[34] * y[278] * y[1292])
    return (R32 + R38 + R144 + R237) - (R1445 + R2373)
 
def m_adp_c(t, y):
    R32 = (13.7 * 1e-6 * y[38] * y[278] * y[173])/(130e-6 + 1e-6 * y[38] * y[278] * y[173])
    R46 = (13.7 * 1e-6 * y[54] * y[278] * y[173])/(130e-6 + 1e-6 * y[54] * y[278] * y[173])
    R56 = (13.7 * 1e-6 * y[64] * y[278] * y[173])/(130e-6 + 1e-6 * y[64] * y[278] * y[173])
    R75 = (13.7 * 1e-6 * y[165] * y[278])/(130e-6 + 1e-6 * y[165] * y[278])
    R85 = (13.7 * 1e-6 * y[98] * y[278])/(130e-6 + 1e-6 * y[98] * y[278])
    R90 = (13.7 * 1e-6 * y[120] * y[278])/(130e-6 + 1e-6 * y[120] * y[278])
    R120 = (13.7 * 1e-6 * y[127] * y[278] * y[782])/(130e-6 + 1e-6 * y[127] * y[278] * y[782])
    R122 = (13.7 * 1e-6 * y[278] * y[99] * y[253])/(130e-6 + 1e-6 * y[278] * y[99] * y[253])
    R136 = (13.7 * 1e-6 * y[1178] * y[278])/(130e-6 + 1e-6 * y[1178] * y[278])
    R192 = (13.7 * 1e-6 * y[71] * y[278])/(130e-6 + 1e-6 * y[71] * y[278])
    R193 = (13.7 * 1e-6 * y[71] * y[928])/(130e-6 + 1e-6 * y[71] * y[928])
    R196 = (13.7 * 1e-6 * y[71] * y[313])/(130e-6 + 1e-6 * y[71] * y[313])
    R200 = (13.7 * 1e-6 * y[216] * y[278])/(130e-6 + 1e-6 * y[216] * y[278])
    R201 = (13.7 * 1e-6 * y[1141] * y[278] * y[782])/(130e-6 + 1e-6 * y[1141] * y[278] * y[782])
    R211 = (13.7 * 1e-6 * y[224] * y[278] * y[173])/(130e-6 + 1e-6 * y[224] * y[278] * y[173])
    R212 = (13.7 * 1e-6 * y[45] * y[278])/(130e-6 + 1e-6 * y[45] * y[278])
    R214 = (13.7 * 1e-6 * y[338] * y[278])/(130e-6 + 1e-6 * y[338] * y[278])
    R216 = (13.7 * 1e-6 * y[223] * y[278] * y[173])/(130e-6 + 1e-6 * y[223] * y[278] * y[173])
    R231 = (13.7 * 1e-6 * y[239] * y[278] * y[173])/(130e-6 + 1e-6 * y[239] * y[278] * y[173])
    R253 = (13.7 * 1e-6 * y[131] * y[278])/(130e-6 + 1e-6 * y[131] * y[278])
    R260 = (13.7 * 1e-6 * y[267] * y[278])/(130e-6 + 1e-6 * y[267] * y[278])
    R272 = (13.7 * 1e-6 * y[179] * y[278] * y[173])/(130e-6 + 1e-6 * y[179] * y[278] * y[173])
    R273 = (13.7 * 1e-6 * y[229] * y[278] * y[173])/(130e-6 + 1e-6 * y[229] * y[278] * y[173])
    R280 = (13.7 * 1e-6 * y[1361] * y[173])/(130e-6 + 1e-6 * y[1361] * y[173])
    R282 = (13.7 * 1e-6 * y[309] * y[278] * y[173])/(130e-6 + 1e-6 * y[309] * y[278] * y[173])
    R286 = (13.7 * 1e-6 * y[1364] * y[173])/(130e-6 + 1e-6 * y[1364] * y[173])
    R293 = (13.7 * 1e-6 * y[300] * y[278])/(130e-6 + 1e-6 * y[300] * y[278])
    R298 = (13.7 * 1e-6 * y[295] * y[278] * y[173])/(130e-6 + 1e-6 * y[295] * y[278] * y[173])
    R304 = (13.7 * 1e-6 * y[301] * y[278] * y[173])/(130e-6 + 1e-6 * y[301] * y[278] * y[173])
    R308 = (13.7 * 1e-6 * y[302] * y[278] * y[173])/(130e-6 + 1e-6 * y[302] * y[278] * y[173])
    R325 = (13.7 * 1e-6 * y[315] * y[278] * y[173])/(130e-6 + 1e-6 * y[315] * y[278] * y[173])
    R330 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R355 = (13.7 * 1e-6 * y[278] * y[329] * y[173])/(130e-6 + 1e-6 * y[278] * y[329] * y[173])
    R358 = (13.7 * 1e-6 * y[274] * y[278] * y[173])/(130e-6 + 1e-6 * y[274] * y[278] * y[173])
    R370 = (13.7 * 1e-6 * y[920] * y[278])/(130e-6 + 1e-6 * y[920] * y[278])
    R379 = (13.7 * 1e-6 * y[278] * y[347] * y[173])/(130e-6 + 1e-6 * y[278] * y[347] * y[173])
    R381 = (13.7 * 1e-6 * y[278] * y[344] * y[173])/(130e-6 + 1e-6 * y[278] * y[344] * y[173])
    R382 = (13.7 * 1e-6 * y[278] * y[352] * y[173])/(130e-6 + 1e-6 * y[278] * y[352] * y[173])
    R385 = (13.7 * 1e-6 * y[278] * y[349] * y[173])/(130e-6 + 1e-6 * y[278] * y[349] * y[173])
    R392 = (13.7 * 1e-6 * y[278] * y[16] * y[95])/(130e-6 + 1e-6 * y[278] * y[16] * y[95])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R394 = (13.7 * 1e-6 * y[278] * y[359] * y[173])/(130e-6 + 1e-6 * y[278] * y[359] * y[173])
    R420 = (13.7 * 1e-6 * y[278] * y[99] * y[383])/(130e-6 + 1e-6 * y[278] * y[99] * y[383])
    R421 = (13.7 * 1e-6 * y[278] * y[388] * y[173])/(130e-6 + 1e-6 * y[278] * y[388] * y[173])
    R423 = (13.7 * 1e-6 * y[278] * y[391] * y[173])/(130e-6 + 1e-6 * y[278] * y[391] * y[173])
    R442 = (13.7 * 1e-6 * y[278] * y[99] * y[402])/(130e-6 + 1e-6 * y[278] * y[99] * y[402])
    R444 = (13.7 * 1e-6 * y[278] * y[1399] * y[173])/(130e-6 + 1e-6 * y[278] * y[1399] * y[173])
    R448 = (13.7 * 1e-6 * y[278] * y[408] * y[173])/(130e-6 + 1e-6 * y[278] * y[408] * y[173])
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R451 = (13.7 * 1e-6 * y[278] * y[1401] * y[173])/(130e-6 + 1e-6 * y[278] * y[1401] * y[173])
    R455 = (13.7 * 1e-6 * y[278] * y[793] * y[173])/(130e-6 + 1e-6 * y[278] * y[793] * y[173])
    R456 = (13.7 * 1e-6 * y[278] * y[411] * y[173])/(130e-6 + 1e-6 * y[278] * y[411] * y[173])
    R471 = (13.7 * 1e-6 * y[278] * y[426] * y[173])/(130e-6 + 1e-6 * y[278] * y[426] * y[173])
    R483 = (13.7 * 1e-6 * y[278] * y[99] * y[384])/(130e-6 + 1e-6 * y[278] * y[99] * y[384])
    R487 = (13.7 * 1e-6 * y[278] * y[434] * y[173])/(130e-6 + 1e-6 * y[278] * y[434] * y[173])
    R495 = (13.7 * 1e-6 * y[278] * y[260] * y[173])/(130e-6 + 1e-6 * y[278] * y[260] * y[173])
    R496 = (13.7 * 1e-6 * y[278] * y[439] * y[173])/(130e-6 + 1e-6 * y[278] * y[439] * y[173])
    R508 = (13.7 * 1e-6 * y[77] * y[278] * y[173])/(130e-6 + 1e-6 * y[77] * y[278] * y[173])
    R525 = (13.7 * 1e-6 * y[278] * y[332])/(130e-6 + 1e-6 * y[278] * y[332])
    R526 = (13.7 * 1e-6 * y[278] * y[979])/(130e-6 + 1e-6 * y[278] * y[979])
    R531 = (13.7 * 1e-6 * y[278] * y[16] * y[249])/(130e-6 + 1e-6 * y[278] * y[16] * y[249])
    R532 = (13.7 * 1e-6 * y[278] * y[980])/(130e-6 + 1e-6 * y[278] * y[980])
    R536 = (13.7 * 1e-6 * y[21] * y[278])/(130e-6 + 1e-6 * y[21] * y[278])
    R539 = (13.7 * 1e-6 * y[22] * y[278])/(130e-6 + 1e-6 * y[22] * y[278])
    R541 = (13.7 * 1e-6 * y[24] * y[278])/(130e-6 + 1e-6 * y[24] * y[278])
    R545 = (13.7 * 1e-6 * y[26] * y[278])/(130e-6 + 1e-6 * y[26] * y[278])
    R546 = (13.7 * 1e-6 * y[27] * y[278])/(130e-6 + 1e-6 * y[27] * y[278])
    R547 = (13.7 * 1e-6 * y[47] * y[278])/(130e-6 + 1e-6 * y[47] * y[278])
    R551 = (13.7 * 1e-6 * y[668] * y[278])/(130e-6 + 1e-6 * y[668] * y[278])
    R553 = (13.7 * 1e-6 * y[48] * y[278])/(130e-6 + 1e-6 * y[48] * y[278])
    R556 = (13.7 * 1e-6 * y[512] * y[278])/(130e-6 + 1e-6 * y[512] * y[278])
    R557 = (13.7 * 1e-6 * y[238] * y[278])/(130e-6 + 1e-6 * y[238] * y[278])
    R566 = (13.7 * 1e-6 * y[278] * y[977])/(130e-6 + 1e-6 * y[278] * y[977])
    R601 = (13.7 * 1e-6 * y[278] * y[516] * y[110])/(130e-6 + 1e-6 * y[278] * y[516] * y[110])
    R614 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    R631 = (13.7 * 1e-6 * y[278] * y[981])/(130e-6 + 1e-6 * y[278] * y[981])
    R636 = (13.7 * 1e-6 * y[278] * y[469])/(130e-6 + 1e-6 * y[278] * y[469])
    R652 = (13.7 * 1e-6 * y[278] * y[1442])/(130e-6 + 1e-6 * y[278] * y[1442])
    R710 = (13.7 * 1e-6 * y[278] * y[570] * y[173])/(130e-6 + 1e-6 * y[278] * y[570] * y[173])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R983 = (13.7 * 1e-6 * y[278] * y[594] * y[173])/(130e-6 + 1e-6 * y[278] * y[594] * y[173])
    R991 = (13.7 * 1e-6 * y[278] * y[598] * y[173])/(130e-6 + 1e-6 * y[278] * y[598] * y[173])
    R1000 = (13.7 * 1e-6 * y[278] * y[603] * y[173])/(130e-6 + 1e-6 * y[278] * y[603] * y[173])
    R1009 = (13.7 * 1e-6 * y[278] * y[606])/(130e-6 + 1e-6 * y[278] * y[606])
    R1015 = (13.7 * 1e-6 * y[278] * y[614] * y[173])/(130e-6 + 1e-6 * y[278] * y[614] * y[173])
    R1019 = (13.7 * 1e-6 * y[278] * y[615] * y[173])/(130e-6 + 1e-6 * y[278] * y[615] * y[173])
    R1033 = (13.7 * 1e-6 * y[278] * y[622] * y[173])/(130e-6 + 1e-6 * y[278] * y[622] * y[173])
    R1042 = (13.7 * 1e-6 * y[278] * y[634])/(130e-6 + 1e-6 * y[278] * y[634])
    R1045 = (13.7 * 1e-6 * y[278] * y[624])/(130e-6 + 1e-6 * y[278] * y[624])
    R1050 = (13.7 * 1e-6 * y[278] * y[629] * y[173])/(130e-6 + 1e-6 * y[278] * y[629] * y[173])
    R1069 = (13.7 * 1e-6 * y[278] * y[644] * y[173])/(130e-6 + 1e-6 * y[278] * y[644] * y[173])
    R1106 = (13.7 * 1e-6 * y[278] * y[670] * y[173])/(130e-6 + 1e-6 * y[278] * y[670] * y[173])
    R1119 = (13.7 * 1e-6 * y[278] * y[674] * y[173])/(130e-6 + 1e-6 * y[278] * y[674] * y[173])
    R1121 = (13.7 * 1e-6 * y[278] * y[682] * y[173])/(130e-6 + 1e-6 * y[278] * y[682] * y[173])
    R1125 = (13.7 * 1e-6 * y[278] * y[681])/(130e-6 + 1e-6 * y[278] * y[681])
    R1129 = (13.7 * 1e-6 * y[278] * y[684] * y[173])/(130e-6 + 1e-6 * y[278] * y[684] * y[173])
    R1133 = (13.7 * 1e-6 * y[278] * y[691] * y[173])/(130e-6 + 1e-6 * y[278] * y[691] * y[173])
    R1143 = (13.7 * 1e-6 * y[278] * y[680] * y[173])/(130e-6 + 1e-6 * y[278] * y[680] * y[173])
    R1160 = (13.7 * 1e-6 * y[278] * y[252] * y[1140])/(130e-6 + 1e-6 * y[278] * y[252] * y[1140])
    R1164 = (13.7 * 1e-6 * y[278] * y[651] * y[173])/(130e-6 + 1e-6 * y[278] * y[651] * y[173])
    R1178 = (13.7 * 1e-6 * y[278] * y[110] * y[95])/(130e-6 + 1e-6 * y[278] * y[110] * y[95])
    R1180 = (13.7 * 1e-6 * y[278] * y[712] * y[173])/(130e-6 + 1e-6 * y[278] * y[712] * y[173])
    R1187 = (13.7 * 1e-6 * y[278] * y[110] * y[183])/(130e-6 + 1e-6 * y[278] * y[110] * y[183])
    R1189 = (13.7 * 1e-6 * y[278] * y[110])/(130e-6 + 1e-6 * y[278] * y[110])
    R1191 = (13.7 * 1e-6 * y[278] * y[222])/(130e-6 + 1e-6 * y[278] * y[222])
    R1192 = (13.7 * 1e-6 * y[278] * y[260] * y[110])/(130e-6 + 1e-6 * y[278] * y[260] * y[110])
    R1213 = (13.7 * 1e-6 * y[278] * y[724] * y[173])/(130e-6 + 1e-6 * y[278] * y[724] * y[173])
    R1216 = (13.7 * 1e-6 * y[709])/(130e-6 + 1e-6 * y[709])
    R1235 = (13.7 * 1e-6 * y[278] * y[741] * y[173])/(130e-6 + 1e-6 * y[278] * y[741] * y[173])
    R1239 = (13.7 * 1e-6 * y[278] * y[749] * y[173])/(130e-6 + 1e-6 * y[278] * y[749] * y[173])
    R1241 = (13.7 * 1e-6 * y[278] * y[1176])/(130e-6 + 1e-6 * y[278] * y[1176])
    R1252 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R1254 = (13.7 * 1e-6 * y[278] * y[65])/(130e-6 + 1e-6 * y[278] * y[65])
    R1258 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R1282 = (13.7 * 1e-6 * y[278] * y[240])/(130e-6 + 1e-6 * y[278] * y[240])
    R1285 = (13.7 * 1e-6 * y[278] * y[764])/(130e-6 + 1e-6 * y[278] * y[764])
    R1293 = (13.7 * 1e-6 * y[278] * y[763] * y[766])/(130e-6 + 1e-6 * y[278] * y[763] * y[766])
    R1301 = (13.7 * 1e-6 * y[278] * y[763] * y[173])/(130e-6 + 1e-6 * y[278] * y[763] * y[173])
    R1302 = (13.7 * 1e-6 * y[278] * y[771] * y[173])/(130e-6 + 1e-6 * y[278] * y[771] * y[173])
    R1304 = (13.7 * 1e-6 * y[278] * y[719] * y[261])/(130e-6 + 1e-6 * y[278] * y[719] * y[261])
    R1333 = (13.7 * 1e-6 * y[278] * y[791])/(130e-6 + 1e-6 * y[278] * y[791])
    R1337 = (13.7 * 1e-6 * y[278] * y[792])/(130e-6 + 1e-6 * y[278] * y[792])
    R1339 = (13.7 * 1e-6 * y[180] * y[558])/(130e-6 + 1e-6 * y[180] * y[558])
    R1341 = (13.7 * 1e-6 * y[180] * y[790])/(130e-6 + 1e-6 * y[180] * y[790])
    R1342 = (13.7 * 1e-6 * y[180] * y[788])/(130e-6 + 1e-6 * y[180] * y[788])
    R1343 = (13.7 * 1e-6 * y[180] * y[734])/(130e-6 + 1e-6 * y[180] * y[734])
    R1346 = (13.7 * 1e-6 * y[1619] * y[278])/(130e-6 + 1e-6 * y[1619] * y[278])
    R1348 = (13.7 * 1e-6 * y[278] * y[242])/(130e-6 + 1e-6 * y[278] * y[242])
    R1349 = (13.7 * 1e-6 * y[278] * y[705])/(130e-6 + 1e-6 * y[278] * y[705])
    R1353 = (13.7 * 1e-6 * y[278] * y[573])/(130e-6 + 1e-6 * y[278] * y[573])
    R1360 = (13.7 * 1e-6 * y[278] * y[173] * y[1622])/(130e-6 + 1e-6 * y[278] * y[173] * y[1622])
    R1367 = (13.7 * 1e-6 * y[278] * y[173] * y[807])/(130e-6 + 1e-6 * y[278] * y[173] * y[807])
    R1380 = (13.7 * 1e-6 * y[1626] * y[278])/(130e-6 + 1e-6 * y[1626] * y[278])
    R1403 = (13.7 * 1e-6 * y[278] * y[1627])/(130e-6 + 1e-6 * y[278] * y[1627])
    R1404 = (13.7 * 1e-6 * y[278] * y[173] * y[824])/(130e-6 + 1e-6 * y[278] * y[173] * y[824])
    R1421 = (13.7 * 1e-6 * y[278] * y[191])/(130e-6 + 1e-6 * y[278] * y[191])
    R1442 = (13.7 * 1e-6 * y[278] * y[173] * y[843])/(130e-6 + 1e-6 * y[278] * y[173] * y[843])
    R1447 = (13.7 * 1e-6 * y[278] * y[173] * y[991])/(130e-6 + 1e-6 * y[278] * y[173] * y[991])
    R1477 = (13.7 * 1e-6 * y[278] * y[173] * y[855])/(130e-6 + 1e-6 * y[278] * y[173] * y[855])
    R1481 = (13.7 * 1e-6 * y[278] * y[173] * y[561])/(130e-6 + 1e-6 * y[278] * y[173] * y[561])
    R1487 = (13.7 * 1e-6 * y[278] * y[173] * y[558])/(130e-6 + 1e-6 * y[278] * y[173] * y[558])
    R1490 = (13.7 * 1e-6 * y[278] * y[173] * y[867])/(130e-6 + 1e-6 * y[278] * y[173] * y[867])
    R1537 = (13.7 * 1e-6 * y[278] * y[173] * y[875])/(130e-6 + 1e-6 * y[278] * y[173] * y[875])
    R1573 = (13.7 * 1e-6 * y[278] * y[173] * y[107])/(130e-6 + 1e-6 * y[278] * y[173] * y[107])
    R1580 = (13.7 * 1e-6 * y[278] * y[173] * y[890])/(130e-6 + 1e-6 * y[278] * y[173] * y[890])
    R1582 = (13.7 * 1e-6 * y[278] * y[173] * y[892])/(130e-6 + 1e-6 * y[278] * y[173] * y[892])
    R1587 = (13.7 * 1e-6 * y[278] * y[173] * y[893])/(130e-6 + 1e-6 * y[278] * y[173] * y[893])
    R1590 = (13.7 * 1e-6 * y[278] * y[173] * y[896])/(130e-6 + 1e-6 * y[278] * y[173] * y[896])
    R1638 = (13.7 * 1e-6 * y[278] * y[173] * y[923])/(130e-6 + 1e-6 * y[278] * y[173] * y[923])
    R1645 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R1647 = (13.7 * 1e-6 * y[278] * y[114])/(130e-6 + 1e-6 * y[278] * y[114])
    R1648 = (13.7 * 1e-6 * y[278] * y[173] * y[931])/(130e-6 + 1e-6 * y[278] * y[173] * y[931])
    R1651 = (13.7 * 1e-6 * y[278] * y[173] * y[936])/(130e-6 + 1e-6 * y[278] * y[173] * y[936])
    R1652 = (13.7 * 1e-6 * y[278] * y[456])/(130e-6 + 1e-6 * y[278] * y[456])
    R1653 = (13.7 * 1e-6 * y[278] * y[100])/(130e-6 + 1e-6 * y[278] * y[100])
    R1654 = (13.7 * 1e-6 * y[278] * y[483])/(130e-6 + 1e-6 * y[278] * y[483])
    R1655 = (13.7 * 1e-6 * y[278] * y[1173])/(130e-6 + 1e-6 * y[278] * y[1173])
    R1656 = (13.7 * 1e-6 * y[278] * y[457])/(130e-6 + 1e-6 * y[278] * y[457])
    R1657 = (13.7 * 1e-6 * y[278] * y[462])/(130e-6 + 1e-6 * y[278] * y[462])
    R1664 = (13.7 * 1e-6 * y[278] * y[173] * y[938])/(130e-6 + 1e-6 * y[278] * y[173] * y[938])
    R1667 = (13.7 * 1e-6 * y[278] * y[173] * y[943])/(130e-6 + 1e-6 * y[278] * y[173] * y[943])
    R1673 = (13.7 * 1e-6 * y[278] * y[173] * y[940])/(130e-6 + 1e-6 * y[278] * y[173] * y[940])
    R1676 = (13.7 * 1e-6 * y[278] * y[173] * y[942])/(130e-6 + 1e-6 * y[278] * y[173] * y[942])
    R1739 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1766 = (13.7 * 1e-6 * y[278] * y[173] * y[306])/(130e-6 + 1e-6 * y[278] * y[173] * y[306])
    R1785 = (13.7 * 1e-6 * y[278] * y[173] * y[187])/(130e-6 + 1e-6 * y[278] * y[173] * y[187])
    R1786 = (13.7 * 1e-6 * y[278] * y[173] * y[188])/(130e-6 + 1e-6 * y[278] * y[173] * y[188])
    R1787 = (13.7 * 1e-6 * y[278] * y[173] * y[192])/(130e-6 + 1e-6 * y[278] * y[173] * y[192])
    R1788 = (13.7 * 1e-6 * y[278] * y[173] * y[193])/(130e-6 + 1e-6 * y[278] * y[173] * y[193])
    R1793 = (13.7 * 1e-6 * y[278] * y[173] * y[198])/(130e-6 + 1e-6 * y[278] * y[173] * y[198])
    R1795 = (13.7 * 1e-6 * y[278] * y[173] * y[199])/(130e-6 + 1e-6 * y[278] * y[173] * y[199])
    R1796 = (13.7 * 1e-6 * y[278] * y[173] * y[200])/(130e-6 + 1e-6 * y[278] * y[173] * y[200])
    R1814 = (13.7 * 1e-6 * y[278] * y[173] * y[1014])/(130e-6 + 1e-6 * y[278] * y[173] * y[1014])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    R1859 = (13.7 * 1e-6 * y[278] * y[173] * y[139])/(130e-6 + 1e-6 * y[278] * y[173] * y[139])
    R1860 = (13.7 * 1e-6 * y[278] * y[173] * y[150])/(130e-6 + 1e-6 * y[278] * y[173] * y[150])
    R1861 = (13.7 * 1e-6 * y[278] * y[173] * y[155])/(130e-6 + 1e-6 * y[278] * y[173] * y[155])
    R1863 = (13.7 * 1e-6 * y[278] * y[173] * y[158])/(130e-6 + 1e-6 * y[278] * y[173] * y[158])
    R1864 = (13.7 * 1e-6 * y[278] * y[173] * y[160])/(130e-6 + 1e-6 * y[278] * y[173] * y[160])
    R1865 = (13.7 * 1e-6 * y[278] * y[173] * y[163])/(130e-6 + 1e-6 * y[278] * y[173] * y[163])
    R1868 = (13.7 * 1e-6 * y[752] * y[278])/(130e-6 + 1e-6 * y[752] * y[278])
    R1870 = (13.7 * 1e-6 * y[278] * y[173] * y[164])/(130e-6 + 1e-6 * y[278] * y[173] * y[164])
    R1879 = (13.7 * 1e-6 * y[278] * y[173] * y[1064])/(130e-6 + 1e-6 * y[278] * y[173] * y[1064])
    R1881 = (13.7 * 1e-6 * y[278] * y[266])/(130e-6 + 1e-6 * y[278] * y[266])
    R1882 = (13.7 * 1e-6 * y[278] * y[173] * y[1065])/(130e-6 + 1e-6 * y[278] * y[173] * y[1065])
    R1883 = (13.7 * 1e-6 * y[278] * y[173] * y[1067])/(130e-6 + 1e-6 * y[278] * y[173] * y[1067])
    R1884 = (13.7 * 1e-6 * y[278] * y[173] * y[1069])/(130e-6 + 1e-6 * y[278] * y[173] * y[1069])
    R1885 = (13.7 * 1e-6 * y[278] * y[173] * y[1070])/(130e-6 + 1e-6 * y[278] * y[173] * y[1070])
    R1886 = (13.7 * 1e-6 * y[278] * y[713])/(130e-6 + 1e-6 * y[278] * y[713])
    R1888 = (13.7 * 1e-6 * y[278] * y[173] * y[241])/(130e-6 + 1e-6 * y[278] * y[173] * y[241])
    R1889 = (13.7 * 1e-6 * y[278] * y[173] * y[1075])/(130e-6 + 1e-6 * y[278] * y[173] * y[1075])
    R1890 = (13.7 * 1e-6 * y[278] * y[173] * y[1055])/(130e-6 + 1e-6 * y[278] * y[173] * y[1055])
    R1891 = (13.7 * 1e-6 * y[278] * y[173] * y[1076])/(130e-6 + 1e-6 * y[278] * y[173] * y[1076])
    R1893 = (13.7 * 1e-6 * y[278] * y[173] * y[247])/(130e-6 + 1e-6 * y[278] * y[173] * y[247])
    R1894 = (13.7 * 1e-6 * y[278] * y[173] * y[265])/(130e-6 + 1e-6 * y[278] * y[173] * y[265])
    R1895 = (13.7 * 1e-6 * y[278] * y[173] * y[268])/(130e-6 + 1e-6 * y[278] * y[173] * y[268])
    R1896 = (13.7 * 1e-6 * y[278] * y[173] * y[271])/(130e-6 + 1e-6 * y[278] * y[173] * y[271])
    R1899 = (13.7 * 1e-6 * y[278] * y[173] * y[276])/(130e-6 + 1e-6 * y[278] * y[173] * y[276])
    R1903 = (13.7 * 1e-6 * y[278] * y[173] * y[294])/(130e-6 + 1e-6 * y[278] * y[173] * y[294])
    R1940 = (13.7 * 1e-6 * y[278] * y[173] * y[609])/(130e-6 + 1e-6 * y[278] * y[173] * y[609])
    R1954 = (13.7 * 1e-6 * y[278] * y[173] * y[1])/(130e-6 + 1e-6 * y[278] * y[173] * y[1])
    R1962 = (13.7 * 1e-6 * y[251] * y[278])/(130e-6 + 1e-6 * y[251] * y[278])
    R1963 = (13.7 * 1e-6 * y[278] * y[1001])/(130e-6 + 1e-6 * y[278] * y[1001])
    R1969 = (13.7 * 1e-6 * y[1056] * y[278])/(130e-6 + 1e-6 * y[1056] * y[278])
    R1993 = (13.7 * 1e-6 * y[278] * y[298])/(130e-6 + 1e-6 * y[278] * y[298])
    R2001 = (13.7 * 1e-6 * y[278] * y[73])/(130e-6 + 1e-6 * y[278] * y[73])
    R2002 = (13.7 * 1e-6 * y[278] * y[37])/(130e-6 + 1e-6 * y[278] * y[37])
    R2012 = (13.7 * 1e-6 * y[278] * y[173] * y[1130])/(130e-6 + 1e-6 * y[278] * y[173] * y[1130])
    R2032 = (13.7 * 1e-6 * y[278] * y[261] * y[725])/(130e-6 + 1e-6 * y[278] * y[261] * y[725])
    R2033 = (13.7 * 1e-6 * y[278] * y[1146])/(130e-6 + 1e-6 * y[278] * y[1146])
    R2037 = (13.7 * 1e-6 * y[1346] * y[300] * y[278])/(130e-6 + 1e-6 * y[1346] * y[300] * y[278])
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    R2045 = (13.7 * 1e-6 * y[278] * y[173] * y[1128])/(130e-6 + 1e-6 * y[278] * y[173] * y[1128])
    R2054 = (13.7 * 1e-6 * y[278] * y[215])/(130e-6 + 1e-6 * y[278] * y[215])
    R2056 = (13.7 * 1e-6 * y[278] * y[280])/(130e-6 + 1e-6 * y[278] * y[280])
    R2065 = (13.7 * 1e-6 * y[278] * y[173] * y[1161])/(130e-6 + 1e-6 * y[278] * y[173] * y[1161])
    R2070 = (13.7 * 1e-6 * y[278] * y[1163])/(130e-6 + 1e-6 * y[278] * y[1163])
    R2078 = (13.7 * 1e-6 * y[278] * y[173] * y[1171])/(130e-6 + 1e-6 * y[278] * y[173] * y[1171])
    R2102 = (13.7 * 1e-6 * y[278] * y[832])/(130e-6 + 1e-6 * y[278] * y[832])
    R2108 = (13.7 * 1e-6 * y[278] * y[1179])/(130e-6 + 1e-6 * y[278] * y[1179])
    R2109 = (13.7 * 1e-6 * y[278] * y[1031])/(130e-6 + 1e-6 * y[278] * y[1031])
    R2128 = (13.7 * 1e-6 * y[278] * y[1191])/(130e-6 + 1e-6 * y[278] * y[1191])
    R2136 = (13.7 * 1e-6 * y[278] * y[1172])/(130e-6 + 1e-6 * y[278] * y[1172])
    R2140 = (13.7 * 1e-6 * y[278] * y[285])/(130e-6 + 1e-6 * y[278] * y[285])
    R2146 = (13.7 * 1e-6 * y[278] * y[236])/(130e-6 + 1e-6 * y[278] * y[236])
    R2153 = (13.7 * 1e-6 * y[278] * y[868])/(130e-6 + 1e-6 * y[278] * y[868])
    R2165 = (13.7 * 1e-6 * y[278] * y[1204])/(130e-6 + 1e-6 * y[278] * y[1204])
    R2174 = (13.7 * 1e-6 * y[278] * y[173] * y[1210])/(130e-6 + 1e-6 * y[278] * y[173] * y[1210])
    R2189 = (13.7 * 1e-6 * y[278] * y[173] * y[1219])/(130e-6 + 1e-6 * y[278] * y[173] * y[1219])
    R2194 = (13.7 * 1e-6 * y[278] * y[173] * y[1167])/(130e-6 + 1e-6 * y[278] * y[173] * y[1167])
    R2221 = (13.7 * 1e-6 * y[278] * y[99] * y[290])/(130e-6 + 1e-6 * y[278] * y[99] * y[290])
    R2225 = (13.7 * 1e-6 * y[278] * y[173] * y[1235])/(130e-6 + 1e-6 * y[278] * y[173] * y[1235])
    R2228 = (13.7 * 1e-6 * y[278] * y[975])/(130e-6 + 1e-6 * y[278] * y[975])
    R2231 = (13.7 * 1e-6 * y[278] * y[1209])/(130e-6 + 1e-6 * y[278] * y[1209])
    R2232 = (13.7 * 1e-6 * y[278] * y[1233])/(130e-6 + 1e-6 * y[278] * y[1233])
    R2238 = (13.7 * 1e-6 * y[278] * y[173] * y[1211])/(130e-6 + 1e-6 * y[278] * y[173] * y[1211])
    R2251 = (13.7 * 1e-6 * y[278] * y[173] * y[1246])/(130e-6 + 1e-6 * y[278] * y[173] * y[1246])
    R2253 = (13.7 * 1e-6 * y[278] * y[173] * y[953] * y[983])/(130e-6 + 1e-6 * y[278] * y[173] * y[953] * y[983])
    R2275 = (13.7 * 1e-6 * y[278] * y[173] * y[1256])/(130e-6 + 1e-6 * y[278] * y[173] * y[1256])
    R2285 = (13.7 * 1e-6 * y[278] * y[173] * y[1261])/(130e-6 + 1e-6 * y[278] * y[173] * y[1261])
    R2291 = (13.7 * 1e-6 * y[278] * y[536])/(130e-6 + 1e-6 * y[278] * y[536])
    R2308 = (13.7 * 1e-6 * y[443] * y[278] * y[1290])/(130e-6 + 1e-6 * y[443] * y[278] * y[1290])
    R2311 = (13.7 * 1e-6 * y[278] * y[173] * y[1276])/(130e-6 + 1e-6 * y[278] * y[173] * y[1276])
    R2334 = (13.7 * 1e-6 * y[278] * y[1282])/(130e-6 + 1e-6 * y[278] * y[1282])
    R2335 = (13.7 * 1e-6 * y[278] * y[876])/(130e-6 + 1e-6 * y[278] * y[876])
    R2338 = (13.7 * 1e-6 * y[278] * y[173] * y[1285])/(130e-6 + 1e-6 * y[278] * y[173] * y[1285])
    R2341 = (13.7 * 1e-6 * y[278] * y[173] * y[1287])/(130e-6 + 1e-6 * y[278] * y[173] * y[1287])
    R2344 = (13.7 * 1e-6 * y[278] * y[173] * y[1286])/(130e-6 + 1e-6 * y[278] * y[173] * y[1286])
    R2348 = (13.7 * 1e-6 * y[278] * y[1606] * y[1291])/(130e-6 + 1e-6 * y[278] * y[1606] * y[1291])
    R2349 = (13.7 * 1e-6 * y[235] * y[278] * y[1292])/(130e-6 + 1e-6 * y[235] * y[278] * y[1292])
    R2369 = (13.7 * 1e-6 * y[218] * y[278] * y[1269])/(130e-6 + 1e-6 * y[218] * y[278] * y[1269])
    R2373 = (13.7 * 1e-6 * y[34] * y[278] * y[1292])/(130e-6 + 1e-6 * y[34] * y[278] * y[1292])
    R2375 = (13.7 * 1e-6 * y[63] * y[278] * y[1292])/(130e-6 + 1e-6 * y[63] * y[278] * y[1292])
    R2376 = (13.7 * 1e-6 * y[278] * y[90])/(130e-6 + 1e-6 * y[278] * y[90])
    R332 = (13.7 * 1e-6 * y[35] * y[61] * y[37])/(130e-6 + 1e-6 * y[35] * y[61] * y[37])
    R1975 = (13.7 * 1e-6 * y[35] * y[1166])/(130e-6 + 1e-6 * y[35] * y[1166])
    R2081 = (13.7 * 1e-6 * y[35] * y[1240])/(130e-6 + 1e-6 * y[35] * y[1240])
    R2082 = (13.7 * 1e-6 * y[35] * y[762])/(130e-6 + 1e-6 * y[35] * y[762])
    R2117 = (13.7 * 1e-6 * y[35] * y[36] * y[563])/(130e-6 + 1e-6 * y[35] * y[36] * y[563])
    return (R32 + R46 + R56 + R75 + R85 + R90 + R120 + R122 + R136 + R192 + R193 + R196 + R200 + R201 + R211 + R212 + R214 + R216 + R231 + R253 + R260 + R272 + R273 + R280 + R282 + R286 + R293 + R298 + R304 + R308 + R325 + R330 + R355 + R358 + R370 + R379 + R381 + R382 + R385 + R392 + R393 + R394 + R420 + R421 + R423 + R442 + R444 + R448 + R449 + R451 + R455 + R456 + R471 + R483 + R487 + R495 + R496 + R508 + R525 + R526 + R531 + R532 + R536 + R539 + R541 + R545 + R546 + R547 + R551 + R553 + R556 + R557 + R566 + R601 + R614 + R631 + R636 + R652 + R710 + R926 + R983 + R991 + R1000 + R1009 + R1015 + R1019 + R1033 + R1042 + R1045 + R1050 + R1069 + R1106 + R1119 + R1121 + R1125 + R1129 + R1133 + R1143 + R1160 + R1164 + R1178 + R1180 + R1187 + R1189 + R1191 + R1192 + R1213 + R1216 + R1235 + R1239 + R1241 + R1252 + R1254 + R1258 + R1282 + R1285 + R1293 + R1301 + R1302 + R1304 + R1333 + R1337 + R1339 + R1341 + R1342 + R1343 + R1346 + R1348 + R1349 + R1353 + R1360 + R1367 + R1380 + R1403 + R1404 + R1421 + R1442 + R1447 + R1477 + R1481 + R1487 + R1490 + R1537 + R1573 + R1580 + R1582 + R1587 + R1590 + R1638 + R1645 + R1647 + R1648 + R1651 + R1652 + R1653 + R1654 + R1655 + R1656 + R1657 + R1664 + R1667 + R1673 + R1676 + R1739 + R1766 + R1785 + R1786 + R1787 + R1788 + R1793 + R1795 + R1796 + R1814 + R1841 + R1852 + R1856 + R1859 + R1860 + R1861 + R1863 + R1864 + R1865 + R1868 + R1870 + R1879 + R1881 + R1882 + R1883 + R1884 + R1885 + R1886 + R1888 + R1889 + R1890 + R1891 + R1893 + R1894 + R1895 + R1896 + R1899 + R1903 + R1940 + R1954 + R1962 + R1963 + R1969 + R1993 + R2001 + R2002 + R2012 + R2032 + R2033 + R2037 + R2042 + R2045 + R2054 + R2056 + R2065 + R2070 + R2078 + R2102 + R2108 + R2109 + R2128 + R2136 + R2140 + R2146 + R2153 + R2165 + R2174 + R2189 + R2194 + R2221 + R2225 + R2228 + R2231 + R2232 + R2238 + R2251 + R2253 + R2275 + R2285 + R2291 + R2308 + R2311 + R2334 + R2335 + R2338 + R2341 + R2344 + R2348 + R2349 + R2369 + R2373 + R2375 + R2376) - (R332 + R1975 + R2081 + R2082 + R2117)
 
def m_h_c(t, y):
    R32 = (13.7 * 1e-6 * y[38] * y[278] * y[173])/(130e-6 + 1e-6 * y[38] * y[278] * y[173])
    R46 = (13.7 * 1e-6 * y[54] * y[278] * y[173])/(130e-6 + 1e-6 * y[54] * y[278] * y[173])
    R52 = (13.7 * 1e-6 * y[60] * y[61])/(130e-6 + 1e-6 * y[60] * y[61])
    R56 = (13.7 * 1e-6 * y[64] * y[278] * y[173])/(130e-6 + 1e-6 * y[64] * y[278] * y[173])
    R59 = (13.7 * 1e-6 * y[67] * y[61])/(130e-6 + 1e-6 * y[67] * y[61])
    R75 = (13.7 * 1e-6 * y[165] * y[278])/(130e-6 + 1e-6 * y[165] * y[278])
    R86 = (13.7 * 1e-6 * y[127] * y[110])/(130e-6 + 1e-6 * y[127] * y[110])
    R87 = (13.7 * 1e-6 * y[1247] * y[115])/(130e-6 + 1e-6 * y[1247] * y[115])
    R96 = (13.7 * 1e-6 * y[1169] * y[173] * y[236])/(130e-6 + 1e-6 * y[1169] * y[173] * y[236])
    R97 = (13.7 * 1e-6 * y[117] * y[61])/(130e-6 + 1e-6 * y[117] * y[61])
    R98 = (13.7 * 1e-6 * y[1274] * y[91])/(130e-6 + 1e-6 * y[1274] * y[91])
    R104 = (13.7 * 1e-6 * y[122] * y[61])/(130e-6 + 1e-6 * y[122] * y[61])
    R109 = (13.7 * 1e-6 * y[129] * y[61])/(130e-6 + 1e-6 * y[129] * y[61])
    R110 = (13.7 * 1e-6 * y[132] * y[99] * y[236])/(130e-6 + 1e-6 * y[132] * y[99] * y[236])
    R120 = (13.7 * 1e-6 * y[127] * y[278] * y[782])/(130e-6 + 1e-6 * y[127] * y[278] * y[782])
    R136 = (13.7 * 1e-6 * y[1178] * y[278])/(130e-6 + 1e-6 * y[1178] * y[278])
    R140 = (13.7 * 1e-6 * y[300] * y[928] * y[747])/(130e-6 + 1e-6 * y[300] * y[928] * y[747])
    R149 = (13.7 * 1e-6 * y[176] * y[61])/(130e-6 + 1e-6 * y[176] * y[61])
    R162 = (13.7 * 1e-6 * y[963] * y[61])/(130e-6 + 1e-6 * y[963] * y[61])
    R165 = (13.7 * 1e-6 * y[1340] * y[99])/(130e-6 + 1e-6 * y[1340] * y[99])
    R169 = (13.7 * 1e-6 * y[162] * y[61])/(130e-6 + 1e-6 * y[162] * y[61])
    R175 = (13.7 * 1e-6 * y[190] * y[61])/(130e-6 + 1e-6 * y[190] * y[61])
    R181 = (13.7 * 1e-6 * y[196])/(130e-6 + 1e-6 * y[196])
    R188 = (13.7 * 1e-6 * y[175] * y[6] * y[37])/(130e-6 + 1e-6 * y[175] * y[6] * y[37])
    R189 = (13.7 * 1e-6 * y[1343] * y[1344])/(130e-6 + 1e-6 * y[1343] * y[1344])
    R190 = (13.7 * 1e-6 * y[203] * y[61])/(130e-6 + 1e-6 * y[203] * y[61])
    R200 = (13.7 * 1e-6 * y[216] * y[278])/(130e-6 + 1e-6 * y[216] * y[278])
    R201 = (13.7 * 1e-6 * y[1141] * y[278] * y[782])/(130e-6 + 1e-6 * y[1141] * y[278] * y[782])
    R204 = (13.7 * 1e-6 * y[214] * y[61])/(130e-6 + 1e-6 * y[214] * y[61])
    R207 = (13.7 * 1e-6 * y[219] * y[61])/(130e-6 + 1e-6 * y[219] * y[61])
    R208 = (13.7 * 1e-6 * y[219] * y[61])/(130e-6 + 1e-6 * y[219] * y[61])
    R211 = (13.7 * 1e-6 * y[224] * y[278] * y[173])/(130e-6 + 1e-6 * y[224] * y[278] * y[173])
    R212 = (13.7 * 1e-6 * y[45] * y[278])/(130e-6 + 1e-6 * y[45] * y[278])
    R214 = (13.7 * 1e-6 * y[338] * y[278])/(130e-6 + 1e-6 * y[338] * y[278])
    R215 = (13.7 * 1e-6 * y[134] * y[1175])/(130e-6 + 1e-6 * y[134] * y[1175])
    R216 = (13.7 * 1e-6 * y[223] * y[278] * y[173])/(130e-6 + 1e-6 * y[223] * y[278] * y[173])
    R217 = (13.7 * 1e-6 * y[1349] * y[61])/(130e-6 + 1e-6 * y[1349] * y[61])
    R224 = (13.7 * 1e-6 * y[1196] * y[173])/(130e-6 + 1e-6 * y[1196] * y[173])
    R231 = (13.7 * 1e-6 * y[239] * y[278] * y[173])/(130e-6 + 1e-6 * y[239] * y[278] * y[173])
    R232 = (13.7 * 1e-6 * y[239] * y[61])/(130e-6 + 1e-6 * y[239] * y[61])
    R240 = (13.7 * 1e-6 * y[571] * y[236])/(130e-6 + 1e-6 * y[571] * y[236])
    R246 = (13.7 * 1e-6 * y[173] * y[236] * y[996])/(130e-6 + 1e-6 * y[173] * y[236] * y[996])
    R247 = (13.7 * 1e-6 * y[132] * y[173] * y[236])/(130e-6 + 1e-6 * y[132] * y[173] * y[236])
    R249 = (13.7 * 1e-6 * y[132] * y[173] * y[6])/(130e-6 + 1e-6 * y[132] * y[173] * y[6])
    R253 = (13.7 * 1e-6 * y[131] * y[278])/(130e-6 + 1e-6 * y[131] * y[278])
    R255 = (13.7 * 1e-6 * y[507] * y[921])/(130e-6 + 1e-6 * y[507] * y[921])
    R256 = (13.7 * 1e-6 * y[1141] * y[173] * y[236])/(130e-6 + 1e-6 * y[1141] * y[173] * y[236])
    R258 = (13.7 * 1e-6 * y[173] * y[6] * y[1356])/(130e-6 + 1e-6 * y[173] * y[6] * y[1356])
    R259 = (13.7 * 1e-6 * y[592] * y[173] * y[236])/(130e-6 + 1e-6 * y[592] * y[173] * y[236])
    R260 = (13.7 * 1e-6 * y[267] * y[278])/(130e-6 + 1e-6 * y[267] * y[278])
    R263 = (13.7 * 1e-6 * y[259] * y[173])/(130e-6 + 1e-6 * y[259] * y[173])
    R264 = (13.7 * 1e-6 * y[264] * y[61])/(130e-6 + 1e-6 * y[264] * y[61])
    R272 = (13.7 * 1e-6 * y[179] * y[278] * y[173])/(130e-6 + 1e-6 * y[179] * y[278] * y[173])
    R273 = (13.7 * 1e-6 * y[229] * y[278] * y[173])/(130e-6 + 1e-6 * y[229] * y[278] * y[173])
    R276 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R280 = (13.7 * 1e-6 * y[1361] * y[173])/(130e-6 + 1e-6 * y[1361] * y[173])
    R282 = (13.7 * 1e-6 * y[309] * y[278] * y[173])/(130e-6 + 1e-6 * y[309] * y[278] * y[173])
    R286 = (13.7 * 1e-6 * y[1364] * y[173])/(130e-6 + 1e-6 * y[1364] * y[173])
    R289 = (13.7 * 1e-6 * y[291] * y[136])/(130e-6 + 1e-6 * y[291] * y[136])
    R290 = (13.7 * 1e-6 * y[291] * y[655])/(130e-6 + 1e-6 * y[291] * y[655])
    R291 = (13.7 * 1e-6 * y[291] * y[649])/(130e-6 + 1e-6 * y[291] * y[649])
    R292 = (13.7 * 1e-6 * y[300] * y[353])/(130e-6 + 1e-6 * y[300] * y[353])
    R294 = (13.7 * 1e-6 * y[300] * y[444])/(130e-6 + 1e-6 * y[300] * y[444])
    R295 = (13.7 * 1e-6 * y[300] * y[441])/(130e-6 + 1e-6 * y[300] * y[441])
    R296 = (13.7 * 1e-6 * y[300] * y[153])/(130e-6 + 1e-6 * y[300] * y[153])
    R297 = (13.7 * 1e-6 * y[300] * y[335])/(130e-6 + 1e-6 * y[300] * y[335])
    R298 = (13.7 * 1e-6 * y[295] * y[278] * y[173])/(130e-6 + 1e-6 * y[295] * y[278] * y[173])
    R300 = (13.7 * 1e-6 * y[296] * y[61])/(130e-6 + 1e-6 * y[296] * y[61])
    R302 = (13.7 * 1e-6 * y[292] * y[61])/(130e-6 + 1e-6 * y[292] * y[61])
    R303 = (13.7 * 1e-6 * y[281] * y[61])/(130e-6 + 1e-6 * y[281] * y[61])
    R304 = (13.7 * 1e-6 * y[301] * y[278] * y[173])/(130e-6 + 1e-6 * y[301] * y[278] * y[173])
    R308 = (13.7 * 1e-6 * y[302] * y[278] * y[173])/(130e-6 + 1e-6 * y[302] * y[278] * y[173])
    R309 = (13.7 * 1e-6 * y[301] * y[61])/(130e-6 + 1e-6 * y[301] * y[61])
    R310 = (13.7 * 1e-6 * y[297] * y[61])/(130e-6 + 1e-6 * y[297] * y[61])
    R311 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R313 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R314 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R323 = (13.7 * 1e-6 * y[300] * y[278] * y[1010])/(130e-6 + 1e-6 * y[300] * y[278] * y[1010])
    R325 = (13.7 * 1e-6 * y[315] * y[278] * y[173])/(130e-6 + 1e-6 * y[315] * y[278] * y[173])
    R327 = (13.7 * 1e-6 * y[303] * y[212])/(130e-6 + 1e-6 * y[303] * y[212])
    R328 = (13.7 * 1e-6 * y[1372] * y[6])/(130e-6 + 1e-6 * y[1372] * y[6])
    R330 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R332 = (13.7 * 1e-6 * y[35] * y[61] * y[37])/(130e-6 + 1e-6 * y[35] * y[61] * y[37])
    R333 = (13.7 * 1e-6 * y[316] * y[61])/(130e-6 + 1e-6 * y[316] * y[61])
    R334 = (13.7 * 1e-6 * y[303] * y[61])/(130e-6 + 1e-6 * y[303] * y[61])
    R336 = (13.7 * 1e-6 * y[821] * y[6] * y[37])/(130e-6 + 1e-6 * y[821] * y[6] * y[37])
    R338 = (13.7 * 1e-6 * y[319] * y[173])/(130e-6 + 1e-6 * y[319] * y[173])
    R343 = (13.7 * 1e-6 * y[1376] * y[173] * y[236])/(130e-6 + 1e-6 * y[1376] * y[173] * y[236])
    R344 = (13.7 * 1e-6 * y[1376] * y[173] * y[6])/(130e-6 + 1e-6 * y[1376] * y[173] * y[6])
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R351 = (13.7 * 1e-6 * y[300] * y[278] * y[95])/(130e-6 + 1e-6 * y[300] * y[278] * y[95])
    R353 = (13.7 * 1e-6 * y[921] * y[461] * y[1379])/(130e-6 + 1e-6 * y[921] * y[461] * y[1379])
    R355 = (13.7 * 1e-6 * y[278] * y[329] * y[173])/(130e-6 + 1e-6 * y[278] * y[329] * y[173])
    R357 = (13.7 * 1e-6 * y[330] * y[61])/(130e-6 + 1e-6 * y[330] * y[61])
    R358 = (13.7 * 1e-6 * y[274] * y[278] * y[173])/(130e-6 + 1e-6 * y[274] * y[278] * y[173])
    R359 = (13.7 * 1e-6 * y[274] * y[61])/(130e-6 + 1e-6 * y[274] * y[61])
    R361 = (13.7 * 1e-6 * y[1099] * y[173])/(130e-6 + 1e-6 * y[1099] * y[173])
    R362 = (13.7 * 1e-6 * y[1382] * y[61])/(130e-6 + 1e-6 * y[1382] * y[61])
    R365 = (13.7 * 1e-6 * y[451] * y[173])/(130e-6 + 1e-6 * y[451] * y[173])
    R366 = (13.7 * 1e-6 * y[452] * y[173])/(130e-6 + 1e-6 * y[452] * y[173])
    R367 = (13.7 * 1e-6 * y[453] * y[173])/(130e-6 + 1e-6 * y[453] * y[173])
    R368 = (13.7 * 1e-6 * y[873] * y[61] * y[875])/(130e-6 + 1e-6 * y[873] * y[61] * y[875])
    R370 = (13.7 * 1e-6 * y[920] * y[278])/(130e-6 + 1e-6 * y[920] * y[278])
    R372 = (13.7 * 1e-6 * y[921] * y[160])/(130e-6 + 1e-6 * y[921] * y[160])
    R375 = (13.7 * 1e-6 * y[921] * y[271])/(130e-6 + 1e-6 * y[921] * y[271])
    R377 = (13.7 * 1e-6 * y[921] * y[164])/(130e-6 + 1e-6 * y[921] * y[164])
    R378 = (13.7 * 1e-6 * y[921] * y[294])/(130e-6 + 1e-6 * y[921] * y[294])
    R379 = (13.7 * 1e-6 * y[278] * y[347] * y[173])/(130e-6 + 1e-6 * y[278] * y[347] * y[173])
    R380 = (13.7 * 1e-6 * y[1387] * y[61])/(130e-6 + 1e-6 * y[1387] * y[61])
    R381 = (13.7 * 1e-6 * y[278] * y[344] * y[173])/(130e-6 + 1e-6 * y[278] * y[344] * y[173])
    R382 = (13.7 * 1e-6 * y[278] * y[352] * y[173])/(130e-6 + 1e-6 * y[278] * y[352] * y[173])
    R385 = (13.7 * 1e-6 * y[278] * y[349] * y[173])/(130e-6 + 1e-6 * y[278] * y[349] * y[173])
    R386 = (13.7 * 1e-6 * y[349] * y[61])/(130e-6 + 1e-6 * y[349] * y[61])
    R390 = (13.7 * 1e-6 * y[1391] * y[61])/(130e-6 + 1e-6 * y[1391] * y[61])
    R392 = (13.7 * 1e-6 * y[278] * y[16] * y[95])/(130e-6 + 1e-6 * y[278] * y[16] * y[95])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R394 = (13.7 * 1e-6 * y[278] * y[359] * y[173])/(130e-6 + 1e-6 * y[278] * y[359] * y[173])
    R395 = (13.7 * 1e-6 * y[359] * y[61])/(130e-6 + 1e-6 * y[359] * y[61])
    R403 = (13.7 * 1e-6 * y[447] * y[173])/(130e-6 + 1e-6 * y[447] * y[173])
    R404 = (13.7 * 1e-6 * y[448] * y[173])/(130e-6 + 1e-6 * y[448] * y[173])
    R405 = (13.7 * 1e-6 * y[449] * y[173])/(130e-6 + 1e-6 * y[449] * y[173])
    R411 = (13.7 * 1e-6 * y[450] * y[173])/(130e-6 + 1e-6 * y[450] * y[173])
    R421 = (13.7 * 1e-6 * y[278] * y[388] * y[173])/(130e-6 + 1e-6 * y[278] * y[388] * y[173])
    R422 = (13.7 * 1e-6 * y[388] * y[61])/(130e-6 + 1e-6 * y[388] * y[61])
    R423 = (13.7 * 1e-6 * y[278] * y[391] * y[173])/(130e-6 + 1e-6 * y[278] * y[391] * y[173])
    R424 = (13.7 * 1e-6 * y[391] * y[61])/(130e-6 + 1e-6 * y[391] * y[61])
    R436 = (13.7 * 1e-6 * y[127] * y[173] * y[298])/(130e-6 + 1e-6 * y[127] * y[173] * y[298])
    R438 = (13.7 * 1e-6 * y[398] * y[61])/(130e-6 + 1e-6 * y[398] * y[61])
    R444 = (13.7 * 1e-6 * y[278] * y[1399] * y[173])/(130e-6 + 1e-6 * y[278] * y[1399] * y[173])
    R447 = (13.7 * 1e-6 * y[1399] * y[61])/(130e-6 + 1e-6 * y[1399] * y[61])
    R448 = (13.7 * 1e-6 * y[278] * y[408] * y[173])/(130e-6 + 1e-6 * y[278] * y[408] * y[173])
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R451 = (13.7 * 1e-6 * y[278] * y[1401] * y[173])/(130e-6 + 1e-6 * y[278] * y[1401] * y[173])
    R452 = (13.7 * 1e-6 * y[408] * y[61])/(130e-6 + 1e-6 * y[408] * y[61])
    R455 = (13.7 * 1e-6 * y[278] * y[793] * y[173])/(130e-6 + 1e-6 * y[278] * y[793] * y[173])
    R456 = (13.7 * 1e-6 * y[278] * y[411] * y[173])/(130e-6 + 1e-6 * y[278] * y[411] * y[173])
    R460 = (13.7 * 1e-6 * y[1401] * y[1344])/(130e-6 + 1e-6 * y[1401] * y[1344])
    R463 = (13.7 * 1e-6 * y[422] * y[136])/(130e-6 + 1e-6 * y[422] * y[136])
    R464 = (13.7 * 1e-6 * y[422] * y[655])/(130e-6 + 1e-6 * y[422] * y[655])
    R465 = (13.7 * 1e-6 * y[422] * y[649])/(130e-6 + 1e-6 * y[422] * y[649])
    R466 = (13.7 * 1e-6 * y[1404] * y[1255])/(130e-6 + 1e-6 * y[1404] * y[1255])
    R468 = (13.7 * 1e-6 * y[420] * y[61])/(130e-6 + 1e-6 * y[420] * y[61])
    R469 = (13.7 * 1e-6 * y[414] * y[61])/(130e-6 + 1e-6 * y[414] * y[61])
    R471 = (13.7 * 1e-6 * y[278] * y[426] * y[173])/(130e-6 + 1e-6 * y[278] * y[426] * y[173])
    R475 = (13.7 * 1e-6 * y[429] * y[61])/(130e-6 + 1e-6 * y[429] * y[61])
    R476 = (13.7 * 1e-6 * y[423] * y[61])/(130e-6 + 1e-6 * y[423] * y[61])
    R487 = (13.7 * 1e-6 * y[278] * y[434] * y[173])/(130e-6 + 1e-6 * y[278] * y[434] * y[173])
    R489 = (13.7 * 1e-6 * y[1190] * y[430])/(130e-6 + 1e-6 * y[1190] * y[430])
    R495 = (13.7 * 1e-6 * y[278] * y[260] * y[173])/(130e-6 + 1e-6 * y[278] * y[260] * y[173])
    R496 = (13.7 * 1e-6 * y[278] * y[439] * y[173])/(130e-6 + 1e-6 * y[278] * y[439] * y[173])
    R498 = (13.7 * 1e-6 * y[46] * y[61])/(130e-6 + 1e-6 * y[46] * y[61])
    R508 = (13.7 * 1e-6 * y[77] * y[278] * y[173])/(130e-6 + 1e-6 * y[77] * y[278] * y[173])
    R521 = (13.7 * 1e-6 * y[454] * y[928])/(130e-6 + 1e-6 * y[454] * y[928])
    R522 = (13.7 * 1e-6 * y[455] * y[61])/(130e-6 + 1e-6 * y[455] * y[61])
    R523 = (13.7 * 1e-6 * y[455] * y[61])/(130e-6 + 1e-6 * y[455] * y[61])
    R530 = (13.7 * 1e-6 * y[753])/(130e-6 + 1e-6 * y[753])
    R531 = (13.7 * 1e-6 * y[278] * y[16] * y[249])/(130e-6 + 1e-6 * y[278] * y[16] * y[249])
    R534 = (13.7 * 1e-6 * y[465] * y[61])/(130e-6 + 1e-6 * y[465] * y[61])
    R536 = (13.7 * 1e-6 * y[21] * y[278])/(130e-6 + 1e-6 * y[21] * y[278])
    R539 = (13.7 * 1e-6 * y[22] * y[278])/(130e-6 + 1e-6 * y[22] * y[278])
    R541 = (13.7 * 1e-6 * y[24] * y[278])/(130e-6 + 1e-6 * y[24] * y[278])
    R544 = (13.7 * 1e-6 * y[472] * y[61])/(130e-6 + 1e-6 * y[472] * y[61])
    R545 = (13.7 * 1e-6 * y[26] * y[278])/(130e-6 + 1e-6 * y[26] * y[278])
    R546 = (13.7 * 1e-6 * y[27] * y[278])/(130e-6 + 1e-6 * y[27] * y[278])
    R547 = (13.7 * 1e-6 * y[47] * y[278])/(130e-6 + 1e-6 * y[47] * y[278])
    R551 = (13.7 * 1e-6 * y[668] * y[278])/(130e-6 + 1e-6 * y[668] * y[278])
    R552 = (13.7 * 1e-6 * y[476] * y[61])/(130e-6 + 1e-6 * y[476] * y[61])
    R553 = (13.7 * 1e-6 * y[48] * y[278])/(130e-6 + 1e-6 * y[48] * y[278])
    R556 = (13.7 * 1e-6 * y[512] * y[278])/(130e-6 + 1e-6 * y[512] * y[278])
    R557 = (13.7 * 1e-6 * y[238] * y[278])/(130e-6 + 1e-6 * y[238] * y[278])
    R563 = (13.7 * 1e-6 * y[913] * y[173] * y[335])/(130e-6 + 1e-6 * y[913] * y[173] * y[335])
    R565 = (13.7 * 1e-6 * y[913] * y[173] * y[236])/(130e-6 + 1e-6 * y[913] * y[173] * y[236])
    R568 = (13.7 * 1e-6 * y[489] * y[61])/(130e-6 + 1e-6 * y[489] * y[61])
    R572 = (13.7 * 1e-6 * y[1022] * y[921])/(130e-6 + 1e-6 * y[1022] * y[921])
    R587 = (13.7 * 1e-6 * y[809] * y[236])/(130e-6 + 1e-6 * y[809] * y[236])
    R590 = (13.7 * 1e-6 * y[356] * y[236])/(130e-6 + 1e-6 * y[356] * y[236])
    R591 = (13.7 * 1e-6 * y[470] * y[335])/(130e-6 + 1e-6 * y[470] * y[335])
    R599 = (13.7 * 1e-6 * y[821] * y[92])/(130e-6 + 1e-6 * y[821] * y[92])
    R601 = (13.7 * 1e-6 * y[278] * y[516] * y[110])/(130e-6 + 1e-6 * y[278] * y[516] * y[110])
    R605 = (13.7 * 1e-6 * y[773] * y[173])/(130e-6 + 1e-6 * y[773] * y[173])
    R609 = (13.7 * 1e-6 * y[1430] * y[173])/(130e-6 + 1e-6 * y[1430] * y[173])
    R611 = (13.7 * 1e-6 * y[1132] * y[236])/(130e-6 + 1e-6 * y[1132] * y[236])
    R614 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    R622 = (13.7 * 1e-6 * y[6] * y[525])/(130e-6 + 1e-6 * y[6] * y[525])
    R623 = (13.7 * 1e-6 * y[61] * y[531])/(130e-6 + 1e-6 * y[61] * y[531])
    R629 = (13.7 * 1e-6 * y[533] * y[61])/(130e-6 + 1e-6 * y[533] * y[61])
    R636 = (13.7 * 1e-6 * y[278] * y[469])/(130e-6 + 1e-6 * y[278] * y[469])
    R641 = (13.7 * 1e-6 * y[540] * y[61])/(130e-6 + 1e-6 * y[540] * y[61])
    R643 = (13.7 * 1e-6 * y[468] * y[173])/(130e-6 + 1e-6 * y[468] * y[173])
    R652 = (13.7 * 1e-6 * y[278] * y[1442])/(130e-6 + 1e-6 * y[278] * y[1442])
    R653 = (13.7 * 1e-6 * y[61] * y[546])/(130e-6 + 1e-6 * y[61] * y[546])
    R655 = (13.7 * 1e-6 * y[1237] * y[173] * y[236])/(130e-6 + 1e-6 * y[1237] * y[173] * y[236])
    R699 = (13.7 * 1e-6 * y[499] * y[1189])/(130e-6 + 1e-6 * y[499] * y[1189])
    R700 = (13.7 * 1e-6 * y[564] * y[173])/(130e-6 + 1e-6 * y[564] * y[173])
    R701 = (13.7 * 1e-6 * y[626] * y[173])/(130e-6 + 1e-6 * y[626] * y[173])
    R707 = (13.7 * 1e-6 * y[568] * y[61])/(130e-6 + 1e-6 * y[568] * y[61])
    R710 = (13.7 * 1e-6 * y[278] * y[570] * y[173])/(130e-6 + 1e-6 * y[278] * y[570] * y[173])
    R716 = (13.7 * 1e-6 * y[572] * y[61])/(130e-6 + 1e-6 * y[572] * y[61])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R935 = (13.7 * 1e-6 * y[88] * y[173])/(130e-6 + 1e-6 * y[88] * y[173])
    R937 = (13.7 * 1e-6 * y[86] * y[173])/(130e-6 + 1e-6 * y[86] * y[173])
    R941 = (13.7 * 1e-6 * y[173] * y[72])/(130e-6 + 1e-6 * y[173] * y[72])
    R942 = (13.7 * 1e-6 * y[173] * y[74])/(130e-6 + 1e-6 * y[173] * y[74])
    R943 = (13.7 * 1e-6 * y[173] * y[79])/(130e-6 + 1e-6 * y[173] * y[79])
    R944 = (13.7 * 1e-6 * y[173] * y[81])/(130e-6 + 1e-6 * y[173] * y[81])
    R945 = (13.7 * 1e-6 * y[173] * y[89])/(130e-6 + 1e-6 * y[173] * y[89])
    R946 = (13.7 * 1e-6 * y[585] * y[173])/(130e-6 + 1e-6 * y[585] * y[173])
    R953 = (13.7 * 1e-6 * y[586] * y[173])/(130e-6 + 1e-6 * y[586] * y[173])
    R954 = (13.7 * 1e-6 * y[173] * y[587])/(130e-6 + 1e-6 * y[173] * y[587])
    R955 = (13.7 * 1e-6 * y[173] * y[588])/(130e-6 + 1e-6 * y[173] * y[588])
    R957 = (13.7 * 1e-6 * y[173] * y[589])/(130e-6 + 1e-6 * y[173] * y[589])
    R962 = (13.7 * 1e-6 * y[173] * y[590])/(130e-6 + 1e-6 * y[173] * y[590])
    R963 = (13.7 * 1e-6 * y[173] * y[591])/(130e-6 + 1e-6 * y[173] * y[591])
    R964 = (13.7 * 1e-6 * y[173] * y[595])/(130e-6 + 1e-6 * y[173] * y[595])
    R966 = (13.7 * 1e-6 * y[173] * y[596])/(130e-6 + 1e-6 * y[173] * y[596])
    R968 = (13.7 * 1e-6 * y[173] * y[597])/(130e-6 + 1e-6 * y[173] * y[597])
    R969 = (13.7 * 1e-6 * y[278] * y[99] * y[466] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[466] * y[61])
    R973 = (13.7 * 1e-6 * y[278] * y[99] * y[474] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[474] * y[61])
    R974 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[869])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[869])
    R976 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[870])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[870])
    R978 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[785])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[785])
    R979 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[786])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[786])
    R980 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[871])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[871])
    R981 = (13.7 * 1e-6 * y[328] * y[655] * y[335])/(130e-6 + 1e-6 * y[328] * y[655] * y[335])
    R982 = (13.7 * 1e-6 * y[655] * y[335] * y[1230])/(130e-6 + 1e-6 * y[655] * y[335] * y[1230])
    R983 = (13.7 * 1e-6 * y[278] * y[594] * y[173])/(130e-6 + 1e-6 * y[278] * y[594] * y[173])
    R984 = (13.7 * 1e-6 * y[594] * y[61])/(130e-6 + 1e-6 * y[594] * y[61])
    R985 = (13.7 * 1e-6 * y[283] * y[61])/(130e-6 + 1e-6 * y[283] * y[61])
    R988 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[872])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[872])
    R989 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[831])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[831])
    R990 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[1011])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[1011])
    R991 = (13.7 * 1e-6 * y[278] * y[598] * y[173])/(130e-6 + 1e-6 * y[278] * y[598] * y[173])
    R992 = (13.7 * 1e-6 * y[1503] * y[61])/(130e-6 + 1e-6 * y[1503] * y[61])
    R996 = (13.7 * 1e-6 * y[605] * y[236])/(130e-6 + 1e-6 * y[605] * y[236])
    R1000 = (13.7 * 1e-6 * y[278] * y[603] * y[173])/(130e-6 + 1e-6 * y[278] * y[603] * y[173])
    R1001 = (13.7 * 1e-6 * y[1504] * y[61])/(130e-6 + 1e-6 * y[1504] * y[61])
    R1002 = (13.7 * 1e-6 * y[136] * y[612])/(130e-6 + 1e-6 * y[136] * y[612])
    R1003 = (13.7 * 1e-6 * y[612] * y[655])/(130e-6 + 1e-6 * y[612] * y[655])
    R1009 = (13.7 * 1e-6 * y[278] * y[606])/(130e-6 + 1e-6 * y[278] * y[606])
    R1011 = (13.7 * 1e-6 * y[283] * y[1131])/(130e-6 + 1e-6 * y[283] * y[1131])
    R1012 = (13.7 * 1e-6 * y[612] * y[649])/(130e-6 + 1e-6 * y[612] * y[649])
    R1013 = (13.7 * 1e-6 * y[604] * y[61])/(130e-6 + 1e-6 * y[604] * y[61])
    R1014 = (13.7 * 1e-6 * y[610] * y[61])/(130e-6 + 1e-6 * y[610] * y[61])
    R1015 = (13.7 * 1e-6 * y[278] * y[614] * y[173])/(130e-6 + 1e-6 * y[278] * y[614] * y[173])
    R1017 = (13.7 * 1e-6 * y[613] * y[61])/(130e-6 + 1e-6 * y[613] * y[61])
    R1018 = (13.7 * 1e-6 * y[136] * y[566])/(130e-6 + 1e-6 * y[136] * y[566])
    R1019 = (13.7 * 1e-6 * y[278] * y[615] * y[173])/(130e-6 + 1e-6 * y[278] * y[615] * y[173])
    R1022 = (13.7 * 1e-6 * y[655] * y[841] * y[335])/(130e-6 + 1e-6 * y[655] * y[841] * y[335])
    R1023 = (13.7 * 1e-6 * y[655] * y[1053] * y[335])/(130e-6 + 1e-6 * y[655] * y[1053] * y[335])
    R1026 = (13.7 * 1e-6 * y[136] * y[619])/(130e-6 + 1e-6 * y[136] * y[619])
    R1027 = (13.7 * 1e-6 * y[619] * y[655])/(130e-6 + 1e-6 * y[619] * y[655])
    R1028 = (13.7 * 1e-6 * y[619] * y[649])/(130e-6 + 1e-6 * y[619] * y[649])
    R1029 = (13.7 * 1e-6 * y[618] * y[61])/(130e-6 + 1e-6 * y[618] * y[61])
    R1030 = (13.7 * 1e-6 * y[569] * y[655] * y[335])/(130e-6 + 1e-6 * y[569] * y[655] * y[335])
    R1031 = (13.7 * 1e-6 * y[616] * y[61])/(130e-6 + 1e-6 * y[616] * y[61])
    R1033 = (13.7 * 1e-6 * y[278] * y[622] * y[173])/(130e-6 + 1e-6 * y[278] * y[622] * y[173])
    R1034 = (13.7 * 1e-6 * y[620] * y[61])/(130e-6 + 1e-6 * y[620] * y[61])
    R1038 = (13.7 * 1e-6 * y[621] * y[61])/(130e-6 + 1e-6 * y[621] * y[61])
    R1042 = (13.7 * 1e-6 * y[278] * y[634])/(130e-6 + 1e-6 * y[278] * y[634])
    R1045 = (13.7 * 1e-6 * y[278] * y[624])/(130e-6 + 1e-6 * y[278] * y[624])
    R1046 = (13.7 * 1e-6 * y[630] * y[61])/(130e-6 + 1e-6 * y[630] * y[61])
    R1047 = (13.7 * 1e-6 * y[136] * y[626])/(130e-6 + 1e-6 * y[136] * y[626])
    R1048 = (13.7 * 1e-6 * y[626] * y[655])/(130e-6 + 1e-6 * y[626] * y[655])
    R1049 = (13.7 * 1e-6 * y[626] * y[649])/(130e-6 + 1e-6 * y[626] * y[649])
    R1050 = (13.7 * 1e-6 * y[278] * y[629] * y[173])/(130e-6 + 1e-6 * y[278] * y[629] * y[173])
    R1052 = (13.7 * 1e-6 * y[632] * y[61])/(130e-6 + 1e-6 * y[632] * y[61])
    R1053 = (13.7 * 1e-6 * y[627] * y[61])/(130e-6 + 1e-6 * y[627] * y[61])
    R1055 = (13.7 * 1e-6 * y[633] * y[61])/(130e-6 + 1e-6 * y[633] * y[61])
    R1056 = (13.7 * 1e-6 * y[564] * y[61])/(130e-6 + 1e-6 * y[564] * y[61])
    R1062 = (13.7 * 1e-6 * y[136] * y[640])/(130e-6 + 1e-6 * y[136] * y[640])
    R1063 = (13.7 * 1e-6 * y[640] * y[655])/(130e-6 + 1e-6 * y[640] * y[655])
    R1064 = (13.7 * 1e-6 * y[640] * y[649])/(130e-6 + 1e-6 * y[640] * y[649])
    R1065 = (13.7 * 1e-6 * y[638] * y[61])/(130e-6 + 1e-6 * y[638] * y[61])
    R1066 = (13.7 * 1e-6 * y[636] * y[61])/(130e-6 + 1e-6 * y[636] * y[61])
    R1067 = (13.7 * 1e-6 * y[1057] * y[173])/(130e-6 + 1e-6 * y[1057] * y[173])
    R1069 = (13.7 * 1e-6 * y[278] * y[644] * y[173])/(130e-6 + 1e-6 * y[278] * y[644] * y[173])
    R1072 = (13.7 * 1e-6 * y[639] * y[61])/(130e-6 + 1e-6 * y[639] * y[61])
    R1074 = (13.7 * 1e-6 * y[647] * y[61])/(130e-6 + 1e-6 * y[647] * y[61])
    R1075 = (13.7 * 1e-6 * y[647] * y[61])/(130e-6 + 1e-6 * y[647] * y[61])
    R1076 = (13.7 * 1e-6 * y[641] * y[61])/(130e-6 + 1e-6 * y[641] * y[61])
    R1082 = (13.7 * 1e-6 * y[127] * y[1594])/(130e-6 + 1e-6 * y[127] * y[1594])
    R1086 = (13.7 * 1e-6 * y[1057] * y[937])/(130e-6 + 1e-6 * y[1057] * y[937])
    R1106 = (13.7 * 1e-6 * y[278] * y[670] * y[173])/(130e-6 + 1e-6 * y[278] * y[670] * y[173])
    R1108 = (13.7 * 1e-6 * y[669] * y[236])/(130e-6 + 1e-6 * y[669] * y[236])
    R1110 = (13.7 * 1e-6 * y[671] * y[61])/(130e-6 + 1e-6 * y[671] * y[61])
    R1112 = (13.7 * 1e-6 * y[743] * y[6])/(130e-6 + 1e-6 * y[743] * y[6])
    R1115 = (13.7 * 1e-6 * y[676] * y[61])/(130e-6 + 1e-6 * y[676] * y[61])
    R1119 = (13.7 * 1e-6 * y[278] * y[674] * y[173])/(130e-6 + 1e-6 * y[278] * y[674] * y[173])
    R1121 = (13.7 * 1e-6 * y[278] * y[682] * y[173])/(130e-6 + 1e-6 * y[278] * y[682] * y[173])
    R1123 = (13.7 * 1e-6 * y[678] * y[61])/(130e-6 + 1e-6 * y[678] * y[61])
    R1125 = (13.7 * 1e-6 * y[278] * y[681])/(130e-6 + 1e-6 * y[278] * y[681])
    R1129 = (13.7 * 1e-6 * y[278] * y[684] * y[173])/(130e-6 + 1e-6 * y[278] * y[684] * y[173])
    R1131 = (13.7 * 1e-6 * y[732] * y[694])/(130e-6 + 1e-6 * y[732] * y[694])
    R1133 = (13.7 * 1e-6 * y[278] * y[691] * y[173])/(130e-6 + 1e-6 * y[278] * y[691] * y[173])
    R1135 = (13.7 * 1e-6 * y[690] * y[61])/(130e-6 + 1e-6 * y[690] * y[61])
    R1139 = (13.7 * 1e-6 * y[693])/(130e-6 + 1e-6 * y[693])
    R1143 = (13.7 * 1e-6 * y[278] * y[680] * y[173])/(130e-6 + 1e-6 * y[278] * y[680] * y[173])
    R1144 = (13.7 * 1e-6 * y[680] * y[61])/(130e-6 + 1e-6 * y[680] * y[61])
    R1145 = (13.7 * 1e-6 * y[108] * y[6])/(130e-6 + 1e-6 * y[108] * y[6])
    R1157 = (13.7 * 1e-6 * y[480] * y[236] * y[37])/(130e-6 + 1e-6 * y[480] * y[236] * y[37])
    R1159 = (13.7 * 1e-6 * y[1057] * y[1140])/(130e-6 + 1e-6 * y[1057] * y[1140])
    R1160 = (13.7 * 1e-6 * y[278] * y[252] * y[1140])/(130e-6 + 1e-6 * y[278] * y[252] * y[1140])
    R1164 = (13.7 * 1e-6 * y[278] * y[651] * y[173])/(130e-6 + 1e-6 * y[278] * y[651] * y[173])
    R1165 = (13.7 * 1e-6 * y[509] * y[173] * y[236])/(130e-6 + 1e-6 * y[509] * y[173] * y[236])
    R1167 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R1168 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1170 = (13.7 * 1e-6 * y[651] * y[61])/(130e-6 + 1e-6 * y[651] * y[61])
    R1174 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1178 = (13.7 * 1e-6 * y[278] * y[110] * y[95])/(130e-6 + 1e-6 * y[278] * y[110] * y[95])
    R1180 = (13.7 * 1e-6 * y[278] * y[712] * y[173])/(130e-6 + 1e-6 * y[278] * y[712] * y[173])
    R1182 = (13.7 * 1e-6 * y[686] * y[236])/(130e-6 + 1e-6 * y[686] * y[236])
    R1184 = (13.7 * 1e-6 * y[715] * y[173] * y[6])/(130e-6 + 1e-6 * y[715] * y[173] * y[6])
    R1187 = (13.7 * 1e-6 * y[278] * y[110] * y[183])/(130e-6 + 1e-6 * y[278] * y[110] * y[183])
    R1192 = (13.7 * 1e-6 * y[278] * y[260] * y[110])/(130e-6 + 1e-6 * y[278] * y[260] * y[110])
    R1195 = (13.7 * 1e-6 * y[110] * y[173] * y[6])/(130e-6 + 1e-6 * y[110] * y[173] * y[6])
    R1199 = (13.7 * 1e-6 * y[722] * y[61])/(130e-6 + 1e-6 * y[722] * y[61])
    R1211 = (13.7 * 1e-6 * y[731] * y[61])/(130e-6 + 1e-6 * y[731] * y[61])
    R1213 = (13.7 * 1e-6 * y[278] * y[724] * y[173])/(130e-6 + 1e-6 * y[278] * y[724] * y[173])
    R1216 = (13.7 * 1e-6 * y[709])/(130e-6 + 1e-6 * y[709])
    R1217 = (13.7 * 1e-6 * y[1157] * y[694])/(130e-6 + 1e-6 * y[1157] * y[694])
    R1218 = (13.7 * 1e-6 * y[685] * y[694])/(130e-6 + 1e-6 * y[685] * y[694])
    R1219 = (13.7 * 1e-6 * y[724] * y[61])/(130e-6 + 1e-6 * y[724] * y[61])
    R1222 = (13.7 * 1e-6 * y[733] * y[694])/(130e-6 + 1e-6 * y[733] * y[694])
    R1229 = (13.7 * 1e-6 * y[701] * y[61])/(130e-6 + 1e-6 * y[701] * y[61])
    R1231 = (13.7 * 1e-6 * y[739] * y[61])/(130e-6 + 1e-6 * y[739] * y[61])
    R1235 = (13.7 * 1e-6 * y[278] * y[741] * y[173])/(130e-6 + 1e-6 * y[278] * y[741] * y[173])
    R1236 = (13.7 * 1e-6 * y[741] * y[61])/(130e-6 + 1e-6 * y[741] * y[61])
    R1239 = (13.7 * 1e-6 * y[278] * y[749] * y[173])/(130e-6 + 1e-6 * y[278] * y[749] * y[173])
    R1241 = (13.7 * 1e-6 * y[278] * y[1176])/(130e-6 + 1e-6 * y[278] * y[1176])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1249 = (13.7 * 1e-6 * y[751] * y[61])/(130e-6 + 1e-6 * y[751] * y[61])
    R1251 = (13.7 * 1e-6 * y[240] * y[236])/(130e-6 + 1e-6 * y[240] * y[236])
    R1252 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R1254 = (13.7 * 1e-6 * y[278] * y[65])/(130e-6 + 1e-6 * y[278] * y[65])
    R1257 = (13.7 * 1e-6 * y[1611] * y[173])/(130e-6 + 1e-6 * y[1611] * y[173])
    R1258 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R1260 = (13.7 * 1e-6 * y[665] * y[173])/(130e-6 + 1e-6 * y[665] * y[173])
    R1264 = (13.7 * 1e-6 * y[757] * y[61])/(130e-6 + 1e-6 * y[757] * y[61])
    R1268 = (13.7 * 1e-6 * y[673] * y[173])/(130e-6 + 1e-6 * y[673] * y[173])
    R1270 = (13.7 * 1e-6 * y[687] * y[173])/(130e-6 + 1e-6 * y[687] * y[173])
    R1272 = (13.7 * 1e-6 * y[675] * y[173])/(130e-6 + 1e-6 * y[675] * y[173])
    R1277 = (13.7 * 1e-6 * y[683] * y[173])/(130e-6 + 1e-6 * y[683] * y[173])
    R1282 = (13.7 * 1e-6 * y[278] * y[240])/(130e-6 + 1e-6 * y[278] * y[240])
    R1285 = (13.7 * 1e-6 * y[278] * y[764])/(130e-6 + 1e-6 * y[278] * y[764])
    R1286 = (13.7 * 1e-6 * y[173] * y[856])/(130e-6 + 1e-6 * y[173] * y[856])
    R1287 = (13.7 * 1e-6 * y[503] * y[61])/(130e-6 + 1e-6 * y[503] * y[61])
    R1288 = (13.7 * 1e-6 * y[173] * y[94])/(130e-6 + 1e-6 * y[173] * y[94])
    R1293 = (13.7 * 1e-6 * y[278] * y[763] * y[766])/(130e-6 + 1e-6 * y[278] * y[763] * y[766])
    R1298 = (13.7 * 1e-6 * y[1448] * y[236])/(130e-6 + 1e-6 * y[1448] * y[236])
    R1299 = (13.7 * 1e-6 * y[1449] * y[236])/(130e-6 + 1e-6 * y[1449] * y[236])
    R1300 = (13.7 * 1e-6 * y[1450] * y[236])/(130e-6 + 1e-6 * y[1450] * y[236])
    R1301 = (13.7 * 1e-6 * y[278] * y[763] * y[173])/(130e-6 + 1e-6 * y[278] * y[763] * y[173])
    R1302 = (13.7 * 1e-6 * y[278] * y[771] * y[173])/(130e-6 + 1e-6 * y[278] * y[771] * y[173])
    R1304 = (13.7 * 1e-6 * y[278] * y[719] * y[261])/(130e-6 + 1e-6 * y[278] * y[719] * y[261])
    R1305 = (13.7 * 1e-6 * y[1451] * y[236])/(130e-6 + 1e-6 * y[1451] * y[236])
    R1306 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1308 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1309 = (13.7 * 1e-6 * y[775] * y[173])/(130e-6 + 1e-6 * y[775] * y[173])
    R1310 = (13.7 * 1e-6 * y[278] * y[928])/(130e-6 + 1e-6 * y[278] * y[928])
    R1312 = (13.7 * 1e-6 * y[781] * y[61])/(130e-6 + 1e-6 * y[781] * y[61])
    R1319 = (13.7 * 1e-6 * y[16] * y[173])/(130e-6 + 1e-6 * y[16] * y[173])
    R1321 = (13.7 * 1e-6 * y[921] * y[436])/(130e-6 + 1e-6 * y[921] * y[436])
    R1322 = (13.7 * 1e-6 * y[436] * y[930])/(130e-6 + 1e-6 * y[436] * y[930])
    R1323 = (13.7 * 1e-6 * y[784] * y[61])/(130e-6 + 1e-6 * y[784] * y[61])
    R1333 = (13.7 * 1e-6 * y[278] * y[791])/(130e-6 + 1e-6 * y[278] * y[791])
    R1337 = (13.7 * 1e-6 * y[278] * y[792])/(130e-6 + 1e-6 * y[278] * y[792])
    R1339 = (13.7 * 1e-6 * y[180] * y[558])/(130e-6 + 1e-6 * y[180] * y[558])
    R1341 = (13.7 * 1e-6 * y[180] * y[790])/(130e-6 + 1e-6 * y[180] * y[790])
    R1342 = (13.7 * 1e-6 * y[180] * y[788])/(130e-6 + 1e-6 * y[180] * y[788])
    R1343 = (13.7 * 1e-6 * y[180] * y[734])/(130e-6 + 1e-6 * y[180] * y[734])
    R1344 = (13.7 * 1e-6 * y[430] * y[335])/(130e-6 + 1e-6 * y[430] * y[335])
    R1346 = (13.7 * 1e-6 * y[1619] * y[278])/(130e-6 + 1e-6 * y[1619] * y[278])
    R1348 = (13.7 * 1e-6 * y[278] * y[242])/(130e-6 + 1e-6 * y[278] * y[242])
    R1349 = (13.7 * 1e-6 * y[278] * y[705])/(130e-6 + 1e-6 * y[278] * y[705])
    R1353 = (13.7 * 1e-6 * y[278] * y[573])/(130e-6 + 1e-6 * y[278] * y[573])
    R1354 = (13.7 * 1e-6 * y[61] * y[831])/(130e-6 + 1e-6 * y[61] * y[831])
    R1355 = (13.7 * 1e-6 * y[1444] * y[236])/(130e-6 + 1e-6 * y[1444] * y[236])
    R1357 = (13.7 * 1e-6 * y[1445] * y[236])/(130e-6 + 1e-6 * y[1445] * y[236])
    R1358 = (13.7 * 1e-6 * y[1446] * y[236])/(130e-6 + 1e-6 * y[1446] * y[236])
    R1359 = (13.7 * 1e-6 * y[1447] * y[236])/(130e-6 + 1e-6 * y[1447] * y[236])
    R1360 = (13.7 * 1e-6 * y[278] * y[173] * y[1622])/(130e-6 + 1e-6 * y[278] * y[173] * y[1622])
    R1361 = (13.7 * 1e-6 * y[61] * y[1622])/(130e-6 + 1e-6 * y[61] * y[1622])
    R1363 = (13.7 * 1e-6 * y[173] * y[804] * y[236])/(130e-6 + 1e-6 * y[173] * y[804] * y[236])
    R1367 = (13.7 * 1e-6 * y[278] * y[173] * y[807])/(130e-6 + 1e-6 * y[278] * y[173] * y[807])
    R1368 = (13.7 * 1e-6 * y[61] * y[807])/(130e-6 + 1e-6 * y[61] * y[807])
    R1374 = (13.7 * 1e-6 * y[173] * y[817])/(130e-6 + 1e-6 * y[173] * y[817])
    R1377 = (13.7 * 1e-6 * y[173] * y[501])/(130e-6 + 1e-6 * y[173] * y[501])
    R1380 = (13.7 * 1e-6 * y[1626] * y[278])/(130e-6 + 1e-6 * y[1626] * y[278])
    R1383 = (13.7 * 1e-6 * y[61] * y[812])/(130e-6 + 1e-6 * y[61] * y[812])
    R1384 = (13.7 * 1e-6 * y[61] * y[1627])/(130e-6 + 1e-6 * y[61] * y[1627])
    R1387 = (13.7 * 1e-6 * y[710] * y[1147])/(130e-6 + 1e-6 * y[710] * y[1147])
    R1391 = (13.7 * 1e-6 * y[508] * y[278])/(130e-6 + 1e-6 * y[508] * y[278])
    R1394 = (13.7 * 1e-6 * y[473] * y[335])/(130e-6 + 1e-6 * y[473] * y[335])
    R1396 = (13.7 * 1e-6 * y[820] * y[61])/(130e-6 + 1e-6 * y[820] * y[61])
    R1402 = (13.7 * 1e-6 * y[1627] * y[6])/(130e-6 + 1e-6 * y[1627] * y[6])
    R1403 = (13.7 * 1e-6 * y[278] * y[1627])/(130e-6 + 1e-6 * y[278] * y[1627])
    R1404 = (13.7 * 1e-6 * y[278] * y[173] * y[824])/(130e-6 + 1e-6 * y[278] * y[173] * y[824])
    R1405 = (13.7 * 1e-6 * y[61] * y[824])/(130e-6 + 1e-6 * y[61] * y[824])
    R1408 = (13.7 * 1e-6 * y[173] * y[747] * y[236])/(130e-6 + 1e-6 * y[173] * y[747] * y[236])
    R1411 = (13.7 * 1e-6 * y[61] * y[827])/(130e-6 + 1e-6 * y[61] * y[827])
    R1415 = (13.7 * 1e-6 * y[173] * y[197] * y[236])/(130e-6 + 1e-6 * y[173] * y[197] * y[236])
    R1421 = (13.7 * 1e-6 * y[278] * y[191])/(130e-6 + 1e-6 * y[278] * y[191])
    R1426 = (13.7 * 1e-6 * y[61] * y[833])/(130e-6 + 1e-6 * y[61] * y[833])
    R1427 = (13.7 * 1e-6 * y[61] * y[833])/(130e-6 + 1e-6 * y[61] * y[833])
    R1433 = (13.7 * 1e-6 * y[1634] * y[236])/(130e-6 + 1e-6 * y[1634] * y[236])
    R1441 = (13.7 * 1e-6 * y[490] * y[127] * y[173])/(130e-6 + 1e-6 * y[490] * y[127] * y[173])
    R1442 = (13.7 * 1e-6 * y[278] * y[173] * y[843])/(130e-6 + 1e-6 * y[278] * y[173] * y[843])
    R1447 = (13.7 * 1e-6 * y[278] * y[173] * y[991])/(130e-6 + 1e-6 * y[278] * y[173] * y[991])
    R1451 = (13.7 * 1e-6 * y[173] * y[608] * y[236])/(130e-6 + 1e-6 * y[173] * y[608] * y[236])
    R1455 = (13.7 * 1e-6 * y[1426] * y[6])/(130e-6 + 1e-6 * y[1426] * y[6])
    R1459 = (13.7 * 1e-6 * y[61] * y[851])/(130e-6 + 1e-6 * y[61] * y[851])
    R1462 = (13.7 * 1e-6 * y[61] * y[850])/(130e-6 + 1e-6 * y[61] * y[850])
    R1467 = (13.7 * 1e-6 * y[106] * y[236])/(130e-6 + 1e-6 * y[106] * y[236])
    R1477 = (13.7 * 1e-6 * y[278] * y[173] * y[855])/(130e-6 + 1e-6 * y[278] * y[173] * y[855])
    R1478 = (13.7 * 1e-6 * y[61] * y[855])/(130e-6 + 1e-6 * y[61] * y[855])
    R1481 = (13.7 * 1e-6 * y[278] * y[173] * y[561])/(130e-6 + 1e-6 * y[278] * y[173] * y[561])
    R1487 = (13.7 * 1e-6 * y[278] * y[173] * y[558])/(130e-6 + 1e-6 * y[278] * y[173] * y[558])
    R1490 = (13.7 * 1e-6 * y[278] * y[173] * y[867])/(130e-6 + 1e-6 * y[278] * y[173] * y[867])
    R1491 = (13.7 * 1e-6 * y[61] * y[867])/(130e-6 + 1e-6 * y[61] * y[867])
    R1492 = (13.7 * 1e-6 * y[61] * y[866])/(130e-6 + 1e-6 * y[61] * y[866])
    R1494 = (13.7 * 1e-6 * y[1267] * y[1268])/(130e-6 + 1e-6 * y[1267] * y[1268])
    R1500 = (13.7 * 1e-6 * y[17] * y[173])/(130e-6 + 1e-6 * y[17] * y[173])
    R1502 = (13.7 * 1e-6 * y[25] * y[173])/(130e-6 + 1e-6 * y[25] * y[173])
    R1504 = (13.7 * 1e-6 * y[80] * y[173])/(130e-6 + 1e-6 * y[80] * y[173])
    R1507 = (13.7 * 1e-6 * y[87] * y[173])/(130e-6 + 1e-6 * y[87] * y[173])
    R1512 = (13.7 * 1e-6 * y[96] * y[173])/(130e-6 + 1e-6 * y[96] * y[173])
    R1513 = (13.7 * 1e-6 * y[118] * y[173])/(130e-6 + 1e-6 * y[118] * y[173])
    R1514 = (13.7 * 1e-6 * y[130] * y[173])/(130e-6 + 1e-6 * y[130] * y[173])
    R1515 = (13.7 * 1e-6 * y[169] * y[173])/(130e-6 + 1e-6 * y[169] * y[173])
    R1518 = (13.7 * 1e-6 * y[186] * y[173])/(130e-6 + 1e-6 * y[186] * y[173])
    R1520 = (13.7 * 1e-6 * y[195] * y[173])/(130e-6 + 1e-6 * y[195] * y[173])
    R1524 = (13.7 * 1e-6 * y[208] * y[173])/(130e-6 + 1e-6 * y[208] * y[173])
    R1525 = (13.7 * 1e-6 * y[217] * y[173])/(130e-6 + 1e-6 * y[217] * y[173])
    R1526 = (13.7 * 1e-6 * y[228] * y[173])/(130e-6 + 1e-6 * y[228] * y[173])
    R1527 = (13.7 * 1e-6 * y[237] * y[173])/(130e-6 + 1e-6 * y[237] * y[173])
    R1528 = (13.7 * 1e-6 * y[6] * y[500])/(130e-6 + 1e-6 * y[6] * y[500])
    R1537 = (13.7 * 1e-6 * y[278] * y[173] * y[875])/(130e-6 + 1e-6 * y[278] * y[173] * y[875])
    R1538 = (13.7 * 1e-6 * y[61] * y[875])/(130e-6 + 1e-6 * y[61] * y[875])
    R1539 = (13.7 * 1e-6 * y[78] * y[173])/(130e-6 + 1e-6 * y[78] * y[173])
    R1541 = (13.7 * 1e-6 * y[2] * y[173])/(130e-6 + 1e-6 * y[2] * y[173])
    R1542 = (13.7 * 1e-6 * y[3] * y[173])/(130e-6 + 1e-6 * y[3] * y[173])
    R1543 = (13.7 * 1e-6 * y[4] * y[173])/(130e-6 + 1e-6 * y[4] * y[173])
    R1544 = (13.7 * 1e-6 * y[61] * y[334])/(130e-6 + 1e-6 * y[61] * y[334])
    R1547 = (13.7 * 1e-6 * y[61] * y[878])/(130e-6 + 1e-6 * y[61] * y[878])
    R1550 = (13.7 * 1e-6 * y[7] * y[173])/(130e-6 + 1e-6 * y[7] * y[173])
    R1551 = (13.7 * 1e-6 * y[9] * y[173])/(130e-6 + 1e-6 * y[9] * y[173])
    R1552 = (13.7 * 1e-6 * y[11] * y[173])/(130e-6 + 1e-6 * y[11] * y[173])
    R1555 = (13.7 * 1e-6 * y[61] * y[879])/(130e-6 + 1e-6 * y[61] * y[879])
    R1557 = (13.7 * 1e-6 * y[971] * y[236])/(130e-6 + 1e-6 * y[971] * y[236])
    R1566 = (13.7 * 1e-6 * y[61] * y[887])/(130e-6 + 1e-6 * y[61] * y[887])
    R1568 = (13.7 * 1e-6 * y[127] * y[593] * y[173])/(130e-6 + 1e-6 * y[127] * y[593] * y[173])
    R1573 = (13.7 * 1e-6 * y[278] * y[173] * y[107])/(130e-6 + 1e-6 * y[278] * y[173] * y[107])
    R1580 = (13.7 * 1e-6 * y[278] * y[173] * y[890])/(130e-6 + 1e-6 * y[278] * y[173] * y[890])
    R1582 = (13.7 * 1e-6 * y[278] * y[173] * y[892])/(130e-6 + 1e-6 * y[278] * y[173] * y[892])
    R1587 = (13.7 * 1e-6 * y[278] * y[173] * y[893])/(130e-6 + 1e-6 * y[278] * y[173] * y[893])
    R1590 = (13.7 * 1e-6 * y[278] * y[173] * y[896])/(130e-6 + 1e-6 * y[278] * y[173] * y[896])
    R1593 = (13.7 * 1e-6 * y[61] * y[905])/(130e-6 + 1e-6 * y[61] * y[905])
    R1594 = (13.7 * 1e-6 * y[61] * y[905])/(130e-6 + 1e-6 * y[61] * y[905])
    R1595 = (13.7 * 1e-6 * y[1404] * y[1647])/(130e-6 + 1e-6 * y[1404] * y[1647])
    R1614 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1617 = (13.7 * 1e-6 * y[1648] * y[236])/(130e-6 + 1e-6 * y[1648] * y[236])
    R1630 = (13.7 * 1e-6 * y[61] * y[919])/(130e-6 + 1e-6 * y[61] * y[919])
    R1631 = (13.7 * 1e-6 * y[173] * y[298] * y[140])/(130e-6 + 1e-6 * y[173] * y[298] * y[140])
    R1633 = (13.7 * 1e-6 * y[61] * y[916])/(130e-6 + 1e-6 * y[61] * y[916])
    R1638 = (13.7 * 1e-6 * y[278] * y[173] * y[923])/(130e-6 + 1e-6 * y[278] * y[173] * y[923])
    R1646 = (13.7 * 1e-6 * y[1078] * y[436])/(130e-6 + 1e-6 * y[1078] * y[436])
    R1648 = (13.7 * 1e-6 * y[278] * y[173] * y[931])/(130e-6 + 1e-6 * y[278] * y[173] * y[931])
    R1649 = (13.7 * 1e-6 * y[61] * y[944])/(130e-6 + 1e-6 * y[61] * y[944])
    R1651 = (13.7 * 1e-6 * y[278] * y[173] * y[936])/(130e-6 + 1e-6 * y[278] * y[173] * y[936])
    R1664 = (13.7 * 1e-6 * y[278] * y[173] * y[938])/(130e-6 + 1e-6 * y[278] * y[173] * y[938])
    R1667 = (13.7 * 1e-6 * y[278] * y[173] * y[943])/(130e-6 + 1e-6 * y[278] * y[173] * y[943])
    R1668 = (13.7 * 1e-6 * y[61] * y[943])/(130e-6 + 1e-6 * y[61] * y[943])
    R1673 = (13.7 * 1e-6 * y[278] * y[173] * y[940])/(130e-6 + 1e-6 * y[278] * y[173] * y[940])
    R1676 = (13.7 * 1e-6 * y[278] * y[173] * y[942])/(130e-6 + 1e-6 * y[278] * y[173] * y[942])
    R1681 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    R1683 = (13.7 * 1e-6 * y[173] * y[952])/(130e-6 + 1e-6 * y[173] * y[952])
    R1692 = (13.7 * 1e-6 * y[1651] * y[945])/(130e-6 + 1e-6 * y[1651] * y[945])
    R1698 = (13.7 * 1e-6 * y[61] * y[960])/(130e-6 + 1e-6 * y[61] * y[960])
    R1705 = (13.7 * 1e-6 * y[61] * y[967])/(130e-6 + 1e-6 * y[61] * y[967])
    R1715 = (13.7 * 1e-6 * y[113] * y[966] * y[335])/(130e-6 + 1e-6 * y[113] * y[966] * y[335])
    R1716 = (13.7 * 1e-6 * y[201] * y[966] * y[335])/(130e-6 + 1e-6 * y[201] * y[966] * y[335])
    R1739 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1740 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    R1741 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    R1746 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    R1747 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1749 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1754 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    R1755 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    R1756 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    R1760 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1761 = (13.7 * 1e-6 * y[934] * y[173])/(130e-6 + 1e-6 * y[934] * y[173])
    R1762 = (13.7 * 1e-6 * y[61] * y[961])/(130e-6 + 1e-6 * y[61] * y[961])
    R1763 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1764 = (13.7 * 1e-6 * y[935] * y[173])/(130e-6 + 1e-6 * y[935] * y[173])
    R1765 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1766 = (13.7 * 1e-6 * y[278] * y[173] * y[306])/(130e-6 + 1e-6 * y[278] * y[173] * y[306])
    R1768 = (13.7 * 1e-6 * y[61] * y[982])/(130e-6 + 1e-6 * y[61] * y[982])
    R1769 = (13.7 * 1e-6 * y[932] * y[173])/(130e-6 + 1e-6 * y[932] * y[173])
    R1770 = (13.7 * 1e-6 * y[173] * y[929])/(130e-6 + 1e-6 * y[173] * y[929])
    R1772 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    R1780 = (13.7 * 1e-6 * y[854] * y[1198])/(130e-6 + 1e-6 * y[854] * y[1198])
    R1783 = (13.7 * 1e-6 * y[692] * y[173] * y[236])/(130e-6 + 1e-6 * y[692] * y[173] * y[236])
    R1785 = (13.7 * 1e-6 * y[278] * y[173] * y[187])/(130e-6 + 1e-6 * y[278] * y[173] * y[187])
    R1786 = (13.7 * 1e-6 * y[278] * y[173] * y[188])/(130e-6 + 1e-6 * y[278] * y[173] * y[188])
    R1787 = (13.7 * 1e-6 * y[278] * y[173] * y[192])/(130e-6 + 1e-6 * y[278] * y[173] * y[192])
    R1788 = (13.7 * 1e-6 * y[278] * y[173] * y[193])/(130e-6 + 1e-6 * y[278] * y[173] * y[193])
    R1793 = (13.7 * 1e-6 * y[278] * y[173] * y[198])/(130e-6 + 1e-6 * y[278] * y[173] * y[198])
    R1794 = (13.7 * 1e-6 * y[854] * y[986])/(130e-6 + 1e-6 * y[854] * y[986])
    R1795 = (13.7 * 1e-6 * y[278] * y[173] * y[199])/(130e-6 + 1e-6 * y[278] * y[173] * y[199])
    R1796 = (13.7 * 1e-6 * y[278] * y[173] * y[200])/(130e-6 + 1e-6 * y[278] * y[173] * y[200])
    R1800 = (13.7 * 1e-6 * y[998] * y[1296])/(130e-6 + 1e-6 * y[998] * y[1296])
    R1801 = (13.7 * 1e-6 * y[61] * y[997])/(130e-6 + 1e-6 * y[61] * y[997])
    R1803 = (13.7 * 1e-6 * y[993] * y[694])/(130e-6 + 1e-6 * y[993] * y[694])
    R1805 = (13.7 * 1e-6 * y[995] * y[694])/(130e-6 + 1e-6 * y[995] * y[694])
    R1806 = (13.7 * 1e-6 * y[277] * y[278] * y[517])/(130e-6 + 1e-6 * y[277] * y[278] * y[517])
    R1807 = (13.7 * 1e-6 * y[854] * y[789])/(130e-6 + 1e-6 * y[854] * y[789])
    R1814 = (13.7 * 1e-6 * y[278] * y[173] * y[1014])/(130e-6 + 1e-6 * y[278] * y[173] * y[1014])
    R1822 = (13.7 * 1e-6 * y[353] * y[151])/(130e-6 + 1e-6 * y[353] * y[151])
    R1833 = (13.7 * 1e-6 * y[1030] * y[921])/(130e-6 + 1e-6 * y[1030] * y[921])
    R1834 = (13.7 * 1e-6 * y[1027] * y[921])/(130e-6 + 1e-6 * y[1027] * y[921])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    R1842 = (13.7 * 1e-6 * y[152] * y[1240])/(130e-6 + 1e-6 * y[152] * y[1240])
    R1844 = (13.7 * 1e-6 * y[762] * y[152])/(130e-6 + 1e-6 * y[762] * y[152])
    R1845 = (13.7 * 1e-6 * y[210] * y[173])/(130e-6 + 1e-6 * y[210] * y[173])
    R1847 = (13.7 * 1e-6 * y[236] * y[1026])/(130e-6 + 1e-6 * y[236] * y[1026])
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    R1859 = (13.7 * 1e-6 * y[278] * y[173] * y[139])/(130e-6 + 1e-6 * y[278] * y[173] * y[139])
    R1860 = (13.7 * 1e-6 * y[278] * y[173] * y[150])/(130e-6 + 1e-6 * y[278] * y[173] * y[150])
    R1861 = (13.7 * 1e-6 * y[278] * y[173] * y[155])/(130e-6 + 1e-6 * y[278] * y[173] * y[155])
    R1862 = (13.7 * 1e-6 * y[1289])/(130e-6 + 1e-6 * y[1289])
    R1863 = (13.7 * 1e-6 * y[278] * y[173] * y[158])/(130e-6 + 1e-6 * y[278] * y[173] * y[158])
    R1864 = (13.7 * 1e-6 * y[278] * y[173] * y[160])/(130e-6 + 1e-6 * y[278] * y[173] * y[160])
    R1865 = (13.7 * 1e-6 * y[278] * y[173] * y[163])/(130e-6 + 1e-6 * y[278] * y[173] * y[163])
    R1866 = (13.7 * 1e-6 * y[752] * y[236])/(130e-6 + 1e-6 * y[752] * y[236])
    R1869 = (13.7 * 1e-6 * y[695] * y[173])/(130e-6 + 1e-6 * y[695] * y[173])
    R1870 = (13.7 * 1e-6 * y[278] * y[173] * y[164])/(130e-6 + 1e-6 * y[278] * y[173] * y[164])
    R1873 = (13.7 * 1e-6 * y[1035] * y[1289])/(130e-6 + 1e-6 * y[1035] * y[1289])
    R1877 = (13.7 * 1e-6 * y[547] * y[236])/(130e-6 + 1e-6 * y[547] * y[236])
    R1879 = (13.7 * 1e-6 * y[278] * y[173] * y[1064])/(130e-6 + 1e-6 * y[278] * y[173] * y[1064])
    R1881 = (13.7 * 1e-6 * y[278] * y[266])/(130e-6 + 1e-6 * y[278] * y[266])
    R1882 = (13.7 * 1e-6 * y[278] * y[173] * y[1065])/(130e-6 + 1e-6 * y[278] * y[173] * y[1065])
    R1883 = (13.7 * 1e-6 * y[278] * y[173] * y[1067])/(130e-6 + 1e-6 * y[278] * y[173] * y[1067])
    R1884 = (13.7 * 1e-6 * y[278] * y[173] * y[1069])/(130e-6 + 1e-6 * y[278] * y[173] * y[1069])
    R1885 = (13.7 * 1e-6 * y[278] * y[173] * y[1070])/(130e-6 + 1e-6 * y[278] * y[173] * y[1070])
    R1886 = (13.7 * 1e-6 * y[278] * y[713])/(130e-6 + 1e-6 * y[278] * y[713])
    R1888 = (13.7 * 1e-6 * y[278] * y[173] * y[241])/(130e-6 + 1e-6 * y[278] * y[173] * y[241])
    R1889 = (13.7 * 1e-6 * y[278] * y[173] * y[1075])/(130e-6 + 1e-6 * y[278] * y[173] * y[1075])
    R1890 = (13.7 * 1e-6 * y[278] * y[173] * y[1055])/(130e-6 + 1e-6 * y[278] * y[173] * y[1055])
    R1891 = (13.7 * 1e-6 * y[278] * y[173] * y[1076])/(130e-6 + 1e-6 * y[278] * y[173] * y[1076])
    R1893 = (13.7 * 1e-6 * y[278] * y[173] * y[247])/(130e-6 + 1e-6 * y[278] * y[173] * y[247])
    R1894 = (13.7 * 1e-6 * y[278] * y[173] * y[265])/(130e-6 + 1e-6 * y[278] * y[173] * y[265])
    R1895 = (13.7 * 1e-6 * y[278] * y[173] * y[268])/(130e-6 + 1e-6 * y[278] * y[173] * y[268])
    R1896 = (13.7 * 1e-6 * y[278] * y[173] * y[271])/(130e-6 + 1e-6 * y[278] * y[173] * y[271])
    R1899 = (13.7 * 1e-6 * y[278] * y[173] * y[276])/(130e-6 + 1e-6 * y[278] * y[173] * y[276])
    R1903 = (13.7 * 1e-6 * y[278] * y[173] * y[294])/(130e-6 + 1e-6 * y[278] * y[173] * y[294])
    R1909 = (13.7 * 1e-6 * y[173] * y[1068])/(130e-6 + 1e-6 * y[173] * y[1068])
    R1922 = (13.7 * 1e-6 * y[447] * y[743])/(130e-6 + 1e-6 * y[447] * y[743])
    R1923 = (13.7 * 1e-6 * y[448] * y[743])/(130e-6 + 1e-6 * y[448] * y[743])
    R1925 = (13.7 * 1e-6 * y[449] * y[743])/(130e-6 + 1e-6 * y[449] * y[743])
    R1927 = (13.7 * 1e-6 * y[450] * y[743])/(130e-6 + 1e-6 * y[450] * y[743])
    R1928 = (13.7 * 1e-6 * y[451] * y[743])/(130e-6 + 1e-6 * y[451] * y[743])
    R1933 = (13.7 * 1e-6 * y[452] * y[743])/(130e-6 + 1e-6 * y[452] * y[743])
    R1934 = (13.7 * 1e-6 * y[453] * y[743])/(130e-6 + 1e-6 * y[453] * y[743])
    R1940 = (13.7 * 1e-6 * y[278] * y[173] * y[609])/(130e-6 + 1e-6 * y[278] * y[173] * y[609])
    R1949 = (13.7 * 1e-6 * y[61] * y[1092])/(130e-6 + 1e-6 * y[61] * y[1092])
    R1952 = (13.7 * 1e-6 * y[61] * y[1])/(130e-6 + 1e-6 * y[61] * y[1])
    R1954 = (13.7 * 1e-6 * y[278] * y[173] * y[1])/(130e-6 + 1e-6 * y[278] * y[173] * y[1])
    R1963 = (13.7 * 1e-6 * y[278] * y[1001])/(130e-6 + 1e-6 * y[278] * y[1001])
    R1969 = (13.7 * 1e-6 * y[1056] * y[278])/(130e-6 + 1e-6 * y[1056] * y[278])
    R1970 = (13.7 * 1e-6 * y[173] * y[73])/(130e-6 + 1e-6 * y[173] * y[73])
    R1973 = (13.7 * 1e-6 * y[173] * y[339])/(130e-6 + 1e-6 * y[173] * y[339])
    R1990 = (13.7 * 1e-6 * y[654])/(130e-6 + 1e-6 * y[654])
    R1991 = (13.7 * 1e-6 * y[16] * y[173] * y[563])/(130e-6 + 1e-6 * y[16] * y[173] * y[563])
    R2007 = (13.7 * 1e-6 * y[1100] * y[404] * y[260])/(130e-6 + 1e-6 * y[1100] * y[404] * y[260])
    R2012 = (13.7 * 1e-6 * y[278] * y[173] * y[1130])/(130e-6 + 1e-6 * y[278] * y[173] * y[1130])
    R2013 = (13.7 * 1e-6 * y[61] * y[1130])/(130e-6 + 1e-6 * y[61] * y[1130])
    R2019 = (13.7 * 1e-6 * y[61] * y[1134])/(130e-6 + 1e-6 * y[61] * y[1134])
    R2021 = (13.7 * 1e-6 * y[278] * y[173] * y[92])/(130e-6 + 1e-6 * y[278] * y[173] * y[92])
    R2022 = (13.7 * 1e-6 * y[278] * y[227])/(130e-6 + 1e-6 * y[278] * y[227])
    R2023 = (13.7 * 1e-6 * y[61] * y[1136])/(130e-6 + 1e-6 * y[61] * y[1136])
    R2032 = (13.7 * 1e-6 * y[278] * y[261] * y[725])/(130e-6 + 1e-6 * y[278] * y[261] * y[725])
    R2033 = (13.7 * 1e-6 * y[278] * y[1146])/(130e-6 + 1e-6 * y[278] * y[1146])
    R2037 = (13.7 * 1e-6 * y[1346] * y[300] * y[278])/(130e-6 + 1e-6 * y[1346] * y[300] * y[278])
    R2038 = (13.7 * 1e-6 * y[173] * y[314])/(130e-6 + 1e-6 * y[173] * y[314])
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    R2044 = (13.7 * 1e-6 * y[282] * y[262])/(130e-6 + 1e-6 * y[282] * y[262])
    R2045 = (13.7 * 1e-6 * y[278] * y[173] * y[1128])/(130e-6 + 1e-6 * y[278] * y[173] * y[1128])
    R2051 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R2052 = (13.7 * 1e-6 * y[447] * y[500])/(130e-6 + 1e-6 * y[447] * y[500])
    R2053 = (13.7 * 1e-6 * y[448] * y[500])/(130e-6 + 1e-6 * y[448] * y[500])
    R2054 = (13.7 * 1e-6 * y[278] * y[215])/(130e-6 + 1e-6 * y[278] * y[215])
    R2056 = (13.7 * 1e-6 * y[278] * y[280])/(130e-6 + 1e-6 * y[278] * y[280])
    R2057 = (13.7 * 1e-6 * y[449] * y[500])/(130e-6 + 1e-6 * y[449] * y[500])
    R2058 = (13.7 * 1e-6 * y[450] * y[500])/(130e-6 + 1e-6 * y[450] * y[500])
    R2060 = (13.7 * 1e-6 * y[1250] * y[1002])/(130e-6 + 1e-6 * y[1250] * y[1002])
    R2061 = (13.7 * 1e-6 * y[451] * y[500])/(130e-6 + 1e-6 * y[451] * y[500])
    R2063 = (13.7 * 1e-6 * y[452] * y[500])/(130e-6 + 1e-6 * y[452] * y[500])
    R2065 = (13.7 * 1e-6 * y[278] * y[173] * y[1161])/(130e-6 + 1e-6 * y[278] * y[173] * y[1161])
    R2067 = (13.7 * 1e-6 * y[453] * y[500])/(130e-6 + 1e-6 * y[453] * y[500])
    R2070 = (13.7 * 1e-6 * y[278] * y[1163])/(130e-6 + 1e-6 * y[278] * y[1163])
    R2078 = (13.7 * 1e-6 * y[278] * y[173] * y[1171])/(130e-6 + 1e-6 * y[278] * y[173] * y[1171])
    R2079 = (13.7 * 1e-6 * y[61] * y[1165])/(130e-6 + 1e-6 * y[61] * y[1165])
    R2084 = (13.7 * 1e-6 * y[61] * y[1171])/(130e-6 + 1e-6 * y[61] * y[1171])
    R2102 = (13.7 * 1e-6 * y[278] * y[832])/(130e-6 + 1e-6 * y[278] * y[832])
    R2108 = (13.7 * 1e-6 * y[278] * y[1179])/(130e-6 + 1e-6 * y[278] * y[1179])
    R2109 = (13.7 * 1e-6 * y[278] * y[1031])/(130e-6 + 1e-6 * y[278] * y[1031])
    R2115 = (13.7 * 1e-6 * y[236] * y[1181])/(130e-6 + 1e-6 * y[236] * y[1181])
    R2119 = (13.7 * 1e-6 * y[61] * y[1180])/(130e-6 + 1e-6 * y[61] * y[1180])
    R2123 = (13.7 * 1e-6 * y[335] * y[289])/(130e-6 + 1e-6 * y[335] * y[289])
    R2125 = (13.7 * 1e-6 * y[250] * y[335])/(130e-6 + 1e-6 * y[250] * y[335])
    R2130 = (13.7 * 1e-6 * y[1188] * y[1195])/(130e-6 + 1e-6 * y[1188] * y[1195])
    R2136 = (13.7 * 1e-6 * y[278] * y[1172])/(130e-6 + 1e-6 * y[278] * y[1172])
    R2140 = (13.7 * 1e-6 * y[278] * y[285])/(130e-6 + 1e-6 * y[278] * y[285])
    R2145 = (13.7 * 1e-6 * y[61] * y[758])/(130e-6 + 1e-6 * y[61] * y[758])
    R2146 = (13.7 * 1e-6 * y[278] * y[236])/(130e-6 + 1e-6 * y[278] * y[236])
    R2149 = (13.7 * 1e-6 * y[599] * y[173])/(130e-6 + 1e-6 * y[599] * y[173])
    R2150 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R2152 = (13.7 * 1e-6 * y[173] * y[236] * y[1212])/(130e-6 + 1e-6 * y[173] * y[236] * y[1212])
    R2153 = (13.7 * 1e-6 * y[278] * y[868])/(130e-6 + 1e-6 * y[278] * y[868])
    R2159 = (13.7 * 1e-6 * y[1310] * y[236])/(130e-6 + 1e-6 * y[1310] * y[236])
    R2160 = (13.7 * 1e-6 * y[283] * y[1202])/(130e-6 + 1e-6 * y[283] * y[1202])
    R2161 = (13.7 * 1e-6 * y[61] * y[113] * y[6])/(130e-6 + 1e-6 * y[61] * y[113] * y[6])
    R2165 = (13.7 * 1e-6 * y[278] * y[1204])/(130e-6 + 1e-6 * y[278] * y[1204])
    R2166 = (13.7 * 1e-6 * y[260] * y[829])/(130e-6 + 1e-6 * y[260] * y[829])
    R2167 = (13.7 * 1e-6 * y[61] * y[1207])/(130e-6 + 1e-6 * y[61] * y[1207])
    R2171 = (13.7 * 1e-6 * y[61] * y[976])/(130e-6 + 1e-6 * y[61] * y[976])
    R2172 = (13.7 * 1e-6 * y[61] * y[976])/(130e-6 + 1e-6 * y[61] * y[976])
    R2174 = (13.7 * 1e-6 * y[278] * y[173] * y[1210])/(130e-6 + 1e-6 * y[278] * y[173] * y[1210])
    R2183 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    R2184 = (13.7 * 1e-6 * y[236] * y[1216])/(130e-6 + 1e-6 * y[236] * y[1216])
    R2188 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    R2189 = (13.7 * 1e-6 * y[278] * y[173] * y[1219])/(130e-6 + 1e-6 * y[278] * y[173] * y[1219])
    R2193 = (13.7 * 1e-6 * y[209] * y[183])/(130e-6 + 1e-6 * y[209] * y[183])
    R2194 = (13.7 * 1e-6 * y[278] * y[173] * y[1167])/(130e-6 + 1e-6 * y[278] * y[173] * y[1167])
    R2195 = (13.7 * 1e-6 * y[61] * y[1216])/(130e-6 + 1e-6 * y[61] * y[1216])
    R2196 = (13.7 * 1e-6 * y[61] * y[1167])/(130e-6 + 1e-6 * y[61] * y[1167])
    R2199 = (13.7 * 1e-6 * y[173] * y[236] * y[111])/(130e-6 + 1e-6 * y[173] * y[236] * y[111])
    R2200 = (13.7 * 1e-6 * y[173] * y[6] * y[111])/(130e-6 + 1e-6 * y[173] * y[6] * y[111])
    R2203 = (13.7 * 1e-6 * y[61] * y[1232])/(130e-6 + 1e-6 * y[61] * y[1232])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R2208 = (13.7 * 1e-6 * y[61] * y[358])/(130e-6 + 1e-6 * y[61] * y[358])
    R2211 = (13.7 * 1e-6 * y[61] * y[358])/(130e-6 + 1e-6 * y[61] * y[358])
    R2212 = (13.7 * 1e-6 * y[278] * y[954] * y[95])/(130e-6 + 1e-6 * y[278] * y[954] * y[95])
    R2213 = (13.7 * 1e-6 * y[61] * y[290])/(130e-6 + 1e-6 * y[61] * y[290])
    R2225 = (13.7 * 1e-6 * y[278] * y[173] * y[1235])/(130e-6 + 1e-6 * y[278] * y[173] * y[1235])
    R2228 = (13.7 * 1e-6 * y[278] * y[975])/(130e-6 + 1e-6 * y[278] * y[975])
    R2231 = (13.7 * 1e-6 * y[278] * y[1209])/(130e-6 + 1e-6 * y[278] * y[1209])
    R2238 = (13.7 * 1e-6 * y[278] * y[173] * y[1211])/(130e-6 + 1e-6 * y[278] * y[173] * y[1211])
    R2240 = (13.7 * 1e-6 * y[1354] * y[236])/(130e-6 + 1e-6 * y[1354] * y[236])
    R2248 = (13.7 * 1e-6 * y[108] * y[694])/(130e-6 + 1e-6 * y[108] * y[694])
    R2250 = (13.7 * 1e-6 * y[213] * y[335] * y[1244])/(130e-6 + 1e-6 * y[213] * y[335] * y[1244])
    R2251 = (13.7 * 1e-6 * y[278] * y[173] * y[1246])/(130e-6 + 1e-6 * y[278] * y[173] * y[1246])
    R2261 = (13.7 * 1e-6 * y[173] * y[1201])/(130e-6 + 1e-6 * y[173] * y[1201])
    R2262 = (13.7 * 1e-6 * y[127] * y[1248])/(130e-6 + 1e-6 * y[127] * y[1248])
    R2269 = (13.7 * 1e-6 * y[61] * y[1254])/(130e-6 + 1e-6 * y[61] * y[1254])
    R2272 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2275 = (13.7 * 1e-6 * y[278] * y[173] * y[1256])/(130e-6 + 1e-6 * y[278] * y[173] * y[1256])
    R2277 = (13.7 * 1e-6 * y[61] * y[1257])/(130e-6 + 1e-6 * y[61] * y[1257])
    R2279 = (13.7 * 1e-6 * y[61] * y[1257])/(130e-6 + 1e-6 * y[61] * y[1257])
    R2280 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2282 = (13.7 * 1e-6 * y[236] * y[257])/(130e-6 + 1e-6 * y[236] * y[257])
    R2285 = (13.7 * 1e-6 * y[278] * y[173] * y[1261])/(130e-6 + 1e-6 * y[278] * y[173] * y[1261])
    R2289 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2298 = (13.7 * 1e-6 * y[61] * y[1263])/(130e-6 + 1e-6 * y[61] * y[1263])
    R2300 = (13.7 * 1e-6 * y[928] * y[446])/(130e-6 + 1e-6 * y[928] * y[446])
    R2301 = (13.7 * 1e-6 * y[61] * y[482])/(130e-6 + 1e-6 * y[61] * y[482])
    R2302 = (13.7 * 1e-6 * y[61] * y[482])/(130e-6 + 1e-6 * y[61] * y[482])
    R2304 = (13.7 * 1e-6 * y[173] * y[1268])/(130e-6 + 1e-6 * y[173] * y[1268])
    R2307 = (13.7 * 1e-6 * y[543] * y[1304])/(130e-6 + 1e-6 * y[543] * y[1304])
    R2308 = (13.7 * 1e-6 * y[443] * y[278] * y[1290])/(130e-6 + 1e-6 * y[443] * y[278] * y[1290])
    R2311 = (13.7 * 1e-6 * y[278] * y[173] * y[1276])/(130e-6 + 1e-6 * y[278] * y[173] * y[1276])
    R2315 = (13.7 * 1e-6 * y[173] * y[236] * y[1275])/(130e-6 + 1e-6 * y[173] * y[236] * y[1275])
    R2317 = (13.7 * 1e-6 * y[61] * y[1276])/(130e-6 + 1e-6 * y[61] * y[1276])
    R2323 = (13.7 * 1e-6 * y[173] * y[236] * y[780])/(130e-6 + 1e-6 * y[173] * y[236] * y[780])
    R2324 = (13.7 * 1e-6 * y[61] * y[1280])/(130e-6 + 1e-6 * y[61] * y[1280])
    R2330 = (13.7 * 1e-6 * y[61] * y[970])/(130e-6 + 1e-6 * y[61] * y[970])
    R2334 = (13.7 * 1e-6 * y[278] * y[1282])/(130e-6 + 1e-6 * y[278] * y[1282])
    R2335 = (13.7 * 1e-6 * y[278] * y[876])/(130e-6 + 1e-6 * y[278] * y[876])
    R2336 = (13.7 * 1e-6 * y[61] * y[1283])/(130e-6 + 1e-6 * y[61] * y[1283])
    R2338 = (13.7 * 1e-6 * y[278] * y[173] * y[1285])/(130e-6 + 1e-6 * y[278] * y[173] * y[1285])
    R2339 = (13.7 * 1e-6 * y[61] * y[1285])/(130e-6 + 1e-6 * y[61] * y[1285])
    R2341 = (13.7 * 1e-6 * y[278] * y[173] * y[1287])/(130e-6 + 1e-6 * y[278] * y[173] * y[1287])
    R2342 = (13.7 * 1e-6 * y[61] * y[1287])/(130e-6 + 1e-6 * y[61] * y[1287])
    R2344 = (13.7 * 1e-6 * y[278] * y[173] * y[1286])/(130e-6 + 1e-6 * y[278] * y[173] * y[1286])
    R2347 = (13.7 * 1e-6 * y[1288] * y[1021])/(130e-6 + 1e-6 * y[1288] * y[1021])
    R2348 = (13.7 * 1e-6 * y[278] * y[1606] * y[1291])/(130e-6 + 1e-6 * y[278] * y[1606] * y[1291])
    R2349 = (13.7 * 1e-6 * y[235] * y[278] * y[1292])/(130e-6 + 1e-6 * y[235] * y[278] * y[1292])
    R2351 = (13.7 * 1e-6 * y[173] * y[1036])/(130e-6 + 1e-6 * y[173] * y[1036])
    R2360 = (13.7 * 1e-6 * y[173] * y[236] * y[694])/(130e-6 + 1e-6 * y[173] * y[236] * y[694])
    R2369 = (13.7 * 1e-6 * y[218] * y[278] * y[1269])/(130e-6 + 1e-6 * y[218] * y[278] * y[1269])
    R2371 = (13.7 * 1e-6 * y[1057] * y[1302])/(130e-6 + 1e-6 * y[1057] * y[1302])
    R2373 = (13.7 * 1e-6 * y[34] * y[278] * y[1292])/(130e-6 + 1e-6 * y[34] * y[278] * y[1292])
    R2375 = (13.7 * 1e-6 * y[63] * y[278] * y[1292])/(130e-6 + 1e-6 * y[63] * y[278] * y[1292])
    R2381 = (13.7 * 1e-6 * y[921] * y[1311])/(130e-6 + 1e-6 * y[921] * y[1311])
    R6 = (13.7 * 1e-6 * y[30] * y[36] * y[201])/(130e-6 + 1e-6 * y[30] * y[36] * y[201])
    R8 = (13.7 * 1e-6 * y[31] * y[36] * y[201])/(130e-6 + 1e-6 * y[31] * y[36] * y[201])
    R10 = (13.7 * 1e-6 * y[849] * y[36] * y[201])/(130e-6 + 1e-6 * y[849] * y[36] * y[201])
    R12 = (13.7 * 1e-6 * y[32] * y[36] * y[201])/(130e-6 + 1e-6 * y[32] * y[36] * y[201])
    R13 = (13.7 * 1e-6 * y[33] * y[36] * y[201])/(130e-6 + 1e-6 * y[33] * y[36] * y[201])
    R14 = (13.7 * 1e-6 * y[36] * y[918] * y[89])/(130e-6 + 1e-6 * y[36] * y[918] * y[89])
    R16 = (13.7 * 1e-6 * y[88] * y[36] * y[918])/(130e-6 + 1e-6 * y[88] * y[36] * y[918])
    R17 = (13.7 * 1e-6 * y[1236] * y[36] * y[918])/(130e-6 + 1e-6 * y[1236] * y[36] * y[918])
    R18 = (13.7 * 1e-6 * y[86] * y[36] * y[918])/(130e-6 + 1e-6 * y[86] * y[36] * y[918])
    R21 = (13.7 * 1e-6 * y[555] * y[36] * y[918])/(130e-6 + 1e-6 * y[555] * y[36] * y[918])
    R26 = (13.7 * 1e-6 * y[36] * y[918] * y[72])/(130e-6 + 1e-6 * y[36] * y[918] * y[72])
    R27 = (13.7 * 1e-6 * y[36] * y[918] * y[74])/(130e-6 + 1e-6 * y[36] * y[918] * y[74])
    R28 = (13.7 * 1e-6 * y[36] * y[918] * y[79])/(130e-6 + 1e-6 * y[36] * y[918] * y[79])
    R29 = (13.7 * 1e-6 * y[36] * y[81] * y[918])/(130e-6 + 1e-6 * y[36] * y[81] * y[918])
    R30 = (13.7 * 1e-6 * y[538] * y[36] * y[918])/(130e-6 + 1e-6 * y[538] * y[36] * y[918])
    R31 = (13.7 * 1e-6 * y[36] * y[541] * y[918])/(130e-6 + 1e-6 * y[36] * y[541] * y[918])
    R58 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R89 = (13.7 * 1e-6 * y[1214] * y[36] * y[92])/(130e-6 + 1e-6 * y[1214] * y[36] * y[92])
    R91 = (13.7 * 1e-6 * y[36] * y[92])/(130e-6 + 1e-6 * y[36] * y[92])
    R117 = (13.7 * 1e-6 * y[220] * y[928] * y[36])/(130e-6 + 1e-6 * y[220] * y[928] * y[36])
    R178 = (13.7 * 1e-6 * y[216] * y[173] * y[36])/(130e-6 + 1e-6 * y[216] * y[173] * y[36])
    R184 = (13.7 * 1e-6 * y[69] * y[173] * y[36])/(130e-6 + 1e-6 * y[69] * y[173] * y[36])
    R198 = (13.7 * 1e-6 * y[921] * y[36])/(130e-6 + 1e-6 * y[921] * y[36])
    R229 = (13.7 * 1e-6 * y[36] * y[94] * y[201])/(130e-6 + 1e-6 * y[36] * y[94] * y[201])
    R234 = (13.7 * 1e-6 * y[233] * y[36] * y[113])/(130e-6 + 1e-6 * y[233] * y[36] * y[113])
    R239 = (13.7 * 1e-6 * y[737] * y[36] * y[113])/(130e-6 + 1e-6 * y[737] * y[36] * y[113])
    R262 = (13.7 * 1e-6 * y[258] * y[173] * y[36])/(130e-6 + 1e-6 * y[258] * y[173] * y[36])
    R278 = (13.7 * 1e-6 * y[312] * y[36])/(130e-6 + 1e-6 * y[312] * y[36])
    R279 = (13.7 * 1e-6 * y[235] * y[36] * y[1360])/(130e-6 + 1e-6 * y[235] * y[36] * y[1360])
    R285 = (13.7 * 1e-6 * y[300] * y[36])/(130e-6 + 1e-6 * y[300] * y[36])
    R287 = (13.7 * 1e-6 * y[515] * y[36] * y[201])/(130e-6 + 1e-6 * y[515] * y[36] * y[201])
    R312 = (13.7 * 1e-6 * y[1367] * y[36] * y[113])/(130e-6 + 1e-6 * y[1367] * y[36] * y[113])
    R318 = (13.7 * 1e-6 * y[303] * y[36])/(130e-6 + 1e-6 * y[303] * y[36])
    R319 = (13.7 * 1e-6 * y[1367] * y[36] * y[201])/(130e-6 + 1e-6 * y[1367] * y[36] * y[201])
    R329 = (13.7 * 1e-6 * y[278] * y[173] * y[36])/(130e-6 + 1e-6 * y[278] * y[173] * y[36])
    R339 = (13.7 * 1e-6 * y[479] * y[36] * y[113])/(130e-6 + 1e-6 * y[479] * y[36] * y[113])
    R346 = (13.7 * 1e-6 * y[1377] * y[36] * y[113])/(130e-6 + 1e-6 * y[1377] * y[36] * y[113])
    R347 = (13.7 * 1e-6 * y[1377] * y[36] * y[201])/(130e-6 + 1e-6 * y[1377] * y[36] * y[201])
    R350 = (13.7 * 1e-6 * y[479] * y[36] * y[201])/(130e-6 + 1e-6 * y[479] * y[36] * y[201])
    R374 = (13.7 * 1e-6 * y[278] * y[345] * y[36])/(130e-6 + 1e-6 * y[278] * y[345] * y[36])
    R391 = (13.7 * 1e-6 * y[278] * y[346] * y[36])/(130e-6 + 1e-6 * y[278] * y[346] * y[36])
    R398 = (13.7 * 1e-6 * y[1393] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[1393] * y[36] * y[113] * y[335])
    R434 = (13.7 * 1e-6 * y[395] * y[36])/(130e-6 + 1e-6 * y[395] * y[36])
    R437 = (13.7 * 1e-6 * y[397] * y[173] * y[36])/(130e-6 + 1e-6 * y[397] * y[173] * y[36])
    R474 = (13.7 * 1e-6 * y[425] * y[36] * y[782])/(130e-6 + 1e-6 * y[425] * y[36] * y[782])
    R477 = (13.7 * 1e-6 * y[1252] * y[36] * y[335])/(130e-6 + 1e-6 * y[1252] * y[36] * y[335])
    R490 = (13.7 * 1e-6 * y[1409] * y[36])/(130e-6 + 1e-6 * y[1409] * y[36])
    R502 = (13.7 * 1e-6 * y[36] * y[250] * y[335])/(130e-6 + 1e-6 * y[36] * y[250] * y[335])
    R505 = (13.7 * 1e-6 * y[443] * y[36])/(130e-6 + 1e-6 * y[443] * y[36])
    R507 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R509 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R511 = (13.7 * 1e-6 * y[454] * y[173] * y[36])/(130e-6 + 1e-6 * y[454] * y[173] * y[36])
    R514 = (13.7 * 1e-6 * y[404] * y[36] * y[187])/(130e-6 + 1e-6 * y[404] * y[36] * y[187])
    R515 = (13.7 * 1e-6 * y[404] * y[36] * y[188])/(130e-6 + 1e-6 * y[404] * y[36] * y[188])
    R516 = (13.7 * 1e-6 * y[404] * y[36] * y[192])/(130e-6 + 1e-6 * y[404] * y[36] * y[192])
    R517 = (13.7 * 1e-6 * y[404] * y[36] * y[193])/(130e-6 + 1e-6 * y[404] * y[36] * y[193])
    R518 = (13.7 * 1e-6 * y[404] * y[36] * y[198])/(130e-6 + 1e-6 * y[404] * y[36] * y[198])
    R519 = (13.7 * 1e-6 * y[404] * y[36] * y[199])/(130e-6 + 1e-6 * y[404] * y[36] * y[199])
    R520 = (13.7 * 1e-6 * y[404] * y[36] * y[200])/(130e-6 + 1e-6 * y[404] * y[36] * y[200])
    R528 = (13.7 * 1e-6 * y[464] * y[173] * y[36])/(130e-6 + 1e-6 * y[464] * y[173] * y[36])
    R529 = (13.7 * 1e-6 * y[935] * y[173] * y[36])/(130e-6 + 1e-6 * y[935] * y[173] * y[36])
    R540 = (13.7 * 1e-6 * y[934] * y[173] * y[36])/(130e-6 + 1e-6 * y[934] * y[173] * y[36])
    R542 = (13.7 * 1e-6 * y[471] * y[173] * y[36])/(130e-6 + 1e-6 * y[471] * y[173] * y[36])
    R543 = (13.7 * 1e-6 * y[777] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[777] * y[36] * y[113] * y[335])
    R549 = (13.7 * 1e-6 * y[819] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[819] * y[36] * y[113] * y[335])
    R559 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R560 = (13.7 * 1e-6 * y[1422] * y[36] * y[113])/(130e-6 + 1e-6 * y[1422] * y[36] * y[113])
    R561 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R571 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R588 = (13.7 * 1e-6 * y[498] * y[278] * y[36])/(130e-6 + 1e-6 * y[498] * y[278] * y[36])
    R592 = (13.7 * 1e-6 * y[505] * y[36] * y[201])/(130e-6 + 1e-6 * y[505] * y[36] * y[201])
    R600 = (13.7 * 1e-6 * y[506] * y[36] * y[201])/(130e-6 + 1e-6 * y[506] * y[36] * y[201])
    R602 = (13.7 * 1e-6 * y[968] * y[36] * y[1012])/(130e-6 + 1e-6 * y[968] * y[36] * y[1012])
    R606 = (13.7 * 1e-6 * y[1431] * y[36] * y[113])/(130e-6 + 1e-6 * y[1431] * y[36] * y[113])
    R610 = (13.7 * 1e-6 * y[14] * y[36] * y[201])/(130e-6 + 1e-6 * y[14] * y[36] * y[201])
    R612 = (13.7 * 1e-6 * y[774] * y[173] * y[36])/(130e-6 + 1e-6 * y[774] * y[173] * y[36])
    R615 = (13.7 * 1e-6 * y[1023] * y[36] * y[201])/(130e-6 + 1e-6 * y[1023] * y[36] * y[201])
    R634 = (13.7 * 1e-6 * y[18] * y[36] * y[201])/(130e-6 + 1e-6 * y[18] * y[36] * y[201])
    R638 = (13.7 * 1e-6 * y[440] * y[36] * y[113])/(130e-6 + 1e-6 * y[440] * y[36] * y[113])
    R639 = (13.7 * 1e-6 * y[19] * y[36] * y[201])/(130e-6 + 1e-6 * y[19] * y[36] * y[201])
    R640 = (13.7 * 1e-6 * y[440] * y[36] * y[201])/(130e-6 + 1e-6 * y[440] * y[36] * y[201])
    R644 = (13.7 * 1e-6 * y[36] * y[113] * y[445])/(130e-6 + 1e-6 * y[36] * y[113] * y[445])
    R645 = (13.7 * 1e-6 * y[544] * y[36] * y[201])/(130e-6 + 1e-6 * y[544] * y[36] * y[201])
    R646 = (13.7 * 1e-6 * y[20] * y[36] * y[201])/(130e-6 + 1e-6 * y[20] * y[36] * y[201])
    R647 = (13.7 * 1e-6 * y[480] * y[36] * y[92])/(130e-6 + 1e-6 * y[480] * y[36] * y[92])
    R648 = (13.7 * 1e-6 * y[36] * y[201] * y[445])/(130e-6 + 1e-6 * y[36] * y[201] * y[445])
    R649 = (13.7 * 1e-6 * y[36] * y[113] * y[463])/(130e-6 + 1e-6 * y[36] * y[113] * y[463])
    R650 = (13.7 * 1e-6 * y[36] * y[201] * y[463])/(130e-6 + 1e-6 * y[36] * y[201] * y[463])
    R658 = (13.7 * 1e-6 * y[36] * y[113] * y[360])/(130e-6 + 1e-6 * y[36] * y[113] * y[360])
    R659 = (13.7 * 1e-6 * y[23] * y[36] * y[201])/(130e-6 + 1e-6 * y[23] * y[36] * y[201])
    R660 = (13.7 * 1e-6 * y[36] * y[201] * y[360])/(130e-6 + 1e-6 * y[36] * y[201] * y[360])
    R661 = (13.7 * 1e-6 * y[36] * y[113] * y[371])/(130e-6 + 1e-6 * y[36] * y[113] * y[371])
    R662 = (13.7 * 1e-6 * y[36] * y[201] * y[371])/(130e-6 + 1e-6 * y[36] * y[201] * y[371])
    R668 = (13.7 * 1e-6 * y[36] * y[113] * y[374])/(130e-6 + 1e-6 * y[36] * y[113] * y[374])
    R669 = (13.7 * 1e-6 * y[36] * y[201] * y[374])/(130e-6 + 1e-6 * y[36] * y[201] * y[374])
    R670 = (13.7 * 1e-6 * y[36] * y[113] * y[393])/(130e-6 + 1e-6 * y[36] * y[113] * y[393])
    R672 = (13.7 * 1e-6 * y[28] * y[36] * y[201])/(130e-6 + 1e-6 * y[28] * y[36] * y[201])
    R676 = (13.7 * 1e-6 * y[36] * y[201] * y[393])/(130e-6 + 1e-6 * y[36] * y[201] * y[393])
    R677 = (13.7 * 1e-6 * y[36] * y[113] * y[401])/(130e-6 + 1e-6 * y[36] * y[113] * y[401])
    R678 = (13.7 * 1e-6 * y[36] * y[201] * y[401])/(130e-6 + 1e-6 * y[36] * y[201] * y[401])
    R681 = (13.7 * 1e-6 * y[36] * y[113] * y[410])/(130e-6 + 1e-6 * y[36] * y[113] * y[410])
    R682 = (13.7 * 1e-6 * y[36] * y[201] * y[410])/(130e-6 + 1e-6 * y[36] * y[201] * y[410])
    R683 = (13.7 * 1e-6 * y[36] * y[113] * y[421])/(130e-6 + 1e-6 * y[36] * y[113] * y[421])
    R684 = (13.7 * 1e-6 * y[36] * y[201] * y[421])/(130e-6 + 1e-6 * y[36] * y[201] * y[421])
    R690 = (13.7 * 1e-6 * y[36] * y[113] * y[428])/(130e-6 + 1e-6 * y[36] * y[113] * y[428])
    R691 = (13.7 * 1e-6 * y[36] * y[201] * y[428])/(130e-6 + 1e-6 * y[36] * y[201] * y[428])
    R692 = (13.7 * 1e-6 * y[29] * y[36] * y[201])/(130e-6 + 1e-6 * y[29] * y[36] * y[201])
    R693 = (13.7 * 1e-6 * y[36] * y[113] * y[438])/(130e-6 + 1e-6 * y[36] * y[113] * y[438])
    R694 = (13.7 * 1e-6 * y[36] * y[201] * y[438])/(130e-6 + 1e-6 * y[36] * y[201] * y[438])
    R993 = (13.7 * 1e-6 * y[282] * y[36] * y[113])/(130e-6 + 1e-6 * y[282] * y[36] * y[113])
    R995 = (13.7 * 1e-6 * y[282] * y[36] * y[201])/(130e-6 + 1e-6 * y[282] * y[36] * y[201])
    R1020 = (13.7 * 1e-6 * y[620] * y[36] * y[444])/(130e-6 + 1e-6 * y[620] * y[36] * y[444])
    R1021 = (13.7 * 1e-6 * y[620] * y[36] * y[441])/(130e-6 + 1e-6 * y[620] * y[36] * y[441])
    R1079 = (13.7 * 1e-6 * y[252] * y[36])/(130e-6 + 1e-6 * y[252] * y[36])
    R1080 = (13.7 * 1e-6 * y[1174] * y[36] * y[201])/(130e-6 + 1e-6 * y[1174] * y[36] * y[201])
    R1083 = (13.7 * 1e-6 * y[36] * y[201] * y[285])/(130e-6 + 1e-6 * y[36] * y[201] * y[285])
    R1085 = (13.7 * 1e-6 * y[36] * y[113] * y[285])/(130e-6 + 1e-6 * y[36] * y[113] * y[285])
    R1088 = (13.7 * 1e-6 * y[932] * y[723] * y[36])/(130e-6 + 1e-6 * y[932] * y[723] * y[36])
    R1092 = (13.7 * 1e-6 * y[278] * y[284] * y[36])/(130e-6 + 1e-6 * y[278] * y[284] * y[36])
    R1093 = (13.7 * 1e-6 * y[284] * y[36] * y[113])/(130e-6 + 1e-6 * y[284] * y[36] * y[113])
    R1094 = (13.7 * 1e-6 * y[284] * y[36] * y[201])/(130e-6 + 1e-6 * y[284] * y[36] * y[201])
    R1140 = (13.7 * 1e-6 * y[718] * y[36] * y[201])/(130e-6 + 1e-6 * y[718] * y[36] * y[201])
    R1142 = (13.7 * 1e-6 * y[723] * y[36] * y[929])/(130e-6 + 1e-6 * y[723] * y[36] * y[929])
    R1176 = (13.7 * 1e-6 * y[278] * y[723] * y[36])/(130e-6 + 1e-6 * y[278] * y[723] * y[36])
    R1194 = (13.7 * 1e-6 * y[110] * y[36])/(130e-6 + 1e-6 * y[110] * y[36])
    R1206 = (13.7 * 1e-6 * y[213] * y[710] * y[36] * y[201])/(130e-6 + 1e-6 * y[213] * y[710] * y[36] * y[201])
    R1207 = (13.7 * 1e-6 * y[730] * y[36] * y[201])/(130e-6 + 1e-6 * y[730] * y[36] * y[201])
    R1224 = (13.7 * 1e-6 * y[593] * y[36])/(130e-6 + 1e-6 * y[593] * y[36])
    R1240 = (13.7 * 1e-6 * y[278] * y[746] * y[36])/(130e-6 + 1e-6 * y[278] * y[746] * y[36])
    R1245 = (13.7 * 1e-6 * y[222] * y[36] * y[201])/(130e-6 + 1e-6 * y[222] * y[36] * y[201])
    R1256 = (13.7 * 1e-6 * y[703] * y[36] * y[201])/(130e-6 + 1e-6 * y[703] * y[36] * y[201])
    R1261 = (13.7 * 1e-6 * y[593] * y[36] * y[113])/(130e-6 + 1e-6 * y[593] * y[36] * y[113])
    R1263 = (13.7 * 1e-6 * y[593] * y[36] * y[201])/(130e-6 + 1e-6 * y[593] * y[36] * y[201])
    R1296 = (13.7 * 1e-6 * y[310] * y[36] * y[201])/(130e-6 + 1e-6 * y[310] * y[36] * y[201])
    R1313 = (13.7 * 1e-6 * y[928] * y[173] * y[36])/(130e-6 + 1e-6 * y[928] * y[173] * y[36])
    R1316 = (13.7 * 1e-6 * y[783] * y[173] * y[36])/(130e-6 + 1e-6 * y[783] * y[173] * y[36])
    R1381 = (13.7 * 1e-6 * y[66] * y[36] * y[113])/(130e-6 + 1e-6 * y[66] * y[36] * y[113])
    R1382 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R1392 = (13.7 * 1e-6 * y[1142] * y[36])/(130e-6 + 1e-6 * y[1142] * y[36])
    R1400 = (13.7 * 1e-6 * y[36] * y[1631] * y[113])/(130e-6 + 1e-6 * y[36] * y[1631] * y[113])
    R1401 = (13.7 * 1e-6 * y[36] * y[1631] * y[201])/(130e-6 + 1e-6 * y[36] * y[1631] * y[201])
    R1410 = (13.7 * 1e-6 * y[36] * y[828])/(130e-6 + 1e-6 * y[36] * y[828])
    R1424 = (13.7 * 1e-6 * y[645] * y[36] * y[444])/(130e-6 + 1e-6 * y[645] * y[36] * y[444])
    R1425 = (13.7 * 1e-6 * y[645] * y[36] * y[441])/(130e-6 + 1e-6 * y[645] * y[36] * y[441])
    R1428 = (13.7 * 1e-6 * y[495] * y[645] * y[36])/(130e-6 + 1e-6 * y[495] * y[645] * y[36])
    R1432 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R1448 = (13.7 * 1e-6 * y[36] * y[94] * y[113])/(130e-6 + 1e-6 * y[36] * y[94] * y[113])
    R1452 = (13.7 * 1e-6 * y[36] * y[845] * y[113])/(130e-6 + 1e-6 * y[36] * y[845] * y[113])
    R1453 = (13.7 * 1e-6 * y[36] * y[608] * y[113])/(130e-6 + 1e-6 * y[36] * y[608] * y[113])
    R1457 = (13.7 * 1e-6 * y[103] * y[36] * y[201])/(130e-6 + 1e-6 * y[103] * y[36] * y[201])
    R1458 = (13.7 * 1e-6 * y[149] * y[36] * y[918])/(130e-6 + 1e-6 * y[149] * y[36] * y[918])
    R1461 = (13.7 * 1e-6 * y[127] * y[36] * y[918])/(130e-6 + 1e-6 * y[127] * y[36] * y[918])
    R1486 = (13.7 * 1e-6 * y[317] * y[36])/(130e-6 + 1e-6 * y[317] * y[36])
    R1529 = (13.7 * 1e-6 * y[36] * y[334])/(130e-6 + 1e-6 * y[36] * y[334])
    R1564 = (13.7 * 1e-6 * y[36] * y[918])/(130e-6 + 1e-6 * y[36] * y[918])
    R1606 = (13.7 * 1e-6 * y[157] * y[36] * y[707])/(130e-6 + 1e-6 * y[157] * y[36] * y[707])
    R1636 = (13.7 * 1e-6 * y[542] * y[404] * y[36])/(130e-6 + 1e-6 * y[542] * y[404] * y[36])
    R1639 = (13.7 * 1e-6 * y[36] * y[924])/(130e-6 + 1e-6 * y[36] * y[924])
    R1666 = (13.7 * 1e-6 * y[36] * y[113] * y[966])/(130e-6 + 1e-6 * y[36] * y[113] * y[966])
    R1670 = (13.7 * 1e-6 * y[36] * y[942])/(130e-6 + 1e-6 * y[36] * y[942])
    R1679 = (13.7 * 1e-6 * y[278] * y[36] * y[947])/(130e-6 + 1e-6 * y[278] * y[36] * y[947])
    R1691 = (13.7 * 1e-6 * y[278] * y[36] * y[945])/(130e-6 + 1e-6 * y[278] * y[36] * y[945])
    R1696 = (13.7 * 1e-6 * y[36] * y[983] * y[1185])/(130e-6 + 1e-6 * y[36] * y[983] * y[1185])
    R1706 = (13.7 * 1e-6 * y[36] * y[962] * y[289])/(130e-6 + 1e-6 * y[36] * y[962] * y[289])
    R1708 = (13.7 * 1e-6 * y[36] * y[250] * y[962])/(130e-6 + 1e-6 * y[36] * y[250] * y[962])
    R1778 = (13.7 * 1e-6 * y[213] * y[36] * y[1201])/(130e-6 + 1e-6 * y[213] * y[36] * y[1201])
    R1779 = (13.7 * 1e-6 * y[36] * y[113] * y[959])/(130e-6 + 1e-6 * y[36] * y[113] * y[959])
    R1784 = (13.7 * 1e-6 * y[692] * y[36] * y[201])/(130e-6 + 1e-6 * y[692] * y[36] * y[201])
    R1820 = (13.7 * 1e-6 * y[36] * y[298])/(130e-6 + 1e-6 * y[36] * y[298])
    R1835 = (13.7 * 1e-6 * y[835] * y[36])/(130e-6 + 1e-6 * y[835] * y[36])
    R1850 = (13.7 * 1e-6 * y[36] * y[1652])/(130e-6 + 1e-6 * y[36] * y[1652])
    R1854 = (13.7 * 1e-6 * y[776] * y[36])/(130e-6 + 1e-6 * y[776] * y[36])
    R1857 = (13.7 * 1e-6 * y[36] * y[151])/(130e-6 + 1e-6 * y[36] * y[151])
    R1936 = (13.7 * 1e-6 * y[36] * y[717] * y[113])/(130e-6 + 1e-6 * y[36] * y[717] * y[113])
    R1992 = (13.7 * 1e-6 * y[1126] * y[36])/(130e-6 + 1e-6 * y[1126] * y[36])
    R2009 = (13.7 * 1e-6 * y[36] * y[350])/(130e-6 + 1e-6 * y[36] * y[350])
    R2018 = (13.7 * 1e-6 * y[36] * y[113] * y[335] * y[1133])/(130e-6 + 1e-6 * y[36] * y[113] * y[335] * y[1133])
    R2029 = (13.7 * 1e-6 * y[36] * y[1151])/(130e-6 + 1e-6 * y[36] * y[1151])
    R2030 = (13.7 * 1e-6 * y[36] * y[1152])/(130e-6 + 1e-6 * y[36] * y[1152])
    R2031 = (13.7 * 1e-6 * y[36] * y[1154])/(130e-6 + 1e-6 * y[36] * y[1154])
    R2039 = (13.7 * 1e-6 * y[36] * y[1155])/(130e-6 + 1e-6 * y[36] * y[1155])
    R2040 = (13.7 * 1e-6 * y[36] * y[1158])/(130e-6 + 1e-6 * y[36] * y[1158])
    R2041 = (13.7 * 1e-6 * y[36] * y[1159])/(130e-6 + 1e-6 * y[36] * y[1159])
    R2046 = (13.7 * 1e-6 * y[36] * y[1162])/(130e-6 + 1e-6 * y[36] * y[1162])
    R2055 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2062 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2069 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2075 = (13.7 * 1e-6 * y[278] * y[36] * y[1120])/(130e-6 + 1e-6 * y[278] * y[36] * y[1120])
    R2088 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2111 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2112 = (13.7 * 1e-6 * y[173] * y[36] * y[311])/(130e-6 + 1e-6 * y[173] * y[36] * y[311])
    R2117 = (13.7 * 1e-6 * y[35] * y[36] * y[563])/(130e-6 + 1e-6 * y[35] * y[36] * y[563])
    R2126 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2132 = (13.7 * 1e-6 * y[278] * y[36] * y[500])/(130e-6 + 1e-6 * y[278] * y[36] * y[500])
    R2155 = (13.7 * 1e-6 * y[36] * y[201] * y[444])/(130e-6 + 1e-6 * y[36] * y[201] * y[444])
    R2163 = (13.7 * 1e-6 * y[529] * y[36] * y[201])/(130e-6 + 1e-6 * y[529] * y[36] * y[201])
    R2164 = (13.7 * 1e-6 * y[36] * y[441] * y[201])/(130e-6 + 1e-6 * y[36] * y[441] * y[201])
    R2181 = (13.7 * 1e-6 * y[495] * y[36] * y[201])/(130e-6 + 1e-6 * y[495] * y[36] * y[201])
    R2197 = (13.7 * 1e-6 * y[36] * y[1183])/(130e-6 + 1e-6 * y[36] * y[1183])
    R2216 = (13.7 * 1e-6 * y[36] * y[250] * y[1664])/(130e-6 + 1e-6 * y[36] * y[250] * y[1664])
    R2218 = (13.7 * 1e-6 * y[507] * y[36] * y[1664])/(130e-6 + 1e-6 * y[507] * y[36] * y[1664])
    R2233 = (13.7 * 1e-6 * y[1099] * y[796] * y[36])/(130e-6 + 1e-6 * y[1099] * y[796] * y[36])
    R2237 = (13.7 * 1e-6 * y[36] * y[201] * y[415])/(130e-6 + 1e-6 * y[36] * y[201] * y[415])
    R2245 = (13.7 * 1e-6 * y[36] * y[201] * y[522])/(130e-6 + 1e-6 * y[36] * y[201] * y[522])
    R2265 = (13.7 * 1e-6 * y[1249] * y[36] * y[201])/(130e-6 + 1e-6 * y[1249] * y[36] * y[201])
    R2270 = (13.7 * 1e-6 * y[36] * y[1311])/(130e-6 + 1e-6 * y[36] * y[1311])
    R2274 = (13.7 * 1e-6 * y[728] * y[36] * y[113])/(130e-6 + 1e-6 * y[728] * y[36] * y[113])
    R2346 = (13.7 * 1e-6 * y[648] * y[36] * y[929])/(130e-6 + 1e-6 * y[648] * y[36] * y[929])
    R2350 = (13.7 * 1e-6 * y[36] * y[201] * y[1278])/(130e-6 + 1e-6 * y[36] * y[201] * y[1278])
    R2368 = (13.7 * 1e-6 * y[173] * y[36] * y[257])/(130e-6 + 1e-6 * y[173] * y[36] * y[257])
    return (R32 + R46 + R52 + R56 + R59 + R75 + R86 + R87 + R96 + R97 + R98 + R104 + R109 + R110 + R120 + R136 + R140 + R149 + R162 + R165 + R169 + R175 + R181 + R188 + R189 + R190 + R200 + R201 + R204 + R207 + R208 + R211 + R212 + R214 + R215 + R216 + R217 + R224 + R231 + R232 + R240 + R246 + R247 + R249 + R253 + R255 + R256 + R258 + R259 + R260 + R263 + R264 + R272 + R273 + R276 + R280 + R282 + R286 + R289 + R290 + R291 + R292 + R294 + R295 + R296 + R297 + R298 + R300 + R302 + R303 + R304 + R308 + R309 + R310 + R311 + R313 + R314 + R323 + R325 + R327 + R328 + R330 + R332 + R333 + R334 + R336 + R338 + R343 + R344 + R349 + R351 + R353 + R355 + R357 + R358 + R359 + R361 + R362 + R365 + R366 + R367 + R368 + R370 + R372 + R375 + R377 + R378 + R379 + R380 + R381 + R382 + R385 + R386 + R390 + R392 + R393 + R394 + R395 + R403 + R404 + R405 + R411 + R421 + R422 + R423 + R424 + R436 + R438 + R444 + R447 + R448 + R449 + R451 + R452 + R455 + R456 + R460 + R463 + R464 + R465 + R466 + R468 + R469 + R471 + R475 + R476 + R487 + R489 + R495 + R496 + R498 + R508 + R521 + R522 + R523 + R530 + R531 + R534 + R536 + R539 + R541 + R544 + R545 + R546 + R547 + R551 + R552 + R553 + R556 + R557 + R563 + R565 + R568 + R572 + R587 + R590 + R591 + R599 + R601 + R605 + R609 + R611 + R614 + R622 + R623 + R629 + R636 + R641 + R643 + R652 + R653 + R655 + R699 + R700 + R701 + R707 + R710 + R716 + R926 + R935 + R937 + R941 + R942 + R943 + R944 + R945 + R946 + R953 + R954 + R955 + R957 + R962 + R963 + R964 + R966 + R968 + R969 + R973 + R974 + R976 + R978 + R979 + R980 + R981 + R982 + R983 + R984 + R985 + R988 + R989 + R990 + R991 + R992 + R996 + R1000 + R1001 + R1002 + R1003 + R1009 + R1011 + R1012 + R1013 + R1014 + R1015 + R1017 + R1018 + R1019 + R1022 + R1023 + R1026 + R1027 + R1028 + R1029 + R1030 + R1031 + R1033 + R1034 + R1038 + R1042 + R1045 + R1046 + R1047 + R1048 + R1049 + R1050 + R1052 + R1053 + R1055 + R1056 + R1062 + R1063 + R1064 + R1065 + R1066 + R1067 + R1069 + R1072 + R1074 + R1075 + R1076 + R1082 + R1086 + R1106 + R1108 + R1110 + R1112 + R1115 + R1119 + R1121 + R1123 + R1125 + R1129 + R1131 + R1133 + R1135 + R1139 + R1143 + R1144 + R1145 + R1157 + R1159 + R1160 + R1164 + R1165 + R1167 + R1168 + R1170 + R1174 + R1178 + R1180 + R1182 + R1184 + R1187 + R1192 + R1195 + R1199 + R1211 + R1213 + R1216 + R1217 + R1218 + R1219 + R1222 + R1229 + R1231 + R1235 + R1236 + R1239 + R1241 + R1246 + R1249 + R1251 + R1252 + R1254 + R1257 + R1258 + R1260 + R1264 + R1268 + R1270 + R1272 + R1277 + R1282 + R1285 + R1286 + R1287 + R1288 + R1293 + R1298 + R1299 + R1300 + R1301 + R1302 + R1304 + R1305 + R1306 + R1308 + R1309 + R1310 + R1312 + R1319 + R1321 + R1322 + R1323 + R1333 + R1337 + R1339 + R1341 + R1342 + R1343 + R1344 + R1346 + R1348 + R1349 + R1353 + R1354 + R1355 + R1357 + R1358 + R1359 + R1360 + R1361 + R1363 + R1367 + R1368 + R1374 + R1377 + R1380 + R1383 + R1384 + R1387 + R1391 + R1394 + R1396 + R1402 + R1403 + R1404 + R1405 + R1408 + R1411 + R1415 + R1421 + R1426 + R1427 + R1433 + R1441 + R1442 + R1447 + R1451 + R1455 + R1459 + R1462 + R1467 + R1477 + R1478 + R1481 + R1487 + R1490 + R1491 + R1492 + R1494 + R1500 + R1502 + R1504 + R1507 + R1512 + R1513 + R1514 + R1515 + R1518 + R1520 + R1524 + R1525 + R1526 + R1527 + R1528 + R1537 + R1538 + R1539 + R1541 + R1542 + R1543 + R1544 + R1547 + R1550 + R1551 + R1552 + R1555 + R1557 + R1566 + R1568 + R1573 + R1580 + R1582 + R1587 + R1590 + R1593 + R1594 + R1595 + R1614 + R1617 + R1630 + R1631 + R1633 + R1638 + R1646 + R1648 + R1649 + R1651 + R1664 + R1667 + R1668 + R1673 + R1676 + R1681 + R1683 + R1692 + R1698 + R1705 + R1715 + R1716 + R1739 + R1740 + R1741 + R1746 + R1747 + R1749 + R1754 + R1755 + R1756 + R1760 + R1761 + R1762 + R1763 + R1764 + R1765 + R1766 + R1768 + R1769 + R1770 + R1772 + R1780 + R1783 + R1785 + R1786 + R1787 + R1788 + R1793 + R1794 + R1795 + R1796 + R1800 + R1801 + R1803 + R1805 + R1806 + R1807 + R1814 + R1822 + R1833 + R1834 + R1841 + R1842 + R1844 + R1845 + R1847 + R1849 + R1852 + R1856 + R1859 + R1860 + R1861 + R1862 + R1863 + R1864 + R1865 + R1866 + R1869 + R1870 + R1873 + R1877 + R1879 + R1881 + R1882 + R1883 + R1884 + R1885 + R1886 + R1888 + R1889 + R1890 + R1891 + R1893 + R1894 + R1895 + R1896 + R1899 + R1903 + R1909 + R1922 + R1923 + R1925 + R1927 + R1928 + R1933 + R1934 + R1940 + R1949 + R1952 + R1954 + R1963 + R1969 + R1970 + R1973 + R1990 + R1991 + R2007 + R2012 + R2013 + R2019 + R2021 + R2022 + R2023 + R2032 + R2033 + R2037 + R2038 + R2042 + R2044 + R2045 + R2051 + R2052 + R2053 + R2054 + R2056 + R2057 + R2058 + R2060 + R2061 + R2063 + R2065 + R2067 + R2070 + R2078 + R2079 + R2084 + R2102 + R2108 + R2109 + R2115 + R2119 + R2123 + R2125 + R2130 + R2136 + R2140 + R2145 + R2146 + R2149 + R2150 + R2152 + R2153 + R2159 + R2160 + R2161 + R2165 + R2166 + R2167 + R2171 + R2172 + R2174 + R2183 + R2184 + R2188 + R2189 + R2193 + R2194 + R2195 + R2196 + R2199 + R2200 + R2203 + R2205 + R2208 + R2211 + R2212 + R2213 + R2225 + R2228 + R2231 + R2238 + R2240 + R2248 + R2250 + R2251 + R2261 + R2262 + R2269 + R2272 + R2275 + R2277 + R2279 + R2280 + R2282 + R2285 + R2289 + R2298 + R2300 + R2301 + R2302 + R2304 + R2307 + R2308 + R2311 + R2315 + R2317 + R2323 + R2324 + R2330 + R2334 + R2335 + R2336 + R2338 + R2339 + R2341 + R2342 + R2344 + R2347 + R2348 + R2349 + R2351 + R2360 + R2369 + R2371 + R2373 + R2375 + R2381) - (R6 + R8 + R10 + R12 + R13 + R14 + R16 + R17 + R18 + R21 + R26 + R27 + R28 + R29 + R30 + R31 + R58 + R89 + R91 + R117 + R178 + R184 + R198 + R229 + R234 + R239 + R262 + R278 + R279 + R285 + R287 + R312 + R318 + R319 + R329 + R339 + R346 + R347 + R350 + R374 + R391 + R398 + R434 + R437 + R474 + R477 + R490 + R502 + R505 + R507 + R509 + R511 + R514 + R515 + R516 + R517 + R518 + R519 + R520 + R528 + R529 + R540 + R542 + R543 + R549 + R559 + R560 + R561 + R571 + R588 + R592 + R600 + R602 + R606 + R610 + R612 + R615 + R634 + R638 + R639 + R640 + R644 + R645 + R646 + R647 + R648 + R649 + R650 + R658 + R659 + R660 + R661 + R662 + R668 + R669 + R670 + R672 + R676 + R677 + R678 + R681 + R682 + R683 + R684 + R690 + R691 + R692 + R693 + R694 + R993 + R995 + R1020 + R1021 + R1079 + R1080 + R1083 + R1085 + R1088 + R1092 + R1093 + R1094 + R1140 + R1142 + R1176 + R1194 + R1206 + R1207 + R1224 + R1240 + R1245 + R1256 + R1261 + R1263 + R1296 + R1313 + R1316 + R1381 + R1382 + R1392 + R1400 + R1401 + R1410 + R1424 + R1425 + R1428 + R1432 + R1448 + R1452 + R1453 + R1457 + R1458 + R1461 + R1486 + R1529 + R1564 + R1606 + R1636 + R1639 + R1666 + R1670 + R1679 + R1691 + R1696 + R1706 + R1708 + R1778 + R1779 + R1784 + R1820 + R1835 + R1850 + R1854 + R1857 + R1936 + R1992 + R2009 + R2018 + R2029 + R2030 + R2031 + R2039 + R2040 + R2041 + R2046 + R2055 + R2062 + R2069 + R2075 + R2088 + R2111 + R2112 + R2117 + R2126 + R2132 + R2155 + R2163 + R2164 + R2181 + R2197 + R2216 + R2218 + R2233 + R2237 + R2245 + R2265 + R2270 + R2274 + R2346 + R2350 + R2368)
 
def m_pi_c(t, y):
    R32 = (13.7 * 1e-6 * y[38] * y[278] * y[173])/(130e-6 + 1e-6 * y[38] * y[278] * y[173])
    R37 = (13.7 * 1e-6 * y[173] * y[1015])/(130e-6 + 1e-6 * y[173] * y[1015])
    R46 = (13.7 * 1e-6 * y[54] * y[278] * y[173])/(130e-6 + 1e-6 * y[54] * y[278] * y[173])
    R56 = (13.7 * 1e-6 * y[64] * y[278] * y[173])/(130e-6 + 1e-6 * y[64] * y[278] * y[173])
    R120 = (13.7 * 1e-6 * y[127] * y[278] * y[782])/(130e-6 + 1e-6 * y[127] * y[278] * y[782])
    R122 = (13.7 * 1e-6 * y[278] * y[99] * y[253])/(130e-6 + 1e-6 * y[278] * y[99] * y[253])
    R140 = (13.7 * 1e-6 * y[300] * y[928] * y[747])/(130e-6 + 1e-6 * y[300] * y[928] * y[747])
    R201 = (13.7 * 1e-6 * y[1141] * y[278] * y[782])/(130e-6 + 1e-6 * y[1141] * y[278] * y[782])
    R211 = (13.7 * 1e-6 * y[224] * y[278] * y[173])/(130e-6 + 1e-6 * y[224] * y[278] * y[173])
    R212 = (13.7 * 1e-6 * y[45] * y[278])/(130e-6 + 1e-6 * y[45] * y[278])
    R216 = (13.7 * 1e-6 * y[223] * y[278] * y[173])/(130e-6 + 1e-6 * y[223] * y[278] * y[173])
    R231 = (13.7 * 1e-6 * y[239] * y[278] * y[173])/(130e-6 + 1e-6 * y[239] * y[278] * y[173])
    R273 = (13.7 * 1e-6 * y[229] * y[278] * y[173])/(130e-6 + 1e-6 * y[229] * y[278] * y[173])
    R282 = (13.7 * 1e-6 * y[309] * y[278] * y[173])/(130e-6 + 1e-6 * y[309] * y[278] * y[173])
    R292 = (13.7 * 1e-6 * y[300] * y[353])/(130e-6 + 1e-6 * y[300] * y[353])
    R298 = (13.7 * 1e-6 * y[295] * y[278] * y[173])/(130e-6 + 1e-6 * y[295] * y[278] * y[173])
    R304 = (13.7 * 1e-6 * y[301] * y[278] * y[173])/(130e-6 + 1e-6 * y[301] * y[278] * y[173])
    R308 = (13.7 * 1e-6 * y[302] * y[278] * y[173])/(130e-6 + 1e-6 * y[302] * y[278] * y[173])
    R325 = (13.7 * 1e-6 * y[315] * y[278] * y[173])/(130e-6 + 1e-6 * y[315] * y[278] * y[173])
    R330 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R345 = (13.7 * 1e-6 * y[173] * y[181])/(130e-6 + 1e-6 * y[173] * y[181])
    R355 = (13.7 * 1e-6 * y[278] * y[329] * y[173])/(130e-6 + 1e-6 * y[278] * y[329] * y[173])
    R358 = (13.7 * 1e-6 * y[274] * y[278] * y[173])/(130e-6 + 1e-6 * y[274] * y[278] * y[173])
    R361 = (13.7 * 1e-6 * y[1099] * y[173])/(130e-6 + 1e-6 * y[1099] * y[173])
    R379 = (13.7 * 1e-6 * y[278] * y[347] * y[173])/(130e-6 + 1e-6 * y[278] * y[347] * y[173])
    R381 = (13.7 * 1e-6 * y[278] * y[344] * y[173])/(130e-6 + 1e-6 * y[278] * y[344] * y[173])
    R382 = (13.7 * 1e-6 * y[278] * y[352] * y[173])/(130e-6 + 1e-6 * y[278] * y[352] * y[173])
    R385 = (13.7 * 1e-6 * y[278] * y[349] * y[173])/(130e-6 + 1e-6 * y[278] * y[349] * y[173])
    R389 = (13.7 * 1e-6 * y[1138])/(130e-6 + 1e-6 * y[1138])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R394 = (13.7 * 1e-6 * y[278] * y[359] * y[173])/(130e-6 + 1e-6 * y[278] * y[359] * y[173])
    R420 = (13.7 * 1e-6 * y[278] * y[99] * y[383])/(130e-6 + 1e-6 * y[278] * y[99] * y[383])
    R421 = (13.7 * 1e-6 * y[278] * y[388] * y[173])/(130e-6 + 1e-6 * y[278] * y[388] * y[173])
    R423 = (13.7 * 1e-6 * y[278] * y[391] * y[173])/(130e-6 + 1e-6 * y[278] * y[391] * y[173])
    R442 = (13.7 * 1e-6 * y[278] * y[99] * y[402])/(130e-6 + 1e-6 * y[278] * y[99] * y[402])
    R444 = (13.7 * 1e-6 * y[278] * y[1399] * y[173])/(130e-6 + 1e-6 * y[278] * y[1399] * y[173])
    R448 = (13.7 * 1e-6 * y[278] * y[408] * y[173])/(130e-6 + 1e-6 * y[278] * y[408] * y[173])
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R451 = (13.7 * 1e-6 * y[278] * y[1401] * y[173])/(130e-6 + 1e-6 * y[278] * y[1401] * y[173])
    R455 = (13.7 * 1e-6 * y[278] * y[793] * y[173])/(130e-6 + 1e-6 * y[278] * y[793] * y[173])
    R456 = (13.7 * 1e-6 * y[278] * y[411] * y[173])/(130e-6 + 1e-6 * y[278] * y[411] * y[173])
    R471 = (13.7 * 1e-6 * y[278] * y[426] * y[173])/(130e-6 + 1e-6 * y[278] * y[426] * y[173])
    R483 = (13.7 * 1e-6 * y[278] * y[99] * y[384])/(130e-6 + 1e-6 * y[278] * y[99] * y[384])
    R487 = (13.7 * 1e-6 * y[278] * y[434] * y[173])/(130e-6 + 1e-6 * y[278] * y[434] * y[173])
    R495 = (13.7 * 1e-6 * y[278] * y[260] * y[173])/(130e-6 + 1e-6 * y[278] * y[260] * y[173])
    R496 = (13.7 * 1e-6 * y[278] * y[439] * y[173])/(130e-6 + 1e-6 * y[278] * y[439] * y[173])
    R508 = (13.7 * 1e-6 * y[77] * y[278] * y[173])/(130e-6 + 1e-6 * y[77] * y[278] * y[173])
    R531 = (13.7 * 1e-6 * y[278] * y[16] * y[249])/(130e-6 + 1e-6 * y[278] * y[16] * y[249])
    R558 = (13.7 * 1e-6 * y[1237] * y[173] * y[563])/(130e-6 + 1e-6 * y[1237] * y[173] * y[563])
    R563 = (13.7 * 1e-6 * y[913] * y[173] * y[335])/(130e-6 + 1e-6 * y[913] * y[173] * y[335])
    R565 = (13.7 * 1e-6 * y[913] * y[173] * y[236])/(130e-6 + 1e-6 * y[913] * y[173] * y[236])
    R598 = (13.7 * 1e-6 * y[511] * y[173])/(130e-6 + 1e-6 * y[511] * y[173])
    R601 = (13.7 * 1e-6 * y[278] * y[516] * y[110])/(130e-6 + 1e-6 * y[278] * y[516] * y[110])
    R626 = (13.7 * 1e-6 * y[478])/(130e-6 + 1e-6 * y[478])
    R710 = (13.7 * 1e-6 * y[278] * y[570] * y[173])/(130e-6 + 1e-6 * y[278] * y[570] * y[173])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R929 = (13.7 * 1e-6 * y[266] * y[173])/(130e-6 + 1e-6 * y[266] * y[173])
    R983 = (13.7 * 1e-6 * y[278] * y[594] * y[173])/(130e-6 + 1e-6 * y[278] * y[594] * y[173])
    R991 = (13.7 * 1e-6 * y[278] * y[598] * y[173])/(130e-6 + 1e-6 * y[278] * y[598] * y[173])
    R1000 = (13.7 * 1e-6 * y[278] * y[603] * y[173])/(130e-6 + 1e-6 * y[278] * y[603] * y[173])
    R1007 = (13.7 * 1e-6 * y[623] * y[173])/(130e-6 + 1e-6 * y[623] * y[173])
    R1015 = (13.7 * 1e-6 * y[278] * y[614] * y[173])/(130e-6 + 1e-6 * y[278] * y[614] * y[173])
    R1019 = (13.7 * 1e-6 * y[278] * y[615] * y[173])/(130e-6 + 1e-6 * y[278] * y[615] * y[173])
    R1033 = (13.7 * 1e-6 * y[278] * y[622] * y[173])/(130e-6 + 1e-6 * y[278] * y[622] * y[173])
    R1050 = (13.7 * 1e-6 * y[278] * y[629] * y[173])/(130e-6 + 1e-6 * y[278] * y[629] * y[173])
    R1069 = (13.7 * 1e-6 * y[278] * y[644] * y[173])/(130e-6 + 1e-6 * y[278] * y[644] * y[173])
    R1106 = (13.7 * 1e-6 * y[278] * y[670] * y[173])/(130e-6 + 1e-6 * y[278] * y[670] * y[173])
    R1119 = (13.7 * 1e-6 * y[278] * y[674] * y[173])/(130e-6 + 1e-6 * y[278] * y[674] * y[173])
    R1121 = (13.7 * 1e-6 * y[278] * y[682] * y[173])/(130e-6 + 1e-6 * y[278] * y[682] * y[173])
    R1129 = (13.7 * 1e-6 * y[278] * y[684] * y[173])/(130e-6 + 1e-6 * y[278] * y[684] * y[173])
    R1133 = (13.7 * 1e-6 * y[278] * y[691] * y[173])/(130e-6 + 1e-6 * y[278] * y[691] * y[173])
    R1138 = (13.7 * 1e-6 * y[743] * y[173])/(130e-6 + 1e-6 * y[743] * y[173])
    R1140 = (13.7 * 1e-6 * y[718] * y[36] * y[201])/(130e-6 + 1e-6 * y[718] * y[36] * y[201])
    R1143 = (13.7 * 1e-6 * y[278] * y[680] * y[173])/(130e-6 + 1e-6 * y[278] * y[680] * y[173])
    R1147 = (13.7 * 1e-6 * y[108] * y[173])/(130e-6 + 1e-6 * y[108] * y[173])
    R1160 = (13.7 * 1e-6 * y[278] * y[252] * y[1140])/(130e-6 + 1e-6 * y[278] * y[252] * y[1140])
    R1164 = (13.7 * 1e-6 * y[278] * y[651] * y[173])/(130e-6 + 1e-6 * y[278] * y[651] * y[173])
    R1178 = (13.7 * 1e-6 * y[278] * y[110] * y[95])/(130e-6 + 1e-6 * y[278] * y[110] * y[95])
    R1180 = (13.7 * 1e-6 * y[278] * y[712] * y[173])/(130e-6 + 1e-6 * y[278] * y[712] * y[173])
    R1187 = (13.7 * 1e-6 * y[278] * y[110] * y[183])/(130e-6 + 1e-6 * y[278] * y[110] * y[183])
    R1192 = (13.7 * 1e-6 * y[278] * y[260] * y[110])/(130e-6 + 1e-6 * y[278] * y[260] * y[110])
    R1213 = (13.7 * 1e-6 * y[278] * y[724] * y[173])/(130e-6 + 1e-6 * y[278] * y[724] * y[173])
    R1235 = (13.7 * 1e-6 * y[278] * y[741] * y[173])/(130e-6 + 1e-6 * y[278] * y[741] * y[173])
    R1239 = (13.7 * 1e-6 * y[278] * y[749] * y[173])/(130e-6 + 1e-6 * y[278] * y[749] * y[173])
    R1243 = (13.7 * 1e-6 * y[745] * y[173])/(130e-6 + 1e-6 * y[745] * y[173])
    R1293 = (13.7 * 1e-6 * y[278] * y[763] * y[766])/(130e-6 + 1e-6 * y[278] * y[763] * y[766])
    R1301 = (13.7 * 1e-6 * y[278] * y[763] * y[173])/(130e-6 + 1e-6 * y[278] * y[763] * y[173])
    R1302 = (13.7 * 1e-6 * y[278] * y[771] * y[173])/(130e-6 + 1e-6 * y[278] * y[771] * y[173])
    R1304 = (13.7 * 1e-6 * y[278] * y[719] * y[261])/(130e-6 + 1e-6 * y[278] * y[719] * y[261])
    R1309 = (13.7 * 1e-6 * y[775] * y[173])/(130e-6 + 1e-6 * y[775] * y[173])
    R1360 = (13.7 * 1e-6 * y[278] * y[173] * y[1622])/(130e-6 + 1e-6 * y[278] * y[173] * y[1622])
    R1365 = (13.7 * 1e-6 * y[173] * y[830])/(130e-6 + 1e-6 * y[173] * y[830])
    R1367 = (13.7 * 1e-6 * y[278] * y[173] * y[807])/(130e-6 + 1e-6 * y[278] * y[173] * y[807])
    R1404 = (13.7 * 1e-6 * y[278] * y[173] * y[824])/(130e-6 + 1e-6 * y[278] * y[173] * y[824])
    R1429 = (13.7 * 1e-6 * y[173] * y[226])/(130e-6 + 1e-6 * y[173] * y[226])
    R1442 = (13.7 * 1e-6 * y[278] * y[173] * y[843])/(130e-6 + 1e-6 * y[278] * y[173] * y[843])
    R1447 = (13.7 * 1e-6 * y[278] * y[173] * y[991])/(130e-6 + 1e-6 * y[278] * y[173] * y[991])
    R1477 = (13.7 * 1e-6 * y[278] * y[173] * y[855])/(130e-6 + 1e-6 * y[278] * y[173] * y[855])
    R1481 = (13.7 * 1e-6 * y[278] * y[173] * y[561])/(130e-6 + 1e-6 * y[278] * y[173] * y[561])
    R1484 = (13.7 * 1e-6 * y[173] * y[862])/(130e-6 + 1e-6 * y[173] * y[862])
    R1485 = (13.7 * 1e-6 * y[70] * y[173] * y[563])/(130e-6 + 1e-6 * y[70] * y[173] * y[563])
    R1487 = (13.7 * 1e-6 * y[278] * y[173] * y[558])/(130e-6 + 1e-6 * y[278] * y[173] * y[558])
    R1490 = (13.7 * 1e-6 * y[278] * y[173] * y[867])/(130e-6 + 1e-6 * y[278] * y[173] * y[867])
    R1537 = (13.7 * 1e-6 * y[278] * y[173] * y[875])/(130e-6 + 1e-6 * y[278] * y[173] * y[875])
    R1573 = (13.7 * 1e-6 * y[278] * y[173] * y[107])/(130e-6 + 1e-6 * y[278] * y[173] * y[107])
    R1580 = (13.7 * 1e-6 * y[278] * y[173] * y[890])/(130e-6 + 1e-6 * y[278] * y[173] * y[890])
    R1582 = (13.7 * 1e-6 * y[278] * y[173] * y[892])/(130e-6 + 1e-6 * y[278] * y[173] * y[892])
    R1587 = (13.7 * 1e-6 * y[278] * y[173] * y[893])/(130e-6 + 1e-6 * y[278] * y[173] * y[893])
    R1590 = (13.7 * 1e-6 * y[278] * y[173] * y[896])/(130e-6 + 1e-6 * y[278] * y[173] * y[896])
    R1606 = (13.7 * 1e-6 * y[157] * y[36] * y[707])/(130e-6 + 1e-6 * y[157] * y[36] * y[707])
    R1637 = (13.7 * 1e-6 * y[278] * y[173] * y[326])/(130e-6 + 1e-6 * y[278] * y[173] * y[326])
    R1638 = (13.7 * 1e-6 * y[278] * y[173] * y[923])/(130e-6 + 1e-6 * y[278] * y[173] * y[923])
    R1648 = (13.7 * 1e-6 * y[278] * y[173] * y[931])/(130e-6 + 1e-6 * y[278] * y[173] * y[931])
    R1651 = (13.7 * 1e-6 * y[278] * y[173] * y[936])/(130e-6 + 1e-6 * y[278] * y[173] * y[936])
    R1664 = (13.7 * 1e-6 * y[278] * y[173] * y[938])/(130e-6 + 1e-6 * y[278] * y[173] * y[938])
    R1667 = (13.7 * 1e-6 * y[278] * y[173] * y[943])/(130e-6 + 1e-6 * y[278] * y[173] * y[943])
    R1673 = (13.7 * 1e-6 * y[278] * y[173] * y[940])/(130e-6 + 1e-6 * y[278] * y[173] * y[940])
    R1676 = (13.7 * 1e-6 * y[278] * y[173] * y[942])/(130e-6 + 1e-6 * y[278] * y[173] * y[942])
    R1677 = (13.7 * 1e-6 * y[492])/(130e-6 + 1e-6 * y[492])
    R1678 = (13.7 * 1e-6 * y[173] * y[1650])/(130e-6 + 1e-6 * y[173] * y[1650])
    R1723 = (13.7 * 1e-6 * y[536] * y[173])/(130e-6 + 1e-6 * y[536] * y[173])
    R1724 = (13.7 * 1e-6 * y[173] * y[825])/(130e-6 + 1e-6 * y[173] * y[825])
    R1727 = (13.7 * 1e-6 * y[173] * y[797])/(130e-6 + 1e-6 * y[173] * y[797])
    R1728 = (13.7 * 1e-6 * y[173] * y[747])/(130e-6 + 1e-6 * y[173] * y[747])
    R1730 = (13.7 * 1e-6 * y[978] * y[173])/(130e-6 + 1e-6 * y[978] * y[173])
    R1731 = (13.7 * 1e-6 * y[977] * y[173])/(130e-6 + 1e-6 * y[977] * y[173])
    R1733 = (13.7 * 1e-6 * y[222] * y[173])/(130e-6 + 1e-6 * y[222] * y[173])
    R1738 = (13.7 * 1e-6 * y[173] * y[90])/(130e-6 + 1e-6 * y[173] * y[90])
    R1739 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1740 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    R1741 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    R1744 = (13.7 * 1e-6 * y[979] * y[173])/(130e-6 + 1e-6 * y[979] * y[173])
    R1746 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    R1747 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1749 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1750 = (13.7 * 1e-6 * y[332] * y[173])/(130e-6 + 1e-6 * y[332] * y[173])
    R1752 = (13.7 * 1e-6 * y[981] * y[173])/(130e-6 + 1e-6 * y[981] * y[173])
    R1757 = (13.7 * 1e-6 * y[980] * y[173])/(130e-6 + 1e-6 * y[980] * y[173])
    R1766 = (13.7 * 1e-6 * y[278] * y[173] * y[306])/(130e-6 + 1e-6 * y[278] * y[173] * y[306])
    R1785 = (13.7 * 1e-6 * y[278] * y[173] * y[187])/(130e-6 + 1e-6 * y[278] * y[173] * y[187])
    R1786 = (13.7 * 1e-6 * y[278] * y[173] * y[188])/(130e-6 + 1e-6 * y[278] * y[173] * y[188])
    R1787 = (13.7 * 1e-6 * y[278] * y[173] * y[192])/(130e-6 + 1e-6 * y[278] * y[173] * y[192])
    R1788 = (13.7 * 1e-6 * y[278] * y[173] * y[193])/(130e-6 + 1e-6 * y[278] * y[173] * y[193])
    R1793 = (13.7 * 1e-6 * y[278] * y[173] * y[198])/(130e-6 + 1e-6 * y[278] * y[173] * y[198])
    R1795 = (13.7 * 1e-6 * y[278] * y[173] * y[199])/(130e-6 + 1e-6 * y[278] * y[173] * y[199])
    R1796 = (13.7 * 1e-6 * y[278] * y[173] * y[200])/(130e-6 + 1e-6 * y[278] * y[173] * y[200])
    R1808 = (13.7 * 1e-6 * y[173] * y[187])/(130e-6 + 1e-6 * y[173] * y[187])
    R1813 = (13.7 * 1e-6 * y[173] * y[188])/(130e-6 + 1e-6 * y[173] * y[188])
    R1814 = (13.7 * 1e-6 * y[278] * y[173] * y[1014])/(130e-6 + 1e-6 * y[278] * y[173] * y[1014])
    R1816 = (13.7 * 1e-6 * y[173] * y[192])/(130e-6 + 1e-6 * y[173] * y[192])
    R1818 = (13.7 * 1e-6 * y[173] * y[193])/(130e-6 + 1e-6 * y[173] * y[193])
    R1822 = (13.7 * 1e-6 * y[353] * y[151])/(130e-6 + 1e-6 * y[353] * y[151])
    R1827 = (13.7 * 1e-6 * y[173] * y[198])/(130e-6 + 1e-6 * y[173] * y[198])
    R1829 = (13.7 * 1e-6 * y[173] * y[199])/(130e-6 + 1e-6 * y[173] * y[199])
    R1837 = (13.7 * 1e-6 * y[173] * y[200])/(130e-6 + 1e-6 * y[173] * y[200])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    R1858 = (13.7 * 1e-6 * y[173] * y[1026])/(130e-6 + 1e-6 * y[173] * y[1026])
    R1859 = (13.7 * 1e-6 * y[278] * y[173] * y[139])/(130e-6 + 1e-6 * y[278] * y[173] * y[139])
    R1860 = (13.7 * 1e-6 * y[278] * y[173] * y[150])/(130e-6 + 1e-6 * y[278] * y[173] * y[150])
    R1861 = (13.7 * 1e-6 * y[278] * y[173] * y[155])/(130e-6 + 1e-6 * y[278] * y[173] * y[155])
    R1863 = (13.7 * 1e-6 * y[278] * y[173] * y[158])/(130e-6 + 1e-6 * y[278] * y[173] * y[158])
    R1864 = (13.7 * 1e-6 * y[278] * y[173] * y[160])/(130e-6 + 1e-6 * y[278] * y[173] * y[160])
    R1865 = (13.7 * 1e-6 * y[278] * y[173] * y[163])/(130e-6 + 1e-6 * y[278] * y[173] * y[163])
    R1870 = (13.7 * 1e-6 * y[278] * y[173] * y[164])/(130e-6 + 1e-6 * y[278] * y[173] * y[164])
    R1872 = (13.7 * 1e-6 * y[1654] * y[173])/(130e-6 + 1e-6 * y[1654] * y[173])
    R1879 = (13.7 * 1e-6 * y[278] * y[173] * y[1064])/(130e-6 + 1e-6 * y[278] * y[173] * y[1064])
    R1882 = (13.7 * 1e-6 * y[278] * y[173] * y[1065])/(130e-6 + 1e-6 * y[278] * y[173] * y[1065])
    R1883 = (13.7 * 1e-6 * y[278] * y[173] * y[1067])/(130e-6 + 1e-6 * y[278] * y[173] * y[1067])
    R1884 = (13.7 * 1e-6 * y[278] * y[173] * y[1069])/(130e-6 + 1e-6 * y[278] * y[173] * y[1069])
    R1885 = (13.7 * 1e-6 * y[278] * y[173] * y[1070])/(130e-6 + 1e-6 * y[278] * y[173] * y[1070])
    R1888 = (13.7 * 1e-6 * y[278] * y[173] * y[241])/(130e-6 + 1e-6 * y[278] * y[173] * y[241])
    R1889 = (13.7 * 1e-6 * y[278] * y[173] * y[1075])/(130e-6 + 1e-6 * y[278] * y[173] * y[1075])
    R1890 = (13.7 * 1e-6 * y[278] * y[173] * y[1055])/(130e-6 + 1e-6 * y[278] * y[173] * y[1055])
    R1891 = (13.7 * 1e-6 * y[278] * y[173] * y[1076])/(130e-6 + 1e-6 * y[278] * y[173] * y[1076])
    R1892 = (13.7 * 1e-6 * y[173] * y[1064])/(130e-6 + 1e-6 * y[173] * y[1064])
    R1893 = (13.7 * 1e-6 * y[278] * y[173] * y[247])/(130e-6 + 1e-6 * y[278] * y[173] * y[247])
    R1894 = (13.7 * 1e-6 * y[278] * y[173] * y[265])/(130e-6 + 1e-6 * y[278] * y[173] * y[265])
    R1895 = (13.7 * 1e-6 * y[278] * y[173] * y[268])/(130e-6 + 1e-6 * y[278] * y[173] * y[268])
    R1896 = (13.7 * 1e-6 * y[278] * y[173] * y[271])/(130e-6 + 1e-6 * y[278] * y[173] * y[271])
    R1898 = (13.7 * 1e-6 * y[173] * y[1065])/(130e-6 + 1e-6 * y[173] * y[1065])
    R1899 = (13.7 * 1e-6 * y[278] * y[173] * y[276])/(130e-6 + 1e-6 * y[278] * y[173] * y[276])
    R1902 = (13.7 * 1e-6 * y[173] * y[1067])/(130e-6 + 1e-6 * y[173] * y[1067])
    R1903 = (13.7 * 1e-6 * y[278] * y[173] * y[294])/(130e-6 + 1e-6 * y[278] * y[173] * y[294])
    R1907 = (13.7 * 1e-6 * y[173] * y[1069])/(130e-6 + 1e-6 * y[173] * y[1069])
    R1910 = (13.7 * 1e-6 * y[173] * y[1070])/(130e-6 + 1e-6 * y[173] * y[1070])
    R1912 = (13.7 * 1e-6 * y[173] * y[1075])/(130e-6 + 1e-6 * y[173] * y[1075])
    R1914 = (13.7 * 1e-6 * y[173] * y[1076])/(130e-6 + 1e-6 * y[173] * y[1076])
    R1940 = (13.7 * 1e-6 * y[278] * y[173] * y[609])/(130e-6 + 1e-6 * y[278] * y[173] * y[609])
    R1952 = (13.7 * 1e-6 * y[61] * y[1])/(130e-6 + 1e-6 * y[61] * y[1])
    R1954 = (13.7 * 1e-6 * y[278] * y[173] * y[1])/(130e-6 + 1e-6 * y[278] * y[173] * y[1])
    R1957 = (13.7 * 1e-6 * y[279] * y[173])/(130e-6 + 1e-6 * y[279] * y[173])
    R1970 = (13.7 * 1e-6 * y[173] * y[73])/(130e-6 + 1e-6 * y[173] * y[73])
    R1973 = (13.7 * 1e-6 * y[173] * y[339])/(130e-6 + 1e-6 * y[173] * y[339])
    R1991 = (13.7 * 1e-6 * y[16] * y[173] * y[563])/(130e-6 + 1e-6 * y[16] * y[173] * y[563])
    R2012 = (13.7 * 1e-6 * y[278] * y[173] * y[1130])/(130e-6 + 1e-6 * y[278] * y[173] * y[1130])
    R2021 = (13.7 * 1e-6 * y[278] * y[173] * y[92])/(130e-6 + 1e-6 * y[278] * y[173] * y[92])
    R2027 = (13.7 * 1e-6 * y[563] * y[1205])/(130e-6 + 1e-6 * y[563] * y[1205])
    R2032 = (13.7 * 1e-6 * y[278] * y[261] * y[725])/(130e-6 + 1e-6 * y[278] * y[261] * y[725])
    R2033 = (13.7 * 1e-6 * y[278] * y[1146])/(130e-6 + 1e-6 * y[278] * y[1146])
    R2037 = (13.7 * 1e-6 * y[1346] * y[300] * y[278])/(130e-6 + 1e-6 * y[1346] * y[300] * y[278])
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    R2045 = (13.7 * 1e-6 * y[278] * y[173] * y[1128])/(130e-6 + 1e-6 * y[278] * y[173] * y[1128])
    R2049 = (13.7 * 1e-6 * y[173] * y[1149])/(130e-6 + 1e-6 * y[173] * y[1149])
    R2065 = (13.7 * 1e-6 * y[278] * y[173] * y[1161])/(130e-6 + 1e-6 * y[278] * y[173] * y[1161])
    R2078 = (13.7 * 1e-6 * y[278] * y[173] * y[1171])/(130e-6 + 1e-6 * y[278] * y[173] * y[1171])
    R2107 = (13.7 * 1e-6 * y[955] * y[173])/(130e-6 + 1e-6 * y[955] * y[173])
    R2113 = (13.7 * 1e-6 * y[278] * y[928] * y[173] * y[794])/(130e-6 + 1e-6 * y[278] * y[928] * y[173] * y[794])
    R2116 = (13.7 * 1e-6 * y[173] * y[1025])/(130e-6 + 1e-6 * y[173] * y[1025])
    R2127 = (13.7 * 1e-6 * y[492] * y[288])/(130e-6 + 1e-6 * y[492] * y[288])
    R2130 = (13.7 * 1e-6 * y[1188] * y[1195])/(130e-6 + 1e-6 * y[1188] * y[1195])
    R2131 = (13.7 * 1e-6 * y[278] * y[173] * y[1660])/(130e-6 + 1e-6 * y[278] * y[173] * y[1660])
    R2137 = (13.7 * 1e-6 * y[173] * y[227])/(130e-6 + 1e-6 * y[173] * y[227])
    R2141 = (13.7 * 1e-6 * y[1094] * y[460])/(130e-6 + 1e-6 * y[1094] * y[460])
    R2174 = (13.7 * 1e-6 * y[278] * y[173] * y[1210])/(130e-6 + 1e-6 * y[278] * y[173] * y[1210])
    R2187 = (13.7 * 1e-6 * y[173] * y[822])/(130e-6 + 1e-6 * y[173] * y[822])
    R2189 = (13.7 * 1e-6 * y[278] * y[173] * y[1219])/(130e-6 + 1e-6 * y[278] * y[173] * y[1219])
    R2192 = (13.7 * 1e-6 * y[173] * y[6])/(130e-6 + 1e-6 * y[173] * y[6])
    R2194 = (13.7 * 1e-6 * y[278] * y[173] * y[1167])/(130e-6 + 1e-6 * y[278] * y[173] * y[1167])
    R2221 = (13.7 * 1e-6 * y[278] * y[99] * y[290])/(130e-6 + 1e-6 * y[278] * y[99] * y[290])
    R2225 = (13.7 * 1e-6 * y[278] * y[173] * y[1235])/(130e-6 + 1e-6 * y[278] * y[173] * y[1235])
    R2238 = (13.7 * 1e-6 * y[278] * y[173] * y[1211])/(130e-6 + 1e-6 * y[278] * y[173] * y[1211])
    R2247 = (13.7 * 1e-6 * y[173] * y[1242])/(130e-6 + 1e-6 * y[173] * y[1242])
    R2251 = (13.7 * 1e-6 * y[278] * y[173] * y[1246])/(130e-6 + 1e-6 * y[278] * y[173] * y[1246])
    R2253 = (13.7 * 1e-6 * y[278] * y[173] * y[953] * y[983])/(130e-6 + 1e-6 * y[278] * y[173] * y[953] * y[983])
    R2261 = (13.7 * 1e-6 * y[173] * y[1201])/(130e-6 + 1e-6 * y[173] * y[1201])
    R2275 = (13.7 * 1e-6 * y[278] * y[173] * y[1256])/(130e-6 + 1e-6 * y[278] * y[173] * y[1256])
    R2285 = (13.7 * 1e-6 * y[278] * y[173] * y[1261])/(130e-6 + 1e-6 * y[278] * y[173] * y[1261])
    R2308 = (13.7 * 1e-6 * y[443] * y[278] * y[1290])/(130e-6 + 1e-6 * y[443] * y[278] * y[1290])
    R2311 = (13.7 * 1e-6 * y[278] * y[173] * y[1276])/(130e-6 + 1e-6 * y[278] * y[173] * y[1276])
    R2313 = (13.7 * 1e-6 * y[71] * y[173])/(130e-6 + 1e-6 * y[71] * y[173])
    R2322 = (13.7 * 1e-6 * y[563] * y[1288])/(130e-6 + 1e-6 * y[563] * y[1288])
    R2338 = (13.7 * 1e-6 * y[278] * y[173] * y[1285])/(130e-6 + 1e-6 * y[278] * y[173] * y[1285])
    R2341 = (13.7 * 1e-6 * y[278] * y[173] * y[1287])/(130e-6 + 1e-6 * y[278] * y[173] * y[1287])
    R2344 = (13.7 * 1e-6 * y[278] * y[173] * y[1286])/(130e-6 + 1e-6 * y[278] * y[173] * y[1286])
    R2348 = (13.7 * 1e-6 * y[278] * y[1606] * y[1291])/(130e-6 + 1e-6 * y[278] * y[1606] * y[1291])
    R2349 = (13.7 * 1e-6 * y[235] * y[278] * y[1292])/(130e-6 + 1e-6 * y[235] * y[278] * y[1292])
    R2351 = (13.7 * 1e-6 * y[173] * y[1036])/(130e-6 + 1e-6 * y[173] * y[1036])
    R2369 = (13.7 * 1e-6 * y[218] * y[278] * y[1269])/(130e-6 + 1e-6 * y[218] * y[278] * y[1269])
    R2373 = (13.7 * 1e-6 * y[34] * y[278] * y[1292])/(130e-6 + 1e-6 * y[34] * y[278] * y[1292])
    R2375 = (13.7 * 1e-6 * y[63] * y[278] * y[1292])/(130e-6 + 1e-6 * y[63] * y[278] * y[1292])
    R188 = (13.7 * 1e-6 * y[175] * y[6] * y[37])/(130e-6 + 1e-6 * y[175] * y[6] * y[37])
    R332 = (13.7 * 1e-6 * y[35] * y[61] * y[37])/(130e-6 + 1e-6 * y[35] * y[61] * y[37])
    R336 = (13.7 * 1e-6 * y[821] * y[6] * y[37])/(130e-6 + 1e-6 * y[821] * y[6] * y[37])
    R637 = (13.7 * 1e-6 * y[469] * y[37])/(130e-6 + 1e-6 * y[469] * y[37])
    R930 = (13.7 * 1e-6 * y[574] * y[37])/(130e-6 + 1e-6 * y[574] * y[37])
    R1148 = (13.7 * 1e-6 * y[697] * y[37])/(130e-6 + 1e-6 * y[697] * y[37])
    R1150 = (13.7 * 1e-6 * y[696] * y[37])/(130e-6 + 1e-6 * y[696] * y[37])
    R1157 = (13.7 * 1e-6 * y[480] * y[236] * y[37])/(130e-6 + 1e-6 * y[480] * y[236] * y[37])
    R1201 = (13.7 * 1e-6 * y[706] * y[37])/(130e-6 + 1e-6 * y[706] * y[37])
    R1208 = (13.7 * 1e-6 * y[720] * y[37])/(130e-6 + 1e-6 * y[720] * y[37])
    R1242 = (13.7 * 1e-6 * y[749] * y[37])/(130e-6 + 1e-6 * y[749] * y[37])
    R1588 = (13.7 * 1e-6 * y[244] * y[37])/(130e-6 + 1e-6 * y[244] * y[37])
    R1608 = (13.7 * 1e-6 * y[907] * y[37])/(130e-6 + 1e-6 * y[907] * y[37])
    R1612 = (13.7 * 1e-6 * y[102] * y[37])/(130e-6 + 1e-6 * y[102] * y[37])
    R1634 = (13.7 * 1e-6 * y[246] * y[37])/(130e-6 + 1e-6 * y[246] * y[37])
    R1777 = (13.7 * 1e-6 * y[1258] * y[37])/(130e-6 + 1e-6 * y[1258] * y[37])
    R2002 = (13.7 * 1e-6 * y[278] * y[37])/(130e-6 + 1e-6 * y[278] * y[37])
    R2072 = (13.7 * 1e-6 * y[37] * y[140])/(130e-6 + 1e-6 * y[37] * y[140])
    R2073 = (13.7 * 1e-6 * y[127] * y[37])/(130e-6 + 1e-6 * y[127] * y[37])
    R2087 = (13.7 * 1e-6 * y[216] * y[37])/(130e-6 + 1e-6 * y[216] * y[37])
    R2089 = (13.7 * 1e-6 * y[464] * y[37])/(130e-6 + 1e-6 * y[464] * y[37])
    R2090 = (13.7 * 1e-6 * y[764] * y[37])/(130e-6 + 1e-6 * y[764] * y[37])
    R2091 = (13.7 * 1e-6 * y[485] * y[37])/(130e-6 + 1e-6 * y[485] * y[37])
    R2098 = (13.7 * 1e-6 * y[191] * y[37])/(130e-6 + 1e-6 * y[191] * y[37])
    R2099 = (13.7 * 1e-6 * y[458] * y[37])/(130e-6 + 1e-6 * y[458] * y[37])
    R2100 = (13.7 * 1e-6 * y[37] * y[969])/(130e-6 + 1e-6 * y[37] * y[969])
    R2118 = (13.7 * 1e-6 * y[37] * y[446])/(130e-6 + 1e-6 * y[37] * y[446])
    R2229 = (13.7 * 1e-6 * y[37] * y[975])/(130e-6 + 1e-6 * y[37] * y[975])
    return (R32 + R37 + R46 + R56 + R120 + R122 + R140 + R201 + R211 + R212 + R216 + R231 + R273 + R282 + R292 + R298 + R304 + R308 + R325 + R330 + R345 + R355 + R358 + R361 + R379 + R381 + R382 + R385 + R389 + R393 + R394 + R420 + R421 + R423 + R442 + R444 + R448 + R449 + R451 + R455 + R456 + R471 + R483 + R487 + R495 + R496 + R508 + R531 + R558 + R563 + R565 + R598 + R601 + R626 + R710 + R926 + R929 + R983 + R991 + R1000 + R1007 + R1015 + R1019 + R1033 + R1050 + R1069 + R1106 + R1119 + R1121 + R1129 + R1133 + R1138 + R1140 + R1143 + R1147 + R1160 + R1164 + R1178 + R1180 + R1187 + R1192 + R1213 + R1235 + R1239 + R1243 + R1293 + R1301 + R1302 + R1304 + R1309 + R1360 + R1365 + R1367 + R1404 + R1429 + R1442 + R1447 + R1477 + R1481 + R1484 + R1485 + R1487 + R1490 + R1537 + R1573 + R1580 + R1582 + R1587 + R1590 + R1606 + R1637 + R1638 + R1648 + R1651 + R1664 + R1667 + R1673 + R1676 + R1677 + R1678 + R1723 + R1724 + R1727 + R1728 + R1730 + R1731 + R1733 + R1738 + R1739 + R1740 + R1741 + R1744 + R1746 + R1747 + R1749 + R1750 + R1752 + R1757 + R1766 + R1785 + R1786 + R1787 + R1788 + R1793 + R1795 + R1796 + R1808 + R1813 + R1814 + R1816 + R1818 + R1822 + R1827 + R1829 + R1837 + R1841 + R1849 + R1852 + R1856 + R1858 + R1859 + R1860 + R1861 + R1863 + R1864 + R1865 + R1870 + R1872 + R1879 + R1882 + R1883 + R1884 + R1885 + R1888 + R1889 + R1890 + R1891 + R1892 + R1893 + R1894 + R1895 + R1896 + R1898 + R1899 + R1902 + R1903 + R1907 + R1910 + R1912 + R1914 + R1940 + R1952 + R1954 + R1957 + R1970 + R1973 + R1991 + R2012 + R2021 + R2027 + R2032 + R2033 + R2037 + R2042 + R2045 + R2049 + R2065 + R2078 + R2107 + R2113 + R2116 + R2127 + R2130 + R2131 + R2137 + R2141 + R2174 + R2187 + R2189 + R2192 + R2194 + R2221 + R2225 + R2238 + R2247 + R2251 + R2253 + R2261 + R2275 + R2285 + R2308 + R2311 + R2313 + R2322 + R2338 + R2341 + R2344 + R2348 + R2349 + R2351 + R2369 + R2373 + R2375) - (R188 + R332 + R336 + R637 + R930 + R1148 + R1150 + R1157 + R1201 + R1208 + R1242 + R1588 + R1608 + R1612 + R1634 + R1777 + R2002 + R2072 + R2073 + R2087 + R2089 + R2090 + R2091 + R2098 + R2099 + R2100 + R2118 + R2229)
 
def m_LalaDgluMdap_p(t, y):
    R33 = (13.7 * 1e-6 * y[1313])/(130e-6 + 1e-6 * y[1313])
    R39 = (13.7 * 1e-6 * y[64] * y[406])/(130e-6 + 1e-6 * y[64] * y[406])
    R145 = (13.7 * 1e-6 * y[176] * y[406])/(130e-6 + 1e-6 * y[176] * y[406])
    R32 = (13.7 * 1e-6 * y[38] * y[278] * y[173])/(130e-6 + 1e-6 * y[38] * y[278] * y[173])
    return (R33 + R39 + R145) - (R32)
 
def m_3ump_p(t, y):
    R34 = (13.7 * 1e-6 * y[1314])/(130e-6 + 1e-6 * y[1314])
    R54 = (13.7 * 1e-6 * y[58] * y[406])/(130e-6 + 1e-6 * y[58] * y[406])
    R564 = (13.7 * 1e-6 * y[39] * y[406])/(130e-6 + 1e-6 * y[39] * y[406])
    return (R34 + R54) - (R564)
 
def m_34dhpac_p(t, y):
    R35 = (13.7 * 1e-6 * y[513] * y[406] * y[1004])/(130e-6 + 1e-6 * y[513] * y[406] * y[1004])
    R363 = (13.7 * 1e-6 * y[1383])/(130e-6 + 1e-6 * y[1383])
    return (R35 + R363) - (0)
 
def m_h2o2_p(t, y):
    R35 = (13.7 * 1e-6 * y[513] * y[406] * y[1004])/(130e-6 + 1e-6 * y[513] * y[406] * y[1004])
    R1335 = (13.7 * 1e-6 * y[1610])/(130e-6 + 1e-6 * y[1610])
    R1871 = (13.7 * 1e-6 * y[406] * y[1004] * y[1043])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1043])
    R2198 = (13.7 * 1e-6 * y[61] * y[1003])/(130e-6 + 1e-6 * y[61] * y[1003])
    R2293 = (13.7 * 1e-6 * y[406] * y[1004] * y[1262])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1262])
    return (R35 + R1335 + R1871 + R2198 + R2293) - (0)
 
def m_nh4_p(t, y):
    R35 = (13.7 * 1e-6 * y[513] * y[406] * y[1004])/(130e-6 + 1e-6 * y[513] * y[406] * y[1004])
    R348 = (13.7 * 1e-6 * y[274] * y[406])/(130e-6 + 1e-6 * y[274] * y[406])
    R1203 = (13.7 * 1e-6 * y[712] * y[406])/(130e-6 + 1e-6 * y[712] * y[406])
    R1658 = (13.7 * 1e-6 * y[1495])/(130e-6 + 1e-6 * y[1495])
    R1781 = (13.7 * 1e-6 * y[61] * y[960] * y[289])/(130e-6 + 1e-6 * y[61] * y[960] * y[289])
    R1782 = (13.7 * 1e-6 * y[61] * y[250] * y[960])/(130e-6 + 1e-6 * y[61] * y[250] * y[960])
    R1871 = (13.7 * 1e-6 * y[406] * y[1004] * y[1043])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1043])
    R2293 = (13.7 * 1e-6 * y[406] * y[1004] * y[1262])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1262])
    R1659 = (13.7 * 1e-6 * y[42])/(130e-6 + 1e-6 * y[42])
    return (R35 + R348 + R1203 + R1658 + R1781 + R1782 + R1871 + R2293) - (R1659)
 
def m_4hoxpacd_p(t, y):
    R36 = (13.7 * 1e-6 * y[1315])/(130e-6 + 1e-6 * y[1315])
    R2293 = (13.7 * 1e-6 * y[406] * y[1004] * y[1262])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1262])
    return (R36 + R2293) - (0)
 
def m_4hthr_c(t, y):
    R37 = (13.7 * 1e-6 * y[173] * y[1015])/(130e-6 + 1e-6 * y[173] * y[1015])
    return (R37) - (0)
 
def m_ala__D_c(t, y):
    R38 = (13.7 * 1e-6 * y[63] * y[173])/(130e-6 + 1e-6 * y[63] * y[173])
    R159 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R209 = (13.7 * 1e-6 * y[218] * y[173])/(130e-6 + 1e-6 * y[218] * y[173])
    R220 = (13.7 * 1e-6 * y[235])/(130e-6 + 1e-6 * y[235])
    R242 = (13.7 * 1e-6 * y[177] * y[173])/(130e-6 + 1e-6 * y[177] * y[173])
    R498 = (13.7 * 1e-6 * y[46] * y[61])/(130e-6 + 1e-6 * y[46] * y[61])
    R2374 = (13.7 * 1e-6 * y[173] * y[1307])/(130e-6 + 1e-6 * y[173] * y[1307])
    R212 = (13.7 * 1e-6 * y[45] * y[278])/(130e-6 + 1e-6 * y[45] * y[278])
    R221 = (13.7 * 1e-6 * y[45] * y[1025])/(130e-6 + 1e-6 * y[45] * y[1025])
    R527 = (13.7 * 1e-6 * y[45] * y[282] * y[173])/(130e-6 + 1e-6 * y[45] * y[282] * y[173])
    return (R38 + R159 + R209 + R220 + R242 + R498 + R2374) - (R212 + R221 + R527)
 
def m_ala__D_p(t, y):
    R39 = (13.7 * 1e-6 * y[64] * y[406])/(130e-6 + 1e-6 * y[64] * y[406])
    R160 = (13.7 * 1e-6 * y[963] * y[406])/(130e-6 + 1e-6 * y[963] * y[406])
    R499 = (13.7 * 1e-6 * y[1412])/(130e-6 + 1e-6 * y[1412])
    R1596 = (13.7 * 1e-6 * y[1035])/(130e-6 + 1e-6 * y[1035])
    R1598 = (13.7 * 1e-6 * y[1042])/(130e-6 + 1e-6 * y[1042])
    R1599 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1600 = (13.7 * 1e-6 * y[406] * y[899])/(130e-6 + 1e-6 * y[406] * y[899])
    R1601 = (13.7 * 1e-6 * y[406] * y[1035])/(130e-6 + 1e-6 * y[406] * y[1035])
    R1602 = (13.7 * 1e-6 * y[406] * y[902])/(130e-6 + 1e-6 * y[406] * y[902])
    R1603 = (13.7 * 1e-6 * y[406] * y[951])/(130e-6 + 1e-6 * y[406] * y[951])
    R1687 = (13.7 * 1e-6 * y[406] * y[903])/(130e-6 + 1e-6 * y[406] * y[903])
    R1693 = (13.7 * 1e-6 * y[406] * y[904])/(130e-6 + 1e-6 * y[406] * y[904])
    R498 = (13.7 * 1e-6 * y[46] * y[61])/(130e-6 + 1e-6 * y[46] * y[61])
    return (R39 + R160 + R499 + R1596 + R1598 + R1599 + R1600 + R1601 + R1602 + R1603 + R1687 + R1693) - (R498)
 
def m_12dgr180_c(t, y):
    R40 = (13.7 * 1e-6 * y[1019])/(130e-6 + 1e-6 * y[1019])
    R1829 = (13.7 * 1e-6 * y[173] * y[199])/(130e-6 + 1e-6 * y[173] * y[199])
    R547 = (13.7 * 1e-6 * y[47] * y[278])/(130e-6 + 1e-6 * y[47] * y[278])
    return (R40 + R1829) - (R547)
 
def m_12dgr181_c(t, y):
    R41 = (13.7 * 1e-6 * y[1020])/(130e-6 + 1e-6 * y[1020])
    R1837 = (13.7 * 1e-6 * y[173] * y[200])/(130e-6 + 1e-6 * y[173] * y[200])
    R553 = (13.7 * 1e-6 * y[48] * y[278])/(130e-6 + 1e-6 * y[48] * y[278])
    return (R41 + R1837) - (R553)
 
def m_12ppd__R_p(t, y):
    R42 = (13.7 * 1e-6 * y[1316])/(130e-6 + 1e-6 * y[1316])
    R43 = (13.7 * 1e-6 * y[49])/(130e-6 + 1e-6 * y[49])
    return (R42) - (R43)
 
def m_12ppd__R_c(t, y):
    R43 = (13.7 * 1e-6 * y[49])/(130e-6 + 1e-6 * y[49])
    R234 = (13.7 * 1e-6 * y[233] * y[36] * y[113])/(130e-6 + 1e-6 * y[233] * y[36] * y[113])
    R1452 = (13.7 * 1e-6 * y[36] * y[845] * y[113])/(130e-6 + 1e-6 * y[36] * y[845] * y[113])
    return (R43 + R234 + R1452) - (0)
 
def m_12ppd__S_p(t, y):
    R44 = (13.7 * 1e-6 * y[1317])/(130e-6 + 1e-6 * y[1317])
    R45 = (13.7 * 1e-6 * y[51])/(130e-6 + 1e-6 * y[51])
    return (R44) - (R45)
 
def m_12ppd__S_c(t, y):
    R45 = (13.7 * 1e-6 * y[51])/(130e-6 + 1e-6 * y[51])
    R1453 = (13.7 * 1e-6 * y[36] * y[608] * y[113])/(130e-6 + 1e-6 * y[36] * y[608] * y[113])
    return (R45 + R1453) - (0)
 
def m_14glucan_c(t, y):
    R46 = (13.7 * 1e-6 * y[54] * y[278] * y[173])/(130e-6 + 1e-6 * y[54] * y[278] * y[173])
    R88 = (13.7 * 1e-6 * y[53])/(130e-6 + 1e-6 * y[53])
    return (R46) - (R88)
 
def m_14glucan_p(t, y):
    R47 = (13.7 * 1e-6 * y[1318])/(130e-6 + 1e-6 * y[1318])
    R46 = (13.7 * 1e-6 * y[54] * y[278] * y[173])/(130e-6 + 1e-6 * y[54] * y[278] * y[173])
    R93 = (13.7 * 1e-6 * y[54])/(130e-6 + 1e-6 * y[54])
    return (R47) - (R46 + R93)
 
def m_23camp_p(t, y):
    R48 = (13.7 * 1e-6 * y[1319])/(130e-6 + 1e-6 * y[1319])
    R65 = (13.7 * 1e-6 * y[55] * y[406])/(130e-6 + 1e-6 * y[55] * y[406])
    return (R48) - (R65)
 
def m_23ccmp_p(t, y):
    R49 = (13.7 * 1e-6 * y[1320])/(130e-6 + 1e-6 * y[1320])
    R55 = (13.7 * 1e-6 * y[56] * y[406])/(130e-6 + 1e-6 * y[56] * y[406])
    return (R49) - (R55)
 
def m_23cgmp_p(t, y):
    R50 = (13.7 * 1e-6 * y[1321])/(130e-6 + 1e-6 * y[1321])
    R66 = (13.7 * 1e-6 * y[57] * y[406])/(130e-6 + 1e-6 * y[57] * y[406])
    return (R50) - (R66)
 
def m_23cump_p(t, y):
    R51 = (13.7 * 1e-6 * y[1322])/(130e-6 + 1e-6 * y[1322])
    R54 = (13.7 * 1e-6 * y[58] * y[406])/(130e-6 + 1e-6 * y[58] * y[406])
    return (R51) - (R54)
 
def m_23dappa_c(t, y):
    R52 = (13.7 * 1e-6 * y[60] * y[61])/(130e-6 + 1e-6 * y[60] * y[61])
    R504 = (13.7 * 1e-6 * y[59] * y[173])/(130e-6 + 1e-6 * y[59] * y[173])
    return (R52) - (R504)
 
def m_23dappa_p(t, y):
    R53 = (13.7 * 1e-6 * y[1323])/(130e-6 + 1e-6 * y[1323])
    R52 = (13.7 * 1e-6 * y[60] * y[61])/(130e-6 + 1e-6 * y[60] * y[61])
    return (R53) - (R52)
 
def m_h_p(t, y):
    R54 = (13.7 * 1e-6 * y[58] * y[406])/(130e-6 + 1e-6 * y[58] * y[406])
    R55 = (13.7 * 1e-6 * y[56] * y[406])/(130e-6 + 1e-6 * y[56] * y[406])
    R65 = (13.7 * 1e-6 * y[55] * y[406])/(130e-6 + 1e-6 * y[55] * y[406])
    R66 = (13.7 * 1e-6 * y[57] * y[406])/(130e-6 + 1e-6 * y[57] * y[406])
    R408 = (13.7 * 1e-6 * y[379] * y[406])/(130e-6 + 1e-6 * y[379] * y[406])
    R409 = (13.7 * 1e-6 * y[381] * y[406])/(130e-6 + 1e-6 * y[381] * y[406])
    R410 = (13.7 * 1e-6 * y[386] * y[406])/(130e-6 + 1e-6 * y[386] * y[406])
    R412 = (13.7 * 1e-6 * y[387] * y[406])/(130e-6 + 1e-6 * y[387] * y[406])
    R414 = (13.7 * 1e-6 * y[389] * y[406])/(130e-6 + 1e-6 * y[389] * y[406])
    R416 = (13.7 * 1e-6 * y[390] * y[406])/(130e-6 + 1e-6 * y[390] * y[406])
    R417 = (13.7 * 1e-6 * y[392] * y[406])/(130e-6 + 1e-6 * y[392] * y[406])
    R434 = (13.7 * 1e-6 * y[395] * y[36])/(130e-6 + 1e-6 * y[395] * y[36])
    R467 = (13.7 * 1e-6 * y[424] * y[1256])/(130e-6 + 1e-6 * y[424] * y[1256])
    R502 = (13.7 * 1e-6 * y[36] * y[250] * y[335])/(130e-6 + 1e-6 * y[36] * y[250] * y[335])
    R507 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R509 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R656 = (13.7 * 1e-6 * y[409] * y[553])/(130e-6 + 1e-6 * y[409] * y[553])
    R657 = (13.7 * 1e-6 * y[554])/(130e-6 + 1e-6 * y[554])
    R663 = (13.7 * 1e-6 * y[550] * y[554])/(130e-6 + 1e-6 * y[550] * y[554])
    R664 = (13.7 * 1e-6 * y[552] * y[554])/(130e-6 + 1e-6 * y[552] * y[554])
    R1020 = (13.7 * 1e-6 * y[620] * y[36] * y[444])/(130e-6 + 1e-6 * y[620] * y[36] * y[444])
    R1021 = (13.7 * 1e-6 * y[620] * y[36] * y[441])/(130e-6 + 1e-6 * y[620] * y[36] * y[441])
    R1198 = (13.7 * 1e-6 * y[651] * y[406] * y[444])/(130e-6 + 1e-6 * y[651] * y[406] * y[444])
    R1267 = (13.7 * 1e-6 * y[670] * y[406])/(130e-6 + 1e-6 * y[670] * y[406])
    R1269 = (13.7 * 1e-6 * y[674] * y[406])/(130e-6 + 1e-6 * y[674] * y[406])
    R1271 = (13.7 * 1e-6 * y[691] * y[406])/(130e-6 + 1e-6 * y[691] * y[406])
    R1273 = (13.7 * 1e-6 * y[682] * y[406])/(130e-6 + 1e-6 * y[682] * y[406])
    R1278 = (13.7 * 1e-6 * y[684] * y[406])/(130e-6 + 1e-6 * y[684] * y[406])
    R1369 = (13.7 * 1e-6 * y[1344])/(130e-6 + 1e-6 * y[1344])
    R1410 = (13.7 * 1e-6 * y[36] * y[828])/(130e-6 + 1e-6 * y[36] * y[828])
    R1424 = (13.7 * 1e-6 * y[645] * y[36] * y[444])/(130e-6 + 1e-6 * y[645] * y[36] * y[444])
    R1425 = (13.7 * 1e-6 * y[645] * y[36] * y[441])/(130e-6 + 1e-6 * y[645] * y[36] * y[441])
    R1428 = (13.7 * 1e-6 * y[495] * y[645] * y[36])/(130e-6 + 1e-6 * y[495] * y[645] * y[36])
    R1496 = (13.7 * 1e-6 * y[1058] * y[406])/(130e-6 + 1e-6 * y[1058] * y[406])
    R1497 = (13.7 * 1e-6 * y[1059] * y[406])/(130e-6 + 1e-6 * y[1059] * y[406])
    R1498 = (13.7 * 1e-6 * y[1060] * y[406])/(130e-6 + 1e-6 * y[1060] * y[406])
    R1499 = (13.7 * 1e-6 * y[1061] * y[406])/(130e-6 + 1e-6 * y[1061] * y[406])
    R1501 = (13.7 * 1e-6 * y[1062] * y[406])/(130e-6 + 1e-6 * y[1062] * y[406])
    R1505 = (13.7 * 1e-6 * y[1063] * y[406])/(130e-6 + 1e-6 * y[1063] * y[406])
    R1506 = (13.7 * 1e-6 * y[1066] * y[406])/(130e-6 + 1e-6 * y[1066] * y[406])
    R1508 = (13.7 * 1e-6 * y[1071] * y[406])/(130e-6 + 1e-6 * y[1071] * y[406])
    R1510 = (13.7 * 1e-6 * y[1072] * y[406])/(130e-6 + 1e-6 * y[1072] * y[406])
    R1511 = (13.7 * 1e-6 * y[1073] * y[406])/(130e-6 + 1e-6 * y[1073] * y[406])
    R1516 = (13.7 * 1e-6 * y[1074] * y[406])/(130e-6 + 1e-6 * y[1074] * y[406])
    R1517 = (13.7 * 1e-6 * y[1077] * y[406])/(130e-6 + 1e-6 * y[1077] * y[406])
    R1519 = (13.7 * 1e-6 * y[1079] * y[406])/(130e-6 + 1e-6 * y[1079] * y[406])
    R1521 = (13.7 * 1e-6 * y[1080] * y[406])/(130e-6 + 1e-6 * y[1080] * y[406])
    R1523 = (13.7 * 1e-6 * y[1081] * y[406])/(130e-6 + 1e-6 * y[1081] * y[406])
    R1530 = (13.7 * 1e-6 * y[1086] * y[406])/(130e-6 + 1e-6 * y[1086] * y[406])
    R1531 = (13.7 * 1e-6 * y[1087] * y[406])/(130e-6 + 1e-6 * y[1087] * y[406])
    R1532 = (13.7 * 1e-6 * y[1088] * y[406])/(130e-6 + 1e-6 * y[1088] * y[406])
    R1533 = (13.7 * 1e-6 * y[1089] * y[406])/(130e-6 + 1e-6 * y[1089] * y[406])
    R1534 = (13.7 * 1e-6 * y[1090] * y[406])/(130e-6 + 1e-6 * y[1090] * y[406])
    R1535 = (13.7 * 1e-6 * y[1093] * y[406])/(130e-6 + 1e-6 * y[1093] * y[406])
    R1670 = (13.7 * 1e-6 * y[36] * y[942])/(130e-6 + 1e-6 * y[36] * y[942])
    R1706 = (13.7 * 1e-6 * y[36] * y[962] * y[289])/(130e-6 + 1e-6 * y[36] * y[962] * y[289])
    R1708 = (13.7 * 1e-6 * y[36] * y[250] * y[962])/(130e-6 + 1e-6 * y[36] * y[250] * y[962])
    R1748 = (13.7 * 1e-6 * y[779] * y[406])/(130e-6 + 1e-6 * y[779] * y[406])
    R1790 = (13.7 * 1e-6 * y[409] * y[992])/(130e-6 + 1e-6 * y[409] * y[992])
    R1791 = (13.7 * 1e-6 * y[994])/(130e-6 + 1e-6 * y[994])
    R1792 = (13.7 * 1e-6 * y[989] * y[994])/(130e-6 + 1e-6 * y[989] * y[994])
    R1797 = (13.7 * 1e-6 * y[990] * y[994])/(130e-6 + 1e-6 * y[990] * y[994])
    R1916 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1917 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1918 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1919 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1920 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1921 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1924 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1929 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R1930 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R1931 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R1932 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R1935 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R1937 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R1938 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R1939 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R1944 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R1945 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R1946 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R1947 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R1948 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R1955 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R1974 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R1981 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R1982 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R1983 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R1984 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R1985 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R1986 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R1987 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R1988 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R1989 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R1995 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R1996 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R1998 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R1999 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R2062 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2069 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2088 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2309 = (13.7 * 1e-6 * y[406] * y[1294])/(130e-6 + 1e-6 * y[406] * y[1294])
    R2312 = (13.7 * 1e-6 * y[406] * y[1273])/(130e-6 + 1e-6 * y[406] * y[1273])
    R2353 = (13.7 * 1e-6 * y[406] * y[549])/(130e-6 + 1e-6 * y[406] * y[549])
    R2358 = (13.7 * 1e-6 * y[406] * y[1297])/(130e-6 + 1e-6 * y[406] * y[1297])
    R2363 = (13.7 * 1e-6 * y[406] * y[1301])/(130e-6 + 1e-6 * y[406] * y[1301])
    R2366 = (13.7 * 1e-6 * y[406] * y[1300])/(130e-6 + 1e-6 * y[406] * y[1300])
    R52 = (13.7 * 1e-6 * y[60] * y[61])/(130e-6 + 1e-6 * y[60] * y[61])
    R59 = (13.7 * 1e-6 * y[67] * y[61])/(130e-6 + 1e-6 * y[67] * y[61])
    R97 = (13.7 * 1e-6 * y[117] * y[61])/(130e-6 + 1e-6 * y[117] * y[61])
    R104 = (13.7 * 1e-6 * y[122] * y[61])/(130e-6 + 1e-6 * y[122] * y[61])
    R109 = (13.7 * 1e-6 * y[129] * y[61])/(130e-6 + 1e-6 * y[129] * y[61])
    R149 = (13.7 * 1e-6 * y[176] * y[61])/(130e-6 + 1e-6 * y[176] * y[61])
    R162 = (13.7 * 1e-6 * y[963] * y[61])/(130e-6 + 1e-6 * y[963] * y[61])
    R169 = (13.7 * 1e-6 * y[162] * y[61])/(130e-6 + 1e-6 * y[162] * y[61])
    R175 = (13.7 * 1e-6 * y[190] * y[61])/(130e-6 + 1e-6 * y[190] * y[61])
    R190 = (13.7 * 1e-6 * y[203] * y[61])/(130e-6 + 1e-6 * y[203] * y[61])
    R204 = (13.7 * 1e-6 * y[214] * y[61])/(130e-6 + 1e-6 * y[214] * y[61])
    R207 = (13.7 * 1e-6 * y[219] * y[61])/(130e-6 + 1e-6 * y[219] * y[61])
    R208 = (13.7 * 1e-6 * y[219] * y[61])/(130e-6 + 1e-6 * y[219] * y[61])
    R217 = (13.7 * 1e-6 * y[1349] * y[61])/(130e-6 + 1e-6 * y[1349] * y[61])
    R232 = (13.7 * 1e-6 * y[239] * y[61])/(130e-6 + 1e-6 * y[239] * y[61])
    R264 = (13.7 * 1e-6 * y[264] * y[61])/(130e-6 + 1e-6 * y[264] * y[61])
    R300 = (13.7 * 1e-6 * y[296] * y[61])/(130e-6 + 1e-6 * y[296] * y[61])
    R302 = (13.7 * 1e-6 * y[292] * y[61])/(130e-6 + 1e-6 * y[292] * y[61])
    R303 = (13.7 * 1e-6 * y[281] * y[61])/(130e-6 + 1e-6 * y[281] * y[61])
    R309 = (13.7 * 1e-6 * y[301] * y[61])/(130e-6 + 1e-6 * y[301] * y[61])
    R310 = (13.7 * 1e-6 * y[297] * y[61])/(130e-6 + 1e-6 * y[297] * y[61])
    R311 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R313 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R314 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R320 = (13.7 * 1e-6 * y[315] * y[61])/(130e-6 + 1e-6 * y[315] * y[61])
    R332 = (13.7 * 1e-6 * y[35] * y[61] * y[37])/(130e-6 + 1e-6 * y[35] * y[61] * y[37])
    R333 = (13.7 * 1e-6 * y[316] * y[61])/(130e-6 + 1e-6 * y[316] * y[61])
    R334 = (13.7 * 1e-6 * y[303] * y[61])/(130e-6 + 1e-6 * y[303] * y[61])
    R357 = (13.7 * 1e-6 * y[330] * y[61])/(130e-6 + 1e-6 * y[330] * y[61])
    R359 = (13.7 * 1e-6 * y[274] * y[61])/(130e-6 + 1e-6 * y[274] * y[61])
    R362 = (13.7 * 1e-6 * y[1382] * y[61])/(130e-6 + 1e-6 * y[1382] * y[61])
    R368 = (13.7 * 1e-6 * y[873] * y[61] * y[875])/(130e-6 + 1e-6 * y[873] * y[61] * y[875])
    R380 = (13.7 * 1e-6 * y[1387] * y[61])/(130e-6 + 1e-6 * y[1387] * y[61])
    R386 = (13.7 * 1e-6 * y[349] * y[61])/(130e-6 + 1e-6 * y[349] * y[61])
    R390 = (13.7 * 1e-6 * y[1391] * y[61])/(130e-6 + 1e-6 * y[1391] * y[61])
    R395 = (13.7 * 1e-6 * y[359] * y[61])/(130e-6 + 1e-6 * y[359] * y[61])
    R422 = (13.7 * 1e-6 * y[388] * y[61])/(130e-6 + 1e-6 * y[388] * y[61])
    R424 = (13.7 * 1e-6 * y[391] * y[61])/(130e-6 + 1e-6 * y[391] * y[61])
    R438 = (13.7 * 1e-6 * y[398] * y[61])/(130e-6 + 1e-6 * y[398] * y[61])
    R447 = (13.7 * 1e-6 * y[1399] * y[61])/(130e-6 + 1e-6 * y[1399] * y[61])
    R450 = (13.7 * 1e-6 * y[407] * y[61] * y[1004])/(130e-6 + 1e-6 * y[407] * y[61] * y[1004])
    R452 = (13.7 * 1e-6 * y[408] * y[61])/(130e-6 + 1e-6 * y[408] * y[61])
    R468 = (13.7 * 1e-6 * y[420] * y[61])/(130e-6 + 1e-6 * y[420] * y[61])
    R469 = (13.7 * 1e-6 * y[414] * y[61])/(130e-6 + 1e-6 * y[414] * y[61])
    R475 = (13.7 * 1e-6 * y[429] * y[61])/(130e-6 + 1e-6 * y[429] * y[61])
    R476 = (13.7 * 1e-6 * y[423] * y[61])/(130e-6 + 1e-6 * y[423] * y[61])
    R498 = (13.7 * 1e-6 * y[46] * y[61])/(130e-6 + 1e-6 * y[46] * y[61])
    R522 = (13.7 * 1e-6 * y[455] * y[61])/(130e-6 + 1e-6 * y[455] * y[61])
    R523 = (13.7 * 1e-6 * y[455] * y[61])/(130e-6 + 1e-6 * y[455] * y[61])
    R534 = (13.7 * 1e-6 * y[465] * y[61])/(130e-6 + 1e-6 * y[465] * y[61])
    R544 = (13.7 * 1e-6 * y[472] * y[61])/(130e-6 + 1e-6 * y[472] * y[61])
    R552 = (13.7 * 1e-6 * y[476] * y[61])/(130e-6 + 1e-6 * y[476] * y[61])
    R568 = (13.7 * 1e-6 * y[489] * y[61])/(130e-6 + 1e-6 * y[489] * y[61])
    R623 = (13.7 * 1e-6 * y[61] * y[531])/(130e-6 + 1e-6 * y[61] * y[531])
    R629 = (13.7 * 1e-6 * y[533] * y[61])/(130e-6 + 1e-6 * y[533] * y[61])
    R641 = (13.7 * 1e-6 * y[540] * y[61])/(130e-6 + 1e-6 * y[540] * y[61])
    R653 = (13.7 * 1e-6 * y[61] * y[546])/(130e-6 + 1e-6 * y[61] * y[546])
    R707 = (13.7 * 1e-6 * y[568] * y[61])/(130e-6 + 1e-6 * y[568] * y[61])
    R716 = (13.7 * 1e-6 * y[572] * y[61])/(130e-6 + 1e-6 * y[572] * y[61])
    R969 = (13.7 * 1e-6 * y[278] * y[99] * y[466] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[466] * y[61])
    R973 = (13.7 * 1e-6 * y[278] * y[99] * y[474] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[474] * y[61])
    R974 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[869])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[869])
    R976 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[870])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[870])
    R978 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[785])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[785])
    R979 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[786])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[786])
    R980 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[871])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[871])
    R984 = (13.7 * 1e-6 * y[594] * y[61])/(130e-6 + 1e-6 * y[594] * y[61])
    R985 = (13.7 * 1e-6 * y[283] * y[61])/(130e-6 + 1e-6 * y[283] * y[61])
    R988 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[872])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[872])
    R989 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[831])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[831])
    R990 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[1011])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[1011])
    R992 = (13.7 * 1e-6 * y[1503] * y[61])/(130e-6 + 1e-6 * y[1503] * y[61])
    R1001 = (13.7 * 1e-6 * y[1504] * y[61])/(130e-6 + 1e-6 * y[1504] * y[61])
    R1013 = (13.7 * 1e-6 * y[604] * y[61])/(130e-6 + 1e-6 * y[604] * y[61])
    R1014 = (13.7 * 1e-6 * y[610] * y[61])/(130e-6 + 1e-6 * y[610] * y[61])
    R1017 = (13.7 * 1e-6 * y[613] * y[61])/(130e-6 + 1e-6 * y[613] * y[61])
    R1029 = (13.7 * 1e-6 * y[618] * y[61])/(130e-6 + 1e-6 * y[618] * y[61])
    R1031 = (13.7 * 1e-6 * y[616] * y[61])/(130e-6 + 1e-6 * y[616] * y[61])
    R1034 = (13.7 * 1e-6 * y[620] * y[61])/(130e-6 + 1e-6 * y[620] * y[61])
    R1038 = (13.7 * 1e-6 * y[621] * y[61])/(130e-6 + 1e-6 * y[621] * y[61])
    R1046 = (13.7 * 1e-6 * y[630] * y[61])/(130e-6 + 1e-6 * y[630] * y[61])
    R1052 = (13.7 * 1e-6 * y[632] * y[61])/(130e-6 + 1e-6 * y[632] * y[61])
    R1053 = (13.7 * 1e-6 * y[627] * y[61])/(130e-6 + 1e-6 * y[627] * y[61])
    R1055 = (13.7 * 1e-6 * y[633] * y[61])/(130e-6 + 1e-6 * y[633] * y[61])
    R1056 = (13.7 * 1e-6 * y[564] * y[61])/(130e-6 + 1e-6 * y[564] * y[61])
    R1065 = (13.7 * 1e-6 * y[638] * y[61])/(130e-6 + 1e-6 * y[638] * y[61])
    R1066 = (13.7 * 1e-6 * y[636] * y[61])/(130e-6 + 1e-6 * y[636] * y[61])
    R1072 = (13.7 * 1e-6 * y[639] * y[61])/(130e-6 + 1e-6 * y[639] * y[61])
    R1074 = (13.7 * 1e-6 * y[647] * y[61])/(130e-6 + 1e-6 * y[647] * y[61])
    R1075 = (13.7 * 1e-6 * y[647] * y[61])/(130e-6 + 1e-6 * y[647] * y[61])
    R1076 = (13.7 * 1e-6 * y[641] * y[61])/(130e-6 + 1e-6 * y[641] * y[61])
    R1077 = (13.7 * 1e-6 * y[594] * y[61] * y[1004])/(130e-6 + 1e-6 * y[594] * y[61] * y[1004])
    R1110 = (13.7 * 1e-6 * y[671] * y[61])/(130e-6 + 1e-6 * y[671] * y[61])
    R1115 = (13.7 * 1e-6 * y[676] * y[61])/(130e-6 + 1e-6 * y[676] * y[61])
    R1123 = (13.7 * 1e-6 * y[678] * y[61])/(130e-6 + 1e-6 * y[678] * y[61])
    R1135 = (13.7 * 1e-6 * y[690] * y[61])/(130e-6 + 1e-6 * y[690] * y[61])
    R1144 = (13.7 * 1e-6 * y[680] * y[61])/(130e-6 + 1e-6 * y[680] * y[61])
    R1170 = (13.7 * 1e-6 * y[651] * y[61])/(130e-6 + 1e-6 * y[651] * y[61])
    R1199 = (13.7 * 1e-6 * y[722] * y[61])/(130e-6 + 1e-6 * y[722] * y[61])
    R1211 = (13.7 * 1e-6 * y[731] * y[61])/(130e-6 + 1e-6 * y[731] * y[61])
    R1219 = (13.7 * 1e-6 * y[724] * y[61])/(130e-6 + 1e-6 * y[724] * y[61])
    R1229 = (13.7 * 1e-6 * y[701] * y[61])/(130e-6 + 1e-6 * y[701] * y[61])
    R1231 = (13.7 * 1e-6 * y[739] * y[61])/(130e-6 + 1e-6 * y[739] * y[61])
    R1236 = (13.7 * 1e-6 * y[741] * y[61])/(130e-6 + 1e-6 * y[741] * y[61])
    R1249 = (13.7 * 1e-6 * y[751] * y[61])/(130e-6 + 1e-6 * y[751] * y[61])
    R1264 = (13.7 * 1e-6 * y[757] * y[61])/(130e-6 + 1e-6 * y[757] * y[61])
    R1287 = (13.7 * 1e-6 * y[503] * y[61])/(130e-6 + 1e-6 * y[503] * y[61])
    R1312 = (13.7 * 1e-6 * y[781] * y[61])/(130e-6 + 1e-6 * y[781] * y[61])
    R1323 = (13.7 * 1e-6 * y[784] * y[61])/(130e-6 + 1e-6 * y[784] * y[61])
    R1354 = (13.7 * 1e-6 * y[61] * y[831])/(130e-6 + 1e-6 * y[61] * y[831])
    R1361 = (13.7 * 1e-6 * y[61] * y[1622])/(130e-6 + 1e-6 * y[61] * y[1622])
    R1368 = (13.7 * 1e-6 * y[61] * y[807])/(130e-6 + 1e-6 * y[61] * y[807])
    R1383 = (13.7 * 1e-6 * y[61] * y[812])/(130e-6 + 1e-6 * y[61] * y[812])
    R1384 = (13.7 * 1e-6 * y[61] * y[1627])/(130e-6 + 1e-6 * y[61] * y[1627])
    R1396 = (13.7 * 1e-6 * y[820] * y[61])/(130e-6 + 1e-6 * y[820] * y[61])
    R1405 = (13.7 * 1e-6 * y[61] * y[824])/(130e-6 + 1e-6 * y[61] * y[824])
    R1411 = (13.7 * 1e-6 * y[61] * y[827])/(130e-6 + 1e-6 * y[61] * y[827])
    R1426 = (13.7 * 1e-6 * y[61] * y[833])/(130e-6 + 1e-6 * y[61] * y[833])
    R1427 = (13.7 * 1e-6 * y[61] * y[833])/(130e-6 + 1e-6 * y[61] * y[833])
    R1459 = (13.7 * 1e-6 * y[61] * y[851])/(130e-6 + 1e-6 * y[61] * y[851])
    R1462 = (13.7 * 1e-6 * y[61] * y[850])/(130e-6 + 1e-6 * y[61] * y[850])
    R1478 = (13.7 * 1e-6 * y[61] * y[855])/(130e-6 + 1e-6 * y[61] * y[855])
    R1491 = (13.7 * 1e-6 * y[61] * y[867])/(130e-6 + 1e-6 * y[61] * y[867])
    R1492 = (13.7 * 1e-6 * y[61] * y[866])/(130e-6 + 1e-6 * y[61] * y[866])
    R1538 = (13.7 * 1e-6 * y[61] * y[875])/(130e-6 + 1e-6 * y[61] * y[875])
    R1544 = (13.7 * 1e-6 * y[61] * y[334])/(130e-6 + 1e-6 * y[61] * y[334])
    R1547 = (13.7 * 1e-6 * y[61] * y[878])/(130e-6 + 1e-6 * y[61] * y[878])
    R1555 = (13.7 * 1e-6 * y[61] * y[879])/(130e-6 + 1e-6 * y[61] * y[879])
    R1566 = (13.7 * 1e-6 * y[61] * y[887])/(130e-6 + 1e-6 * y[61] * y[887])
    R1593 = (13.7 * 1e-6 * y[61] * y[905])/(130e-6 + 1e-6 * y[61] * y[905])
    R1594 = (13.7 * 1e-6 * y[61] * y[905])/(130e-6 + 1e-6 * y[61] * y[905])
    R1630 = (13.7 * 1e-6 * y[61] * y[919])/(130e-6 + 1e-6 * y[61] * y[919])
    R1633 = (13.7 * 1e-6 * y[61] * y[916])/(130e-6 + 1e-6 * y[61] * y[916])
    R1649 = (13.7 * 1e-6 * y[61] * y[944])/(130e-6 + 1e-6 * y[61] * y[944])
    R1668 = (13.7 * 1e-6 * y[61] * y[943])/(130e-6 + 1e-6 * y[61] * y[943])
    R1698 = (13.7 * 1e-6 * y[61] * y[960])/(130e-6 + 1e-6 * y[61] * y[960])
    R1705 = (13.7 * 1e-6 * y[61] * y[967])/(130e-6 + 1e-6 * y[61] * y[967])
    R1762 = (13.7 * 1e-6 * y[61] * y[961])/(130e-6 + 1e-6 * y[61] * y[961])
    R1768 = (13.7 * 1e-6 * y[61] * y[982])/(130e-6 + 1e-6 * y[61] * y[982])
    R1781 = (13.7 * 1e-6 * y[61] * y[960] * y[289])/(130e-6 + 1e-6 * y[61] * y[960] * y[289])
    R1782 = (13.7 * 1e-6 * y[61] * y[250] * y[960])/(130e-6 + 1e-6 * y[61] * y[250] * y[960])
    R1801 = (13.7 * 1e-6 * y[61] * y[997])/(130e-6 + 1e-6 * y[61] * y[997])
    R1949 = (13.7 * 1e-6 * y[61] * y[1092])/(130e-6 + 1e-6 * y[61] * y[1092])
    R1952 = (13.7 * 1e-6 * y[61] * y[1])/(130e-6 + 1e-6 * y[61] * y[1])
    R2013 = (13.7 * 1e-6 * y[61] * y[1130])/(130e-6 + 1e-6 * y[61] * y[1130])
    R2019 = (13.7 * 1e-6 * y[61] * y[1134])/(130e-6 + 1e-6 * y[61] * y[1134])
    R2023 = (13.7 * 1e-6 * y[61] * y[1136])/(130e-6 + 1e-6 * y[61] * y[1136])
    R2079 = (13.7 * 1e-6 * y[61] * y[1165])/(130e-6 + 1e-6 * y[61] * y[1165])
    R2084 = (13.7 * 1e-6 * y[61] * y[1171])/(130e-6 + 1e-6 * y[61] * y[1171])
    R2119 = (13.7 * 1e-6 * y[61] * y[1180])/(130e-6 + 1e-6 * y[61] * y[1180])
    R2145 = (13.7 * 1e-6 * y[61] * y[758])/(130e-6 + 1e-6 * y[61] * y[758])
    R2161 = (13.7 * 1e-6 * y[61] * y[113] * y[6])/(130e-6 + 1e-6 * y[61] * y[113] * y[6])
    R2167 = (13.7 * 1e-6 * y[61] * y[1207])/(130e-6 + 1e-6 * y[61] * y[1207])
    R2171 = (13.7 * 1e-6 * y[61] * y[976])/(130e-6 + 1e-6 * y[61] * y[976])
    R2172 = (13.7 * 1e-6 * y[61] * y[976])/(130e-6 + 1e-6 * y[61] * y[976])
    R2195 = (13.7 * 1e-6 * y[61] * y[1216])/(130e-6 + 1e-6 * y[61] * y[1216])
    R2196 = (13.7 * 1e-6 * y[61] * y[1167])/(130e-6 + 1e-6 * y[61] * y[1167])
    R2198 = (13.7 * 1e-6 * y[61] * y[1003])/(130e-6 + 1e-6 * y[61] * y[1003])
    R2203 = (13.7 * 1e-6 * y[61] * y[1232])/(130e-6 + 1e-6 * y[61] * y[1232])
    R2208 = (13.7 * 1e-6 * y[61] * y[358])/(130e-6 + 1e-6 * y[61] * y[358])
    R2211 = (13.7 * 1e-6 * y[61] * y[358])/(130e-6 + 1e-6 * y[61] * y[358])
    R2213 = (13.7 * 1e-6 * y[61] * y[290])/(130e-6 + 1e-6 * y[61] * y[290])
    R2217 = (13.7 * 1e-6 * y[61] * y[250] * y[1231])/(130e-6 + 1e-6 * y[61] * y[250] * y[1231])
    R2220 = (13.7 * 1e-6 * y[507] * y[61] * y[1231])/(130e-6 + 1e-6 * y[507] * y[61] * y[1231])
    R2269 = (13.7 * 1e-6 * y[61] * y[1254])/(130e-6 + 1e-6 * y[61] * y[1254])
    R2272 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2277 = (13.7 * 1e-6 * y[61] * y[1257])/(130e-6 + 1e-6 * y[61] * y[1257])
    R2279 = (13.7 * 1e-6 * y[61] * y[1257])/(130e-6 + 1e-6 * y[61] * y[1257])
    R2280 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2289 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2298 = (13.7 * 1e-6 * y[61] * y[1263])/(130e-6 + 1e-6 * y[61] * y[1263])
    R2301 = (13.7 * 1e-6 * y[61] * y[482])/(130e-6 + 1e-6 * y[61] * y[482])
    R2302 = (13.7 * 1e-6 * y[61] * y[482])/(130e-6 + 1e-6 * y[61] * y[482])
    R2317 = (13.7 * 1e-6 * y[61] * y[1276])/(130e-6 + 1e-6 * y[61] * y[1276])
    R2324 = (13.7 * 1e-6 * y[61] * y[1280])/(130e-6 + 1e-6 * y[61] * y[1280])
    R2330 = (13.7 * 1e-6 * y[61] * y[970])/(130e-6 + 1e-6 * y[61] * y[970])
    R2336 = (13.7 * 1e-6 * y[61] * y[1283])/(130e-6 + 1e-6 * y[61] * y[1283])
    R2339 = (13.7 * 1e-6 * y[61] * y[1285])/(130e-6 + 1e-6 * y[61] * y[1285])
    R2342 = (13.7 * 1e-6 * y[61] * y[1287])/(130e-6 + 1e-6 * y[61] * y[1287])
    return (R54 + R55 + R65 + R66 + R408 + R409 + R410 + R412 + R414 + R416 + R417 + R434 + R467 + R502 + R507 + R509 + R656 + R657 + R663 + R664 + R1020 + R1021 + R1198 + R1267 + R1269 + R1271 + R1273 + R1278 + R1369 + R1410 + R1424 + R1425 + R1428 + R1496 + R1497 + R1498 + R1499 + R1501 + R1505 + R1506 + R1508 + R1510 + R1511 + R1516 + R1517 + R1519 + R1521 + R1523 + R1530 + R1531 + R1532 + R1533 + R1534 + R1535 + R1670 + R1706 + R1708 + R1748 + R1790 + R1791 + R1792 + R1797 + R1916 + R1917 + R1918 + R1919 + R1920 + R1921 + R1924 + R1929 + R1930 + R1931 + R1932 + R1935 + R1937 + R1938 + R1939 + R1944 + R1945 + R1946 + R1947 + R1948 + R1955 + R1974 + R1981 + R1982 + R1983 + R1984 + R1985 + R1986 + R1987 + R1988 + R1989 + R1995 + R1996 + R1998 + R1999 + R2062 + R2069 + R2088 + R2309 + R2312 + R2353 + R2358 + R2363 + R2366) - (R52 + R59 + R97 + R104 + R109 + R149 + R162 + R169 + R175 + R190 + R204 + R207 + R208 + R217 + R232 + R264 + R300 + R302 + R303 + R309 + R310 + R311 + R313 + R314 + R320 + R332 + R333 + R334 + R357 + R359 + R362 + R368 + R380 + R386 + R390 + R395 + R422 + R424 + R438 + R447 + R450 + R452 + R468 + R469 + R475 + R476 + R498 + R522 + R523 + R534 + R544 + R552 + R568 + R623 + R629 + R641 + R653 + R707 + R716 + R969 + R973 + R974 + R976 + R978 + R979 + R980 + R984 + R985 + R988 + R989 + R990 + R992 + R1001 + R1013 + R1014 + R1017 + R1029 + R1031 + R1034 + R1038 + R1046 + R1052 + R1053 + R1055 + R1056 + R1065 + R1066 + R1072 + R1074 + R1075 + R1076 + R1077 + R1110 + R1115 + R1123 + R1135 + R1144 + R1170 + R1199 + R1211 + R1219 + R1229 + R1231 + R1236 + R1249 + R1264 + R1287 + R1312 + R1323 + R1354 + R1361 + R1368 + R1383 + R1384 + R1396 + R1405 + R1411 + R1426 + R1427 + R1459 + R1462 + R1478 + R1491 + R1492 + R1538 + R1544 + R1547 + R1555 + R1566 + R1593 + R1594 + R1630 + R1633 + R1649 + R1668 + R1698 + R1705 + R1762 + R1768 + R1781 + R1782 + R1801 + R1949 + R1952 + R2013 + R2019 + R2023 + R2079 + R2084 + R2119 + R2145 + R2161 + R2167 + R2171 + R2172 + R2195 + R2196 + R2198 + R2203 + R2208 + R2211 + R2213 + R2217 + R2220 + R2269 + R2272 + R2277 + R2279 + R2280 + R2289 + R2298 + R2301 + R2302 + R2317 + R2324 + R2330 + R2336 + R2339 + R2342)
 
def m_3cmp_p(t, y):
    R55 = (13.7 * 1e-6 * y[56] * y[406])/(130e-6 + 1e-6 * y[56] * y[406])
    R376 = (13.7 * 1e-6 * y[1386])/(130e-6 + 1e-6 * y[1386])
    R570 = (13.7 * 1e-6 * y[62] * y[406])/(130e-6 + 1e-6 * y[62] * y[406])
    return (R55 + R376) - (R570)
 
def m_LalaDgluMdapDala_c(t, y):
    R56 = (13.7 * 1e-6 * y[64] * y[278] * y[173])/(130e-6 + 1e-6 * y[64] * y[278] * y[173])
    R150 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R241 = (13.7 * 1e-6 * y[177] * y[173])/(130e-6 + 1e-6 * y[177] * y[173])
    R38 = (13.7 * 1e-6 * y[63] * y[173])/(130e-6 + 1e-6 * y[63] * y[173])
    R2375 = (13.7 * 1e-6 * y[63] * y[278] * y[1292])/(130e-6 + 1e-6 * y[63] * y[278] * y[1292])
    return (R56 + R150 + R241) - (R38 + R2375)
 
def m_LalaDgluMdapDala_p(t, y):
    R57 = (13.7 * 1e-6 * y[1324])/(130e-6 + 1e-6 * y[1324])
    R158 = (13.7 * 1e-6 * y[963] * y[406])/(130e-6 + 1e-6 * y[963] * y[406])
    R39 = (13.7 * 1e-6 * y[64] * y[406])/(130e-6 + 1e-6 * y[64] * y[406])
    R56 = (13.7 * 1e-6 * y[64] * y[278] * y[173])/(130e-6 + 1e-6 * y[64] * y[278] * y[173])
    return (R57 + R158) - (R39 + R56)
 
def m_glcn_c(t, y):
    R58 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R312 = (13.7 * 1e-6 * y[1367] * y[36] * y[113])/(130e-6 + 1e-6 * y[1367] * y[36] * y[113])
    R319 = (13.7 * 1e-6 * y[1367] * y[36] * y[201])/(130e-6 + 1e-6 * y[1367] * y[36] * y[201])
    R1199 = (13.7 * 1e-6 * y[722] * y[61])/(130e-6 + 1e-6 * y[722] * y[61])
    R1254 = (13.7 * 1e-6 * y[278] * y[65])/(130e-6 + 1e-6 * y[278] * y[65])
    return (R58 + R312 + R319 + R1199) - (R1254)
 
def m_5dglcn_c(t, y):
    R59 = (13.7 * 1e-6 * y[67] * y[61])/(130e-6 + 1e-6 * y[67] * y[61])
    R560 = (13.7 * 1e-6 * y[1422] * y[36] * y[113])/(130e-6 + 1e-6 * y[1422] * y[36] * y[113])
    R561 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R58 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R1381 = (13.7 * 1e-6 * y[66] * y[36] * y[113])/(130e-6 + 1e-6 * y[66] * y[36] * y[113])
    R1382 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    return (R59 + R560 + R561) - (R58 + R1381 + R1382)
 
def m_5dglcn_p(t, y):
    R60 = (13.7 * 1e-6 * y[1325])/(130e-6 + 1e-6 * y[1325])
    R59 = (13.7 * 1e-6 * y[67] * y[61])/(130e-6 + 1e-6 * y[67] * y[61])
    return (R60) - (R59)
 
def m_5drib_c(t, y):
    R61 = (13.7 * 1e-6 * y[325] * y[173])/(130e-6 + 1e-6 * y[325] * y[173])
    R593 = (13.7 * 1e-6 * y[68])/(130e-6 + 1e-6 * y[68])
    return (R61) - (R593)
 
def m_ade_c(t, y):
    R61 = (13.7 * 1e-6 * y[325] * y[173])/(130e-6 + 1e-6 * y[325] * y[173])
    R190 = (13.7 * 1e-6 * y[203] * y[61])/(130e-6 + 1e-6 * y[203] * y[61])
    R194 = (13.7 * 1e-6 * y[172] * y[173])/(130e-6 + 1e-6 * y[172] * y[173])
    R206 = (13.7 * 1e-6 * y[216] * y[173])/(130e-6 + 1e-6 * y[216] * y[173])
    R257 = (13.7 * 1e-6 * y[71] * y[173])/(130e-6 + 1e-6 * y[71] * y[173])
    R1906 = (13.7 * 1e-6 * y[1220] * y[173])/(130e-6 + 1e-6 * y[1220] * y[173])
    R2087 = (13.7 * 1e-6 * y[216] * y[37])/(130e-6 + 1e-6 * y[216] * y[37])
    R2089 = (13.7 * 1e-6 * y[464] * y[37])/(130e-6 + 1e-6 * y[464] * y[37])
    R2235 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    R132 = (13.7 * 1e-6 * y[69] * y[983])/(130e-6 + 1e-6 * y[69] * y[983])
    R184 = (13.7 * 1e-6 * y[69] * y[173] * y[36])/(130e-6 + 1e-6 * y[69] * y[173] * y[36])
    return (R61 + R190 + R194 + R206 + R257 + R1906 + R2087 + R2089 + R2235) - (R132 + R184)
 
def m_ara5p_c(t, y):
    R62 = (13.7 * 1e-6 * y[753])/(130e-6 + 1e-6 * y[753])
    R1485 = (13.7 * 1e-6 * y[70] * y[173] * y[563])/(130e-6 + 1e-6 * y[70] * y[173] * y[563])
    return (R62) - (R1485)
 
def m_amp_c(t, y):
    R63 = (13.7 * 1e-6 * y[15] * y[278] * y[577])/(130e-6 + 1e-6 * y[15] * y[278] * y[577])
    R64 = (13.7 * 1e-6 * y[15] * y[278] * y[578])/(130e-6 + 1e-6 * y[15] * y[278] * y[578])
    R69 = (13.7 * 1e-6 * y[15] * y[278] * y[579])/(130e-6 + 1e-6 * y[15] * y[278] * y[579])
    R71 = (13.7 * 1e-6 * y[15] * y[278] * y[580])/(130e-6 + 1e-6 * y[15] * y[278] * y[580])
    R72 = (13.7 * 1e-6 * y[15] * y[278] * y[583])/(130e-6 + 1e-6 * y[15] * y[278] * y[583])
    R74 = (13.7 * 1e-6 * y[15] * y[278] * y[582])/(130e-6 + 1e-6 * y[15] * y[278] * y[582])
    R76 = (13.7 * 1e-6 * y[15] * y[278] * y[576])/(130e-6 + 1e-6 * y[15] * y[278] * y[576])
    R78 = (13.7 * 1e-6 * y[15] * y[278] * y[575])/(130e-6 + 1e-6 * y[15] * y[278] * y[575])
    R79 = (13.7 * 1e-6 * y[15] * y[278] * y[581])/(130e-6 + 1e-6 * y[15] * y[278] * y[581])
    R121 = (13.7 * 1e-6 * y[17] * y[278] * y[576])/(130e-6 + 1e-6 * y[17] * y[278] * y[576])
    R132 = (13.7 * 1e-6 * y[69] * y[983])/(130e-6 + 1e-6 * y[69] * y[983])
    R134 = (13.7 * 1e-6 * y[25] * y[278] * y[577])/(130e-6 + 1e-6 * y[25] * y[278] * y[577])
    R137 = (13.7 * 1e-6 * y[156])/(130e-6 + 1e-6 * y[156])
    R139 = (13.7 * 1e-6 * y[80] * y[278] * y[578])/(130e-6 + 1e-6 * y[80] * y[278] * y[578])
    R141 = (13.7 * 1e-6 * y[87] * y[278] * y[579])/(130e-6 + 1e-6 * y[87] * y[278] * y[579])
    R143 = (13.7 * 1e-6 * y[96] * y[278] * y[580])/(130e-6 + 1e-6 * y[96] * y[278] * y[580])
    R146 = (13.7 * 1e-6 * y[118] * y[278] * y[582])/(130e-6 + 1e-6 * y[118] * y[278] * y[582])
    R147 = (13.7 * 1e-6 * y[130] * y[278] * y[583])/(130e-6 + 1e-6 * y[130] * y[278] * y[583])
    R166 = (13.7 * 1e-6 * y[120] * y[278] * y[99])/(130e-6 + 1e-6 * y[120] * y[278] * y[99])
    R200 = (13.7 * 1e-6 * y[216] * y[278])/(130e-6 + 1e-6 * y[216] * y[278])
    R224 = (13.7 * 1e-6 * y[1196] * y[173])/(130e-6 + 1e-6 * y[1196] * y[173])
    R230 = (13.7 * 1e-6 * y[235] * y[278] * y[1353])/(130e-6 + 1e-6 * y[235] * y[278] * y[1353])
    R243 = (13.7 * 1e-6 * y[169] * y[278] * y[576])/(130e-6 + 1e-6 * y[169] * y[278] * y[576])
    R251 = (13.7 * 1e-6 * y[186] * y[278] * y[577])/(130e-6 + 1e-6 * y[186] * y[278] * y[577])
    R269 = (13.7 * 1e-6 * y[195] * y[278] * y[578])/(130e-6 + 1e-6 * y[195] * y[278] * y[578])
    R274 = (13.7 * 1e-6 * y[208] * y[278] * y[579])/(130e-6 + 1e-6 * y[208] * y[278] * y[579])
    R277 = (13.7 * 1e-6 * y[217] * y[278] * y[580])/(130e-6 + 1e-6 * y[217] * y[278] * y[580])
    R283 = (13.7 * 1e-6 * y[228] * y[278] * y[582])/(130e-6 + 1e-6 * y[228] * y[278] * y[582])
    R301 = (13.7 * 1e-6 * y[237] * y[278] * y[583])/(130e-6 + 1e-6 * y[237] * y[278] * y[583])
    R307 = (13.7 * 1e-6 * y[300] * y[278] * y[1366])/(130e-6 + 1e-6 * y[300] * y[278] * y[1366])
    R323 = (13.7 * 1e-6 * y[300] * y[278] * y[1010])/(130e-6 + 1e-6 * y[300] * y[278] * y[1010])
    R324 = (13.7 * 1e-6 * y[303] * y[278] * y[1370])/(130e-6 + 1e-6 * y[303] * y[278] * y[1370])
    R345 = (13.7 * 1e-6 * y[173] * y[181])/(130e-6 + 1e-6 * y[173] * y[181])
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R351 = (13.7 * 1e-6 * y[300] * y[278] * y[95])/(130e-6 + 1e-6 * y[300] * y[278] * y[95])
    R352 = (13.7 * 1e-6 * y[323] * y[278] * y[1378])/(130e-6 + 1e-6 * y[323] * y[278] * y[1378])
    R493 = (13.7 * 1e-6 * y[278] * y[260] * y[1410])/(130e-6 + 1e-6 * y[278] * y[260] * y[1410])
    R699 = (13.7 * 1e-6 * y[499] * y[1189])/(130e-6 + 1e-6 * y[499] * y[1189])
    R969 = (13.7 * 1e-6 * y[278] * y[99] * y[466] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[466] * y[61])
    R973 = (13.7 * 1e-6 * y[278] * y[99] * y[474] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[474] * y[61])
    R974 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[869])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[869])
    R976 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[870])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[870])
    R978 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[785])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[785])
    R979 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[786])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[786])
    R980 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[871])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[871])
    R988 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[872])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[872])
    R989 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[831])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[831])
    R990 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[1011])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[1011])
    R1167 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R1179 = (13.7 * 1e-6 * y[278] * y[710] * y[1604])/(130e-6 + 1e-6 * y[278] * y[710] * y[1604])
    R1212 = (13.7 * 1e-6 * y[278] * y[110] * y[727])/(130e-6 + 1e-6 * y[278] * y[110] * y[727])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1290 = (13.7 * 1e-6 * y[278] * y[261] * y[1613])/(130e-6 + 1e-6 * y[278] * y[261] * y[1613])
    R1310 = (13.7 * 1e-6 * y[278] * y[928])/(130e-6 + 1e-6 * y[278] * y[928])
    R1366 = (13.7 * 1e-6 * y[278] * y[803] * y[1624])/(130e-6 + 1e-6 * y[278] * y[803] * y[1624])
    R1391 = (13.7 * 1e-6 * y[508] * y[278])/(130e-6 + 1e-6 * y[508] * y[278])
    R1395 = (13.7 * 1e-6 * y[278] * y[823] * y[1629])/(130e-6 + 1e-6 * y[278] * y[823] * y[1629])
    R1470 = (13.7 * 1e-6 * y[278] * y[852] * y[1638])/(130e-6 + 1e-6 * y[278] * y[852] * y[1638])
    R1536 = (13.7 * 1e-6 * y[278] * y[334] * y[1641])/(130e-6 + 1e-6 * y[278] * y[334] * y[1641])
    R1663 = (13.7 * 1e-6 * y[278] * y[326] * y[1649])/(130e-6 + 1e-6 * y[278] * y[326] * y[1649])
    R1765 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1804 = (13.7 * 1e-6 * y[278] * y[99] * y[245])/(130e-6 + 1e-6 * y[278] * y[99] * y[245])
    R1806 = (13.7 * 1e-6 * y[277] * y[278] * y[517])/(130e-6 + 1e-6 * y[277] * y[278] * y[517])
    R1845 = (13.7 * 1e-6 * y[210] * y[173])/(130e-6 + 1e-6 * y[210] * y[173])
    R1943 = (13.7 * 1e-6 * y[278] * y[1091] * y[1655])/(130e-6 + 1e-6 * y[278] * y[1091] * y[1655])
    R2011 = (13.7 * 1e-6 * y[278] * y[262] * y[1657])/(130e-6 + 1e-6 * y[278] * y[262] * y[1657])
    R2021 = (13.7 * 1e-6 * y[278] * y[173] * y[92])/(130e-6 + 1e-6 * y[278] * y[173] * y[92])
    R2022 = (13.7 * 1e-6 * y[278] * y[227])/(130e-6 + 1e-6 * y[278] * y[227])
    R2051 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R2131 = (13.7 * 1e-6 * y[278] * y[173] * y[1660])/(130e-6 + 1e-6 * y[278] * y[173] * y[1660])
    R2143 = (13.7 * 1e-6 * y[278] * y[500] * y[1661])/(130e-6 + 1e-6 * y[278] * y[500] * y[1661])
    R2144 = (13.7 * 1e-6 * y[278] * y[500] * y[1662])/(130e-6 + 1e-6 * y[278] * y[500] * y[1662])
    R2190 = (13.7 * 1e-6 * y[278] * y[1216] * y[1663])/(130e-6 + 1e-6 * y[278] * y[1216] * y[1663])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R2206 = (13.7 * 1e-6 * y[278] * y[99] * y[1224])/(130e-6 + 1e-6 * y[278] * y[99] * y[1224])
    R2212 = (13.7 * 1e-6 * y[278] * y[954] * y[95])/(130e-6 + 1e-6 * y[278] * y[954] * y[95])
    R2268 = (13.7 * 1e-6 * y[278] * y[1665] * y[1108])/(130e-6 + 1e-6 * y[278] * y[1665] * y[1108])
    R2297 = (13.7 * 1e-6 * y[278] * y[1666] * y[1266])/(130e-6 + 1e-6 * y[278] * y[1666] * y[1266])
    R2310 = (13.7 * 1e-6 * y[278] * y[1667] * y[1272])/(130e-6 + 1e-6 * y[278] * y[1667] * y[1272])
    R192 = (13.7 * 1e-6 * y[71] * y[278])/(130e-6 + 1e-6 * y[71] * y[278])
    R193 = (13.7 * 1e-6 * y[71] * y[928])/(130e-6 + 1e-6 * y[71] * y[928])
    R196 = (13.7 * 1e-6 * y[71] * y[313])/(130e-6 + 1e-6 * y[71] * y[313])
    R257 = (13.7 * 1e-6 * y[71] * y[173])/(130e-6 + 1e-6 * y[71] * y[173])
    R2313 = (13.7 * 1e-6 * y[71] * y[173])/(130e-6 + 1e-6 * y[71] * y[173])
    return (R63 + R64 + R69 + R71 + R72 + R74 + R76 + R78 + R79 + R121 + R132 + R134 + R137 + R139 + R141 + R143 + R146 + R147 + R166 + R200 + R224 + R230 + R243 + R251 + R269 + R274 + R277 + R283 + R301 + R307 + R323 + R324 + R345 + R349 + R351 + R352 + R493 + R699 + R969 + R973 + R974 + R976 + R978 + R979 + R980 + R988 + R989 + R990 + R1167 + R1179 + R1212 + R1246 + R1290 + R1310 + R1366 + R1391 + R1395 + R1470 + R1536 + R1663 + R1765 + R1804 + R1806 + R1845 + R1943 + R2011 + R2021 + R2022 + R2051 + R2131 + R2143 + R2144 + R2190 + R2205 + R2206 + R2212 + R2268 + R2297 + R2310) - (R192 + R193 + R196 + R257 + R2313)
 
def m_myrsACP_c(t, y):
    R63 = (13.7 * 1e-6 * y[15] * y[278] * y[577])/(130e-6 + 1e-6 * y[15] * y[278] * y[577])
    R670 = (13.7 * 1e-6 * y[36] * y[113] * y[393])/(130e-6 + 1e-6 * y[36] * y[113] * y[393])
    R676 = (13.7 * 1e-6 * y[36] * y[201] * y[393])/(130e-6 + 1e-6 * y[36] * y[201] * y[393])
    R26 = (13.7 * 1e-6 * y[36] * y[918] * y[72])/(130e-6 + 1e-6 * y[36] * y[918] * y[72])
    R174 = (13.7 * 1e-6 * y[657] * y[72])/(130e-6 + 1e-6 * y[657] * y[72])
    R688 = (13.7 * 1e-6 * y[557] * y[72])/(130e-6 + 1e-6 * y[557] * y[72])
    R695 = (13.7 * 1e-6 * y[559] * y[72])/(130e-6 + 1e-6 * y[559] * y[72])
    R941 = (13.7 * 1e-6 * y[173] * y[72])/(130e-6 + 1e-6 * y[173] * y[72])
    R1097 = (13.7 * 1e-6 * y[743] * y[72])/(130e-6 + 1e-6 * y[743] * y[72])
    return (R63 + R670 + R676) - (R26 + R174 + R688 + R695 + R941 + R1097)
 
def m_ppi_c(t, y):
    R63 = (13.7 * 1e-6 * y[15] * y[278] * y[577])/(130e-6 + 1e-6 * y[15] * y[278] * y[577])
    R64 = (13.7 * 1e-6 * y[15] * y[278] * y[578])/(130e-6 + 1e-6 * y[15] * y[278] * y[578])
    R69 = (13.7 * 1e-6 * y[15] * y[278] * y[579])/(130e-6 + 1e-6 * y[15] * y[278] * y[579])
    R71 = (13.7 * 1e-6 * y[15] * y[278] * y[580])/(130e-6 + 1e-6 * y[15] * y[278] * y[580])
    R72 = (13.7 * 1e-6 * y[15] * y[278] * y[583])/(130e-6 + 1e-6 * y[15] * y[278] * y[583])
    R74 = (13.7 * 1e-6 * y[15] * y[278] * y[582])/(130e-6 + 1e-6 * y[15] * y[278] * y[582])
    R76 = (13.7 * 1e-6 * y[15] * y[278] * y[576])/(130e-6 + 1e-6 * y[15] * y[278] * y[576])
    R78 = (13.7 * 1e-6 * y[15] * y[278] * y[575])/(130e-6 + 1e-6 * y[15] * y[278] * y[575])
    R79 = (13.7 * 1e-6 * y[15] * y[278] * y[581])/(130e-6 + 1e-6 * y[15] * y[278] * y[581])
    R117 = (13.7 * 1e-6 * y[220] * y[928] * y[36])/(130e-6 + 1e-6 * y[220] * y[928] * y[36])
    R121 = (13.7 * 1e-6 * y[17] * y[278] * y[576])/(130e-6 + 1e-6 * y[17] * y[278] * y[576])
    R132 = (13.7 * 1e-6 * y[69] * y[983])/(130e-6 + 1e-6 * y[69] * y[983])
    R134 = (13.7 * 1e-6 * y[25] * y[278] * y[577])/(130e-6 + 1e-6 * y[25] * y[278] * y[577])
    R139 = (13.7 * 1e-6 * y[80] * y[278] * y[578])/(130e-6 + 1e-6 * y[80] * y[278] * y[578])
    R141 = (13.7 * 1e-6 * y[87] * y[278] * y[579])/(130e-6 + 1e-6 * y[87] * y[278] * y[579])
    R143 = (13.7 * 1e-6 * y[96] * y[278] * y[580])/(130e-6 + 1e-6 * y[96] * y[278] * y[580])
    R146 = (13.7 * 1e-6 * y[118] * y[278] * y[582])/(130e-6 + 1e-6 * y[118] * y[278] * y[582])
    R147 = (13.7 * 1e-6 * y[130] * y[278] * y[583])/(130e-6 + 1e-6 * y[130] * y[278] * y[583])
    R166 = (13.7 * 1e-6 * y[120] * y[278] * y[99])/(130e-6 + 1e-6 * y[120] * y[278] * y[99])
    R199 = (13.7 * 1e-6 * y[278])/(130e-6 + 1e-6 * y[278])
    R230 = (13.7 * 1e-6 * y[235] * y[278] * y[1353])/(130e-6 + 1e-6 * y[235] * y[278] * y[1353])
    R243 = (13.7 * 1e-6 * y[169] * y[278] * y[576])/(130e-6 + 1e-6 * y[169] * y[278] * y[576])
    R251 = (13.7 * 1e-6 * y[186] * y[278] * y[577])/(130e-6 + 1e-6 * y[186] * y[278] * y[577])
    R269 = (13.7 * 1e-6 * y[195] * y[278] * y[578])/(130e-6 + 1e-6 * y[195] * y[278] * y[578])
    R274 = (13.7 * 1e-6 * y[208] * y[278] * y[579])/(130e-6 + 1e-6 * y[208] * y[278] * y[579])
    R275 = (13.7 * 1e-6 * y[270] * y[983])/(130e-6 + 1e-6 * y[270] * y[983])
    R277 = (13.7 * 1e-6 * y[217] * y[278] * y[580])/(130e-6 + 1e-6 * y[217] * y[278] * y[580])
    R283 = (13.7 * 1e-6 * y[228] * y[278] * y[582])/(130e-6 + 1e-6 * y[228] * y[278] * y[582])
    R301 = (13.7 * 1e-6 * y[237] * y[278] * y[583])/(130e-6 + 1e-6 * y[237] * y[278] * y[583])
    R307 = (13.7 * 1e-6 * y[300] * y[278] * y[1366])/(130e-6 + 1e-6 * y[300] * y[278] * y[1366])
    R323 = (13.7 * 1e-6 * y[300] * y[278] * y[1010])/(130e-6 + 1e-6 * y[300] * y[278] * y[1010])
    R324 = (13.7 * 1e-6 * y[303] * y[278] * y[1370])/(130e-6 + 1e-6 * y[303] * y[278] * y[1370])
    R331 = (13.7 * 1e-6 * y[278] * y[983])/(130e-6 + 1e-6 * y[278] * y[983])
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R351 = (13.7 * 1e-6 * y[300] * y[278] * y[95])/(130e-6 + 1e-6 * y[300] * y[278] * y[95])
    R352 = (13.7 * 1e-6 * y[323] * y[278] * y[1378])/(130e-6 + 1e-6 * y[323] * y[278] * y[1378])
    R493 = (13.7 * 1e-6 * y[278] * y[260] * y[1410])/(130e-6 + 1e-6 * y[278] * y[260] * y[1410])
    R514 = (13.7 * 1e-6 * y[404] * y[36] * y[187])/(130e-6 + 1e-6 * y[404] * y[36] * y[187])
    R515 = (13.7 * 1e-6 * y[404] * y[36] * y[188])/(130e-6 + 1e-6 * y[404] * y[36] * y[188])
    R516 = (13.7 * 1e-6 * y[404] * y[36] * y[192])/(130e-6 + 1e-6 * y[404] * y[36] * y[192])
    R517 = (13.7 * 1e-6 * y[404] * y[36] * y[193])/(130e-6 + 1e-6 * y[404] * y[36] * y[193])
    R518 = (13.7 * 1e-6 * y[404] * y[36] * y[198])/(130e-6 + 1e-6 * y[404] * y[36] * y[198])
    R519 = (13.7 * 1e-6 * y[404] * y[36] * y[199])/(130e-6 + 1e-6 * y[404] * y[36] * y[199])
    R520 = (13.7 * 1e-6 * y[404] * y[36] * y[200])/(130e-6 + 1e-6 * y[404] * y[36] * y[200])
    R569 = (13.7 * 1e-6 * y[487] * y[834])/(130e-6 + 1e-6 * y[487] * y[834])
    R588 = (13.7 * 1e-6 * y[498] * y[278] * y[36])/(130e-6 + 1e-6 * y[498] * y[278] * y[36])
    R602 = (13.7 * 1e-6 * y[968] * y[36] * y[1012])/(130e-6 + 1e-6 * y[968] * y[36] * y[1012])
    R605 = (13.7 * 1e-6 * y[773] * y[173])/(130e-6 + 1e-6 * y[773] * y[173])
    R613 = (13.7 * 1e-6 * y[194] * y[815])/(130e-6 + 1e-6 * y[194] * y[815])
    R643 = (13.7 * 1e-6 * y[468] * y[173])/(130e-6 + 1e-6 * y[468] * y[173])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R969 = (13.7 * 1e-6 * y[278] * y[99] * y[466] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[466] * y[61])
    R973 = (13.7 * 1e-6 * y[278] * y[99] * y[474] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[474] * y[61])
    R974 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[869])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[869])
    R976 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[870])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[870])
    R978 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[785])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[785])
    R979 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[786])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[786])
    R980 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[871])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[871])
    R988 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[872])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[872])
    R989 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[831])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[831])
    R990 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[1011])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[1011])
    R1088 = (13.7 * 1e-6 * y[932] * y[723] * y[36])/(130e-6 + 1e-6 * y[932] * y[723] * y[36])
    R1092 = (13.7 * 1e-6 * y[278] * y[284] * y[36])/(130e-6 + 1e-6 * y[278] * y[284] * y[36])
    R1142 = (13.7 * 1e-6 * y[723] * y[36] * y[929])/(130e-6 + 1e-6 * y[723] * y[36] * y[929])
    R1176 = (13.7 * 1e-6 * y[278] * y[723] * y[36])/(130e-6 + 1e-6 * y[278] * y[723] * y[36])
    R1179 = (13.7 * 1e-6 * y[278] * y[710] * y[1604])/(130e-6 + 1e-6 * y[278] * y[710] * y[1604])
    R1204 = (13.7 * 1e-6 * y[710] * y[173] * y[983])/(130e-6 + 1e-6 * y[710] * y[173] * y[983])
    R1212 = (13.7 * 1e-6 * y[278] * y[110] * y[727])/(130e-6 + 1e-6 * y[278] * y[110] * y[727])
    R1240 = (13.7 * 1e-6 * y[278] * y[746] * y[36])/(130e-6 + 1e-6 * y[278] * y[746] * y[36])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1283 = (13.7 * 1e-6 * y[486] * y[834])/(130e-6 + 1e-6 * y[486] * y[834])
    R1290 = (13.7 * 1e-6 * y[278] * y[261] * y[1613])/(130e-6 + 1e-6 * y[278] * y[261] * y[1613])
    R1308 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1311 = (13.7 * 1e-6 * y[355] * y[1012])/(130e-6 + 1e-6 * y[355] * y[1012])
    R1317 = (13.7 * 1e-6 * y[783] * y[983])/(130e-6 + 1e-6 * y[783] * y[983])
    R1332 = (13.7 * 1e-6 * y[761] * y[173] * y[609])/(130e-6 + 1e-6 * y[761] * y[173] * y[609])
    R1366 = (13.7 * 1e-6 * y[278] * y[803] * y[1624])/(130e-6 + 1e-6 * y[278] * y[803] * y[1624])
    R1395 = (13.7 * 1e-6 * y[278] * y[823] * y[1629])/(130e-6 + 1e-6 * y[278] * y[823] * y[1629])
    R1423 = (13.7 * 1e-6 * y[197] * y[983])/(130e-6 + 1e-6 * y[197] * y[983])
    R1470 = (13.7 * 1e-6 * y[278] * y[852] * y[1638])/(130e-6 + 1e-6 * y[278] * y[852] * y[1638])
    R1476 = (13.7 * 1e-6 * y[404] * y[861])/(130e-6 + 1e-6 * y[404] * y[861])
    R1536 = (13.7 * 1e-6 * y[278] * y[334] * y[1641])/(130e-6 + 1e-6 * y[278] * y[334] * y[1641])
    R1636 = (13.7 * 1e-6 * y[542] * y[404] * y[36])/(130e-6 + 1e-6 * y[542] * y[404] * y[36])
    R1637 = (13.7 * 1e-6 * y[278] * y[173] * y[326])/(130e-6 + 1e-6 * y[278] * y[173] * y[326])
    R1663 = (13.7 * 1e-6 * y[278] * y[326] * y[1649])/(130e-6 + 1e-6 * y[278] * y[326] * y[1649])
    R1679 = (13.7 * 1e-6 * y[278] * y[36] * y[947])/(130e-6 + 1e-6 * y[278] * y[36] * y[947])
    R1691 = (13.7 * 1e-6 * y[278] * y[36] * y[945])/(130e-6 + 1e-6 * y[278] * y[36] * y[945])
    R1696 = (13.7 * 1e-6 * y[36] * y[983] * y[1185])/(130e-6 + 1e-6 * y[36] * y[983] * y[1185])
    R1754 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    R1755 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    R1756 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    R1760 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1761 = (13.7 * 1e-6 * y[934] * y[173])/(130e-6 + 1e-6 * y[934] * y[173])
    R1763 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1764 = (13.7 * 1e-6 * y[935] * y[173])/(130e-6 + 1e-6 * y[935] * y[173])
    R1765 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1769 = (13.7 * 1e-6 * y[932] * y[173])/(130e-6 + 1e-6 * y[932] * y[173])
    R1770 = (13.7 * 1e-6 * y[173] * y[929])/(130e-6 + 1e-6 * y[173] * y[929])
    R1772 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    R1804 = (13.7 * 1e-6 * y[278] * y[99] * y[245])/(130e-6 + 1e-6 * y[278] * y[99] * y[245])
    R1806 = (13.7 * 1e-6 * y[277] * y[278] * y[517])/(130e-6 + 1e-6 * y[277] * y[278] * y[517])
    R1826 = (13.7 * 1e-6 * y[761] * y[834])/(130e-6 + 1e-6 * y[761] * y[834])
    R1943 = (13.7 * 1e-6 * y[278] * y[1091] * y[1655])/(130e-6 + 1e-6 * y[278] * y[1091] * y[1655])
    R1973 = (13.7 * 1e-6 * y[173] * y[339])/(130e-6 + 1e-6 * y[173] * y[339])
    R2000 = (13.7 * 1e-6 * y[173] * y[704])/(130e-6 + 1e-6 * y[173] * y[704])
    R2002 = (13.7 * 1e-6 * y[278] * y[37])/(130e-6 + 1e-6 * y[278] * y[37])
    R2007 = (13.7 * 1e-6 * y[1100] * y[404] * y[260])/(130e-6 + 1e-6 * y[1100] * y[404] * y[260])
    R2011 = (13.7 * 1e-6 * y[278] * y[262] * y[1657])/(130e-6 + 1e-6 * y[278] * y[262] * y[1657])
    R2038 = (13.7 * 1e-6 * y[173] * y[314])/(130e-6 + 1e-6 * y[173] * y[314])
    R2075 = (13.7 * 1e-6 * y[278] * y[36] * y[1120])/(130e-6 + 1e-6 * y[278] * y[36] * y[1120])
    R2113 = (13.7 * 1e-6 * y[278] * y[928] * y[173] * y[794])/(130e-6 + 1e-6 * y[278] * y[928] * y[173] * y[794])
    R2132 = (13.7 * 1e-6 * y[278] * y[36] * y[500])/(130e-6 + 1e-6 * y[278] * y[36] * y[500])
    R2143 = (13.7 * 1e-6 * y[278] * y[500] * y[1661])/(130e-6 + 1e-6 * y[278] * y[500] * y[1661])
    R2144 = (13.7 * 1e-6 * y[278] * y[500] * y[1662])/(130e-6 + 1e-6 * y[278] * y[500] * y[1662])
    R2190 = (13.7 * 1e-6 * y[278] * y[1216] * y[1663])/(130e-6 + 1e-6 * y[278] * y[1216] * y[1663])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R2206 = (13.7 * 1e-6 * y[278] * y[99] * y[1224])/(130e-6 + 1e-6 * y[278] * y[99] * y[1224])
    R2212 = (13.7 * 1e-6 * y[278] * y[954] * y[95])/(130e-6 + 1e-6 * y[278] * y[954] * y[95])
    R2233 = (13.7 * 1e-6 * y[1099] * y[796] * y[36])/(130e-6 + 1e-6 * y[1099] * y[796] * y[36])
    R2253 = (13.7 * 1e-6 * y[278] * y[173] * y[953] * y[983])/(130e-6 + 1e-6 * y[278] * y[173] * y[953] * y[983])
    R2268 = (13.7 * 1e-6 * y[278] * y[1665] * y[1108])/(130e-6 + 1e-6 * y[278] * y[1665] * y[1108])
    R2276 = (13.7 * 1e-6 * y[983] * y[396])/(130e-6 + 1e-6 * y[983] * y[396])
    R2297 = (13.7 * 1e-6 * y[278] * y[1666] * y[1266])/(130e-6 + 1e-6 * y[278] * y[1666] * y[1266])
    R2310 = (13.7 * 1e-6 * y[278] * y[1667] * y[1272])/(130e-6 + 1e-6 * y[278] * y[1667] * y[1272])
    R2328 = (13.7 * 1e-6 * y[983] * y[780])/(130e-6 + 1e-6 * y[983] * y[780])
    R2346 = (13.7 * 1e-6 * y[648] * y[36] * y[929])/(130e-6 + 1e-6 * y[648] * y[36] * y[929])
    R2352 = (13.7 * 1e-6 * y[761] * y[834])/(130e-6 + 1e-6 * y[761] * y[834])
    R1776 = (13.7 * 1e-6 * y[1652] * y[73])/(130e-6 + 1e-6 * y[1652] * y[73])
    R1970 = (13.7 * 1e-6 * y[173] * y[73])/(130e-6 + 1e-6 * y[173] * y[73])
    R2001 = (13.7 * 1e-6 * y[278] * y[73])/(130e-6 + 1e-6 * y[278] * y[73])
    return (R63 + R64 + R69 + R71 + R72 + R74 + R76 + R78 + R79 + R117 + R121 + R132 + R134 + R139 + R141 + R143 + R146 + R147 + R166 + R199 + R230 + R243 + R251 + R269 + R274 + R275 + R277 + R283 + R301 + R307 + R323 + R324 + R331 + R349 + R351 + R352 + R493 + R514 + R515 + R516 + R517 + R518 + R519 + R520 + R569 + R588 + R602 + R605 + R613 + R643 + R926 + R969 + R973 + R974 + R976 + R978 + R979 + R980 + R988 + R989 + R990 + R1088 + R1092 + R1142 + R1176 + R1179 + R1204 + R1212 + R1240 + R1246 + R1283 + R1290 + R1308 + R1311 + R1317 + R1332 + R1366 + R1395 + R1423 + R1470 + R1476 + R1536 + R1636 + R1637 + R1663 + R1679 + R1691 + R1696 + R1754 + R1755 + R1756 + R1760 + R1761 + R1763 + R1764 + R1765 + R1769 + R1770 + R1772 + R1804 + R1806 + R1826 + R1943 + R1973 + R2000 + R2002 + R2007 + R2011 + R2038 + R2075 + R2113 + R2132 + R2143 + R2144 + R2190 + R2205 + R2206 + R2212 + R2233 + R2253 + R2268 + R2276 + R2297 + R2310 + R2328 + R2346 + R2352) - (R1776 + R1970 + R2001)
 
def m_tdeACP_c(t, y):
    R64 = (13.7 * 1e-6 * y[15] * y[278] * y[578])/(130e-6 + 1e-6 * y[15] * y[278] * y[578])
    R677 = (13.7 * 1e-6 * y[36] * y[113] * y[401])/(130e-6 + 1e-6 * y[36] * y[113] * y[401])
    R678 = (13.7 * 1e-6 * y[36] * y[201] * y[401])/(130e-6 + 1e-6 * y[36] * y[201] * y[401])
    R27 = (13.7 * 1e-6 * y[36] * y[918] * y[74])/(130e-6 + 1e-6 * y[36] * y[918] * y[74])
    R179 = (13.7 * 1e-6 * y[658] * y[74])/(130e-6 + 1e-6 * y[658] * y[74])
    R942 = (13.7 * 1e-6 * y[173] * y[74])/(130e-6 + 1e-6 * y[173] * y[74])
    R1098 = (13.7 * 1e-6 * y[743] * y[74])/(130e-6 + 1e-6 * y[743] * y[74])
    return (R64 + R677 + R678) - (R27 + R179 + R942 + R1098)
 
def m_3amp_p(t, y):
    R65 = (13.7 * 1e-6 * y[55] * y[406])/(130e-6 + 1e-6 * y[55] * y[406])
    R371 = (13.7 * 1e-6 * y[1385])/(130e-6 + 1e-6 * y[1385])
    R577 = (13.7 * 1e-6 * y[75] * y[406])/(130e-6 + 1e-6 * y[75] * y[406])
    return (R65 + R371) - (R577)
 
def m_3gmp_p(t, y):
    R66 = (13.7 * 1e-6 * y[57] * y[406])/(130e-6 + 1e-6 * y[57] * y[406])
    R384 = (13.7 * 1e-6 * y[1389])/(130e-6 + 1e-6 * y[1389])
    R594 = (13.7 * 1e-6 * y[76] * y[406])/(130e-6 + 1e-6 * y[76] * y[406])
    return (R66 + R384) - (R594)
 
def m_26dap__M_p(t, y):
    R67 = (13.7 * 1e-6 * y[1326])/(130e-6 + 1e-6 * y[1326])
    R508 = (13.7 * 1e-6 * y[77] * y[278] * y[173])/(130e-6 + 1e-6 * y[77] * y[278] * y[173])
    return (R67) - (R508)
 
def m_2ddecg3p_c(t, y):
    R68 = (13.7 * 1e-6 * y[1095])/(130e-6 + 1e-6 * y[1095])
    R1539 = (13.7 * 1e-6 * y[78] * y[173])/(130e-6 + 1e-6 * y[78] * y[173])
    return (R68) - (R1539)
 
def m_palmACP_c(t, y):
    R69 = (13.7 * 1e-6 * y[15] * y[278] * y[579])/(130e-6 + 1e-6 * y[15] * y[278] * y[579])
    R681 = (13.7 * 1e-6 * y[36] * y[113] * y[410])/(130e-6 + 1e-6 * y[36] * y[113] * y[410])
    R682 = (13.7 * 1e-6 * y[36] * y[201] * y[410])/(130e-6 + 1e-6 * y[36] * y[201] * y[410])
    R28 = (13.7 * 1e-6 * y[36] * y[918] * y[79])/(130e-6 + 1e-6 * y[36] * y[918] * y[79])
    R180 = (13.7 * 1e-6 * y[659] * y[79])/(130e-6 + 1e-6 * y[659] * y[79])
    R943 = (13.7 * 1e-6 * y[173] * y[79])/(130e-6 + 1e-6 * y[173] * y[79])
    R1100 = (13.7 * 1e-6 * y[743] * y[79])/(130e-6 + 1e-6 * y[743] * y[79])
    return (R69 + R681 + R682) - (R28 + R180 + R943 + R1100)
 
def m_2agpe141_c(t, y):
    R70 = (13.7 * 1e-6 * y[1112])/(130e-6 + 1e-6 * y[1112])
    R139 = (13.7 * 1e-6 * y[80] * y[278] * y[578])/(130e-6 + 1e-6 * y[80] * y[278] * y[578])
    R1504 = (13.7 * 1e-6 * y[80] * y[173])/(130e-6 + 1e-6 * y[80] * y[173])
    R1560 = (13.7 * 1e-6 * y[80] * y[265])/(130e-6 + 1e-6 * y[80] * y[265])
    return (R70) - (R139 + R1504 + R1560)
 
def m_hdeACP_c(t, y):
    R71 = (13.7 * 1e-6 * y[15] * y[278] * y[580])/(130e-6 + 1e-6 * y[15] * y[278] * y[580])
    R683 = (13.7 * 1e-6 * y[36] * y[113] * y[421])/(130e-6 + 1e-6 * y[36] * y[113] * y[421])
    R684 = (13.7 * 1e-6 * y[36] * y[201] * y[421])/(130e-6 + 1e-6 * y[36] * y[201] * y[421])
    R29 = (13.7 * 1e-6 * y[36] * y[81] * y[918])/(130e-6 + 1e-6 * y[36] * y[81] * y[918])
    R185 = (13.7 * 1e-6 * y[660] * y[81])/(130e-6 + 1e-6 * y[660] * y[81])
    R689 = (13.7 * 1e-6 * y[81] * y[991])/(130e-6 + 1e-6 * y[81] * y[991])
    R944 = (13.7 * 1e-6 * y[173] * y[81])/(130e-6 + 1e-6 * y[173] * y[81])
    R1101 = (13.7 * 1e-6 * y[743] * y[81])/(130e-6 + 1e-6 * y[743] * y[81])
    return (R71 + R683 + R684) - (R29 + R185 + R689 + R944 + R1101)
 
def m_octeACP_c(t, y):
    R72 = (13.7 * 1e-6 * y[15] * y[278] * y[583])/(130e-6 + 1e-6 * y[15] * y[278] * y[583])
    R693 = (13.7 * 1e-6 * y[36] * y[113] * y[438])/(130e-6 + 1e-6 * y[36] * y[113] * y[438])
    R694 = (13.7 * 1e-6 * y[36] * y[201] * y[438])/(130e-6 + 1e-6 * y[36] * y[201] * y[438])
    R187 = (13.7 * 1e-6 * y[664] * y[82])/(130e-6 + 1e-6 * y[664] * y[82])
    R1105 = (13.7 * 1e-6 * y[743] * y[82])/(130e-6 + 1e-6 * y[743] * y[82])
    return (R72 + R693 + R694) - (R187 + R1105)
 
def m_acgam1p_p(t, y):
    R73 = (13.7 * 1e-6 * y[1327])/(130e-6 + 1e-6 * y[1327])
    R2312 = (13.7 * 1e-6 * y[406] * y[1273])/(130e-6 + 1e-6 * y[406] * y[1273])
    R1 = (13.7 * 1e-6 * y[83] * y[406])/(130e-6 + 1e-6 * y[83] * y[406])
    return (R73 + R2312) - (R1)
 
def m_ocdcaACP_c(t, y):
    R74 = (13.7 * 1e-6 * y[15] * y[278] * y[582])/(130e-6 + 1e-6 * y[15] * y[278] * y[582])
    R690 = (13.7 * 1e-6 * y[36] * y[113] * y[428])/(130e-6 + 1e-6 * y[36] * y[113] * y[428])
    R691 = (13.7 * 1e-6 * y[36] * y[201] * y[428])/(130e-6 + 1e-6 * y[36] * y[201] * y[428])
    R186 = (13.7 * 1e-6 * y[663] * y[84])/(130e-6 + 1e-6 * y[663] * y[84])
    R1104 = (13.7 * 1e-6 * y[743] * y[84])/(130e-6 + 1e-6 * y[743] * y[84])
    return (R74 + R690 + R691) - (R186 + R1104)
 
def m_acgam6p_c(t, y):
    R75 = (13.7 * 1e-6 * y[165] * y[278])/(130e-6 + 1e-6 * y[165] * y[278])
    R81 = (13.7 * 1e-6 * y[0] * y[563])/(130e-6 + 1e-6 * y[0] * y[563])
    R92 = (13.7 * 1e-6 * y[124] * y[173])/(130e-6 + 1e-6 * y[124] * y[173])
    R252 = (13.7 * 1e-6 * y[116])/(130e-6 + 1e-6 * y[116])
    R142 = (13.7 * 1e-6 * y[85] * y[173])/(130e-6 + 1e-6 * y[85] * y[173])
    return (R75 + R81 + R92 + R252) - (R142)
 
def m_ddcaACP_c(t, y):
    R76 = (13.7 * 1e-6 * y[15] * y[278] * y[576])/(130e-6 + 1e-6 * y[15] * y[278] * y[576])
    R661 = (13.7 * 1e-6 * y[36] * y[113] * y[371])/(130e-6 + 1e-6 * y[36] * y[113] * y[371])
    R662 = (13.7 * 1e-6 * y[36] * y[201] * y[371])/(130e-6 + 1e-6 * y[36] * y[201] * y[371])
    R18 = (13.7 * 1e-6 * y[86] * y[36] * y[918])/(130e-6 + 1e-6 * y[86] * y[36] * y[918])
    R173 = (13.7 * 1e-6 * y[656] * y[86])/(130e-6 + 1e-6 * y[656] * y[86])
    R687 = (13.7 * 1e-6 * y[86] * y[991])/(130e-6 + 1e-6 * y[86] * y[991])
    R937 = (13.7 * 1e-6 * y[86] * y[173])/(130e-6 + 1e-6 * y[86] * y[173])
    R1095 = (13.7 * 1e-6 * y[86] * y[743])/(130e-6 + 1e-6 * y[86] * y[743])
    return (R76 + R661 + R662) - (R18 + R173 + R687 + R937 + R1095)
 
def m_2agpe160_c(t, y):
    R77 = (13.7 * 1e-6 * y[230])/(130e-6 + 1e-6 * y[230])
    R141 = (13.7 * 1e-6 * y[87] * y[278] * y[579])/(130e-6 + 1e-6 * y[87] * y[278] * y[579])
    R1507 = (13.7 * 1e-6 * y[87] * y[173])/(130e-6 + 1e-6 * y[87] * y[173])
    R1561 = (13.7 * 1e-6 * y[87] * y[268])/(130e-6 + 1e-6 * y[87] * y[268])
    return (R77) - (R141 + R1507 + R1561)
 
def m_dcaACP_c(t, y):
    R78 = (13.7 * 1e-6 * y[15] * y[278] * y[575])/(130e-6 + 1e-6 * y[15] * y[278] * y[575])
    R658 = (13.7 * 1e-6 * y[36] * y[113] * y[360])/(130e-6 + 1e-6 * y[36] * y[113] * y[360])
    R660 = (13.7 * 1e-6 * y[36] * y[201] * y[360])/(130e-6 + 1e-6 * y[36] * y[201] * y[360])
    R16 = (13.7 * 1e-6 * y[88] * y[36] * y[918])/(130e-6 + 1e-6 * y[88] * y[36] * y[918])
    R935 = (13.7 * 1e-6 * y[88] * y[173])/(130e-6 + 1e-6 * y[88] * y[173])
    return (R78 + R658 + R660) - (R16 + R935)
 
def m_ocACP_c(t, y):
    R79 = (13.7 * 1e-6 * y[15] * y[278] * y[581])/(130e-6 + 1e-6 * y[15] * y[278] * y[581])
    R649 = (13.7 * 1e-6 * y[36] * y[113] * y[463])/(130e-6 + 1e-6 * y[36] * y[113] * y[463])
    R650 = (13.7 * 1e-6 * y[36] * y[201] * y[463])/(130e-6 + 1e-6 * y[36] * y[201] * y[463])
    R14 = (13.7 * 1e-6 * y[36] * y[918] * y[89])/(130e-6 + 1e-6 * y[36] * y[918] * y[89])
    R945 = (13.7 * 1e-6 * y[173] * y[89])/(130e-6 + 1e-6 * y[173] * y[89])
    return (R79 + R649 + R650) - (R14 + R945)
 
def m_ump_c(t, y):
    R80 = (13.7 * 1e-6 * y[1288] * y[1293])/(130e-6 + 1e-6 * y[1288] * y[1293])
    R1770 = (13.7 * 1e-6 * y[173] * y[929])/(130e-6 + 1e-6 * y[173] * y[929])
    R1839 = (13.7 * 1e-6 * y[1293] * y[1303])/(130e-6 + 1e-6 * y[1293] * y[1303])
    R1850 = (13.7 * 1e-6 * y[36] * y[1652])/(130e-6 + 1e-6 * y[36] * y[1652])
    R2276 = (13.7 * 1e-6 * y[983] * y[396])/(130e-6 + 1e-6 * y[983] * y[396])
    R2300 = (13.7 * 1e-6 * y[928] * y[446])/(130e-6 + 1e-6 * y[928] * y[446])
    R2304 = (13.7 * 1e-6 * y[173] * y[1268])/(130e-6 + 1e-6 * y[173] * y[1268])
    R1738 = (13.7 * 1e-6 * y[173] * y[90])/(130e-6 + 1e-6 * y[173] * y[90])
    R2376 = (13.7 * 1e-6 * y[278] * y[90])/(130e-6 + 1e-6 * y[278] * y[90])
    return (R80 + R1770 + R1839 + R1850 + R2276 + R2300 + R2304) - (R1738 + R2376)
 
def m_unaga_c(t, y):
    R80 = (13.7 * 1e-6 * y[1288] * y[1293])/(130e-6 + 1e-6 * y[1288] * y[1293])
    R98 = (13.7 * 1e-6 * y[1274] * y[91])/(130e-6 + 1e-6 * y[1274] * y[91])
    return (R80) - (R98)
 
def m_pyr_c(t, y):
    R81 = (13.7 * 1e-6 * y[0] * y[563])/(130e-6 + 1e-6 * y[0] * y[563])
    R99 = (13.7 * 1e-6 * y[123] * y[563])/(130e-6 + 1e-6 * y[123] * y[563])
    R107 = (13.7 * 1e-6 * y[125] * y[563])/(130e-6 + 1e-6 * y[125] * y[563])
    R114 = (13.7 * 1e-6 * y[126])/(130e-6 + 1e-6 * y[126])
    R181 = (13.7 * 1e-6 * y[196])/(130e-6 + 1e-6 * y[196])
    R221 = (13.7 * 1e-6 * y[45] * y[1025])/(130e-6 + 1e-6 * y[45] * y[1025])
    R222 = (13.7 * 1e-6 * y[213] * y[235])/(130e-6 + 1e-6 * y[213] * y[235])
    R223 = (13.7 * 1e-6 * y[235] * y[1025])/(130e-6 + 1e-6 * y[235] * y[1025])
    R276 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R340 = (13.7 * 1e-6 * y[320] * y[563])/(130e-6 + 1e-6 * y[320] * y[563])
    R397 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    R480 = (13.7 * 1e-6 * y[433] * y[173])/(130e-6 + 1e-6 * y[433] * y[173])
    R486 = (13.7 * 1e-6 * y[260] * y[173])/(130e-6 + 1e-6 * y[260] * y[173])
    R491 = (13.7 * 1e-6 * y[1206] * y[173])/(130e-6 + 1e-6 * y[1206] * y[173])
    R504 = (13.7 * 1e-6 * y[59] * y[173])/(130e-6 + 1e-6 * y[59] * y[173])
    R527 = (13.7 * 1e-6 * y[45] * y[282] * y[173])/(130e-6 + 1e-6 * y[45] * y[282] * y[173])
    R562 = (13.7 * 1e-6 * y[475])/(130e-6 + 1e-6 * y[475])
    R578 = (13.7 * 1e-6 * y[497] * y[563])/(130e-6 + 1e-6 * y[497] * y[563])
    R685 = (13.7 * 1e-6 * y[477])/(130e-6 + 1e-6 * y[477])
    R1059 = (13.7 * 1e-6 * y[635] * y[563])/(130e-6 + 1e-6 * y[635] * y[563])
    R1060 = (13.7 * 1e-6 * y[635] * y[563])/(130e-6 + 1e-6 * y[635] * y[563])
    R1132 = (13.7 * 1e-6 * y[688] * y[563])/(130e-6 + 1e-6 * y[688] * y[563])
    R1152 = (13.7 * 1e-6 * y[698] * y[563])/(130e-6 + 1e-6 * y[698] * y[563])
    R1169 = (13.7 * 1e-6 * y[651] * y[563])/(130e-6 + 1e-6 * y[651] * y[563])
    R1209 = (13.7 * 1e-6 * y[666])/(130e-6 + 1e-6 * y[666])
    R1375 = (13.7 * 1e-6 * y[173] * y[806])/(130e-6 + 1e-6 * y[173] * y[806])
    R1390 = (13.7 * 1e-6 * y[1028])/(130e-6 + 1e-6 * y[1028])
    R1467 = (13.7 * 1e-6 * y[106] * y[236])/(130e-6 + 1e-6 * y[106] * y[236])
    R1468 = (13.7 * 1e-6 * y[106] * y[444])/(130e-6 + 1e-6 * y[106] * y[444])
    R1549 = (13.7 * 1e-6 * y[846] * y[444])/(130e-6 + 1e-6 * y[846] * y[444])
    R1553 = (13.7 * 1e-6 * y[846] * y[441])/(130e-6 + 1e-6 * y[846] * y[441])
    R1565 = (13.7 * 1e-6 * y[886] * y[236])/(130e-6 + 1e-6 * y[886] * y[236])
    R1591 = (13.7 * 1e-6 * y[896] * y[563])/(130e-6 + 1e-6 * y[896] * y[563])
    R1595 = (13.7 * 1e-6 * y[1404] * y[1647])/(130e-6 + 1e-6 * y[1404] * y[1647])
    R1618 = (13.7 * 1e-6 * y[910] * y[563])/(130e-6 + 1e-6 * y[910] * y[563])
    R1621 = (13.7 * 1e-6 * y[911] * y[563])/(130e-6 + 1e-6 * y[911] * y[563])
    R1624 = (13.7 * 1e-6 * y[948])/(130e-6 + 1e-6 * y[948])
    R1626 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1627 = (13.7 * 1e-6 * y[643] * y[6])/(130e-6 + 1e-6 * y[643] * y[6])
    R1737 = (13.7 * 1e-6 * y[973] * y[563])/(130e-6 + 1e-6 * y[973] * y[563])
    R1820 = (13.7 * 1e-6 * y[36] * y[298])/(130e-6 + 1e-6 * y[36] * y[298])
    R2117 = (13.7 * 1e-6 * y[35] * y[36] * y[563])/(130e-6 + 1e-6 * y[35] * y[36] * y[563])
    R2119 = (13.7 * 1e-6 * y[61] * y[1180])/(130e-6 + 1e-6 * y[61] * y[1180])
    R2121 = (13.7 * 1e-6 * y[563] * y[1182])/(130e-6 + 1e-6 * y[563] * y[1182])
    R2134 = (13.7 * 1e-6 * y[525])/(130e-6 + 1e-6 * y[525])
    R2135 = (13.7 * 1e-6 * y[500])/(130e-6 + 1e-6 * y[500])
    R2158 = (13.7 * 1e-6 * y[806] * y[985])/(130e-6 + 1e-6 * y[806] * y[985])
    R2224 = (13.7 * 1e-6 * y[563] * y[1228])/(130e-6 + 1e-6 * y[563] * y[1228])
    R2254 = (13.7 * 1e-6 * y[563] * y[1245])/(130e-6 + 1e-6 * y[563] * y[1245])
    R2256 = (13.7 * 1e-6 * y[173] * y[1108])/(130e-6 + 1e-6 * y[173] * y[1108])
    R2319 = (13.7 * 1e-6 * y[490] * y[235])/(130e-6 + 1e-6 * y[490] * y[235])
    R89 = (13.7 * 1e-6 * y[1214] * y[36] * y[92])/(130e-6 + 1e-6 * y[1214] * y[36] * y[92])
    R91 = (13.7 * 1e-6 * y[36] * y[92])/(130e-6 + 1e-6 * y[36] * y[92])
    R599 = (13.7 * 1e-6 * y[821] * y[92])/(130e-6 + 1e-6 * y[821] * y[92])
    R647 = (13.7 * 1e-6 * y[480] * y[36] * y[92])/(130e-6 + 1e-6 * y[480] * y[36] * y[92])
    R1846 = (13.7 * 1e-6 * y[99] * y[236] * y[92])/(130e-6 + 1e-6 * y[99] * y[236] * y[92])
    R1887 = (13.7 * 1e-6 * y[99] * y[92])/(130e-6 + 1e-6 * y[99] * y[92])
    R1968 = (13.7 * 1e-6 * y[173] * y[92] * y[444])/(130e-6 + 1e-6 * y[173] * y[92] * y[444])
    R2021 = (13.7 * 1e-6 * y[278] * y[173] * y[92])/(130e-6 + 1e-6 * y[278] * y[173] * y[92])
    return (R81 + R99 + R107 + R114 + R181 + R221 + R222 + R223 + R276 + R340 + R397 + R480 + R486 + R491 + R504 + R527 + R562 + R578 + R685 + R1059 + R1060 + R1132 + R1152 + R1169 + R1209 + R1375 + R1390 + R1467 + R1468 + R1549 + R1553 + R1565 + R1591 + R1595 + R1618 + R1621 + R1624 + R1626 + R1627 + R1737 + R1820 + R2117 + R2119 + R2121 + R2134 + R2135 + R2158 + R2224 + R2254 + R2256 + R2319) - (R89 + R91 + R599 + R647 + R1846 + R1887 + R1968 + R2021)
 
def m_h2o2_c(t, y):
    R82 = (13.7 * 1e-6 * y[272] * y[173] * y[335])/(130e-6 + 1e-6 * y[272] * y[173] * y[335])
    R297 = (13.7 * 1e-6 * y[300] * y[335])/(130e-6 + 1e-6 * y[300] * y[335])
    R1186 = (13.7 * 1e-6 * y[716] * y[173] * y[335])/(130e-6 + 1e-6 * y[716] * y[173] * y[335])
    R1848 = (13.7 * 1e-6 * y[335] * y[1026])/(130e-6 + 1e-6 * y[335] * y[1026])
    R1976 = (13.7 * 1e-6 * y[1656] * y[173] * y[335])/(130e-6 + 1e-6 * y[1656] * y[173] * y[335])
    R2101 = (13.7 * 1e-6 * y[173] * y[335] * y[226])/(130e-6 + 1e-6 * y[173] * y[335] * y[226])
    R2114 = (13.7 * 1e-6 * y[173] * y[335] * y[1658])/(130e-6 + 1e-6 * y[173] * y[335] * y[1658])
    R2197 = (13.7 * 1e-6 * y[36] * y[1183])/(130e-6 + 1e-6 * y[36] * y[1183])
    R2290 = (13.7 * 1e-6 * y[173] * y[335] * y[1279])/(130e-6 + 1e-6 * y[173] * y[335] * y[1279])
    R369 = (13.7 * 1e-6 * y[93])/(130e-6 + 1e-6 * y[93])
    R1642 = (13.7 * 1e-6 * y[93] * y[326])/(130e-6 + 1e-6 * y[93] * y[326])
    R1643 = (13.7 * 1e-6 * y[93] * y[326])/(130e-6 + 1e-6 * y[93] * y[326])
    R2170 = (13.7 * 1e-6 * y[93] * y[1240])/(130e-6 + 1e-6 * y[93] * y[1240])
    return (R82 + R297 + R1186 + R1848 + R1976 + R2101 + R2114 + R2197 + R2290) - (R369 + R1642 + R1643 + R2170)
 
def m_mthgxl_c(t, y):
    R82 = (13.7 * 1e-6 * y[272] * y[173] * y[335])/(130e-6 + 1e-6 * y[272] * y[173] * y[335])
    R1677 = (13.7 * 1e-6 * y[492])/(130e-6 + 1e-6 * y[492])
    R229 = (13.7 * 1e-6 * y[36] * y[94] * y[201])/(130e-6 + 1e-6 * y[36] * y[94] * y[201])
    R1288 = (13.7 * 1e-6 * y[173] * y[94])/(130e-6 + 1e-6 * y[173] * y[94])
    R1448 = (13.7 * 1e-6 * y[36] * y[94] * y[113])/(130e-6 + 1e-6 * y[36] * y[94] * y[113])
    R1480 = (13.7 * 1e-6 * y[763] * y[94])/(130e-6 + 1e-6 * y[763] * y[94])
    return (R82 + R1677) - (R229 + R1288 + R1448 + R1480)
 
def m_nh4_c(t, y):
    R82 = (13.7 * 1e-6 * y[272] * y[173] * y[335])/(130e-6 + 1e-6 * y[272] * y[173] * y[335])
    R178 = (13.7 * 1e-6 * y[216] * y[173] * y[36])/(130e-6 + 1e-6 * y[216] * y[173] * y[36])
    R184 = (13.7 * 1e-6 * y[69] * y[173] * y[36])/(130e-6 + 1e-6 * y[69] * y[173] * y[36])
    R262 = (13.7 * 1e-6 * y[258] * y[173] * y[36])/(130e-6 + 1e-6 * y[258] * y[173] * y[36])
    R305 = (13.7 * 1e-6 * y[300])/(130e-6 + 1e-6 * y[300])
    R329 = (13.7 * 1e-6 * y[278] * y[173] * y[36])/(130e-6 + 1e-6 * y[278] * y[173] * y[36])
    R342 = (13.7 * 1e-6 * y[323] * y[173])/(130e-6 + 1e-6 * y[323] * y[173])
    R437 = (13.7 * 1e-6 * y[397] * y[173] * y[36])/(130e-6 + 1e-6 * y[397] * y[173] * y[36])
    R474 = (13.7 * 1e-6 * y[425] * y[36] * y[782])/(130e-6 + 1e-6 * y[425] * y[36] * y[782])
    R480 = (13.7 * 1e-6 * y[433] * y[173])/(130e-6 + 1e-6 * y[433] * y[173])
    R486 = (13.7 * 1e-6 * y[260] * y[173])/(130e-6 + 1e-6 * y[260] * y[173])
    R491 = (13.7 * 1e-6 * y[1206] * y[173])/(130e-6 + 1e-6 * y[1206] * y[173])
    R504 = (13.7 * 1e-6 * y[59] * y[173])/(130e-6 + 1e-6 * y[59] * y[173])
    R511 = (13.7 * 1e-6 * y[454] * y[173] * y[36])/(130e-6 + 1e-6 * y[454] * y[173] * y[36])
    R527 = (13.7 * 1e-6 * y[45] * y[282] * y[173])/(130e-6 + 1e-6 * y[45] * y[282] * y[173])
    R528 = (13.7 * 1e-6 * y[464] * y[173] * y[36])/(130e-6 + 1e-6 * y[464] * y[173] * y[36])
    R529 = (13.7 * 1e-6 * y[935] * y[173] * y[36])/(130e-6 + 1e-6 * y[935] * y[173] * y[36])
    R540 = (13.7 * 1e-6 * y[934] * y[173] * y[36])/(130e-6 + 1e-6 * y[934] * y[173] * y[36])
    R542 = (13.7 * 1e-6 * y[471] * y[173] * y[36])/(130e-6 + 1e-6 * y[471] * y[173] * y[36])
    R612 = (13.7 * 1e-6 * y[774] * y[173] * y[36])/(130e-6 + 1e-6 * y[774] * y[173] * y[36])
    R705 = (13.7 * 1e-6 * y[567])/(130e-6 + 1e-6 * y[567])
    R1141 = (13.7 * 1e-6 * y[159] * y[173])/(130e-6 + 1e-6 * y[159] * y[173])
    R1186 = (13.7 * 1e-6 * y[716] * y[173] * y[335])/(130e-6 + 1e-6 * y[716] * y[173] * y[335])
    R1195 = (13.7 * 1e-6 * y[110] * y[173] * y[6])/(130e-6 + 1e-6 * y[110] * y[173] * y[6])
    R1202 = (13.7 * 1e-6 * y[710] * y[173])/(130e-6 + 1e-6 * y[710] * y[173])
    R1245 = (13.7 * 1e-6 * y[222] * y[36] * y[201])/(130e-6 + 1e-6 * y[222] * y[36] * y[201])
    R1259 = (13.7 * 1e-6 * y[261] * y[236] * y[206])/(130e-6 + 1e-6 * y[261] * y[236] * y[206])
    R1313 = (13.7 * 1e-6 * y[928] * y[173] * y[36])/(130e-6 + 1e-6 * y[928] * y[173] * y[36])
    R1316 = (13.7 * 1e-6 * y[783] * y[173] * y[36])/(130e-6 + 1e-6 * y[783] * y[173] * y[36])
    R1379 = (13.7 * 1e-6 * y[173] * y[1119])/(130e-6 + 1e-6 * y[173] * y[1119])
    R1659 = (13.7 * 1e-6 * y[42])/(130e-6 + 1e-6 * y[42])
    R1680 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    R1690 = (13.7 * 1e-6 * y[173] * y[946])/(130e-6 + 1e-6 * y[173] * y[946])
    R1779 = (13.7 * 1e-6 * y[36] * y[113] * y[959])/(130e-6 + 1e-6 * y[36] * y[113] * y[959])
    R2101 = (13.7 * 1e-6 * y[173] * y[335] * y[226])/(130e-6 + 1e-6 * y[173] * y[335] * y[226])
    R2112 = (13.7 * 1e-6 * y[173] * y[36] * y[311])/(130e-6 + 1e-6 * y[173] * y[36] * y[311])
    R2134 = (13.7 * 1e-6 * y[525])/(130e-6 + 1e-6 * y[525])
    R2135 = (13.7 * 1e-6 * y[500])/(130e-6 + 1e-6 * y[500])
    R2185 = (13.7 * 1e-6 * y[1216])/(130e-6 + 1e-6 * y[1216])
    R2256 = (13.7 * 1e-6 * y[173] * y[1108])/(130e-6 + 1e-6 * y[173] * y[1108])
    R2368 = (13.7 * 1e-6 * y[173] * y[36] * y[257])/(130e-6 + 1e-6 * y[173] * y[36] * y[257])
    R351 = (13.7 * 1e-6 * y[300] * y[278] * y[95])/(130e-6 + 1e-6 * y[300] * y[278] * y[95])
    R392 = (13.7 * 1e-6 * y[278] * y[16] * y[95])/(130e-6 + 1e-6 * y[278] * y[16] * y[95])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1178 = (13.7 * 1e-6 * y[278] * y[110] * y[95])/(130e-6 + 1e-6 * y[278] * y[110] * y[95])
    R2212 = (13.7 * 1e-6 * y[278] * y[954] * y[95])/(130e-6 + 1e-6 * y[278] * y[954] * y[95])
    return (R82 + R178 + R184 + R262 + R305 + R329 + R342 + R437 + R474 + R480 + R486 + R491 + R504 + R511 + R527 + R528 + R529 + R540 + R542 + R612 + R705 + R1141 + R1186 + R1195 + R1202 + R1245 + R1259 + R1313 + R1316 + R1379 + R1659 + R1680 + R1690 + R1779 + R2101 + R2112 + R2134 + R2135 + R2185 + R2256 + R2368) - (R351 + R392 + R926 + R1178 + R2212)
 
def m_2agpe161_c(t, y):
    R84 = (13.7 * 1e-6 * y[1113])/(130e-6 + 1e-6 * y[1113])
    R143 = (13.7 * 1e-6 * y[96] * y[278] * y[580])/(130e-6 + 1e-6 * y[96] * y[278] * y[580])
    R1512 = (13.7 * 1e-6 * y[96] * y[173])/(130e-6 + 1e-6 * y[96] * y[173])
    R1562 = (13.7 * 1e-6 * y[96] * y[271])/(130e-6 + 1e-6 * y[96] * y[271])
    return (R84) - (R143 + R1512 + R1562)
 
def m_acg5p_c(t, y):
    R85 = (13.7 * 1e-6 * y[98] * y[278])/(130e-6 + 1e-6 * y[98] * y[278])
    R188 = (13.7 * 1e-6 * y[175] * y[6] * y[37])/(130e-6 + 1e-6 * y[175] * y[6] * y[37])
    return (R85 + R188) - (0)
 
def m_acglu_c(t, y):
    R86 = (13.7 * 1e-6 * y[127] * y[110])/(130e-6 + 1e-6 * y[127] * y[110])
    R85 = (13.7 * 1e-6 * y[98] * y[278])/(130e-6 + 1e-6 * y[98] * y[278])
    return (R86) - (R85)
 
def m_coa_c(t, y):
    R86 = (13.7 * 1e-6 * y[127] * y[110])/(130e-6 + 1e-6 * y[127] * y[110])
    R103 = (13.7 * 1e-6 * y[127])/(130e-6 + 1e-6 * y[127])
    R116 = (13.7 * 1e-6 * y[127] * y[270])/(130e-6 + 1e-6 * y[127] * y[270])
    R133 = (13.7 * 1e-6 * y[15] * y[127])/(130e-6 + 1e-6 * y[15] * y[127])
    R279 = (13.7 * 1e-6 * y[235] * y[36] * y[1360])/(130e-6 + 1e-6 * y[235] * y[36] * y[1360])
    R327 = (13.7 * 1e-6 * y[303] * y[212])/(130e-6 + 1e-6 * y[303] * y[212])
    R436 = (13.7 * 1e-6 * y[127] * y[173] * y[298])/(130e-6 + 1e-6 * y[127] * y[173] * y[298])
    R614 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    R946 = (13.7 * 1e-6 * y[585] * y[173])/(130e-6 + 1e-6 * y[585] * y[173])
    R953 = (13.7 * 1e-6 * y[586] * y[173])/(130e-6 + 1e-6 * y[586] * y[173])
    R954 = (13.7 * 1e-6 * y[173] * y[587])/(130e-6 + 1e-6 * y[173] * y[587])
    R955 = (13.7 * 1e-6 * y[173] * y[588])/(130e-6 + 1e-6 * y[173] * y[588])
    R957 = (13.7 * 1e-6 * y[173] * y[589])/(130e-6 + 1e-6 * y[173] * y[589])
    R962 = (13.7 * 1e-6 * y[173] * y[590])/(130e-6 + 1e-6 * y[173] * y[590])
    R963 = (13.7 * 1e-6 * y[173] * y[591])/(130e-6 + 1e-6 * y[173] * y[591])
    R964 = (13.7 * 1e-6 * y[173] * y[595])/(130e-6 + 1e-6 * y[173] * y[595])
    R966 = (13.7 * 1e-6 * y[173] * y[596])/(130e-6 + 1e-6 * y[173] * y[596])
    R968 = (13.7 * 1e-6 * y[173] * y[597])/(130e-6 + 1e-6 * y[173] * y[597])
    R1082 = (13.7 * 1e-6 * y[127] * y[1594])/(130e-6 + 1e-6 * y[127] * y[1594])
    R1197 = (13.7 * 1e-6 * y[127] * y[242])/(130e-6 + 1e-6 * y[127] * y[242])
    R1228 = (13.7 * 1e-6 * y[127] * y[261])/(130e-6 + 1e-6 * y[127] * y[261])
    R1413 = (13.7 * 1e-6 * y[1627] * y[212])/(130e-6 + 1e-6 * y[1627] * y[212])
    R1441 = (13.7 * 1e-6 * y[490] * y[127] * y[173])/(130e-6 + 1e-6 * y[490] * y[127] * y[173])
    R1461 = (13.7 * 1e-6 * y[127] * y[36] * y[918])/(130e-6 + 1e-6 * y[127] * y[36] * y[918])
    R1568 = (13.7 * 1e-6 * y[127] * y[593] * y[173])/(130e-6 + 1e-6 * y[127] * y[593] * y[173])
    R1571 = (13.7 * 1e-6 * y[127] * y[894])/(130e-6 + 1e-6 * y[127] * y[894])
    R1631 = (13.7 * 1e-6 * y[173] * y[298] * y[140])/(130e-6 + 1e-6 * y[173] * y[298] * y[140])
    R1632 = (13.7 * 1e-6 * y[15] * y[138])/(130e-6 + 1e-6 * y[15] * y[138])
    R1722 = (13.7 * 1e-6 * y[1223])/(130e-6 + 1e-6 * y[1223])
    R1798 = (13.7 * 1e-6 * y[127] * y[1653])/(130e-6 + 1e-6 * y[127] * y[1653])
    R2072 = (13.7 * 1e-6 * y[37] * y[140])/(130e-6 + 1e-6 * y[37] * y[140])
    R2073 = (13.7 * 1e-6 * y[127] * y[37])/(130e-6 + 1e-6 * y[127] * y[37])
    R2133 = (13.7 * 1e-6 * y[127] * y[500])/(130e-6 + 1e-6 * y[127] * y[500])
    R2162 = (13.7 * 1e-6 * y[173] * y[212] * y[502])/(130e-6 + 1e-6 * y[173] * y[212] * y[502])
    R2183 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    R2188 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    R2262 = (13.7 * 1e-6 * y[127] * y[1248])/(130e-6 + 1e-6 * y[127] * y[1248])
    R110 = (13.7 * 1e-6 * y[132] * y[99] * y[236])/(130e-6 + 1e-6 * y[132] * y[99] * y[236])
    R122 = (13.7 * 1e-6 * y[278] * y[99] * y[253])/(130e-6 + 1e-6 * y[278] * y[99] * y[253])
    R165 = (13.7 * 1e-6 * y[1340] * y[99])/(130e-6 + 1e-6 * y[1340] * y[99])
    R166 = (13.7 * 1e-6 * y[120] * y[278] * y[99])/(130e-6 + 1e-6 * y[120] * y[278] * y[99])
    R203 = (13.7 * 1e-6 * y[213] * y[99] * y[236])/(130e-6 + 1e-6 * y[213] * y[99] * y[236])
    R420 = (13.7 * 1e-6 * y[278] * y[99] * y[383])/(130e-6 + 1e-6 * y[278] * y[99] * y[383])
    R442 = (13.7 * 1e-6 * y[278] * y[99] * y[402])/(130e-6 + 1e-6 * y[278] * y[99] * y[402])
    R483 = (13.7 * 1e-6 * y[278] * y[99] * y[384])/(130e-6 + 1e-6 * y[278] * y[99] * y[384])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R969 = (13.7 * 1e-6 * y[278] * y[99] * y[466] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[466] * y[61])
    R973 = (13.7 * 1e-6 * y[278] * y[99] * y[474] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[474] * y[61])
    R974 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[869])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[869])
    R976 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[870])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[870])
    R978 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[785])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[785])
    R979 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[786])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[786])
    R980 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[871])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[871])
    R988 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[872])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[872])
    R989 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[831])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[831])
    R990 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[1011])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[1011])
    R1463 = (13.7 * 1e-6 * y[119] * y[99])/(130e-6 + 1e-6 * y[119] * y[99])
    R1464 = (13.7 * 1e-6 * y[799] * y[99])/(130e-6 + 1e-6 * y[799] * y[99])
    R1465 = (13.7 * 1e-6 * y[800] * y[99])/(130e-6 + 1e-6 * y[800] * y[99])
    R1466 = (13.7 * 1e-6 * y[801] * y[99])/(130e-6 + 1e-6 * y[801] * y[99])
    R1471 = (13.7 * 1e-6 * y[768] * y[99])/(130e-6 + 1e-6 * y[768] * y[99])
    R1473 = (13.7 * 1e-6 * y[769] * y[99])/(130e-6 + 1e-6 * y[769] * y[99])
    R1474 = (13.7 * 1e-6 * y[770] * y[99])/(130e-6 + 1e-6 * y[770] * y[99])
    R1475 = (13.7 * 1e-6 * y[772] * y[99])/(130e-6 + 1e-6 * y[772] * y[99])
    R1804 = (13.7 * 1e-6 * y[278] * y[99] * y[245])/(130e-6 + 1e-6 * y[278] * y[99] * y[245])
    R1821 = (13.7 * 1e-6 * y[1214] * y[99])/(130e-6 + 1e-6 * y[1214] * y[99])
    R1846 = (13.7 * 1e-6 * y[99] * y[236] * y[92])/(130e-6 + 1e-6 * y[99] * y[236] * y[92])
    R1887 = (13.7 * 1e-6 * y[99] * y[92])/(130e-6 + 1e-6 * y[99] * y[92])
    R2206 = (13.7 * 1e-6 * y[278] * y[99] * y[1224])/(130e-6 + 1e-6 * y[278] * y[99] * y[1224])
    R2221 = (13.7 * 1e-6 * y[278] * y[99] * y[290])/(130e-6 + 1e-6 * y[278] * y[99] * y[290])
    return (R86 + R103 + R116 + R133 + R279 + R327 + R436 + R614 + R946 + R953 + R954 + R955 + R957 + R962 + R963 + R964 + R966 + R968 + R1082 + R1197 + R1228 + R1413 + R1441 + R1461 + R1568 + R1571 + R1631 + R1632 + R1722 + R1798 + R2072 + R2073 + R2133 + R2162 + R2183 + R2188 + R2262) - (R110 + R122 + R165 + R166 + R203 + R420 + R442 + R483 + R926 + R969 + R973 + R974 + R976 + R978 + R979 + R980 + R988 + R989 + R990 + R1463 + R1464 + R1465 + R1466 + R1471 + R1473 + R1474 + R1475 + R1804 + R1821 + R1846 + R1887 + R2206 + R2221)
 
def m_dtdp_c(t, y):
    R87 = (13.7 * 1e-6 * y[1247] * y[115])/(130e-6 + 1e-6 * y[1247] * y[115])
    R631 = (13.7 * 1e-6 * y[278] * y[981])/(130e-6 + 1e-6 * y[278] * y[981])
    R2060 = (13.7 * 1e-6 * y[1250] * y[1002])/(130e-6 + 1e-6 * y[1250] * y[1002])
    R1653 = (13.7 * 1e-6 * y[278] * y[100])/(130e-6 + 1e-6 * y[278] * y[100])
    return (R87 + R631 + R2060) - (R1653)
 
def m_unagamuf_c(t, y):
    R87 = (13.7 * 1e-6 * y[1247] * y[115])/(130e-6 + 1e-6 * y[1247] * y[115])
    R665 = (13.7 * 1e-6 * y[101])/(130e-6 + 1e-6 * y[101])
    return (R87) - (R665)
 
def m_malthx_c(t, y):
    R88 = (13.7 * 1e-6 * y[53])/(130e-6 + 1e-6 * y[53])
    R248 = (13.7 * 1e-6 * y[894] * y[244])/(130e-6 + 1e-6 * y[894] * y[244])
    R1573 = (13.7 * 1e-6 * y[278] * y[173] * y[107])/(130e-6 + 1e-6 * y[278] * y[173] * y[107])
    R1634 = (13.7 * 1e-6 * y[246] * y[37])/(130e-6 + 1e-6 * y[246] * y[37])
    R1711 = (13.7 * 1e-6 * y[173] * y[246])/(130e-6 + 1e-6 * y[173] * y[246])
    R250 = (13.7 * 1e-6 * y[894] * y[102])/(130e-6 + 1e-6 * y[894] * y[102])
    R1612 = (13.7 * 1e-6 * y[102] * y[37])/(130e-6 + 1e-6 * y[102] * y[37])
    R1710 = (13.7 * 1e-6 * y[173] * y[102])/(130e-6 + 1e-6 * y[173] * y[102])
    return (R88 + R248 + R1573 + R1634 + R1711) - (R250 + R1612 + R1710)
 
def m_2ahbut_c(t, y):
    R89 = (13.7 * 1e-6 * y[1214] * y[36] * y[92])/(130e-6 + 1e-6 * y[1214] * y[36] * y[92])
    R1457 = (13.7 * 1e-6 * y[103] * y[36] * y[201])/(130e-6 + 1e-6 * y[103] * y[36] * y[201])
    return (R89) - (R1457)
 
def m_actp_c(t, y):
    R90 = (13.7 * 1e-6 * y[120] * y[278])/(130e-6 + 1e-6 * y[120] * y[278])
    R2073 = (13.7 * 1e-6 * y[127] * y[37])/(130e-6 + 1e-6 * y[127] * y[37])
    return (R90 + R2073) - (0)
 
def m_alac__S_c(t, y):
    R91 = (13.7 * 1e-6 * y[36] * y[92])/(130e-6 + 1e-6 * y[36] * y[92])
    R1455 = (13.7 * 1e-6 * y[1426] * y[6])/(130e-6 + 1e-6 * y[1426] * y[6])
    return (R91 + R1455) - (0)
 
def m_lac__D_c(t, y):
    R92 = (13.7 * 1e-6 * y[124] * y[173])/(130e-6 + 1e-6 * y[124] * y[173])
    R653 = (13.7 * 1e-6 * y[61] * y[546])/(130e-6 + 1e-6 * y[61] * y[546])
    R1286 = (13.7 * 1e-6 * y[173] * y[856])/(130e-6 + 1e-6 * y[173] * y[856])
    R1288 = (13.7 * 1e-6 * y[173] * y[94])/(130e-6 + 1e-6 * y[173] * y[94])
    R1467 = (13.7 * 1e-6 * y[106] * y[236])/(130e-6 + 1e-6 * y[106] * y[236])
    R1468 = (13.7 * 1e-6 * y[106] * y[444])/(130e-6 + 1e-6 * y[106] * y[444])
    return (R92 + R653 + R1286 + R1288) - (R1467 + R1468)
 
def m_malthx_p(t, y):
    R93 = (13.7 * 1e-6 * y[54])/(130e-6 + 1e-6 * y[54])
    R1579 = (13.7 * 1e-6 * y[1466])/(130e-6 + 1e-6 * y[1466])
    R1573 = (13.7 * 1e-6 * y[278] * y[173] * y[107])/(130e-6 + 1e-6 * y[278] * y[173] * y[107])
    return (R93 + R1579) - (R1573)
 
def m_g6p_c(t, y):
    R94 = (13.7 * 1e-6 * y[1329] * y[173])/(130e-6 + 1e-6 * y[1329] * y[173])
    R1043 = (13.7 * 1e-6 * y[625] * y[173])/(130e-6 + 1e-6 * y[625] * y[173])
    R1078 = (13.7 * 1e-6 * y[173] * y[1229])/(130e-6 + 1e-6 * y[173] * y[1229])
    R1148 = (13.7 * 1e-6 * y[697] * y[37])/(130e-6 + 1e-6 * y[697] * y[37])
    R1169 = (13.7 * 1e-6 * y[651] * y[563])/(130e-6 + 1e-6 * y[651] * y[563])
    R1348 = (13.7 * 1e-6 * y[278] * y[242])/(130e-6 + 1e-6 * y[278] * y[242])
    R1875 = (13.7 * 1e-6 * y[723])/(130e-6 + 1e-6 * y[723])
    R2246 = (13.7 * 1e-6 * y[173] * y[1242])/(130e-6 + 1e-6 * y[173] * y[1242])
    R1145 = (13.7 * 1e-6 * y[108] * y[6])/(130e-6 + 1e-6 * y[108] * y[6])
    R1147 = (13.7 * 1e-6 * y[108] * y[173])/(130e-6 + 1e-6 * y[108] * y[173])
    R1867 = (13.7 * 1e-6 * y[108])/(130e-6 + 1e-6 * y[108])
    R2248 = (13.7 * 1e-6 * y[108] * y[694])/(130e-6 + 1e-6 * y[108] * y[694])
    return (R94 + R1043 + R1078 + R1148 + R1169 + R1348 + R1875 + R2246) - (R1145 + R1147 + R1867 + R2248)
 
def m_hqn_c(t, y):
    R94 = (13.7 * 1e-6 * y[1329] * y[173])/(130e-6 + 1e-6 * y[1329] * y[173])
    return (R94) - (0)
 
def m_glu__L_c(t, y):
    R95 = (13.7 * 1e-6 * y[112] * y[213])/(130e-6 + 1e-6 * y[112] * y[213])
    R157 = (13.7 * 1e-6 * y[1338] * y[213])/(130e-6 + 1e-6 * y[1338] * y[213])
    R183 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R222 = (13.7 * 1e-6 * y[213] * y[235])/(130e-6 + 1e-6 * y[213] * y[235])
    R276 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R306 = (13.7 * 1e-6 * y[213] * y[300])/(130e-6 + 1e-6 * y[213] * y[300])
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R1183 = (13.7 * 1e-6 * y[266] * y[710])/(130e-6 + 1e-6 * y[266] * y[710])
    R1185 = (13.7 * 1e-6 * y[714] * y[173])/(130e-6 + 1e-6 * y[714] * y[173])
    R1190 = (13.7 * 1e-6 * y[112] * y[724])/(130e-6 + 1e-6 * y[112] * y[724])
    R1202 = (13.7 * 1e-6 * y[710] * y[173])/(130e-6 + 1e-6 * y[710] * y[173])
    R1204 = (13.7 * 1e-6 * y[710] * y[173] * y[983])/(130e-6 + 1e-6 * y[710] * y[173] * y[983])
    R1205 = (13.7 * 1e-6 * y[1606])/(130e-6 + 1e-6 * y[1606])
    R1206 = (13.7 * 1e-6 * y[213] * y[710] * y[36] * y[201])/(130e-6 + 1e-6 * y[213] * y[710] * y[36] * y[201])
    R1213 = (13.7 * 1e-6 * y[278] * y[724] * y[173])/(130e-6 + 1e-6 * y[278] * y[724] * y[173])
    R1219 = (13.7 * 1e-6 * y[724] * y[61])/(130e-6 + 1e-6 * y[724] * y[61])
    R1220 = (13.7 * 1e-6 * y[724] * y[927])/(130e-6 + 1e-6 * y[724] * y[927])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1387 = (13.7 * 1e-6 * y[710] * y[1147])/(130e-6 + 1e-6 * y[710] * y[1147])
    R1393 = (13.7 * 1e-6 * y[213] * y[823])/(130e-6 + 1e-6 * y[213] * y[823])
    R1450 = (13.7 * 1e-6 * y[225] * y[173])/(130e-6 + 1e-6 * y[225] * y[173])
    R1783 = (13.7 * 1e-6 * y[692] * y[173] * y[236])/(130e-6 + 1e-6 * y[692] * y[173] * y[236])
    R1942 = (13.7 * 1e-6 * y[213] * y[1091])/(130e-6 + 1e-6 * y[213] * y[1091])
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    R2077 = (13.7 * 1e-6 * y[213] * y[183])/(130e-6 + 1e-6 * y[213] * y[183])
    R2129 = (13.7 * 1e-6 * y[213] * y[1659])/(130e-6 + 1e-6 * y[213] * y[1659])
    R2151 = (13.7 * 1e-6 * y[173] * y[1197])/(130e-6 + 1e-6 * y[173] * y[1197])
    R2182 = (13.7 * 1e-6 * y[213] * y[1177])/(130e-6 + 1e-6 * y[213] * y[1177])
    R2296 = (13.7 * 1e-6 * y[213] * y[1266])/(130e-6 + 1e-6 * y[213] * y[1266])
    R2305 = (13.7 * 1e-6 * y[213] * y[1272])/(130e-6 + 1e-6 * y[213] * y[1272])
    R86 = (13.7 * 1e-6 * y[127] * y[110])/(130e-6 + 1e-6 * y[127] * y[110])
    R601 = (13.7 * 1e-6 * y[278] * y[516] * y[110])/(130e-6 + 1e-6 * y[278] * y[516] * y[110])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1178 = (13.7 * 1e-6 * y[278] * y[110] * y[95])/(130e-6 + 1e-6 * y[278] * y[110] * y[95])
    R1187 = (13.7 * 1e-6 * y[278] * y[110] * y[183])/(130e-6 + 1e-6 * y[278] * y[110] * y[183])
    R1189 = (13.7 * 1e-6 * y[278] * y[110])/(130e-6 + 1e-6 * y[278] * y[110])
    R1192 = (13.7 * 1e-6 * y[278] * y[260] * y[110])/(130e-6 + 1e-6 * y[278] * y[260] * y[110])
    R1194 = (13.7 * 1e-6 * y[110] * y[36])/(130e-6 + 1e-6 * y[110] * y[36])
    R1195 = (13.7 * 1e-6 * y[110] * y[173] * y[6])/(130e-6 + 1e-6 * y[110] * y[173] * y[6])
    R1212 = (13.7 * 1e-6 * y[278] * y[110] * y[727])/(130e-6 + 1e-6 * y[278] * y[110] * y[727])
    R1414 = (13.7 * 1e-6 * y[110] * y[814])/(130e-6 + 1e-6 * y[110] * y[814])
    R1469 = (13.7 * 1e-6 * y[1018] * y[110])/(130e-6 + 1e-6 * y[1018] * y[110])
    R1832 = (13.7 * 1e-6 * y[110] * y[1044])/(130e-6 + 1e-6 * y[110] * y[1044])
    R2047 = (13.7 * 1e-6 * y[1040] * y[110])/(130e-6 + 1e-6 * y[1040] * y[110])
    R2263 = (13.7 * 1e-6 * y[1253] * y[110])/(130e-6 + 1e-6 * y[1253] * y[110])
    R2365 = (13.7 * 1e-6 * y[110] * y[1299])/(130e-6 + 1e-6 * y[110] * y[1299])
    R2378 = (13.7 * 1e-6 * y[481] * y[110])/(130e-6 + 1e-6 * y[481] * y[110])
    return (R95 + R157 + R183 + R222 + R276 + R306 + R349 + R393 + R449 + R1183 + R1185 + R1190 + R1202 + R1204 + R1205 + R1206 + R1213 + R1219 + R1220 + R1246 + R1387 + R1393 + R1450 + R1783 + R1942 + R2042 + R2077 + R2129 + R2151 + R2182 + R2296 + R2305) - (R86 + R601 + R926 + R1178 + R1187 + R1189 + R1192 + R1194 + R1195 + R1212 + R1414 + R1469 + R1832 + R2047 + R2263 + R2365 + R2378)
 
def m_sucsal_c(t, y):
    R95 = (13.7 * 1e-6 * y[112] * y[213])/(130e-6 + 1e-6 * y[112] * y[213])
    R2199 = (13.7 * 1e-6 * y[173] * y[236] * y[111])/(130e-6 + 1e-6 * y[173] * y[236] * y[111])
    R2200 = (13.7 * 1e-6 * y[173] * y[6] * y[111])/(130e-6 + 1e-6 * y[173] * y[6] * y[111])
    return (R95) - (R2199 + R2200)
 
def m_4abut_c(t, y):
    R96 = (13.7 * 1e-6 * y[1169] * y[173] * y[236])/(130e-6 + 1e-6 * y[1169] * y[173] * y[236])
    R97 = (13.7 * 1e-6 * y[117] * y[61])/(130e-6 + 1e-6 * y[117] * y[61])
    R1185 = (13.7 * 1e-6 * y[714] * y[173])/(130e-6 + 1e-6 * y[714] * y[173])
    R1194 = (13.7 * 1e-6 * y[110] * y[36])/(130e-6 + 1e-6 * y[110] * y[36])
    R95 = (13.7 * 1e-6 * y[112] * y[213])/(130e-6 + 1e-6 * y[112] * y[213])
    R1190 = (13.7 * 1e-6 * y[112] * y[724])/(130e-6 + 1e-6 * y[112] * y[724])
    return (R96 + R97 + R1185 + R1194) - (R95 + R1190)
 
def m_nadh_c(t, y):
    R96 = (13.7 * 1e-6 * y[1169] * y[173] * y[236])/(130e-6 + 1e-6 * y[1169] * y[173] * y[236])
    R110 = (13.7 * 1e-6 * y[132] * y[99] * y[236])/(130e-6 + 1e-6 * y[132] * y[99] * y[236])
    R203 = (13.7 * 1e-6 * y[213] * y[99] * y[236])/(130e-6 + 1e-6 * y[213] * y[99] * y[236])
    R240 = (13.7 * 1e-6 * y[571] * y[236])/(130e-6 + 1e-6 * y[571] * y[236])
    R246 = (13.7 * 1e-6 * y[173] * y[236] * y[996])/(130e-6 + 1e-6 * y[173] * y[236] * y[996])
    R247 = (13.7 * 1e-6 * y[132] * y[173] * y[236])/(130e-6 + 1e-6 * y[132] * y[173] * y[236])
    R256 = (13.7 * 1e-6 * y[1141] * y[173] * y[236])/(130e-6 + 1e-6 * y[1141] * y[173] * y[236])
    R259 = (13.7 * 1e-6 * y[592] * y[173] * y[236])/(130e-6 + 1e-6 * y[592] * y[173] * y[236])
    R343 = (13.7 * 1e-6 * y[1376] * y[173] * y[236])/(130e-6 + 1e-6 * y[1376] * y[173] * y[236])
    R565 = (13.7 * 1e-6 * y[913] * y[173] * y[236])/(130e-6 + 1e-6 * y[913] * y[173] * y[236])
    R587 = (13.7 * 1e-6 * y[809] * y[236])/(130e-6 + 1e-6 * y[809] * y[236])
    R590 = (13.7 * 1e-6 * y[356] * y[236])/(130e-6 + 1e-6 * y[356] * y[236])
    R611 = (13.7 * 1e-6 * y[1132] * y[236])/(130e-6 + 1e-6 * y[1132] * y[236])
    R655 = (13.7 * 1e-6 * y[1237] * y[173] * y[236])/(130e-6 + 1e-6 * y[1237] * y[173] * y[236])
    R996 = (13.7 * 1e-6 * y[605] * y[236])/(130e-6 + 1e-6 * y[605] * y[236])
    R1108 = (13.7 * 1e-6 * y[669] * y[236])/(130e-6 + 1e-6 * y[669] * y[236])
    R1157 = (13.7 * 1e-6 * y[480] * y[236] * y[37])/(130e-6 + 1e-6 * y[480] * y[236] * y[37])
    R1165 = (13.7 * 1e-6 * y[509] * y[173] * y[236])/(130e-6 + 1e-6 * y[509] * y[173] * y[236])
    R1182 = (13.7 * 1e-6 * y[686] * y[236])/(130e-6 + 1e-6 * y[686] * y[236])
    R1251 = (13.7 * 1e-6 * y[240] * y[236])/(130e-6 + 1e-6 * y[240] * y[236])
    R1259 = (13.7 * 1e-6 * y[261] * y[236] * y[206])/(130e-6 + 1e-6 * y[261] * y[236] * y[206])
    R1298 = (13.7 * 1e-6 * y[1448] * y[236])/(130e-6 + 1e-6 * y[1448] * y[236])
    R1299 = (13.7 * 1e-6 * y[1449] * y[236])/(130e-6 + 1e-6 * y[1449] * y[236])
    R1300 = (13.7 * 1e-6 * y[1450] * y[236])/(130e-6 + 1e-6 * y[1450] * y[236])
    R1305 = (13.7 * 1e-6 * y[1451] * y[236])/(130e-6 + 1e-6 * y[1451] * y[236])
    R1355 = (13.7 * 1e-6 * y[1444] * y[236])/(130e-6 + 1e-6 * y[1444] * y[236])
    R1357 = (13.7 * 1e-6 * y[1445] * y[236])/(130e-6 + 1e-6 * y[1445] * y[236])
    R1358 = (13.7 * 1e-6 * y[1446] * y[236])/(130e-6 + 1e-6 * y[1446] * y[236])
    R1359 = (13.7 * 1e-6 * y[1447] * y[236])/(130e-6 + 1e-6 * y[1447] * y[236])
    R1363 = (13.7 * 1e-6 * y[173] * y[804] * y[236])/(130e-6 + 1e-6 * y[173] * y[804] * y[236])
    R1408 = (13.7 * 1e-6 * y[173] * y[747] * y[236])/(130e-6 + 1e-6 * y[173] * y[747] * y[236])
    R1415 = (13.7 * 1e-6 * y[173] * y[197] * y[236])/(130e-6 + 1e-6 * y[173] * y[197] * y[236])
    R1433 = (13.7 * 1e-6 * y[1634] * y[236])/(130e-6 + 1e-6 * y[1634] * y[236])
    R1451 = (13.7 * 1e-6 * y[173] * y[608] * y[236])/(130e-6 + 1e-6 * y[173] * y[608] * y[236])
    R1467 = (13.7 * 1e-6 * y[106] * y[236])/(130e-6 + 1e-6 * y[106] * y[236])
    R1557 = (13.7 * 1e-6 * y[971] * y[236])/(130e-6 + 1e-6 * y[971] * y[236])
    R1565 = (13.7 * 1e-6 * y[886] * y[236])/(130e-6 + 1e-6 * y[886] * y[236])
    R1614 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1617 = (13.7 * 1e-6 * y[1648] * y[236])/(130e-6 + 1e-6 * y[1648] * y[236])
    R1626 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1783 = (13.7 * 1e-6 * y[692] * y[173] * y[236])/(130e-6 + 1e-6 * y[692] * y[173] * y[236])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    R1846 = (13.7 * 1e-6 * y[99] * y[236] * y[92])/(130e-6 + 1e-6 * y[99] * y[236] * y[92])
    R1847 = (13.7 * 1e-6 * y[236] * y[1026])/(130e-6 + 1e-6 * y[236] * y[1026])
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    R1866 = (13.7 * 1e-6 * y[752] * y[236])/(130e-6 + 1e-6 * y[752] * y[236])
    R1877 = (13.7 * 1e-6 * y[547] * y[236])/(130e-6 + 1e-6 * y[547] * y[236])
    R2008 = (13.7 * 1e-6 * y[236] * y[350])/(130e-6 + 1e-6 * y[236] * y[350])
    R2115 = (13.7 * 1e-6 * y[236] * y[1181])/(130e-6 + 1e-6 * y[236] * y[1181])
    R2152 = (13.7 * 1e-6 * y[173] * y[236] * y[1212])/(130e-6 + 1e-6 * y[173] * y[236] * y[1212])
    R2159 = (13.7 * 1e-6 * y[1310] * y[236])/(130e-6 + 1e-6 * y[1310] * y[236])
    R2184 = (13.7 * 1e-6 * y[236] * y[1216])/(130e-6 + 1e-6 * y[236] * y[1216])
    R2199 = (13.7 * 1e-6 * y[173] * y[236] * y[111])/(130e-6 + 1e-6 * y[173] * y[236] * y[111])
    R2222 = (13.7 * 1e-6 * y[236] * y[201])/(130e-6 + 1e-6 * y[236] * y[201])
    R2240 = (13.7 * 1e-6 * y[1354] * y[236])/(130e-6 + 1e-6 * y[1354] * y[236])
    R2282 = (13.7 * 1e-6 * y[236] * y[257])/(130e-6 + 1e-6 * y[236] * y[257])
    R2315 = (13.7 * 1e-6 * y[173] * y[236] * y[1275])/(130e-6 + 1e-6 * y[173] * y[236] * y[1275])
    R2323 = (13.7 * 1e-6 * y[173] * y[236] * y[780])/(130e-6 + 1e-6 * y[173] * y[236] * y[780])
    R2360 = (13.7 * 1e-6 * y[173] * y[236] * y[694])/(130e-6 + 1e-6 * y[173] * y[236] * y[694])
    R2361 = (13.7 * 1e-6 * y[236] * y[1298])/(130e-6 + 1e-6 * y[236] * y[1298])
    R234 = (13.7 * 1e-6 * y[233] * y[36] * y[113])/(130e-6 + 1e-6 * y[233] * y[36] * y[113])
    R239 = (13.7 * 1e-6 * y[737] * y[36] * y[113])/(130e-6 + 1e-6 * y[737] * y[36] * y[113])
    R312 = (13.7 * 1e-6 * y[1367] * y[36] * y[113])/(130e-6 + 1e-6 * y[1367] * y[36] * y[113])
    R339 = (13.7 * 1e-6 * y[479] * y[36] * y[113])/(130e-6 + 1e-6 * y[479] * y[36] * y[113])
    R346 = (13.7 * 1e-6 * y[1377] * y[36] * y[113])/(130e-6 + 1e-6 * y[1377] * y[36] * y[113])
    R398 = (13.7 * 1e-6 * y[1393] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[1393] * y[36] * y[113] * y[335])
    R543 = (13.7 * 1e-6 * y[777] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[777] * y[36] * y[113] * y[335])
    R549 = (13.7 * 1e-6 * y[819] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[819] * y[36] * y[113] * y[335])
    R560 = (13.7 * 1e-6 * y[1422] * y[36] * y[113])/(130e-6 + 1e-6 * y[1422] * y[36] * y[113])
    R571 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R606 = (13.7 * 1e-6 * y[1431] * y[36] * y[113])/(130e-6 + 1e-6 * y[1431] * y[36] * y[113])
    R638 = (13.7 * 1e-6 * y[440] * y[36] * y[113])/(130e-6 + 1e-6 * y[440] * y[36] * y[113])
    R644 = (13.7 * 1e-6 * y[36] * y[113] * y[445])/(130e-6 + 1e-6 * y[36] * y[113] * y[445])
    R649 = (13.7 * 1e-6 * y[36] * y[113] * y[463])/(130e-6 + 1e-6 * y[36] * y[113] * y[463])
    R658 = (13.7 * 1e-6 * y[36] * y[113] * y[360])/(130e-6 + 1e-6 * y[36] * y[113] * y[360])
    R661 = (13.7 * 1e-6 * y[36] * y[113] * y[371])/(130e-6 + 1e-6 * y[36] * y[113] * y[371])
    R668 = (13.7 * 1e-6 * y[36] * y[113] * y[374])/(130e-6 + 1e-6 * y[36] * y[113] * y[374])
    R670 = (13.7 * 1e-6 * y[36] * y[113] * y[393])/(130e-6 + 1e-6 * y[36] * y[113] * y[393])
    R677 = (13.7 * 1e-6 * y[36] * y[113] * y[401])/(130e-6 + 1e-6 * y[36] * y[113] * y[401])
    R681 = (13.7 * 1e-6 * y[36] * y[113] * y[410])/(130e-6 + 1e-6 * y[36] * y[113] * y[410])
    R683 = (13.7 * 1e-6 * y[36] * y[113] * y[421])/(130e-6 + 1e-6 * y[36] * y[113] * y[421])
    R690 = (13.7 * 1e-6 * y[36] * y[113] * y[428])/(130e-6 + 1e-6 * y[36] * y[113] * y[428])
    R693 = (13.7 * 1e-6 * y[36] * y[113] * y[438])/(130e-6 + 1e-6 * y[36] * y[113] * y[438])
    R993 = (13.7 * 1e-6 * y[282] * y[36] * y[113])/(130e-6 + 1e-6 * y[282] * y[36] * y[113])
    R1085 = (13.7 * 1e-6 * y[36] * y[113] * y[285])/(130e-6 + 1e-6 * y[36] * y[113] * y[285])
    R1093 = (13.7 * 1e-6 * y[284] * y[36] * y[113])/(130e-6 + 1e-6 * y[284] * y[36] * y[113])
    R1261 = (13.7 * 1e-6 * y[593] * y[36] * y[113])/(130e-6 + 1e-6 * y[593] * y[36] * y[113])
    R1381 = (13.7 * 1e-6 * y[66] * y[36] * y[113])/(130e-6 + 1e-6 * y[66] * y[36] * y[113])
    R1400 = (13.7 * 1e-6 * y[36] * y[1631] * y[113])/(130e-6 + 1e-6 * y[36] * y[1631] * y[113])
    R1432 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R1448 = (13.7 * 1e-6 * y[36] * y[94] * y[113])/(130e-6 + 1e-6 * y[36] * y[94] * y[113])
    R1452 = (13.7 * 1e-6 * y[36] * y[845] * y[113])/(130e-6 + 1e-6 * y[36] * y[845] * y[113])
    R1453 = (13.7 * 1e-6 * y[36] * y[608] * y[113])/(130e-6 + 1e-6 * y[36] * y[608] * y[113])
    R1628 = (13.7 * 1e-6 * y[915] * y[113])/(130e-6 + 1e-6 * y[915] * y[113])
    R1666 = (13.7 * 1e-6 * y[36] * y[113] * y[966])/(130e-6 + 1e-6 * y[36] * y[113] * y[966])
    R1715 = (13.7 * 1e-6 * y[113] * y[966] * y[335])/(130e-6 + 1e-6 * y[113] * y[966] * y[335])
    R1779 = (13.7 * 1e-6 * y[36] * y[113] * y[959])/(130e-6 + 1e-6 * y[36] * y[113] * y[959])
    R1936 = (13.7 * 1e-6 * y[36] * y[717] * y[113])/(130e-6 + 1e-6 * y[36] * y[717] * y[113])
    R2018 = (13.7 * 1e-6 * y[36] * y[113] * y[335] * y[1133])/(130e-6 + 1e-6 * y[36] * y[113] * y[335] * y[1133])
    R2055 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2062 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2069 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2088 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2111 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2126 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2161 = (13.7 * 1e-6 * y[61] * y[113] * y[6])/(130e-6 + 1e-6 * y[61] * y[113] * y[6])
    R2274 = (13.7 * 1e-6 * y[728] * y[36] * y[113])/(130e-6 + 1e-6 * y[728] * y[36] * y[113])
    return (R96 + R110 + R203 + R240 + R246 + R247 + R256 + R259 + R343 + R565 + R587 + R590 + R611 + R655 + R996 + R1108 + R1157 + R1165 + R1182 + R1251 + R1259 + R1298 + R1299 + R1300 + R1305 + R1355 + R1357 + R1358 + R1359 + R1363 + R1408 + R1415 + R1433 + R1451 + R1467 + R1557 + R1565 + R1614 + R1617 + R1626 + R1783 + R1841 + R1846 + R1847 + R1849 + R1852 + R1856 + R1866 + R1877 + R2008 + R2115 + R2152 + R2159 + R2184 + R2199 + R2222 + R2240 + R2282 + R2315 + R2323 + R2360 + R2361) - (R234 + R239 + R312 + R339 + R346 + R398 + R543 + R549 + R560 + R571 + R606 + R638 + R644 + R649 + R658 + R661 + R668 + R670 + R677 + R681 + R683 + R690 + R693 + R993 + R1085 + R1093 + R1261 + R1381 + R1400 + R1432 + R1448 + R1452 + R1453 + R1628 + R1666 + R1715 + R1779 + R1936 + R2018 + R2055 + R2062 + R2069 + R2088 + R2111 + R2126 + R2161 + R2274)
 
def m_udp_c(t, y):
    R98 = (13.7 * 1e-6 * y[1274] * y[91])/(130e-6 + 1e-6 * y[1274] * y[91])
    R1131 = (13.7 * 1e-6 * y[732] * y[694])/(130e-6 + 1e-6 * y[732] * y[694])
    R1217 = (13.7 * 1e-6 * y[1157] * y[694])/(130e-6 + 1e-6 * y[1157] * y[694])
    R1218 = (13.7 * 1e-6 * y[685] * y[694])/(130e-6 + 1e-6 * y[685] * y[694])
    R1222 = (13.7 * 1e-6 * y[733] * y[694])/(130e-6 + 1e-6 * y[733] * y[694])
    R1494 = (13.7 * 1e-6 * y[1267] * y[1268])/(130e-6 + 1e-6 * y[1267] * y[1268])
    R1800 = (13.7 * 1e-6 * y[998] * y[1296])/(130e-6 + 1e-6 * y[998] * y[1296])
    R1803 = (13.7 * 1e-6 * y[993] * y[694])/(130e-6 + 1e-6 * y[993] * y[694])
    R1805 = (13.7 * 1e-6 * y[995] * y[694])/(130e-6 + 1e-6 * y[995] * y[694])
    R2248 = (13.7 * 1e-6 * y[108] * y[694])/(130e-6 + 1e-6 * y[108] * y[694])
    R2347 = (13.7 * 1e-6 * y[1288] * y[1021])/(130e-6 + 1e-6 * y[1288] * y[1021])
    R2376 = (13.7 * 1e-6 * y[278] * y[90])/(130e-6 + 1e-6 * y[278] * y[90])
    R2380 = (13.7 * 1e-6 * y[1293] * y[1305])/(130e-6 + 1e-6 * y[1293] * y[1305])
    R1647 = (13.7 * 1e-6 * y[278] * y[114])/(130e-6 + 1e-6 * y[278] * y[114])
    R2094 = (13.7 * 1e-6 * y[1240] * y[114])/(130e-6 + 1e-6 * y[1240] * y[114])
    R2095 = (13.7 * 1e-6 * y[762] * y[114])/(130e-6 + 1e-6 * y[762] * y[114])
    return (R98 + R1131 + R1217 + R1218 + R1222 + R1494 + R1800 + R1803 + R1805 + R2248 + R2347 + R2376 + R2380) - (R1647 + R2094 + R2095)
 
def m_unagamu_c(t, y):
    R98 = (13.7 * 1e-6 * y[1274] * y[91])/(130e-6 + 1e-6 * y[1274] * y[91])
    R87 = (13.7 * 1e-6 * y[1247] * y[115])/(130e-6 + 1e-6 * y[1247] * y[115])
    return (R98) - (R87)
 
def m_acmanap_c(t, y):
    R99 = (13.7 * 1e-6 * y[123] * y[563])/(130e-6 + 1e-6 * y[123] * y[563])
    R253 = (13.7 * 1e-6 * y[131] * y[278])/(130e-6 + 1e-6 * y[131] * y[278])
    R252 = (13.7 * 1e-6 * y[116])/(130e-6 + 1e-6 * y[116])
    return (R99 + R253) - (R252)
 
def m_4abut_p(t, y):
    R100 = (13.7 * 1e-6 * y[1330])/(130e-6 + 1e-6 * y[1330])
    R1190 = (13.7 * 1e-6 * y[112] * y[724])/(130e-6 + 1e-6 * y[112] * y[724])
    R97 = (13.7 * 1e-6 * y[117] * y[61])/(130e-6 + 1e-6 * y[117] * y[61])
    return (R100 + R1190) - (R97)
 
def m_2agpe180_c(t, y):
    R101 = (13.7 * 1e-6 * y[1114])/(130e-6 + 1e-6 * y[1114])
    R146 = (13.7 * 1e-6 * y[118] * y[278] * y[582])/(130e-6 + 1e-6 * y[118] * y[278] * y[582])
    R1513 = (13.7 * 1e-6 * y[118] * y[173])/(130e-6 + 1e-6 * y[118] * y[173])
    R1563 = (13.7 * 1e-6 * y[118] * y[276])/(130e-6 + 1e-6 * y[118] * y[276])
    return (R101) - (R146 + R1513 + R1563)
 
def m_aacoa_c(t, y):
    R102 = (13.7 * 1e-6 * y[121] * y[127])/(130e-6 + 1e-6 * y[121] * y[127])
    R103 = (13.7 * 1e-6 * y[127])/(130e-6 + 1e-6 * y[127])
    R1355 = (13.7 * 1e-6 * y[1444] * y[236])/(130e-6 + 1e-6 * y[1444] * y[236])
    R1463 = (13.7 * 1e-6 * y[119] * y[99])/(130e-6 + 1e-6 * y[119] * y[99])
    return (R102 + R103 + R1355) - (R1463)
 
def m_ac_c(t, y):
    R102 = (13.7 * 1e-6 * y[121] * y[127])/(130e-6 + 1e-6 * y[121] * y[127])
    R135 = (13.7 * 1e-6 * y[1338] * y[173])/(130e-6 + 1e-6 * y[1338] * y[173])
    R142 = (13.7 * 1e-6 * y[85] * y[173])/(130e-6 + 1e-6 * y[85] * y[173])
    R175 = (13.7 * 1e-6 * y[190] * y[61])/(130e-6 + 1e-6 * y[190] * y[61])
    R176 = (13.7 * 1e-6 * y[190] * y[927])/(130e-6 + 1e-6 * y[190] * y[927])
    R247 = (13.7 * 1e-6 * y[132] * y[173] * y[236])/(130e-6 + 1e-6 * y[132] * y[173] * y[236])
    R249 = (13.7 * 1e-6 * y[132] * y[173] * y[6])/(130e-6 + 1e-6 * y[132] * y[173] * y[6])
    R354 = (13.7 * 1e-6 * y[127] * y[254])/(130e-6 + 1e-6 * y[127] * y[254])
    R399 = (13.7 * 1e-6 * y[357])/(130e-6 + 1e-6 * y[357])
    R489 = (13.7 * 1e-6 * y[1190] * y[430])/(130e-6 + 1e-6 * y[1190] * y[430])
    R1418 = (13.7 * 1e-6 * y[127] * y[584])/(130e-6 + 1e-6 * y[127] * y[584])
    R1968 = (13.7 * 1e-6 * y[173] * y[92] * y[444])/(130e-6 + 1e-6 * y[173] * y[92] * y[444])
    R2006 = (13.7 * 1e-6 * y[175] * y[173])/(130e-6 + 1e-6 * y[175] * y[173])
    R2370 = (13.7 * 1e-6 * y[173] * y[1277])/(130e-6 + 1e-6 * y[173] * y[1277])
    R90 = (13.7 * 1e-6 * y[120] * y[278])/(130e-6 + 1e-6 * y[120] * y[278])
    R166 = (13.7 * 1e-6 * y[120] * y[278] * y[99])/(130e-6 + 1e-6 * y[120] * y[278] * y[99])
    return (R102 + R135 + R142 + R175 + R176 + R247 + R249 + R354 + R399 + R489 + R1418 + R1968 + R2006 + R2370) - (R90 + R166)
 
def m_acac_c(t, y):
    R104 = (13.7 * 1e-6 * y[122] * y[61])/(130e-6 + 1e-6 * y[122] * y[61])
    R102 = (13.7 * 1e-6 * y[121] * y[127])/(130e-6 + 1e-6 * y[121] * y[127])
    return (R104) - (R102)
 
def m_acac_p(t, y):
    R105 = (13.7 * 1e-6 * y[1331])/(130e-6 + 1e-6 * y[1331])
    R104 = (13.7 * 1e-6 * y[122] * y[61])/(130e-6 + 1e-6 * y[122] * y[61])
    return (R105) - (R104)
 
def m_acmana_p(t, y):
    R106 = (13.7 * 1e-6 * y[1332])/(130e-6 + 1e-6 * y[1332])
    R99 = (13.7 * 1e-6 * y[123] * y[563])/(130e-6 + 1e-6 * y[123] * y[563])
    return (R106) - (R99)
 
def m_acmum6p_c(t, y):
    R107 = (13.7 * 1e-6 * y[125] * y[563])/(130e-6 + 1e-6 * y[125] * y[563])
    R272 = (13.7 * 1e-6 * y[179] * y[278] * y[173])/(130e-6 + 1e-6 * y[179] * y[278] * y[173])
    R92 = (13.7 * 1e-6 * y[124] * y[173])/(130e-6 + 1e-6 * y[124] * y[173])
    return (R107 + R272) - (R92)
 
def m_acmum_p(t, y):
    R108 = (13.7 * 1e-6 * y[1333])/(130e-6 + 1e-6 * y[1333])
    R107 = (13.7 * 1e-6 * y[125] * y[563])/(130e-6 + 1e-6 * y[125] * y[563])
    return (R108) - (R107)
 
def m_acnam_c(t, y):
    R109 = (13.7 * 1e-6 * y[129] * y[61])/(130e-6 + 1e-6 * y[129] * y[61])
    R114 = (13.7 * 1e-6 * y[126])/(130e-6 + 1e-6 * y[126])
    return (R109) - (R114)
 
def m_accoa_c(t, y):
    R110 = (13.7 * 1e-6 * y[132] * y[99] * y[236])/(130e-6 + 1e-6 * y[132] * y[99] * y[236])
    R166 = (13.7 * 1e-6 * y[120] * y[278] * y[99])/(130e-6 + 1e-6 * y[120] * y[278] * y[99])
    R1463 = (13.7 * 1e-6 * y[119] * y[99])/(130e-6 + 1e-6 * y[119] * y[99])
    R1464 = (13.7 * 1e-6 * y[799] * y[99])/(130e-6 + 1e-6 * y[799] * y[99])
    R1465 = (13.7 * 1e-6 * y[800] * y[99])/(130e-6 + 1e-6 * y[800] * y[99])
    R1466 = (13.7 * 1e-6 * y[801] * y[99])/(130e-6 + 1e-6 * y[801] * y[99])
    R1471 = (13.7 * 1e-6 * y[768] * y[99])/(130e-6 + 1e-6 * y[768] * y[99])
    R1473 = (13.7 * 1e-6 * y[769] * y[99])/(130e-6 + 1e-6 * y[769] * y[99])
    R1474 = (13.7 * 1e-6 * y[770] * y[99])/(130e-6 + 1e-6 * y[770] * y[99])
    R1475 = (13.7 * 1e-6 * y[772] * y[99])/(130e-6 + 1e-6 * y[772] * y[99])
    R1846 = (13.7 * 1e-6 * y[99] * y[236] * y[92])/(130e-6 + 1e-6 * y[99] * y[236] * y[92])
    R1887 = (13.7 * 1e-6 * y[99] * y[92])/(130e-6 + 1e-6 * y[99] * y[92])
    R86 = (13.7 * 1e-6 * y[127] * y[110])/(130e-6 + 1e-6 * y[127] * y[110])
    R102 = (13.7 * 1e-6 * y[121] * y[127])/(130e-6 + 1e-6 * y[121] * y[127])
    R103 = (13.7 * 1e-6 * y[127])/(130e-6 + 1e-6 * y[127])
    R116 = (13.7 * 1e-6 * y[127] * y[270])/(130e-6 + 1e-6 * y[127] * y[270])
    R120 = (13.7 * 1e-6 * y[127] * y[278] * y[782])/(130e-6 + 1e-6 * y[127] * y[278] * y[782])
    R133 = (13.7 * 1e-6 * y[15] * y[127])/(130e-6 + 1e-6 * y[15] * y[127])
    R354 = (13.7 * 1e-6 * y[127] * y[254])/(130e-6 + 1e-6 * y[127] * y[254])
    R436 = (13.7 * 1e-6 * y[127] * y[173] * y[298])/(130e-6 + 1e-6 * y[127] * y[173] * y[298])
    R1082 = (13.7 * 1e-6 * y[127] * y[1594])/(130e-6 + 1e-6 * y[127] * y[1594])
    R1197 = (13.7 * 1e-6 * y[127] * y[242])/(130e-6 + 1e-6 * y[127] * y[242])
    R1228 = (13.7 * 1e-6 * y[127] * y[261])/(130e-6 + 1e-6 * y[127] * y[261])
    R1418 = (13.7 * 1e-6 * y[127] * y[584])/(130e-6 + 1e-6 * y[127] * y[584])
    R1441 = (13.7 * 1e-6 * y[490] * y[127] * y[173])/(130e-6 + 1e-6 * y[490] * y[127] * y[173])
    R1461 = (13.7 * 1e-6 * y[127] * y[36] * y[918])/(130e-6 + 1e-6 * y[127] * y[36] * y[918])
    R1568 = (13.7 * 1e-6 * y[127] * y[593] * y[173])/(130e-6 + 1e-6 * y[127] * y[593] * y[173])
    R1571 = (13.7 * 1e-6 * y[127] * y[894])/(130e-6 + 1e-6 * y[127] * y[894])
    R1798 = (13.7 * 1e-6 * y[127] * y[1653])/(130e-6 + 1e-6 * y[127] * y[1653])
    R2073 = (13.7 * 1e-6 * y[127] * y[37])/(130e-6 + 1e-6 * y[127] * y[37])
    R2133 = (13.7 * 1e-6 * y[127] * y[500])/(130e-6 + 1e-6 * y[127] * y[500])
    R2183 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    R2188 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    R2262 = (13.7 * 1e-6 * y[127] * y[1248])/(130e-6 + 1e-6 * y[127] * y[1248])
    return (R110 + R166 + R1463 + R1464 + R1465 + R1466 + R1471 + R1473 + R1474 + R1475 + R1846 + R1887) - (R86 + R102 + R103 + R116 + R120 + R133 + R354 + R436 + R1082 + R1197 + R1228 + R1418 + R1441 + R1461 + R1568 + R1571 + R1798 + R2073 + R2133 + R2183 + R2188 + R2262)
 
def m_acald_p(t, y):
    R111 = (13.7 * 1e-6 * y[1334])/(130e-6 + 1e-6 * y[1334])
    R115 = (13.7 * 1e-6 * y[128])/(130e-6 + 1e-6 * y[128])
    return (R111) - (R115)
 
def m_acnam_p(t, y):
    R112 = (13.7 * 1e-6 * y[1335])/(130e-6 + 1e-6 * y[1335])
    R109 = (13.7 * 1e-6 * y[129] * y[61])/(130e-6 + 1e-6 * y[129] * y[61])
    return (R112) - (R109)
 
def m_2agpe181_c(t, y):
    R113 = (13.7 * 1e-6 * y[1115])/(130e-6 + 1e-6 * y[1115])
    R147 = (13.7 * 1e-6 * y[130] * y[278] * y[583])/(130e-6 + 1e-6 * y[130] * y[278] * y[583])
    R1514 = (13.7 * 1e-6 * y[130] * y[173])/(130e-6 + 1e-6 * y[130] * y[173])
    R1569 = (13.7 * 1e-6 * y[130] * y[294])/(130e-6 + 1e-6 * y[130] * y[294])
    return (R113) - (R147 + R1514 + R1569)
 
def m_acmana_c(t, y):
    R114 = (13.7 * 1e-6 * y[126])/(130e-6 + 1e-6 * y[126])
    R253 = (13.7 * 1e-6 * y[131] * y[278])/(130e-6 + 1e-6 * y[131] * y[278])
    return (R114) - (R253)
 
def m_acald_c(t, y):
    R115 = (13.7 * 1e-6 * y[128])/(130e-6 + 1e-6 * y[128])
    R240 = (13.7 * 1e-6 * y[571] * y[236])/(130e-6 + 1e-6 * y[571] * y[236])
    R616 = (13.7 * 1e-6 * y[1125])/(130e-6 + 1e-6 * y[1125])
    R705 = (13.7 * 1e-6 * y[567])/(130e-6 + 1e-6 * y[567])
    R1030 = (13.7 * 1e-6 * y[569] * y[655] * y[335])/(130e-6 + 1e-6 * y[569] * y[655] * y[335])
    R1390 = (13.7 * 1e-6 * y[1028])/(130e-6 + 1e-6 * y[1028])
    R2176 = (13.7 * 1e-6 * y[1372])/(130e-6 + 1e-6 * y[1372])
    R2179 = (13.7 * 1e-6 * y[1216])/(130e-6 + 1e-6 * y[1216])
    R110 = (13.7 * 1e-6 * y[132] * y[99] * y[236])/(130e-6 + 1e-6 * y[132] * y[99] * y[236])
    R247 = (13.7 * 1e-6 * y[132] * y[173] * y[236])/(130e-6 + 1e-6 * y[132] * y[173] * y[236])
    R249 = (13.7 * 1e-6 * y[132] * y[173] * y[6])/(130e-6 + 1e-6 * y[132] * y[173] * y[6])
    return (R115 + R240 + R616 + R705 + R1030 + R1390 + R2176 + R2179) - (R110 + R247 + R249)
 
def m_acanth_c(t, y):
    R116 = (13.7 * 1e-6 * y[127] * y[270])/(130e-6 + 1e-6 * y[127] * y[270])
    return (R116) - (0)
 
def m_agdpcbi_c(t, y):
    R117 = (13.7 * 1e-6 * y[220] * y[928] * y[36])/(130e-6 + 1e-6 * y[220] * y[928] * y[36])
    R215 = (13.7 * 1e-6 * y[134] * y[1175])/(130e-6 + 1e-6 * y[134] * y[1175])
    return (R117) - (R215)
 
def m_b2coa_c(t, y):
    R118 = (13.7 * 1e-6 * y[327] * y[282])/(130e-6 + 1e-6 * y[327] * y[282])
    R666 = (13.7 * 1e-6 * y[1444])/(130e-6 + 1e-6 * y[1444])
    return (R118 + R666) - (0)
 
def m_fadh2_c(t, y):
    R118 = (13.7 * 1e-6 * y[327] * y[282])/(130e-6 + 1e-6 * y[327] * y[282])
    R119 = (13.7 * 1e-6 * y[282] * y[596])/(130e-6 + 1e-6 * y[282] * y[596])
    R126 = (13.7 * 1e-6 * y[282] * y[597])/(130e-6 + 1e-6 * y[282] * y[597])
    R127 = (13.7 * 1e-6 * y[585] * y[282])/(130e-6 + 1e-6 * y[585] * y[282])
    R128 = (13.7 * 1e-6 * y[586] * y[282])/(130e-6 + 1e-6 * y[586] * y[282])
    R129 = (13.7 * 1e-6 * y[282] * y[587])/(130e-6 + 1e-6 * y[282] * y[587])
    R130 = (13.7 * 1e-6 * y[282] * y[589])/(130e-6 + 1e-6 * y[282] * y[589])
    R131 = (13.7 * 1e-6 * y[282] * y[591])/(130e-6 + 1e-6 * y[282] * y[591])
    R527 = (13.7 * 1e-6 * y[45] * y[282] * y[173])/(130e-6 + 1e-6 * y[45] * y[282] * y[173])
    R993 = (13.7 * 1e-6 * y[282] * y[36] * y[113])/(130e-6 + 1e-6 * y[282] * y[36] * y[113])
    R995 = (13.7 * 1e-6 * y[282] * y[36] * y[201])/(130e-6 + 1e-6 * y[282] * y[36] * y[201])
    R2044 = (13.7 * 1e-6 * y[282] * y[262])/(130e-6 + 1e-6 * y[282] * y[262])
    R289 = (13.7 * 1e-6 * y[291] * y[136])/(130e-6 + 1e-6 * y[291] * y[136])
    R463 = (13.7 * 1e-6 * y[422] * y[136])/(130e-6 + 1e-6 * y[422] * y[136])
    R1002 = (13.7 * 1e-6 * y[136] * y[612])/(130e-6 + 1e-6 * y[136] * y[612])
    R1018 = (13.7 * 1e-6 * y[136] * y[566])/(130e-6 + 1e-6 * y[136] * y[566])
    R1026 = (13.7 * 1e-6 * y[136] * y[619])/(130e-6 + 1e-6 * y[136] * y[619])
    R1047 = (13.7 * 1e-6 * y[136] * y[626])/(130e-6 + 1e-6 * y[136] * y[626])
    R1062 = (13.7 * 1e-6 * y[136] * y[640])/(130e-6 + 1e-6 * y[136] * y[640])
    return (R118 + R119 + R126 + R127 + R128 + R129 + R130 + R131 + R527 + R993 + R995 + R2044) - (R289 + R463 + R1002 + R1018 + R1026 + R1047 + R1062)
 
def m_hx2coa_c(t, y):
    R119 = (13.7 * 1e-6 * y[282] * y[596])/(130e-6 + 1e-6 * y[282] * y[596])
    R667 = (13.7 * 1e-6 * y[1445])/(130e-6 + 1e-6 * y[1445])
    return (R119 + R667) - (0)
 
def m_malcoa_c(t, y):
    R120 = (13.7 * 1e-6 * y[127] * y[278] * y[782])/(130e-6 + 1e-6 * y[127] * y[278] * y[782])
    R1632 = (13.7 * 1e-6 * y[15] * y[138])/(130e-6 + 1e-6 * y[15] * y[138])
    return (R120) - (R1632)
 
def m_pe120_c(t, y):
    R121 = (13.7 * 1e-6 * y[17] * y[278] * y[576])/(130e-6 + 1e-6 * y[17] * y[278] * y[576])
    R2029 = (13.7 * 1e-6 * y[36] * y[1151])/(130e-6 + 1e-6 * y[36] * y[1151])
    R1859 = (13.7 * 1e-6 * y[278] * y[173] * y[139])/(130e-6 + 1e-6 * y[278] * y[173] * y[139])
    return (R121 + R2029) - (R1859)
 
def m_ppcoa_c(t, y):
    R122 = (13.7 * 1e-6 * y[278] * y[99] * y[253])/(130e-6 + 1e-6 * y[278] * y[99] * y[253])
    R1639 = (13.7 * 1e-6 * y[36] * y[924])/(130e-6 + 1e-6 * y[36] * y[924])
    R1821 = (13.7 * 1e-6 * y[1214] * y[99])/(130e-6 + 1e-6 * y[1214] * y[99])
    R1631 = (13.7 * 1e-6 * y[173] * y[298] * y[140])/(130e-6 + 1e-6 * y[173] * y[298] * y[140])
    R1994 = (13.7 * 1e-6 * y[140] * y[290])/(130e-6 + 1e-6 * y[140] * y[290])
    R2072 = (13.7 * 1e-6 * y[37] * y[140])/(130e-6 + 1e-6 * y[37] * y[140])
    return (R122 + R1639 + R1821) - (R1631 + R1994 + R2072)
 
def m_acgal_p(t, y):
    R123 = (13.7 * 1e-6 * y[142] * y[406])/(130e-6 + 1e-6 * y[142] * y[406])
    R125 = (13.7 * 1e-6 * y[1337])/(130e-6 + 1e-6 * y[1337])
    return (R123 + R125) - (0)
 
def m_acgal1p_p(t, y):
    R124 = (13.7 * 1e-6 * y[1336])/(130e-6 + 1e-6 * y[1336])
    R2309 = (13.7 * 1e-6 * y[406] * y[1294])/(130e-6 + 1e-6 * y[406] * y[1294])
    R123 = (13.7 * 1e-6 * y[142] * y[406])/(130e-6 + 1e-6 * y[142] * y[406])
    return (R124 + R2309) - (R123)
 
def m_oc2coa_c(t, y):
    R126 = (13.7 * 1e-6 * y[282] * y[597])/(130e-6 + 1e-6 * y[282] * y[597])
    R671 = (13.7 * 1e-6 * y[1446])/(130e-6 + 1e-6 * y[1446])
    return (R126 + R671) - (0)
 
def m_dc2coa_c(t, y):
    R127 = (13.7 * 1e-6 * y[585] * y[282])/(130e-6 + 1e-6 * y[585] * y[282])
    R673 = (13.7 * 1e-6 * y[1447])/(130e-6 + 1e-6 * y[1447])
    return (R127 + R673) - (0)
 
def m_dd2coa_c(t, y):
    R128 = (13.7 * 1e-6 * y[586] * y[282])/(130e-6 + 1e-6 * y[586] * y[282])
    R674 = (13.7 * 1e-6 * y[1448])/(130e-6 + 1e-6 * y[1448])
    return (R128 + R674) - (0)
 
def m_td2coa_c(t, y):
    R129 = (13.7 * 1e-6 * y[282] * y[587])/(130e-6 + 1e-6 * y[282] * y[587])
    R675 = (13.7 * 1e-6 * y[1449])/(130e-6 + 1e-6 * y[1449])
    R2260 = (13.7 * 1e-6 * y[588])/(130e-6 + 1e-6 * y[588])
    return (R129 + R675 + R2260) - (0)
 
def m_hdd2coa_c(t, y):
    R130 = (13.7 * 1e-6 * y[282] * y[589])/(130e-6 + 1e-6 * y[282] * y[589])
    R679 = (13.7 * 1e-6 * y[1450])/(130e-6 + 1e-6 * y[1450])
    R1331 = (13.7 * 1e-6 * y[590])/(130e-6 + 1e-6 * y[590])
    return (R130 + R679 + R1331) - (0)
 
def m_od2coa_c(t, y):
    R131 = (13.7 * 1e-6 * y[282] * y[591])/(130e-6 + 1e-6 * y[282] * y[591])
    R680 = (13.7 * 1e-6 * y[1451])/(130e-6 + 1e-6 * y[1451])
    R1830 = (13.7 * 1e-6 * y[595])/(130e-6 + 1e-6 * y[595])
    return (R131 + R680 + R1830) - (0)
 
def m_acACP_c(t, y):
    R133 = (13.7 * 1e-6 * y[15] * y[127])/(130e-6 + 1e-6 * y[15] * y[127])
    R1564 = (13.7 * 1e-6 * y[36] * y[918])/(130e-6 + 1e-6 * y[36] * y[918])
    R1458 = (13.7 * 1e-6 * y[149] * y[36] * y[918])/(130e-6 + 1e-6 * y[149] * y[36] * y[918])
    return (R133 + R1564) - (R1458)
 
def m_pe140_c(t, y):
    R134 = (13.7 * 1e-6 * y[25] * y[278] * y[577])/(130e-6 + 1e-6 * y[25] * y[278] * y[577])
    R2030 = (13.7 * 1e-6 * y[36] * y[1152])/(130e-6 + 1e-6 * y[36] * y[1152])
    R1860 = (13.7 * 1e-6 * y[278] * y[173] * y[150])/(130e-6 + 1e-6 * y[278] * y[173] * y[150])
    return (R134 + R2030) - (R1860)
 
def m_orn_c(t, y):
    R135 = (13.7 * 1e-6 * y[1338] * y[173])/(130e-6 + 1e-6 * y[1338] * y[173])
    R1766 = (13.7 * 1e-6 * y[278] * y[173] * y[306])/(130e-6 + 1e-6 * y[278] * y[173] * y[306])
    R321 = (13.7 * 1e-6 * y[315] * y[151])/(130e-6 + 1e-6 * y[315] * y[151])
    R1822 = (13.7 * 1e-6 * y[353] * y[151])/(130e-6 + 1e-6 * y[353] * y[151])
    R1857 = (13.7 * 1e-6 * y[36] * y[151])/(130e-6 + 1e-6 * y[36] * y[151])
    R2076 = (13.7 * 1e-6 * y[151] * y[1171])/(130e-6 + 1e-6 * y[151] * y[1171])
    return (R135 + R1766) - (R321 + R1822 + R1857 + R2076)
 
def m_paps_c(t, y):
    R136 = (13.7 * 1e-6 * y[1178] * y[278])/(130e-6 + 1e-6 * y[1178] * y[278])
    R1842 = (13.7 * 1e-6 * y[152] * y[1240])/(130e-6 + 1e-6 * y[152] * y[1240])
    R1844 = (13.7 * 1e-6 * y[762] * y[152])/(130e-6 + 1e-6 * y[762] * y[152])
    return (R136) - (R1842 + R1844)
 
def m_fum_c(t, y):
    R137 = (13.7 * 1e-6 * y[156])/(130e-6 + 1e-6 * y[156])
    R138 = (13.7 * 1e-6 * y[1144])/(130e-6 + 1e-6 * y[1144])
    R305 = (13.7 * 1e-6 * y[300])/(130e-6 + 1e-6 * y[300])
    R322 = (13.7 * 1e-6 * y[307])/(130e-6 + 1e-6 * y[307])
    R1074 = (13.7 * 1e-6 * y[647] * y[61])/(130e-6 + 1e-6 * y[647] * y[61])
    R1075 = (13.7 * 1e-6 * y[647] * y[61])/(130e-6 + 1e-6 * y[647] * y[61])
    R1377 = (13.7 * 1e-6 * y[173] * y[501])/(130e-6 + 1e-6 * y[173] * y[501])
    R2215 = (13.7 * 1e-6 * y[444] * y[290])/(130e-6 + 1e-6 * y[444] * y[290])
    R2219 = (13.7 * 1e-6 * y[647] * y[290])/(130e-6 + 1e-6 * y[647] * y[290])
    R296 = (13.7 * 1e-6 * y[300] * y[153])/(130e-6 + 1e-6 * y[300] * y[153])
    R1039 = (13.7 * 1e-6 * y[153] * y[250])/(130e-6 + 1e-6 * y[153] * y[250])
    R1041 = (13.7 * 1e-6 * y[507] * y[153])/(130e-6 + 1e-6 * y[507] * y[153])
    R1073 = (13.7 * 1e-6 * y[153] * y[173])/(130e-6 + 1e-6 * y[153] * y[173])
    R2017 = (13.7 * 1e-6 * y[153] * y[427])/(130e-6 + 1e-6 * y[153] * y[427])
    return (R137 + R138 + R305 + R322 + R1074 + R1075 + R1377 + R2215 + R2219) - (R296 + R1039 + R1041 + R1073 + R2017)
 
def m_aicar_c(t, y):
    R138 = (13.7 * 1e-6 * y[1144])/(130e-6 + 1e-6 * y[1144])
    R1387 = (13.7 * 1e-6 * y[710] * y[1147])/(130e-6 + 1e-6 * y[710] * y[1147])
    R195 = (13.7 * 1e-6 * y[1057] * y[154])/(130e-6 + 1e-6 * y[1057] * y[154])
    return (R138 + R1387) - (R195)
 
def m_pe141_c(t, y):
    R139 = (13.7 * 1e-6 * y[80] * y[278] * y[578])/(130e-6 + 1e-6 * y[80] * y[278] * y[578])
    R2031 = (13.7 * 1e-6 * y[36] * y[1154])/(130e-6 + 1e-6 * y[36] * y[1154])
    R1861 = (13.7 * 1e-6 * y[278] * y[173] * y[155])/(130e-6 + 1e-6 * y[278] * y[173] * y[155])
    return (R139 + R2031) - (R1861)
 
def m_dcamp_c(t, y):
    R140 = (13.7 * 1e-6 * y[300] * y[928] * y[747])/(130e-6 + 1e-6 * y[300] * y[928] * y[747])
    R137 = (13.7 * 1e-6 * y[156])/(130e-6 + 1e-6 * y[156])
    return (R140) - (R137)
 
def m_gdp_c(t, y):
    R140 = (13.7 * 1e-6 * y[300] * y[928] * y[747])/(130e-6 + 1e-6 * y[300] * y[928] * y[747])
    R193 = (13.7 * 1e-6 * y[71] * y[928])/(130e-6 + 1e-6 * y[71] * y[928])
    R521 = (13.7 * 1e-6 * y[454] * y[928])/(130e-6 + 1e-6 * y[454] * y[928])
    R1168 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1191 = (13.7 * 1e-6 * y[278] * y[222])/(130e-6 + 1e-6 * y[278] * y[222])
    R1257 = (13.7 * 1e-6 * y[1611] * y[173])/(130e-6 + 1e-6 * y[1611] * y[173])
    R1747 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R2000 = (13.7 * 1e-6 * y[173] * y[704])/(130e-6 + 1e-6 * y[173] * y[704])
    R2113 = (13.7 * 1e-6 * y[278] * y[928] * y[173] * y[794])/(130e-6 + 1e-6 * y[278] * y[928] * y[173] * y[794])
    R2300 = (13.7 * 1e-6 * y[928] * y[446])/(130e-6 + 1e-6 * y[928] * y[446])
    R1167 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R1606 = (13.7 * 1e-6 * y[157] * y[36] * y[707])/(130e-6 + 1e-6 * y[157] * y[36] * y[707])
    R1645 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R2083 = (13.7 * 1e-6 * y[157] * y[1240])/(130e-6 + 1e-6 * y[157] * y[1240])
    R2086 = (13.7 * 1e-6 * y[157] * y[762])/(130e-6 + 1e-6 * y[157] * y[762])
    return (R140 + R193 + R521 + R1168 + R1191 + R1257 + R1747 + R2000 + R2113 + R2300) - (R1167 + R1606 + R1645 + R2083 + R2086)
 
def m_pe160_c(t, y):
    R141 = (13.7 * 1e-6 * y[87] * y[278] * y[579])/(130e-6 + 1e-6 * y[87] * y[278] * y[579])
    R2039 = (13.7 * 1e-6 * y[36] * y[1155])/(130e-6 + 1e-6 * y[36] * y[1155])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1863 = (13.7 * 1e-6 * y[278] * y[173] * y[158])/(130e-6 + 1e-6 * y[278] * y[173] * y[158])
    return (R141 + R2039) - (R926 + R1863)
 
def m_gam6p_c(t, y):
    R142 = (13.7 * 1e-6 * y[85] * y[173])/(130e-6 + 1e-6 * y[85] * y[173])
    R1150 = (13.7 * 1e-6 * y[696] * y[37])/(130e-6 + 1e-6 * y[696] * y[37])
    R1152 = (13.7 * 1e-6 * y[698] * y[563])/(130e-6 + 1e-6 * y[698] * y[563])
    R1183 = (13.7 * 1e-6 * y[266] * y[710])/(130e-6 + 1e-6 * y[266] * y[710])
    R1904 = (13.7 * 1e-6 * y[1594])/(130e-6 + 1e-6 * y[1594])
    R1141 = (13.7 * 1e-6 * y[159] * y[173])/(130e-6 + 1e-6 * y[159] * y[173])
    return (R142 + R1150 + R1152 + R1183 + R1904) - (R1141)
 
def m_pe161_c(t, y):
    R143 = (13.7 * 1e-6 * y[96] * y[278] * y[580])/(130e-6 + 1e-6 * y[96] * y[278] * y[580])
    R2040 = (13.7 * 1e-6 * y[36] * y[1158])/(130e-6 + 1e-6 * y[36] * y[1158])
    R372 = (13.7 * 1e-6 * y[921] * y[160])/(130e-6 + 1e-6 * y[921] * y[160])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1864 = (13.7 * 1e-6 * y[278] * y[173] * y[160])/(130e-6 + 1e-6 * y[278] * y[173] * y[160])
    return (R143 + R2040) - (R372 + R926 + R1864)
 
def m_anhgm_c(t, y):
    R144 = (13.7 * 1e-6 * y[167] * y[173])/(130e-6 + 1e-6 * y[167] * y[173])
    R150 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R169 = (13.7 * 1e-6 * y[162] * y[61])/(130e-6 + 1e-6 * y[162] * y[61])
    R163 = (13.7 * 1e-6 * y[161] * y[173])/(130e-6 + 1e-6 * y[161] * y[173])
    return (R144 + R150 + R169) - (R163)
 
def m_anhgm_p(t, y):
    R145 = (13.7 * 1e-6 * y[176] * y[406])/(130e-6 + 1e-6 * y[176] * y[406])
    R158 = (13.7 * 1e-6 * y[963] * y[406])/(130e-6 + 1e-6 * y[963] * y[406])
    R271 = (13.7 * 1e-6 * y[1359])/(130e-6 + 1e-6 * y[1359])
    R169 = (13.7 * 1e-6 * y[162] * y[61])/(130e-6 + 1e-6 * y[162] * y[61])
    return (R145 + R158 + R271) - (R169)
 
def m_pe180_c(t, y):
    R146 = (13.7 * 1e-6 * y[118] * y[278] * y[582])/(130e-6 + 1e-6 * y[118] * y[278] * y[582])
    R2041 = (13.7 * 1e-6 * y[36] * y[1159])/(130e-6 + 1e-6 * y[36] * y[1159])
    R1865 = (13.7 * 1e-6 * y[278] * y[173] * y[163])/(130e-6 + 1e-6 * y[278] * y[173] * y[163])
    return (R146 + R2041) - (R1865)
 
def m_pe181_c(t, y):
    R147 = (13.7 * 1e-6 * y[130] * y[278] * y[583])/(130e-6 + 1e-6 * y[130] * y[278] * y[583])
    R2046 = (13.7 * 1e-6 * y[36] * y[1162])/(130e-6 + 1e-6 * y[36] * y[1162])
    R377 = (13.7 * 1e-6 * y[921] * y[164])/(130e-6 + 1e-6 * y[921] * y[164])
    R1870 = (13.7 * 1e-6 * y[278] * y[173] * y[164])/(130e-6 + 1e-6 * y[278] * y[173] * y[164])
    return (R147 + R2046) - (R377 + R1870)
 
def m_acgam_c(t, y):
    R148 = (13.7 * 1e-6 * y[167] * y[173])/(130e-6 + 1e-6 * y[167] * y[173])
    R161 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R163 = (13.7 * 1e-6 * y[161] * y[173])/(130e-6 + 1e-6 * y[161] * y[173])
    R75 = (13.7 * 1e-6 * y[165] * y[278])/(130e-6 + 1e-6 * y[165] * y[278])
    return (R148 + R161 + R163) - (R75)
 
def m_anhm3p_c(t, y):
    R148 = (13.7 * 1e-6 * y[167] * y[173])/(130e-6 + 1e-6 * y[167] * y[173])
    R242 = (13.7 * 1e-6 * y[177] * y[173])/(130e-6 + 1e-6 * y[177] * y[173])
    R237 = (13.7 * 1e-6 * y[166] * y[173])/(130e-6 + 1e-6 * y[166] * y[173])
    return (R148 + R242) - (R237)
 
def m_anhgm3p_c(t, y):
    R149 = (13.7 * 1e-6 * y[176] * y[61])/(130e-6 + 1e-6 * y[176] * y[61])
    R159 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R144 = (13.7 * 1e-6 * y[167] * y[173])/(130e-6 + 1e-6 * y[167] * y[173])
    R148 = (13.7 * 1e-6 * y[167] * y[173])/(130e-6 + 1e-6 * y[167] * y[173])
    return (R149 + R159) - (R144 + R148)
 
def m_acolipa_e(t, y):
    R151 = (13.7 * 1e-6 * y[837])/(130e-6 + 1e-6 * y[837])
    R792 = (13.7 * 1e-6 * y[168])/(130e-6 + 1e-6 * y[168])
    return (R151) - (R792)
 
def m_2agpg120_c(t, y):
    R152 = (13.7 * 1e-6 * y[1116])/(130e-6 + 1e-6 * y[1116])
    R243 = (13.7 * 1e-6 * y[169] * y[278] * y[576])/(130e-6 + 1e-6 * y[169] * y[278] * y[576])
    R1515 = (13.7 * 1e-6 * y[169] * y[173])/(130e-6 + 1e-6 * y[169] * y[173])
    R1570 = (13.7 * 1e-6 * y[169] * y[241])/(130e-6 + 1e-6 * y[169] * y[241])
    return (R152) - (R243 + R1515 + R1570)
 
def m_acon_C_c(t, y):
    R153 = (13.7 * 1e-6 * y[1339])/(130e-6 + 1e-6 * y[1339])
    R155 = (13.7 * 1e-6 * y[357])/(130e-6 + 1e-6 * y[357])
    R156 = (13.7 * 1e-6 * y[170] * y[173])/(130e-6 + 1e-6 * y[170] * y[173])
    return (R153 + R155) - (R156)
 
def m_aconm_c(t, y):
    R154 = (13.7 * 1e-6 * y[1339] * y[921])/(130e-6 + 1e-6 * y[1339] * y[921])
    return (R154) - (0)
 
def m_ahcys_c(t, y):
    R154 = (13.7 * 1e-6 * y[1339] * y[921])/(130e-6 + 1e-6 * y[1339] * y[921])
    R255 = (13.7 * 1e-6 * y[507] * y[921])/(130e-6 + 1e-6 * y[507] * y[921])
    R372 = (13.7 * 1e-6 * y[921] * y[160])/(130e-6 + 1e-6 * y[921] * y[160])
    R375 = (13.7 * 1e-6 * y[921] * y[271])/(130e-6 + 1e-6 * y[921] * y[271])
    R377 = (13.7 * 1e-6 * y[921] * y[164])/(130e-6 + 1e-6 * y[921] * y[164])
    R378 = (13.7 * 1e-6 * y[921] * y[294])/(130e-6 + 1e-6 * y[921] * y[294])
    R572 = (13.7 * 1e-6 * y[1022] * y[921])/(130e-6 + 1e-6 * y[1022] * y[921])
    R1321 = (13.7 * 1e-6 * y[921] * y[436])/(130e-6 + 1e-6 * y[921] * y[436])
    R1833 = (13.7 * 1e-6 * y[1030] * y[921])/(130e-6 + 1e-6 * y[1030] * y[921])
    R1834 = (13.7 * 1e-6 * y[1027] * y[921])/(130e-6 + 1e-6 * y[1027] * y[921])
    R2381 = (13.7 * 1e-6 * y[921] * y[1311])/(130e-6 + 1e-6 * y[921] * y[1311])
    R194 = (13.7 * 1e-6 * y[172] * y[173])/(130e-6 + 1e-6 * y[172] * y[173])
    return (R154 + R255 + R372 + R375 + R377 + R378 + R572 + R1321 + R1833 + R1834 + R2381) - (R194)
 
def m_h2o_c(t, y):
    R155 = (13.7 * 1e-6 * y[357])/(130e-6 + 1e-6 * y[357])
    R236 = (13.7 * 1e-6 * y[1354])/(130e-6 + 1e-6 * y[1354])
    R326 = (13.7 * 1e-6 * y[1371] * y[763])/(130e-6 + 1e-6 * y[1371] * y[763])
    R332 = (13.7 * 1e-6 * y[35] * y[61] * y[37])/(130e-6 + 1e-6 * y[35] * y[61] * y[37])
    R346 = (13.7 * 1e-6 * y[1377] * y[36] * y[113])/(130e-6 + 1e-6 * y[1377] * y[36] * y[113])
    R347 = (13.7 * 1e-6 * y[1377] * y[36] * y[201])/(130e-6 + 1e-6 * y[1377] * y[36] * y[201])
    R369 = (13.7 * 1e-6 * y[93])/(130e-6 + 1e-6 * y[93])
    R402 = (13.7 * 1e-6 * y[514])/(130e-6 + 1e-6 * y[514])
    R413 = (13.7 * 1e-6 * y[534])/(130e-6 + 1e-6 * y[534])
    R415 = (13.7 * 1e-6 * y[539])/(130e-6 + 1e-6 * y[539])
    R433 = (13.7 * 1e-6 * y[543])/(130e-6 + 1e-6 * y[543])
    R443 = (13.7 * 1e-6 * y[551])/(130e-6 + 1e-6 * y[551])
    R458 = (13.7 * 1e-6 * y[556])/(130e-6 + 1e-6 * y[556])
    R470 = (13.7 * 1e-6 * y[560])/(130e-6 + 1e-6 * y[560])
    R477 = (13.7 * 1e-6 * y[1252] * y[36] * y[335])/(130e-6 + 1e-6 * y[1252] * y[36] * y[335])
    R478 = (13.7 * 1e-6 * y[5])/(130e-6 + 1e-6 * y[5])
    R492 = (13.7 * 1e-6 * y[431])/(130e-6 + 1e-6 * y[431])
    R494 = (13.7 * 1e-6 * y[8])/(130e-6 + 1e-6 * y[8])
    R501 = (13.7 * 1e-6 * y[10])/(130e-6 + 1e-6 * y[10])
    R502 = (13.7 * 1e-6 * y[36] * y[250] * y[335])/(130e-6 + 1e-6 * y[36] * y[250] * y[335])
    R507 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R509 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R510 = (13.7 * 1e-6 * y[12])/(130e-6 + 1e-6 * y[12])
    R533 = (13.7 * 1e-6 * y[13])/(130e-6 + 1e-6 * y[13])
    R543 = (13.7 * 1e-6 * y[777] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[777] * y[36] * y[113] * y[335])
    R549 = (13.7 * 1e-6 * y[819] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[819] * y[36] * y[113] * y[335])
    R571 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R573 = (13.7 * 1e-6 * y[1424] * y[250])/(130e-6 + 1e-6 * y[1424] * y[250])
    R575 = (13.7 * 1e-6 * y[1426])/(130e-6 + 1e-6 * y[1426])
    R576 = (13.7 * 1e-6 * y[848])/(130e-6 + 1e-6 * y[848])
    R581 = (13.7 * 1e-6 * y[507] * y[1424])/(130e-6 + 1e-6 * y[507] * y[1424])
    R599 = (13.7 * 1e-6 * y[821] * y[92])/(130e-6 + 1e-6 * y[821] * y[92])
    R624 = (13.7 * 1e-6 * y[1160])/(130e-6 + 1e-6 * y[1160])
    R627 = (13.7 * 1e-6 * y[528])/(130e-6 + 1e-6 * y[528])
    R666 = (13.7 * 1e-6 * y[1444])/(130e-6 + 1e-6 * y[1444])
    R667 = (13.7 * 1e-6 * y[1445])/(130e-6 + 1e-6 * y[1445])
    R671 = (13.7 * 1e-6 * y[1446])/(130e-6 + 1e-6 * y[1446])
    R673 = (13.7 * 1e-6 * y[1447])/(130e-6 + 1e-6 * y[1447])
    R674 = (13.7 * 1e-6 * y[1448])/(130e-6 + 1e-6 * y[1448])
    R675 = (13.7 * 1e-6 * y[1449])/(130e-6 + 1e-6 * y[1449])
    R679 = (13.7 * 1e-6 * y[1450])/(130e-6 + 1e-6 * y[1450])
    R680 = (13.7 * 1e-6 * y[1451])/(130e-6 + 1e-6 * y[1451])
    R686 = (13.7 * 1e-6 * y[754])/(130e-6 + 1e-6 * y[754])
    R697 = (13.7 * 1e-6 * y[756])/(130e-6 + 1e-6 * y[756])
    R981 = (13.7 * 1e-6 * y[328] * y[655] * y[335])/(130e-6 + 1e-6 * y[328] * y[655] * y[335])
    R982 = (13.7 * 1e-6 * y[655] * y[335] * y[1230])/(130e-6 + 1e-6 * y[655] * y[335] * y[1230])
    R1022 = (13.7 * 1e-6 * y[655] * y[841] * y[335])/(130e-6 + 1e-6 * y[655] * y[841] * y[335])
    R1023 = (13.7 * 1e-6 * y[655] * y[1053] * y[335])/(130e-6 + 1e-6 * y[655] * y[1053] * y[335])
    R1030 = (13.7 * 1e-6 * y[569] * y[655] * y[335])/(130e-6 + 1e-6 * y[569] * y[655] * y[335])
    R1107 = (13.7 * 1e-6 * y[677])/(130e-6 + 1e-6 * y[677])
    R1109 = (13.7 * 1e-6 * y[672])/(130e-6 + 1e-6 * y[672])
    R1139 = (13.7 * 1e-6 * y[693])/(130e-6 + 1e-6 * y[693])
    R1188 = (13.7 * 1e-6 * y[500] * y[206])/(130e-6 + 1e-6 * y[500] * y[206])
    R1210 = (13.7 * 1e-6 * y[729])/(130e-6 + 1e-6 * y[729])
    R1234 = (13.7 * 1e-6 * y[906])/(130e-6 + 1e-6 * y[906])
    R1338 = (13.7 * 1e-6 * y[406])/(130e-6 + 1e-6 * y[406])
    R1388 = (13.7 * 1e-6 * y[813])/(130e-6 + 1e-6 * y[813])
    R1392 = (13.7 * 1e-6 * y[1142] * y[36])/(130e-6 + 1e-6 * y[1142] * y[36])
    R1432 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R1439 = (13.7 * 1e-6 * y[1634])/(130e-6 + 1e-6 * y[1634])
    R1623 = (13.7 * 1e-6 * y[917])/(130e-6 + 1e-6 * y[917])
    R1625 = (13.7 * 1e-6 * y[1096])/(130e-6 + 1e-6 * y[1096])
    R1628 = (13.7 * 1e-6 * y[915] * y[113])/(130e-6 + 1e-6 * y[915] * y[113])
    R1642 = (13.7 * 1e-6 * y[93] * y[326])/(130e-6 + 1e-6 * y[93] * y[326])
    R1643 = (13.7 * 1e-6 * y[93] * y[326])/(130e-6 + 1e-6 * y[93] * y[326])
    R1661 = (13.7 * 1e-6 * y[925] * y[1240])/(130e-6 + 1e-6 * y[925] * y[1240])
    R1662 = (13.7 * 1e-6 * y[926] * y[1240])/(130e-6 + 1e-6 * y[926] * y[1240])
    R1666 = (13.7 * 1e-6 * y[36] * y[113] * y[966])/(130e-6 + 1e-6 * y[36] * y[113] * y[966])
    R1706 = (13.7 * 1e-6 * y[36] * y[962] * y[289])/(130e-6 + 1e-6 * y[36] * y[962] * y[289])
    R1708 = (13.7 * 1e-6 * y[36] * y[250] * y[962])/(130e-6 + 1e-6 * y[36] * y[250] * y[962])
    R1758 = (13.7 * 1e-6 * y[1648])/(130e-6 + 1e-6 * y[1648])
    R1779 = (13.7 * 1e-6 * y[36] * y[113] * y[959])/(130e-6 + 1e-6 * y[36] * y[113] * y[959])
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    R1990 = (13.7 * 1e-6 * y[654])/(130e-6 + 1e-6 * y[654])
    R2009 = (13.7 * 1e-6 * y[36] * y[350])/(130e-6 + 1e-6 * y[36] * y[350])
    R2016 = (13.7 * 1e-6 * y[335] * y[427])/(130e-6 + 1e-6 * y[335] * y[427])
    R2081 = (13.7 * 1e-6 * y[35] * y[1240])/(130e-6 + 1e-6 * y[35] * y[1240])
    R2082 = (13.7 * 1e-6 * y[35] * y[762])/(130e-6 + 1e-6 * y[35] * y[762])
    R2083 = (13.7 * 1e-6 * y[157] * y[1240])/(130e-6 + 1e-6 * y[157] * y[1240])
    R2086 = (13.7 * 1e-6 * y[157] * y[762])/(130e-6 + 1e-6 * y[157] * y[762])
    R2092 = (13.7 * 1e-6 * y[456] * y[1240])/(130e-6 + 1e-6 * y[456] * y[1240])
    R2093 = (13.7 * 1e-6 * y[456] * y[762])/(130e-6 + 1e-6 * y[456] * y[762])
    R2094 = (13.7 * 1e-6 * y[1240] * y[114])/(130e-6 + 1e-6 * y[1240] * y[114])
    R2095 = (13.7 * 1e-6 * y[762] * y[114])/(130e-6 + 1e-6 * y[762] * y[114])
    R2096 = (13.7 * 1e-6 * y[278] * y[646])/(130e-6 + 1e-6 * y[278] * y[646])
    R2097 = (13.7 * 1e-6 * y[646] * y[928])/(130e-6 + 1e-6 * y[646] * y[928])
    R2103 = (13.7 * 1e-6 * y[404] * y[646])/(130e-6 + 1e-6 * y[404] * y[646])
    R2104 = (13.7 * 1e-6 * y[646] * y[929])/(130e-6 + 1e-6 * y[646] * y[929])
    R2127 = (13.7 * 1e-6 * y[492] * y[288])/(130e-6 + 1e-6 * y[492] * y[288])
    R2141 = (13.7 * 1e-6 * y[1094] * y[460])/(130e-6 + 1e-6 * y[1094] * y[460])
    R2170 = (13.7 * 1e-6 * y[93] * y[1240])/(130e-6 + 1e-6 * y[93] * y[1240])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R2207 = (13.7 * 1e-6 * y[1200])/(130e-6 + 1e-6 * y[1200])
    R2216 = (13.7 * 1e-6 * y[36] * y[250] * y[1664])/(130e-6 + 1e-6 * y[36] * y[250] * y[1664])
    R2218 = (13.7 * 1e-6 * y[507] * y[36] * y[1664])/(130e-6 + 1e-6 * y[507] * y[36] * y[1664])
    R2237 = (13.7 * 1e-6 * y[36] * y[201] * y[415])/(130e-6 + 1e-6 * y[36] * y[201] * y[415])
    R2242 = (13.7 * 1e-6 * y[1238])/(130e-6 + 1e-6 * y[1238])
    R2257 = (13.7 * 1e-6 * y[816] * y[500])/(130e-6 + 1e-6 * y[816] * y[500])
    R2266 = (13.7 * 1e-6 * y[828] * y[500])/(130e-6 + 1e-6 * y[828] * y[500])
    R2271 = (13.7 * 1e-6 * y[652])/(130e-6 + 1e-6 * y[652])
    R2382 = (13.7 * 1e-6 * y[810])/(130e-6 + 1e-6 * y[810])
    R32 = (13.7 * 1e-6 * y[38] * y[278] * y[173])/(130e-6 + 1e-6 * y[38] * y[278] * y[173])
    R37 = (13.7 * 1e-6 * y[173] * y[1015])/(130e-6 + 1e-6 * y[173] * y[1015])
    R38 = (13.7 * 1e-6 * y[63] * y[173])/(130e-6 + 1e-6 * y[63] * y[173])
    R46 = (13.7 * 1e-6 * y[54] * y[278] * y[173])/(130e-6 + 1e-6 * y[54] * y[278] * y[173])
    R56 = (13.7 * 1e-6 * y[64] * y[278] * y[173])/(130e-6 + 1e-6 * y[64] * y[278] * y[173])
    R61 = (13.7 * 1e-6 * y[325] * y[173])/(130e-6 + 1e-6 * y[325] * y[173])
    R82 = (13.7 * 1e-6 * y[272] * y[173] * y[335])/(130e-6 + 1e-6 * y[272] * y[173] * y[335])
    R92 = (13.7 * 1e-6 * y[124] * y[173])/(130e-6 + 1e-6 * y[124] * y[173])
    R94 = (13.7 * 1e-6 * y[1329] * y[173])/(130e-6 + 1e-6 * y[1329] * y[173])
    R96 = (13.7 * 1e-6 * y[1169] * y[173] * y[236])/(130e-6 + 1e-6 * y[1169] * y[173] * y[236])
    R135 = (13.7 * 1e-6 * y[1338] * y[173])/(130e-6 + 1e-6 * y[1338] * y[173])
    R142 = (13.7 * 1e-6 * y[85] * y[173])/(130e-6 + 1e-6 * y[85] * y[173])
    R144 = (13.7 * 1e-6 * y[167] * y[173])/(130e-6 + 1e-6 * y[167] * y[173])
    R148 = (13.7 * 1e-6 * y[167] * y[173])/(130e-6 + 1e-6 * y[167] * y[173])
    R150 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R156 = (13.7 * 1e-6 * y[170] * y[173])/(130e-6 + 1e-6 * y[170] * y[173])
    R159 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R161 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R163 = (13.7 * 1e-6 * y[161] * y[173])/(130e-6 + 1e-6 * y[161] * y[173])
    R168 = (13.7 * 1e-6 * y[304] * y[173])/(130e-6 + 1e-6 * y[304] * y[173])
    R178 = (13.7 * 1e-6 * y[216] * y[173] * y[36])/(130e-6 + 1e-6 * y[216] * y[173] * y[36])
    R184 = (13.7 * 1e-6 * y[69] * y[173] * y[36])/(130e-6 + 1e-6 * y[69] * y[173] * y[36])
    R194 = (13.7 * 1e-6 * y[172] * y[173])/(130e-6 + 1e-6 * y[172] * y[173])
    R206 = (13.7 * 1e-6 * y[216] * y[173])/(130e-6 + 1e-6 * y[216] * y[173])
    R209 = (13.7 * 1e-6 * y[218] * y[173])/(130e-6 + 1e-6 * y[218] * y[173])
    R211 = (13.7 * 1e-6 * y[224] * y[278] * y[173])/(130e-6 + 1e-6 * y[224] * y[278] * y[173])
    R216 = (13.7 * 1e-6 * y[223] * y[278] * y[173])/(130e-6 + 1e-6 * y[223] * y[278] * y[173])
    R224 = (13.7 * 1e-6 * y[1196] * y[173])/(130e-6 + 1e-6 * y[1196] * y[173])
    R231 = (13.7 * 1e-6 * y[239] * y[278] * y[173])/(130e-6 + 1e-6 * y[239] * y[278] * y[173])
    R237 = (13.7 * 1e-6 * y[166] * y[173])/(130e-6 + 1e-6 * y[166] * y[173])
    R241 = (13.7 * 1e-6 * y[177] * y[173])/(130e-6 + 1e-6 * y[177] * y[173])
    R242 = (13.7 * 1e-6 * y[177] * y[173])/(130e-6 + 1e-6 * y[177] * y[173])
    R246 = (13.7 * 1e-6 * y[173] * y[236] * y[996])/(130e-6 + 1e-6 * y[173] * y[236] * y[996])
    R247 = (13.7 * 1e-6 * y[132] * y[173] * y[236])/(130e-6 + 1e-6 * y[132] * y[173] * y[236])
    R249 = (13.7 * 1e-6 * y[132] * y[173] * y[6])/(130e-6 + 1e-6 * y[132] * y[173] * y[6])
    R256 = (13.7 * 1e-6 * y[1141] * y[173] * y[236])/(130e-6 + 1e-6 * y[1141] * y[173] * y[236])
    R257 = (13.7 * 1e-6 * y[71] * y[173])/(130e-6 + 1e-6 * y[71] * y[173])
    R258 = (13.7 * 1e-6 * y[173] * y[6] * y[1356])/(130e-6 + 1e-6 * y[173] * y[6] * y[1356])
    R259 = (13.7 * 1e-6 * y[592] * y[173] * y[236])/(130e-6 + 1e-6 * y[592] * y[173] * y[236])
    R262 = (13.7 * 1e-6 * y[258] * y[173] * y[36])/(130e-6 + 1e-6 * y[258] * y[173] * y[36])
    R263 = (13.7 * 1e-6 * y[259] * y[173])/(130e-6 + 1e-6 * y[259] * y[173])
    R265 = (13.7 * 1e-6 * y[343] * y[173])/(130e-6 + 1e-6 * y[343] * y[173])
    R266 = (13.7 * 1e-6 * y[173] * y[1148])/(130e-6 + 1e-6 * y[173] * y[1148])
    R272 = (13.7 * 1e-6 * y[179] * y[278] * y[173])/(130e-6 + 1e-6 * y[179] * y[278] * y[173])
    R273 = (13.7 * 1e-6 * y[229] * y[278] * y[173])/(130e-6 + 1e-6 * y[229] * y[278] * y[173])
    R280 = (13.7 * 1e-6 * y[1361] * y[173])/(130e-6 + 1e-6 * y[1361] * y[173])
    R282 = (13.7 * 1e-6 * y[309] * y[278] * y[173])/(130e-6 + 1e-6 * y[309] * y[278] * y[173])
    R286 = (13.7 * 1e-6 * y[1364] * y[173])/(130e-6 + 1e-6 * y[1364] * y[173])
    R298 = (13.7 * 1e-6 * y[295] * y[278] * y[173])/(130e-6 + 1e-6 * y[295] * y[278] * y[173])
    R304 = (13.7 * 1e-6 * y[301] * y[278] * y[173])/(130e-6 + 1e-6 * y[301] * y[278] * y[173])
    R308 = (13.7 * 1e-6 * y[302] * y[278] * y[173])/(130e-6 + 1e-6 * y[302] * y[278] * y[173])
    R325 = (13.7 * 1e-6 * y[315] * y[278] * y[173])/(130e-6 + 1e-6 * y[315] * y[278] * y[173])
    R329 = (13.7 * 1e-6 * y[278] * y[173] * y[36])/(130e-6 + 1e-6 * y[278] * y[173] * y[36])
    R330 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R338 = (13.7 * 1e-6 * y[319] * y[173])/(130e-6 + 1e-6 * y[319] * y[173])
    R342 = (13.7 * 1e-6 * y[323] * y[173])/(130e-6 + 1e-6 * y[323] * y[173])
    R343 = (13.7 * 1e-6 * y[1376] * y[173] * y[236])/(130e-6 + 1e-6 * y[1376] * y[173] * y[236])
    R344 = (13.7 * 1e-6 * y[1376] * y[173] * y[6])/(130e-6 + 1e-6 * y[1376] * y[173] * y[6])
    R345 = (13.7 * 1e-6 * y[173] * y[181])/(130e-6 + 1e-6 * y[173] * y[181])
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R355 = (13.7 * 1e-6 * y[278] * y[329] * y[173])/(130e-6 + 1e-6 * y[278] * y[329] * y[173])
    R358 = (13.7 * 1e-6 * y[274] * y[278] * y[173])/(130e-6 + 1e-6 * y[274] * y[278] * y[173])
    R361 = (13.7 * 1e-6 * y[1099] * y[173])/(130e-6 + 1e-6 * y[1099] * y[173])
    R365 = (13.7 * 1e-6 * y[451] * y[173])/(130e-6 + 1e-6 * y[451] * y[173])
    R366 = (13.7 * 1e-6 * y[452] * y[173])/(130e-6 + 1e-6 * y[452] * y[173])
    R367 = (13.7 * 1e-6 * y[453] * y[173])/(130e-6 + 1e-6 * y[453] * y[173])
    R379 = (13.7 * 1e-6 * y[278] * y[347] * y[173])/(130e-6 + 1e-6 * y[278] * y[347] * y[173])
    R381 = (13.7 * 1e-6 * y[278] * y[344] * y[173])/(130e-6 + 1e-6 * y[278] * y[344] * y[173])
    R382 = (13.7 * 1e-6 * y[278] * y[352] * y[173])/(130e-6 + 1e-6 * y[278] * y[352] * y[173])
    R385 = (13.7 * 1e-6 * y[278] * y[349] * y[173])/(130e-6 + 1e-6 * y[278] * y[349] * y[173])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R394 = (13.7 * 1e-6 * y[278] * y[359] * y[173])/(130e-6 + 1e-6 * y[278] * y[359] * y[173])
    R403 = (13.7 * 1e-6 * y[447] * y[173])/(130e-6 + 1e-6 * y[447] * y[173])
    R404 = (13.7 * 1e-6 * y[448] * y[173])/(130e-6 + 1e-6 * y[448] * y[173])
    R405 = (13.7 * 1e-6 * y[449] * y[173])/(130e-6 + 1e-6 * y[449] * y[173])
    R411 = (13.7 * 1e-6 * y[450] * y[173])/(130e-6 + 1e-6 * y[450] * y[173])
    R421 = (13.7 * 1e-6 * y[278] * y[388] * y[173])/(130e-6 + 1e-6 * y[278] * y[388] * y[173])
    R423 = (13.7 * 1e-6 * y[278] * y[391] * y[173])/(130e-6 + 1e-6 * y[278] * y[391] * y[173])
    R436 = (13.7 * 1e-6 * y[127] * y[173] * y[298])/(130e-6 + 1e-6 * y[127] * y[173] * y[298])
    R437 = (13.7 * 1e-6 * y[397] * y[173] * y[36])/(130e-6 + 1e-6 * y[397] * y[173] * y[36])
    R440 = (13.7 * 1e-6 * y[332] * y[173])/(130e-6 + 1e-6 * y[332] * y[173])
    R444 = (13.7 * 1e-6 * y[278] * y[1399] * y[173])/(130e-6 + 1e-6 * y[278] * y[1399] * y[173])
    R448 = (13.7 * 1e-6 * y[278] * y[408] * y[173])/(130e-6 + 1e-6 * y[278] * y[408] * y[173])
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R451 = (13.7 * 1e-6 * y[278] * y[1401] * y[173])/(130e-6 + 1e-6 * y[278] * y[1401] * y[173])
    R455 = (13.7 * 1e-6 * y[278] * y[793] * y[173])/(130e-6 + 1e-6 * y[278] * y[793] * y[173])
    R456 = (13.7 * 1e-6 * y[278] * y[411] * y[173])/(130e-6 + 1e-6 * y[278] * y[411] * y[173])
    R471 = (13.7 * 1e-6 * y[278] * y[426] * y[173])/(130e-6 + 1e-6 * y[278] * y[426] * y[173])
    R480 = (13.7 * 1e-6 * y[433] * y[173])/(130e-6 + 1e-6 * y[433] * y[173])
    R486 = (13.7 * 1e-6 * y[260] * y[173])/(130e-6 + 1e-6 * y[260] * y[173])
    R487 = (13.7 * 1e-6 * y[278] * y[434] * y[173])/(130e-6 + 1e-6 * y[278] * y[434] * y[173])
    R491 = (13.7 * 1e-6 * y[1206] * y[173])/(130e-6 + 1e-6 * y[1206] * y[173])
    R495 = (13.7 * 1e-6 * y[278] * y[260] * y[173])/(130e-6 + 1e-6 * y[278] * y[260] * y[173])
    R496 = (13.7 * 1e-6 * y[278] * y[439] * y[173])/(130e-6 + 1e-6 * y[278] * y[439] * y[173])
    R504 = (13.7 * 1e-6 * y[59] * y[173])/(130e-6 + 1e-6 * y[59] * y[173])
    R508 = (13.7 * 1e-6 * y[77] * y[278] * y[173])/(130e-6 + 1e-6 * y[77] * y[278] * y[173])
    R511 = (13.7 * 1e-6 * y[454] * y[173] * y[36])/(130e-6 + 1e-6 * y[454] * y[173] * y[36])
    R512 = (13.7 * 1e-6 * y[454] * y[173])/(130e-6 + 1e-6 * y[454] * y[173])
    R527 = (13.7 * 1e-6 * y[45] * y[282] * y[173])/(130e-6 + 1e-6 * y[45] * y[282] * y[173])
    R528 = (13.7 * 1e-6 * y[464] * y[173] * y[36])/(130e-6 + 1e-6 * y[464] * y[173] * y[36])
    R529 = (13.7 * 1e-6 * y[935] * y[173] * y[36])/(130e-6 + 1e-6 * y[935] * y[173] * y[36])
    R540 = (13.7 * 1e-6 * y[934] * y[173] * y[36])/(130e-6 + 1e-6 * y[934] * y[173] * y[36])
    R542 = (13.7 * 1e-6 * y[471] * y[173] * y[36])/(130e-6 + 1e-6 * y[471] * y[173] * y[36])
    R558 = (13.7 * 1e-6 * y[1237] * y[173] * y[563])/(130e-6 + 1e-6 * y[1237] * y[173] * y[563])
    R563 = (13.7 * 1e-6 * y[913] * y[173] * y[335])/(130e-6 + 1e-6 * y[913] * y[173] * y[335])
    R565 = (13.7 * 1e-6 * y[913] * y[173] * y[236])/(130e-6 + 1e-6 * y[913] * y[173] * y[236])
    R589 = (13.7 * 1e-6 * y[565] * y[173])/(130e-6 + 1e-6 * y[565] * y[173])
    R598 = (13.7 * 1e-6 * y[511] * y[173])/(130e-6 + 1e-6 * y[511] * y[173])
    R605 = (13.7 * 1e-6 * y[773] * y[173])/(130e-6 + 1e-6 * y[773] * y[173])
    R609 = (13.7 * 1e-6 * y[1430] * y[173])/(130e-6 + 1e-6 * y[1430] * y[173])
    R612 = (13.7 * 1e-6 * y[774] * y[173] * y[36])/(130e-6 + 1e-6 * y[774] * y[173] * y[36])
    R643 = (13.7 * 1e-6 * y[468] * y[173])/(130e-6 + 1e-6 * y[468] * y[173])
    R655 = (13.7 * 1e-6 * y[1237] * y[173] * y[236])/(130e-6 + 1e-6 * y[1237] * y[173] * y[236])
    R700 = (13.7 * 1e-6 * y[564] * y[173])/(130e-6 + 1e-6 * y[564] * y[173])
    R701 = (13.7 * 1e-6 * y[626] * y[173])/(130e-6 + 1e-6 * y[626] * y[173])
    R710 = (13.7 * 1e-6 * y[278] * y[570] * y[173])/(130e-6 + 1e-6 * y[278] * y[570] * y[173])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R929 = (13.7 * 1e-6 * y[266] * y[173])/(130e-6 + 1e-6 * y[266] * y[173])
    R935 = (13.7 * 1e-6 * y[88] * y[173])/(130e-6 + 1e-6 * y[88] * y[173])
    R937 = (13.7 * 1e-6 * y[86] * y[173])/(130e-6 + 1e-6 * y[86] * y[173])
    R941 = (13.7 * 1e-6 * y[173] * y[72])/(130e-6 + 1e-6 * y[173] * y[72])
    R942 = (13.7 * 1e-6 * y[173] * y[74])/(130e-6 + 1e-6 * y[173] * y[74])
    R943 = (13.7 * 1e-6 * y[173] * y[79])/(130e-6 + 1e-6 * y[173] * y[79])
    R944 = (13.7 * 1e-6 * y[173] * y[81])/(130e-6 + 1e-6 * y[173] * y[81])
    R945 = (13.7 * 1e-6 * y[173] * y[89])/(130e-6 + 1e-6 * y[173] * y[89])
    R946 = (13.7 * 1e-6 * y[585] * y[173])/(130e-6 + 1e-6 * y[585] * y[173])
    R953 = (13.7 * 1e-6 * y[586] * y[173])/(130e-6 + 1e-6 * y[586] * y[173])
    R954 = (13.7 * 1e-6 * y[173] * y[587])/(130e-6 + 1e-6 * y[173] * y[587])
    R955 = (13.7 * 1e-6 * y[173] * y[588])/(130e-6 + 1e-6 * y[173] * y[588])
    R957 = (13.7 * 1e-6 * y[173] * y[589])/(130e-6 + 1e-6 * y[173] * y[589])
    R962 = (13.7 * 1e-6 * y[173] * y[590])/(130e-6 + 1e-6 * y[173] * y[590])
    R963 = (13.7 * 1e-6 * y[173] * y[591])/(130e-6 + 1e-6 * y[173] * y[591])
    R964 = (13.7 * 1e-6 * y[173] * y[595])/(130e-6 + 1e-6 * y[173] * y[595])
    R966 = (13.7 * 1e-6 * y[173] * y[596])/(130e-6 + 1e-6 * y[173] * y[596])
    R968 = (13.7 * 1e-6 * y[173] * y[597])/(130e-6 + 1e-6 * y[173] * y[597])
    R983 = (13.7 * 1e-6 * y[278] * y[594] * y[173])/(130e-6 + 1e-6 * y[278] * y[594] * y[173])
    R991 = (13.7 * 1e-6 * y[278] * y[598] * y[173])/(130e-6 + 1e-6 * y[278] * y[598] * y[173])
    R1000 = (13.7 * 1e-6 * y[278] * y[603] * y[173])/(130e-6 + 1e-6 * y[278] * y[603] * y[173])
    R1007 = (13.7 * 1e-6 * y[623] * y[173])/(130e-6 + 1e-6 * y[623] * y[173])
    R1015 = (13.7 * 1e-6 * y[278] * y[614] * y[173])/(130e-6 + 1e-6 * y[278] * y[614] * y[173])
    R1019 = (13.7 * 1e-6 * y[278] * y[615] * y[173])/(130e-6 + 1e-6 * y[278] * y[615] * y[173])
    R1033 = (13.7 * 1e-6 * y[278] * y[622] * y[173])/(130e-6 + 1e-6 * y[278] * y[622] * y[173])
    R1043 = (13.7 * 1e-6 * y[625] * y[173])/(130e-6 + 1e-6 * y[625] * y[173])
    R1050 = (13.7 * 1e-6 * y[278] * y[629] * y[173])/(130e-6 + 1e-6 * y[278] * y[629] * y[173])
    R1067 = (13.7 * 1e-6 * y[1057] * y[173])/(130e-6 + 1e-6 * y[1057] * y[173])
    R1069 = (13.7 * 1e-6 * y[278] * y[644] * y[173])/(130e-6 + 1e-6 * y[278] * y[644] * y[173])
    R1073 = (13.7 * 1e-6 * y[153] * y[173])/(130e-6 + 1e-6 * y[153] * y[173])
    R1078 = (13.7 * 1e-6 * y[173] * y[1229])/(130e-6 + 1e-6 * y[173] * y[1229])
    R1106 = (13.7 * 1e-6 * y[278] * y[670] * y[173])/(130e-6 + 1e-6 * y[278] * y[670] * y[173])
    R1119 = (13.7 * 1e-6 * y[278] * y[674] * y[173])/(130e-6 + 1e-6 * y[278] * y[674] * y[173])
    R1121 = (13.7 * 1e-6 * y[278] * y[682] * y[173])/(130e-6 + 1e-6 * y[278] * y[682] * y[173])
    R1127 = (13.7 * 1e-6 * y[173] * y[916])/(130e-6 + 1e-6 * y[173] * y[916])
    R1129 = (13.7 * 1e-6 * y[278] * y[684] * y[173])/(130e-6 + 1e-6 * y[278] * y[684] * y[173])
    R1133 = (13.7 * 1e-6 * y[278] * y[691] * y[173])/(130e-6 + 1e-6 * y[278] * y[691] * y[173])
    R1138 = (13.7 * 1e-6 * y[743] * y[173])/(130e-6 + 1e-6 * y[743] * y[173])
    R1141 = (13.7 * 1e-6 * y[159] * y[173])/(130e-6 + 1e-6 * y[159] * y[173])
    R1143 = (13.7 * 1e-6 * y[278] * y[680] * y[173])/(130e-6 + 1e-6 * y[278] * y[680] * y[173])
    R1147 = (13.7 * 1e-6 * y[108] * y[173])/(130e-6 + 1e-6 * y[108] * y[173])
    R1164 = (13.7 * 1e-6 * y[278] * y[651] * y[173])/(130e-6 + 1e-6 * y[278] * y[651] * y[173])
    R1165 = (13.7 * 1e-6 * y[509] * y[173] * y[236])/(130e-6 + 1e-6 * y[509] * y[173] * y[236])
    R1168 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1174 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1180 = (13.7 * 1e-6 * y[278] * y[712] * y[173])/(130e-6 + 1e-6 * y[278] * y[712] * y[173])
    R1184 = (13.7 * 1e-6 * y[715] * y[173] * y[6])/(130e-6 + 1e-6 * y[715] * y[173] * y[6])
    R1185 = (13.7 * 1e-6 * y[714] * y[173])/(130e-6 + 1e-6 * y[714] * y[173])
    R1186 = (13.7 * 1e-6 * y[716] * y[173] * y[335])/(130e-6 + 1e-6 * y[716] * y[173] * y[335])
    R1195 = (13.7 * 1e-6 * y[110] * y[173] * y[6])/(130e-6 + 1e-6 * y[110] * y[173] * y[6])
    R1202 = (13.7 * 1e-6 * y[710] * y[173])/(130e-6 + 1e-6 * y[710] * y[173])
    R1204 = (13.7 * 1e-6 * y[710] * y[173] * y[983])/(130e-6 + 1e-6 * y[710] * y[173] * y[983])
    R1213 = (13.7 * 1e-6 * y[278] * y[724] * y[173])/(130e-6 + 1e-6 * y[278] * y[724] * y[173])
    R1235 = (13.7 * 1e-6 * y[278] * y[741] * y[173])/(130e-6 + 1e-6 * y[278] * y[741] * y[173])
    R1239 = (13.7 * 1e-6 * y[278] * y[749] * y[173])/(130e-6 + 1e-6 * y[278] * y[749] * y[173])
    R1243 = (13.7 * 1e-6 * y[745] * y[173])/(130e-6 + 1e-6 * y[745] * y[173])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1257 = (13.7 * 1e-6 * y[1611] * y[173])/(130e-6 + 1e-6 * y[1611] * y[173])
    R1260 = (13.7 * 1e-6 * y[665] * y[173])/(130e-6 + 1e-6 * y[665] * y[173])
    R1268 = (13.7 * 1e-6 * y[673] * y[173])/(130e-6 + 1e-6 * y[673] * y[173])
    R1270 = (13.7 * 1e-6 * y[687] * y[173])/(130e-6 + 1e-6 * y[687] * y[173])
    R1272 = (13.7 * 1e-6 * y[675] * y[173])/(130e-6 + 1e-6 * y[675] * y[173])
    R1277 = (13.7 * 1e-6 * y[683] * y[173])/(130e-6 + 1e-6 * y[683] * y[173])
    R1286 = (13.7 * 1e-6 * y[173] * y[856])/(130e-6 + 1e-6 * y[173] * y[856])
    R1288 = (13.7 * 1e-6 * y[173] * y[94])/(130e-6 + 1e-6 * y[173] * y[94])
    R1292 = (13.7 * 1e-6 * y[767] * y[173])/(130e-6 + 1e-6 * y[767] * y[173])
    R1301 = (13.7 * 1e-6 * y[278] * y[763] * y[173])/(130e-6 + 1e-6 * y[278] * y[763] * y[173])
    R1302 = (13.7 * 1e-6 * y[278] * y[771] * y[173])/(130e-6 + 1e-6 * y[278] * y[771] * y[173])
    R1306 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1308 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1309 = (13.7 * 1e-6 * y[775] * y[173])/(130e-6 + 1e-6 * y[775] * y[173])
    R1313 = (13.7 * 1e-6 * y[928] * y[173] * y[36])/(130e-6 + 1e-6 * y[928] * y[173] * y[36])
    R1316 = (13.7 * 1e-6 * y[783] * y[173] * y[36])/(130e-6 + 1e-6 * y[783] * y[173] * y[36])
    R1319 = (13.7 * 1e-6 * y[16] * y[173])/(130e-6 + 1e-6 * y[16] * y[173])
    R1332 = (13.7 * 1e-6 * y[761] * y[173] * y[609])/(130e-6 + 1e-6 * y[761] * y[173] * y[609])
    R1360 = (13.7 * 1e-6 * y[278] * y[173] * y[1622])/(130e-6 + 1e-6 * y[278] * y[173] * y[1622])
    R1363 = (13.7 * 1e-6 * y[173] * y[804] * y[236])/(130e-6 + 1e-6 * y[173] * y[804] * y[236])
    R1365 = (13.7 * 1e-6 * y[173] * y[830])/(130e-6 + 1e-6 * y[173] * y[830])
    R1367 = (13.7 * 1e-6 * y[278] * y[173] * y[807])/(130e-6 + 1e-6 * y[278] * y[173] * y[807])
    R1374 = (13.7 * 1e-6 * y[173] * y[817])/(130e-6 + 1e-6 * y[173] * y[817])
    R1375 = (13.7 * 1e-6 * y[173] * y[806])/(130e-6 + 1e-6 * y[173] * y[806])
    R1377 = (13.7 * 1e-6 * y[173] * y[501])/(130e-6 + 1e-6 * y[173] * y[501])
    R1379 = (13.7 * 1e-6 * y[173] * y[1119])/(130e-6 + 1e-6 * y[173] * y[1119])
    R1404 = (13.7 * 1e-6 * y[278] * y[173] * y[824])/(130e-6 + 1e-6 * y[278] * y[173] * y[824])
    R1407 = (13.7 * 1e-6 * y[173] * y[747])/(130e-6 + 1e-6 * y[173] * y[747])
    R1408 = (13.7 * 1e-6 * y[173] * y[747] * y[236])/(130e-6 + 1e-6 * y[173] * y[747] * y[236])
    R1415 = (13.7 * 1e-6 * y[173] * y[197] * y[236])/(130e-6 + 1e-6 * y[173] * y[197] * y[236])
    R1419 = (13.7 * 1e-6 * y[173] * y[191])/(130e-6 + 1e-6 * y[173] * y[191])
    R1429 = (13.7 * 1e-6 * y[173] * y[226])/(130e-6 + 1e-6 * y[173] * y[226])
    R1438 = (13.7 * 1e-6 * y[173] * y[851])/(130e-6 + 1e-6 * y[173] * y[851])
    R1440 = (13.7 * 1e-6 * y[839] * y[173])/(130e-6 + 1e-6 * y[839] * y[173])
    R1441 = (13.7 * 1e-6 * y[490] * y[127] * y[173])/(130e-6 + 1e-6 * y[490] * y[127] * y[173])
    R1442 = (13.7 * 1e-6 * y[278] * y[173] * y[843])/(130e-6 + 1e-6 * y[278] * y[173] * y[843])
    R1445 = (13.7 * 1e-6 * y[34] * y[173])/(130e-6 + 1e-6 * y[34] * y[173])
    R1447 = (13.7 * 1e-6 * y[278] * y[173] * y[991])/(130e-6 + 1e-6 * y[278] * y[173] * y[991])
    R1450 = (13.7 * 1e-6 * y[225] * y[173])/(130e-6 + 1e-6 * y[225] * y[173])
    R1451 = (13.7 * 1e-6 * y[173] * y[608] * y[236])/(130e-6 + 1e-6 * y[173] * y[608] * y[236])
    R1477 = (13.7 * 1e-6 * y[278] * y[173] * y[855])/(130e-6 + 1e-6 * y[278] * y[173] * y[855])
    R1481 = (13.7 * 1e-6 * y[278] * y[173] * y[561])/(130e-6 + 1e-6 * y[278] * y[173] * y[561])
    R1484 = (13.7 * 1e-6 * y[173] * y[862])/(130e-6 + 1e-6 * y[173] * y[862])
    R1485 = (13.7 * 1e-6 * y[70] * y[173] * y[563])/(130e-6 + 1e-6 * y[70] * y[173] * y[563])
    R1487 = (13.7 * 1e-6 * y[278] * y[173] * y[558])/(130e-6 + 1e-6 * y[278] * y[173] * y[558])
    R1490 = (13.7 * 1e-6 * y[278] * y[173] * y[867])/(130e-6 + 1e-6 * y[278] * y[173] * y[867])
    R1500 = (13.7 * 1e-6 * y[17] * y[173])/(130e-6 + 1e-6 * y[17] * y[173])
    R1502 = (13.7 * 1e-6 * y[25] * y[173])/(130e-6 + 1e-6 * y[25] * y[173])
    R1504 = (13.7 * 1e-6 * y[80] * y[173])/(130e-6 + 1e-6 * y[80] * y[173])
    R1507 = (13.7 * 1e-6 * y[87] * y[173])/(130e-6 + 1e-6 * y[87] * y[173])
    R1512 = (13.7 * 1e-6 * y[96] * y[173])/(130e-6 + 1e-6 * y[96] * y[173])
    R1513 = (13.7 * 1e-6 * y[118] * y[173])/(130e-6 + 1e-6 * y[118] * y[173])
    R1514 = (13.7 * 1e-6 * y[130] * y[173])/(130e-6 + 1e-6 * y[130] * y[173])
    R1515 = (13.7 * 1e-6 * y[169] * y[173])/(130e-6 + 1e-6 * y[169] * y[173])
    R1518 = (13.7 * 1e-6 * y[186] * y[173])/(130e-6 + 1e-6 * y[186] * y[173])
    R1520 = (13.7 * 1e-6 * y[195] * y[173])/(130e-6 + 1e-6 * y[195] * y[173])
    R1524 = (13.7 * 1e-6 * y[208] * y[173])/(130e-6 + 1e-6 * y[208] * y[173])
    R1525 = (13.7 * 1e-6 * y[217] * y[173])/(130e-6 + 1e-6 * y[217] * y[173])
    R1526 = (13.7 * 1e-6 * y[228] * y[173])/(130e-6 + 1e-6 * y[228] * y[173])
    R1527 = (13.7 * 1e-6 * y[237] * y[173])/(130e-6 + 1e-6 * y[237] * y[173])
    R1537 = (13.7 * 1e-6 * y[278] * y[173] * y[875])/(130e-6 + 1e-6 * y[278] * y[173] * y[875])
    R1539 = (13.7 * 1e-6 * y[78] * y[173])/(130e-6 + 1e-6 * y[78] * y[173])
    R1541 = (13.7 * 1e-6 * y[2] * y[173])/(130e-6 + 1e-6 * y[2] * y[173])
    R1542 = (13.7 * 1e-6 * y[3] * y[173])/(130e-6 + 1e-6 * y[3] * y[173])
    R1543 = (13.7 * 1e-6 * y[4] * y[173])/(130e-6 + 1e-6 * y[4] * y[173])
    R1550 = (13.7 * 1e-6 * y[7] * y[173])/(130e-6 + 1e-6 * y[7] * y[173])
    R1551 = (13.7 * 1e-6 * y[9] * y[173])/(130e-6 + 1e-6 * y[9] * y[173])
    R1552 = (13.7 * 1e-6 * y[11] * y[173])/(130e-6 + 1e-6 * y[11] * y[173])
    R1568 = (13.7 * 1e-6 * y[127] * y[593] * y[173])/(130e-6 + 1e-6 * y[127] * y[593] * y[173])
    R1573 = (13.7 * 1e-6 * y[278] * y[173] * y[107])/(130e-6 + 1e-6 * y[278] * y[173] * y[107])
    R1580 = (13.7 * 1e-6 * y[278] * y[173] * y[890])/(130e-6 + 1e-6 * y[278] * y[173] * y[890])
    R1582 = (13.7 * 1e-6 * y[278] * y[173] * y[892])/(130e-6 + 1e-6 * y[278] * y[173] * y[892])
    R1587 = (13.7 * 1e-6 * y[278] * y[173] * y[893])/(130e-6 + 1e-6 * y[278] * y[173] * y[893])
    R1590 = (13.7 * 1e-6 * y[278] * y[173] * y[896])/(130e-6 + 1e-6 * y[278] * y[173] * y[896])
    R1620 = (13.7 * 1e-6 * y[173] * y[909])/(130e-6 + 1e-6 * y[173] * y[909])
    R1631 = (13.7 * 1e-6 * y[173] * y[298] * y[140])/(130e-6 + 1e-6 * y[173] * y[298] * y[140])
    R1637 = (13.7 * 1e-6 * y[278] * y[173] * y[326])/(130e-6 + 1e-6 * y[278] * y[173] * y[326])
    R1638 = (13.7 * 1e-6 * y[278] * y[173] * y[923])/(130e-6 + 1e-6 * y[278] * y[173] * y[923])
    R1648 = (13.7 * 1e-6 * y[278] * y[173] * y[931])/(130e-6 + 1e-6 * y[278] * y[173] * y[931])
    R1651 = (13.7 * 1e-6 * y[278] * y[173] * y[936])/(130e-6 + 1e-6 * y[278] * y[173] * y[936])
    R1664 = (13.7 * 1e-6 * y[278] * y[173] * y[938])/(130e-6 + 1e-6 * y[278] * y[173] * y[938])
    R1667 = (13.7 * 1e-6 * y[278] * y[173] * y[943])/(130e-6 + 1e-6 * y[278] * y[173] * y[943])
    R1673 = (13.7 * 1e-6 * y[278] * y[173] * y[940])/(130e-6 + 1e-6 * y[278] * y[173] * y[940])
    R1676 = (13.7 * 1e-6 * y[278] * y[173] * y[942])/(130e-6 + 1e-6 * y[278] * y[173] * y[942])
    R1678 = (13.7 * 1e-6 * y[173] * y[1650])/(130e-6 + 1e-6 * y[173] * y[1650])
    R1680 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    R1681 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    R1683 = (13.7 * 1e-6 * y[173] * y[952])/(130e-6 + 1e-6 * y[173] * y[952])
    R1684 = (13.7 * 1e-6 * y[912] * y[173])/(130e-6 + 1e-6 * y[912] * y[173])
    R1690 = (13.7 * 1e-6 * y[173] * y[946])/(130e-6 + 1e-6 * y[173] * y[946])
    R1701 = (13.7 * 1e-6 * y[173] * y[891])/(130e-6 + 1e-6 * y[173] * y[891])
    R1702 = (13.7 * 1e-6 * y[173] * y[243])/(130e-6 + 1e-6 * y[173] * y[243])
    R1703 = (13.7 * 1e-6 * y[173] * y[244])/(130e-6 + 1e-6 * y[173] * y[244])
    R1710 = (13.7 * 1e-6 * y[173] * y[102])/(130e-6 + 1e-6 * y[173] * y[102])
    R1711 = (13.7 * 1e-6 * y[173] * y[246])/(130e-6 + 1e-6 * y[173] * y[246])
    R1723 = (13.7 * 1e-6 * y[536] * y[173])/(130e-6 + 1e-6 * y[536] * y[173])
    R1724 = (13.7 * 1e-6 * y[173] * y[825])/(130e-6 + 1e-6 * y[173] * y[825])
    R1727 = (13.7 * 1e-6 * y[173] * y[797])/(130e-6 + 1e-6 * y[173] * y[797])
    R1728 = (13.7 * 1e-6 * y[173] * y[747])/(130e-6 + 1e-6 * y[173] * y[747])
    R1730 = (13.7 * 1e-6 * y[978] * y[173])/(130e-6 + 1e-6 * y[978] * y[173])
    R1731 = (13.7 * 1e-6 * y[977] * y[173])/(130e-6 + 1e-6 * y[977] * y[173])
    R1733 = (13.7 * 1e-6 * y[222] * y[173])/(130e-6 + 1e-6 * y[222] * y[173])
    R1738 = (13.7 * 1e-6 * y[173] * y[90])/(130e-6 + 1e-6 * y[173] * y[90])
    R1739 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1740 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    R1741 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    R1744 = (13.7 * 1e-6 * y[979] * y[173])/(130e-6 + 1e-6 * y[979] * y[173])
    R1746 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    R1747 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1749 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1750 = (13.7 * 1e-6 * y[332] * y[173])/(130e-6 + 1e-6 * y[332] * y[173])
    R1752 = (13.7 * 1e-6 * y[981] * y[173])/(130e-6 + 1e-6 * y[981] * y[173])
    R1754 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    R1755 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    R1756 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    R1757 = (13.7 * 1e-6 * y[980] * y[173])/(130e-6 + 1e-6 * y[980] * y[173])
    R1760 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1761 = (13.7 * 1e-6 * y[934] * y[173])/(130e-6 + 1e-6 * y[934] * y[173])
    R1763 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1764 = (13.7 * 1e-6 * y[935] * y[173])/(130e-6 + 1e-6 * y[935] * y[173])
    R1765 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1766 = (13.7 * 1e-6 * y[278] * y[173] * y[306])/(130e-6 + 1e-6 * y[278] * y[173] * y[306])
    R1769 = (13.7 * 1e-6 * y[932] * y[173])/(130e-6 + 1e-6 * y[932] * y[173])
    R1770 = (13.7 * 1e-6 * y[173] * y[929])/(130e-6 + 1e-6 * y[173] * y[929])
    R1772 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    R1774 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    R1775 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1783 = (13.7 * 1e-6 * y[692] * y[173] * y[236])/(130e-6 + 1e-6 * y[692] * y[173] * y[236])
    R1785 = (13.7 * 1e-6 * y[278] * y[173] * y[187])/(130e-6 + 1e-6 * y[278] * y[173] * y[187])
    R1786 = (13.7 * 1e-6 * y[278] * y[173] * y[188])/(130e-6 + 1e-6 * y[278] * y[173] * y[188])
    R1787 = (13.7 * 1e-6 * y[278] * y[173] * y[192])/(130e-6 + 1e-6 * y[278] * y[173] * y[192])
    R1788 = (13.7 * 1e-6 * y[278] * y[173] * y[193])/(130e-6 + 1e-6 * y[278] * y[173] * y[193])
    R1793 = (13.7 * 1e-6 * y[278] * y[173] * y[198])/(130e-6 + 1e-6 * y[278] * y[173] * y[198])
    R1795 = (13.7 * 1e-6 * y[278] * y[173] * y[199])/(130e-6 + 1e-6 * y[278] * y[173] * y[199])
    R1796 = (13.7 * 1e-6 * y[278] * y[173] * y[200])/(130e-6 + 1e-6 * y[278] * y[173] * y[200])
    R1808 = (13.7 * 1e-6 * y[173] * y[187])/(130e-6 + 1e-6 * y[173] * y[187])
    R1813 = (13.7 * 1e-6 * y[173] * y[188])/(130e-6 + 1e-6 * y[173] * y[188])
    R1814 = (13.7 * 1e-6 * y[278] * y[173] * y[1014])/(130e-6 + 1e-6 * y[278] * y[173] * y[1014])
    R1816 = (13.7 * 1e-6 * y[173] * y[192])/(130e-6 + 1e-6 * y[173] * y[192])
    R1818 = (13.7 * 1e-6 * y[173] * y[193])/(130e-6 + 1e-6 * y[173] * y[193])
    R1827 = (13.7 * 1e-6 * y[173] * y[198])/(130e-6 + 1e-6 * y[173] * y[198])
    R1829 = (13.7 * 1e-6 * y[173] * y[199])/(130e-6 + 1e-6 * y[173] * y[199])
    R1837 = (13.7 * 1e-6 * y[173] * y[200])/(130e-6 + 1e-6 * y[173] * y[200])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    R1843 = (13.7 * 1e-6 * y[490] * y[173] * y[717])/(130e-6 + 1e-6 * y[490] * y[173] * y[717])
    R1845 = (13.7 * 1e-6 * y[210] * y[173])/(130e-6 + 1e-6 * y[210] * y[173])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    R1853 = (13.7 * 1e-6 * y[173] * y[808])/(130e-6 + 1e-6 * y[173] * y[808])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    R1858 = (13.7 * 1e-6 * y[173] * y[1026])/(130e-6 + 1e-6 * y[173] * y[1026])
    R1859 = (13.7 * 1e-6 * y[278] * y[173] * y[139])/(130e-6 + 1e-6 * y[278] * y[173] * y[139])
    R1860 = (13.7 * 1e-6 * y[278] * y[173] * y[150])/(130e-6 + 1e-6 * y[278] * y[173] * y[150])
    R1861 = (13.7 * 1e-6 * y[278] * y[173] * y[155])/(130e-6 + 1e-6 * y[278] * y[173] * y[155])
    R1863 = (13.7 * 1e-6 * y[278] * y[173] * y[158])/(130e-6 + 1e-6 * y[278] * y[173] * y[158])
    R1864 = (13.7 * 1e-6 * y[278] * y[173] * y[160])/(130e-6 + 1e-6 * y[278] * y[173] * y[160])
    R1865 = (13.7 * 1e-6 * y[278] * y[173] * y[163])/(130e-6 + 1e-6 * y[278] * y[173] * y[163])
    R1869 = (13.7 * 1e-6 * y[695] * y[173])/(130e-6 + 1e-6 * y[695] * y[173])
    R1870 = (13.7 * 1e-6 * y[278] * y[173] * y[164])/(130e-6 + 1e-6 * y[278] * y[173] * y[164])
    R1872 = (13.7 * 1e-6 * y[1654] * y[173])/(130e-6 + 1e-6 * y[1654] * y[173])
    R1879 = (13.7 * 1e-6 * y[278] * y[173] * y[1064])/(130e-6 + 1e-6 * y[278] * y[173] * y[1064])
    R1882 = (13.7 * 1e-6 * y[278] * y[173] * y[1065])/(130e-6 + 1e-6 * y[278] * y[173] * y[1065])
    R1883 = (13.7 * 1e-6 * y[278] * y[173] * y[1067])/(130e-6 + 1e-6 * y[278] * y[173] * y[1067])
    R1884 = (13.7 * 1e-6 * y[278] * y[173] * y[1069])/(130e-6 + 1e-6 * y[278] * y[173] * y[1069])
    R1885 = (13.7 * 1e-6 * y[278] * y[173] * y[1070])/(130e-6 + 1e-6 * y[278] * y[173] * y[1070])
    R1888 = (13.7 * 1e-6 * y[278] * y[173] * y[241])/(130e-6 + 1e-6 * y[278] * y[173] * y[241])
    R1889 = (13.7 * 1e-6 * y[278] * y[173] * y[1075])/(130e-6 + 1e-6 * y[278] * y[173] * y[1075])
    R1890 = (13.7 * 1e-6 * y[278] * y[173] * y[1055])/(130e-6 + 1e-6 * y[278] * y[173] * y[1055])
    R1891 = (13.7 * 1e-6 * y[278] * y[173] * y[1076])/(130e-6 + 1e-6 * y[278] * y[173] * y[1076])
    R1892 = (13.7 * 1e-6 * y[173] * y[1064])/(130e-6 + 1e-6 * y[173] * y[1064])
    R1893 = (13.7 * 1e-6 * y[278] * y[173] * y[247])/(130e-6 + 1e-6 * y[278] * y[173] * y[247])
    R1894 = (13.7 * 1e-6 * y[278] * y[173] * y[265])/(130e-6 + 1e-6 * y[278] * y[173] * y[265])
    R1895 = (13.7 * 1e-6 * y[278] * y[173] * y[268])/(130e-6 + 1e-6 * y[278] * y[173] * y[268])
    R1896 = (13.7 * 1e-6 * y[278] * y[173] * y[271])/(130e-6 + 1e-6 * y[278] * y[173] * y[271])
    R1898 = (13.7 * 1e-6 * y[173] * y[1065])/(130e-6 + 1e-6 * y[173] * y[1065])
    R1899 = (13.7 * 1e-6 * y[278] * y[173] * y[276])/(130e-6 + 1e-6 * y[278] * y[173] * y[276])
    R1902 = (13.7 * 1e-6 * y[173] * y[1067])/(130e-6 + 1e-6 * y[173] * y[1067])
    R1903 = (13.7 * 1e-6 * y[278] * y[173] * y[294])/(130e-6 + 1e-6 * y[278] * y[173] * y[294])
    R1906 = (13.7 * 1e-6 * y[1220] * y[173])/(130e-6 + 1e-6 * y[1220] * y[173])
    R1907 = (13.7 * 1e-6 * y[173] * y[1069])/(130e-6 + 1e-6 * y[173] * y[1069])
    R1909 = (13.7 * 1e-6 * y[173] * y[1068])/(130e-6 + 1e-6 * y[173] * y[1068])
    R1910 = (13.7 * 1e-6 * y[173] * y[1070])/(130e-6 + 1e-6 * y[173] * y[1070])
    R1912 = (13.7 * 1e-6 * y[173] * y[1075])/(130e-6 + 1e-6 * y[173] * y[1075])
    R1914 = (13.7 * 1e-6 * y[173] * y[1076])/(130e-6 + 1e-6 * y[173] * y[1076])
    R1940 = (13.7 * 1e-6 * y[278] * y[173] * y[609])/(130e-6 + 1e-6 * y[278] * y[173] * y[609])
    R1954 = (13.7 * 1e-6 * y[278] * y[173] * y[1])/(130e-6 + 1e-6 * y[278] * y[173] * y[1])
    R1957 = (13.7 * 1e-6 * y[279] * y[173])/(130e-6 + 1e-6 * y[279] * y[173])
    R1968 = (13.7 * 1e-6 * y[173] * y[92] * y[444])/(130e-6 + 1e-6 * y[173] * y[92] * y[444])
    R1970 = (13.7 * 1e-6 * y[173] * y[73])/(130e-6 + 1e-6 * y[173] * y[73])
    R1973 = (13.7 * 1e-6 * y[173] * y[339])/(130e-6 + 1e-6 * y[173] * y[339])
    R1976 = (13.7 * 1e-6 * y[1656] * y[173] * y[335])/(130e-6 + 1e-6 * y[1656] * y[173] * y[335])
    R1991 = (13.7 * 1e-6 * y[16] * y[173] * y[563])/(130e-6 + 1e-6 * y[16] * y[173] * y[563])
    R2000 = (13.7 * 1e-6 * y[173] * y[704])/(130e-6 + 1e-6 * y[173] * y[704])
    R2006 = (13.7 * 1e-6 * y[175] * y[173])/(130e-6 + 1e-6 * y[175] * y[173])
    R2012 = (13.7 * 1e-6 * y[278] * y[173] * y[1130])/(130e-6 + 1e-6 * y[278] * y[173] * y[1130])
    R2021 = (13.7 * 1e-6 * y[278] * y[173] * y[92])/(130e-6 + 1e-6 * y[278] * y[173] * y[92])
    R2035 = (13.7 * 1e-6 * y[173] * y[1145])/(130e-6 + 1e-6 * y[173] * y[1145])
    R2038 = (13.7 * 1e-6 * y[173] * y[314])/(130e-6 + 1e-6 * y[173] * y[314])
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    R2045 = (13.7 * 1e-6 * y[278] * y[173] * y[1128])/(130e-6 + 1e-6 * y[278] * y[173] * y[1128])
    R2049 = (13.7 * 1e-6 * y[173] * y[1149])/(130e-6 + 1e-6 * y[173] * y[1149])
    R2051 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R2065 = (13.7 * 1e-6 * y[278] * y[173] * y[1161])/(130e-6 + 1e-6 * y[278] * y[173] * y[1161])
    R2078 = (13.7 * 1e-6 * y[278] * y[173] * y[1171])/(130e-6 + 1e-6 * y[278] * y[173] * y[1171])
    R2101 = (13.7 * 1e-6 * y[173] * y[335] * y[226])/(130e-6 + 1e-6 * y[173] * y[335] * y[226])
    R2107 = (13.7 * 1e-6 * y[955] * y[173])/(130e-6 + 1e-6 * y[955] * y[173])
    R2112 = (13.7 * 1e-6 * y[173] * y[36] * y[311])/(130e-6 + 1e-6 * y[173] * y[36] * y[311])
    R2113 = (13.7 * 1e-6 * y[278] * y[928] * y[173] * y[794])/(130e-6 + 1e-6 * y[278] * y[928] * y[173] * y[794])
    R2114 = (13.7 * 1e-6 * y[173] * y[335] * y[1658])/(130e-6 + 1e-6 * y[173] * y[335] * y[1658])
    R2116 = (13.7 * 1e-6 * y[173] * y[1025])/(130e-6 + 1e-6 * y[173] * y[1025])
    R2124 = (13.7 * 1e-6 * y[173] * y[1659])/(130e-6 + 1e-6 * y[173] * y[1659])
    R2131 = (13.7 * 1e-6 * y[278] * y[173] * y[1660])/(130e-6 + 1e-6 * y[278] * y[173] * y[1660])
    R2137 = (13.7 * 1e-6 * y[173] * y[227])/(130e-6 + 1e-6 * y[173] * y[227])
    R2149 = (13.7 * 1e-6 * y[599] * y[173])/(130e-6 + 1e-6 * y[599] * y[173])
    R2150 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R2151 = (13.7 * 1e-6 * y[173] * y[1197])/(130e-6 + 1e-6 * y[173] * y[1197])
    R2152 = (13.7 * 1e-6 * y[173] * y[236] * y[1212])/(130e-6 + 1e-6 * y[173] * y[236] * y[1212])
    R2162 = (13.7 * 1e-6 * y[173] * y[212] * y[502])/(130e-6 + 1e-6 * y[173] * y[212] * y[502])
    R2174 = (13.7 * 1e-6 * y[278] * y[173] * y[1210])/(130e-6 + 1e-6 * y[278] * y[173] * y[1210])
    R2187 = (13.7 * 1e-6 * y[173] * y[822])/(130e-6 + 1e-6 * y[173] * y[822])
    R2189 = (13.7 * 1e-6 * y[278] * y[173] * y[1219])/(130e-6 + 1e-6 * y[278] * y[173] * y[1219])
    R2192 = (13.7 * 1e-6 * y[173] * y[6])/(130e-6 + 1e-6 * y[173] * y[6])
    R2194 = (13.7 * 1e-6 * y[278] * y[173] * y[1167])/(130e-6 + 1e-6 * y[278] * y[173] * y[1167])
    R2199 = (13.7 * 1e-6 * y[173] * y[236] * y[111])/(130e-6 + 1e-6 * y[173] * y[236] * y[111])
    R2200 = (13.7 * 1e-6 * y[173] * y[6] * y[111])/(130e-6 + 1e-6 * y[173] * y[6] * y[111])
    R2225 = (13.7 * 1e-6 * y[278] * y[173] * y[1235])/(130e-6 + 1e-6 * y[278] * y[173] * y[1235])
    R2238 = (13.7 * 1e-6 * y[278] * y[173] * y[1211])/(130e-6 + 1e-6 * y[278] * y[173] * y[1211])
    R2246 = (13.7 * 1e-6 * y[173] * y[1242])/(130e-6 + 1e-6 * y[173] * y[1242])
    R2247 = (13.7 * 1e-6 * y[173] * y[1242])/(130e-6 + 1e-6 * y[173] * y[1242])
    R2249 = (13.7 * 1e-6 * y[173] * y[1241])/(130e-6 + 1e-6 * y[173] * y[1241])
    R2251 = (13.7 * 1e-6 * y[278] * y[173] * y[1246])/(130e-6 + 1e-6 * y[278] * y[173] * y[1246])
    R2253 = (13.7 * 1e-6 * y[278] * y[173] * y[953] * y[983])/(130e-6 + 1e-6 * y[278] * y[173] * y[953] * y[983])
    R2256 = (13.7 * 1e-6 * y[173] * y[1108])/(130e-6 + 1e-6 * y[173] * y[1108])
    R2261 = (13.7 * 1e-6 * y[173] * y[1201])/(130e-6 + 1e-6 * y[173] * y[1201])
    R2275 = (13.7 * 1e-6 * y[278] * y[173] * y[1256])/(130e-6 + 1e-6 * y[278] * y[173] * y[1256])
    R2285 = (13.7 * 1e-6 * y[278] * y[173] * y[1261])/(130e-6 + 1e-6 * y[278] * y[173] * y[1261])
    R2290 = (13.7 * 1e-6 * y[173] * y[335] * y[1279])/(130e-6 + 1e-6 * y[173] * y[335] * y[1279])
    R2299 = (13.7 * 1e-6 * y[173] * y[446])/(130e-6 + 1e-6 * y[173] * y[446])
    R2304 = (13.7 * 1e-6 * y[173] * y[1268])/(130e-6 + 1e-6 * y[173] * y[1268])
    R2311 = (13.7 * 1e-6 * y[278] * y[173] * y[1276])/(130e-6 + 1e-6 * y[278] * y[173] * y[1276])
    R2313 = (13.7 * 1e-6 * y[71] * y[173])/(130e-6 + 1e-6 * y[71] * y[173])
    R2315 = (13.7 * 1e-6 * y[173] * y[236] * y[1275])/(130e-6 + 1e-6 * y[173] * y[236] * y[1275])
    R2323 = (13.7 * 1e-6 * y[173] * y[236] * y[780])/(130e-6 + 1e-6 * y[173] * y[236] * y[780])
    R2329 = (13.7 * 1e-6 * y[173] * y[969])/(130e-6 + 1e-6 * y[173] * y[969])
    R2338 = (13.7 * 1e-6 * y[278] * y[173] * y[1285])/(130e-6 + 1e-6 * y[278] * y[173] * y[1285])
    R2341 = (13.7 * 1e-6 * y[278] * y[173] * y[1287])/(130e-6 + 1e-6 * y[278] * y[173] * y[1287])
    R2344 = (13.7 * 1e-6 * y[278] * y[173] * y[1286])/(130e-6 + 1e-6 * y[278] * y[173] * y[1286])
    R2351 = (13.7 * 1e-6 * y[173] * y[1036])/(130e-6 + 1e-6 * y[173] * y[1036])
    R2360 = (13.7 * 1e-6 * y[173] * y[236] * y[694])/(130e-6 + 1e-6 * y[173] * y[236] * y[694])
    R2368 = (13.7 * 1e-6 * y[173] * y[36] * y[257])/(130e-6 + 1e-6 * y[173] * y[36] * y[257])
    R2370 = (13.7 * 1e-6 * y[173] * y[1277])/(130e-6 + 1e-6 * y[173] * y[1277])
    R2374 = (13.7 * 1e-6 * y[173] * y[1307])/(130e-6 + 1e-6 * y[173] * y[1307])
    R2379 = (13.7 * 1e-6 * y[173] * y[1309])/(130e-6 + 1e-6 * y[173] * y[1309])
    return (R155 + R236 + R326 + R332 + R346 + R347 + R369 + R402 + R413 + R415 + R433 + R443 + R458 + R470 + R477 + R478 + R492 + R494 + R501 + R502 + R507 + R509 + R510 + R533 + R543 + R549 + R571 + R573 + R575 + R576 + R581 + R599 + R624 + R627 + R666 + R667 + R671 + R673 + R674 + R675 + R679 + R680 + R686 + R697 + R981 + R982 + R1022 + R1023 + R1030 + R1107 + R1109 + R1139 + R1188 + R1210 + R1234 + R1338 + R1388 + R1392 + R1432 + R1439 + R1623 + R1625 + R1628 + R1642 + R1643 + R1661 + R1662 + R1666 + R1706 + R1708 + R1758 + R1779 + R1849 + R1990 + R2009 + R2016 + R2081 + R2082 + R2083 + R2086 + R2092 + R2093 + R2094 + R2095 + R2096 + R2097 + R2103 + R2104 + R2127 + R2141 + R2170 + R2205 + R2207 + R2216 + R2218 + R2237 + R2242 + R2257 + R2266 + R2271 + R2382) - (R32 + R37 + R38 + R46 + R56 + R61 + R82 + R92 + R94 + R96 + R135 + R142 + R144 + R148 + R150 + R156 + R159 + R161 + R163 + R168 + R178 + R184 + R194 + R206 + R209 + R211 + R216 + R224 + R231 + R237 + R241 + R242 + R246 + R247 + R249 + R256 + R257 + R258 + R259 + R262 + R263 + R265 + R266 + R272 + R273 + R280 + R282 + R286 + R298 + R304 + R308 + R325 + R329 + R330 + R338 + R342 + R343 + R344 + R345 + R349 + R355 + R358 + R361 + R365 + R366 + R367 + R379 + R381 + R382 + R385 + R393 + R394 + R403 + R404 + R405 + R411 + R421 + R423 + R436 + R437 + R440 + R444 + R448 + R449 + R451 + R455 + R456 + R471 + R480 + R486 + R487 + R491 + R495 + R496 + R504 + R508 + R511 + R512 + R527 + R528 + R529 + R540 + R542 + R558 + R563 + R565 + R589 + R598 + R605 + R609 + R612 + R643 + R655 + R700 + R701 + R710 + R926 + R929 + R935 + R937 + R941 + R942 + R943 + R944 + R945 + R946 + R953 + R954 + R955 + R957 + R962 + R963 + R964 + R966 + R968 + R983 + R991 + R1000 + R1007 + R1015 + R1019 + R1033 + R1043 + R1050 + R1067 + R1069 + R1073 + R1078 + R1106 + R1119 + R1121 + R1127 + R1129 + R1133 + R1138 + R1141 + R1143 + R1147 + R1164 + R1165 + R1168 + R1174 + R1180 + R1184 + R1185 + R1186 + R1195 + R1202 + R1204 + R1213 + R1235 + R1239 + R1243 + R1246 + R1257 + R1260 + R1268 + R1270 + R1272 + R1277 + R1286 + R1288 + R1292 + R1301 + R1302 + R1306 + R1308 + R1309 + R1313 + R1316 + R1319 + R1332 + R1360 + R1363 + R1365 + R1367 + R1374 + R1375 + R1377 + R1379 + R1404 + R1407 + R1408 + R1415 + R1419 + R1429 + R1438 + R1440 + R1441 + R1442 + R1445 + R1447 + R1450 + R1451 + R1477 + R1481 + R1484 + R1485 + R1487 + R1490 + R1500 + R1502 + R1504 + R1507 + R1512 + R1513 + R1514 + R1515 + R1518 + R1520 + R1524 + R1525 + R1526 + R1527 + R1537 + R1539 + R1541 + R1542 + R1543 + R1550 + R1551 + R1552 + R1568 + R1573 + R1580 + R1582 + R1587 + R1590 + R1620 + R1631 + R1637 + R1638 + R1648 + R1651 + R1664 + R1667 + R1673 + R1676 + R1678 + R1680 + R1681 + R1683 + R1684 + R1690 + R1701 + R1702 + R1703 + R1710 + R1711 + R1723 + R1724 + R1727 + R1728 + R1730 + R1731 + R1733 + R1738 + R1739 + R1740 + R1741 + R1744 + R1746 + R1747 + R1749 + R1750 + R1752 + R1754 + R1755 + R1756 + R1757 + R1760 + R1761 + R1763 + R1764 + R1765 + R1766 + R1769 + R1770 + R1772 + R1774 + R1775 + R1783 + R1785 + R1786 + R1787 + R1788 + R1793 + R1795 + R1796 + R1808 + R1813 + R1814 + R1816 + R1818 + R1827 + R1829 + R1837 + R1841 + R1843 + R1845 + R1852 + R1853 + R1856 + R1858 + R1859 + R1860 + R1861 + R1863 + R1864 + R1865 + R1869 + R1870 + R1872 + R1879 + R1882 + R1883 + R1884 + R1885 + R1888 + R1889 + R1890 + R1891 + R1892 + R1893 + R1894 + R1895 + R1896 + R1898 + R1899 + R1902 + R1903 + R1906 + R1907 + R1909 + R1910 + R1912 + R1914 + R1940 + R1954 + R1957 + R1968 + R1970 + R1973 + R1976 + R1991 + R2000 + R2006 + R2012 + R2021 + R2035 + R2038 + R2042 + R2045 + R2049 + R2051 + R2065 + R2078 + R2101 + R2107 + R2112 + R2113 + R2114 + R2116 + R2124 + R2131 + R2137 + R2149 + R2150 + R2151 + R2152 + R2162 + R2174 + R2187 + R2189 + R2192 + R2194 + R2199 + R2200 + R2225 + R2238 + R2246 + R2247 + R2249 + R2251 + R2253 + R2256 + R2261 + R2275 + R2285 + R2290 + R2299 + R2304 + R2311 + R2313 + R2315 + R2323 + R2329 + R2338 + R2341 + R2344 + R2351 + R2360 + R2368 + R2370 + R2374 + R2379)
 
def m_icit_c(t, y):
    R156 = (13.7 * 1e-6 * y[170] * y[173])/(130e-6 + 1e-6 * y[170] * y[173])
    R1370 = (13.7 * 1e-6 * y[174] * y[6])/(130e-6 + 1e-6 * y[174] * y[6])
    R1376 = (13.7 * 1e-6 * y[174])/(130e-6 + 1e-6 * y[174])
    return (R156) - (R1370 + R1376)
 
def m_acg5sa_c(t, y):
    R157 = (13.7 * 1e-6 * y[1338] * y[213])/(130e-6 + 1e-6 * y[1338] * y[213])
    R188 = (13.7 * 1e-6 * y[175] * y[6] * y[37])/(130e-6 + 1e-6 * y[175] * y[6] * y[37])
    R2006 = (13.7 * 1e-6 * y[175] * y[173])/(130e-6 + 1e-6 * y[175] * y[173])
    return (R157) - (R188 + R2006)
 
def m_anhgm3p_p(t, y):
    R160 = (13.7 * 1e-6 * y[963] * y[406])/(130e-6 + 1e-6 * y[963] * y[406])
    R1714 = (13.7 * 1e-6 * y[904])/(130e-6 + 1e-6 * y[904])
    R1718 = (13.7 * 1e-6 * y[956])/(130e-6 + 1e-6 * y[956])
    R145 = (13.7 * 1e-6 * y[176] * y[406])/(130e-6 + 1e-6 * y[176] * y[406])
    R149 = (13.7 * 1e-6 * y[176] * y[61])/(130e-6 + 1e-6 * y[176] * y[61])
    return (R160 + R1714 + R1718) - (R145 + R149)
 
def m_anhm4p_c(t, y):
    R161 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R241 = (13.7 * 1e-6 * y[177] * y[173])/(130e-6 + 1e-6 * y[177] * y[173])
    R242 = (13.7 * 1e-6 * y[177] * y[173])/(130e-6 + 1e-6 * y[177] * y[173])
    return (R161) - (R241 + R242)
 
def m_anhgm4p_c(t, y):
    R162 = (13.7 * 1e-6 * y[963] * y[61])/(130e-6 + 1e-6 * y[963] * y[61])
    R150 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R159 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    R161 = (13.7 * 1e-6 * y[178] * y[173])/(130e-6 + 1e-6 * y[178] * y[173])
    return (R162) - (R150 + R159 + R161)
 
def m_anhm_c(t, y):
    R163 = (13.7 * 1e-6 * y[161] * y[173])/(130e-6 + 1e-6 * y[161] * y[173])
    R237 = (13.7 * 1e-6 * y[166] * y[173])/(130e-6 + 1e-6 * y[166] * y[173])
    R241 = (13.7 * 1e-6 * y[177] * y[173])/(130e-6 + 1e-6 * y[177] * y[173])
    R272 = (13.7 * 1e-6 * y[179] * y[278] * y[173])/(130e-6 + 1e-6 * y[179] * y[278] * y[173])
    return (R163 + R237 + R241) - (R272)
 
def m_adphep_LD_c(t, y):
    R164 = (13.7 * 1e-6 * y[744])/(130e-6 + 1e-6 * y[744])
    R1339 = (13.7 * 1e-6 * y[180] * y[558])/(130e-6 + 1e-6 * y[180] * y[558])
    R1341 = (13.7 * 1e-6 * y[180] * y[790])/(130e-6 + 1e-6 * y[180] * y[790])
    R1342 = (13.7 * 1e-6 * y[180] * y[788])/(130e-6 + 1e-6 * y[180] * y[788])
    R1343 = (13.7 * 1e-6 * y[180] * y[734])/(130e-6 + 1e-6 * y[180] * y[734])
    return (R164) - (R1339 + R1341 + R1342 + R1343)
 
def m_pap_c(t, y):
    R165 = (13.7 * 1e-6 * y[1340] * y[99])/(130e-6 + 1e-6 * y[1340] * y[99])
    R1842 = (13.7 * 1e-6 * y[152] * y[1240])/(130e-6 + 1e-6 * y[152] * y[1240])
    R1844 = (13.7 * 1e-6 * y[762] * y[152])/(130e-6 + 1e-6 * y[762] * y[152])
    R345 = (13.7 * 1e-6 * y[173] * y[181])/(130e-6 + 1e-6 * y[173] * y[181])
    return (R165 + R1842 + R1844) - (R345)
 
def m_acser_p(t, y):
    R167 = (13.7 * 1e-6 * y[1312])/(130e-6 + 1e-6 * y[1312])
    R170 = (13.7 * 1e-6 * y[1190])/(130e-6 + 1e-6 * y[1190])
    return (R167 + R170) - (0)
 
def m_ptrc_c(t, y):
    R168 = (13.7 * 1e-6 * y[304] * y[173])/(130e-6 + 1e-6 * y[304] * y[173])
    R1857 = (13.7 * 1e-6 * y[36] * y[151])/(130e-6 + 1e-6 * y[36] * y[151])
    R2076 = (13.7 * 1e-6 * y[151] * y[1171])/(130e-6 + 1e-6 * y[151] * y[1171])
    R2078 = (13.7 * 1e-6 * y[278] * y[173] * y[1171])/(130e-6 + 1e-6 * y[278] * y[173] * y[1171])
    R2084 = (13.7 * 1e-6 * y[61] * y[1171])/(130e-6 + 1e-6 * y[61] * y[1171])
    R1187 = (13.7 * 1e-6 * y[278] * y[110] * y[183])/(130e-6 + 1e-6 * y[278] * y[110] * y[183])
    R2077 = (13.7 * 1e-6 * y[213] * y[183])/(130e-6 + 1e-6 * y[213] * y[183])
    R2193 = (13.7 * 1e-6 * y[209] * y[183])/(130e-6 + 1e-6 * y[209] * y[183])
    return (R168 + R1857 + R2076 + R2078 + R2084) - (R1187 + R2077 + R2193)
 
def m_urea_c(t, y):
    R168 = (13.7 * 1e-6 * y[304] * y[173])/(130e-6 + 1e-6 * y[304] * y[173])
    R2288 = (13.7 * 1e-6 * y[1260])/(130e-6 + 1e-6 * y[1260])
    return (R168 + R2288) - (0)
 
def m_agm_p(t, y):
    R171 = (13.7 * 1e-6 * y[1341])/(130e-6 + 1e-6 * y[1341])
    R317 = (13.7 * 1e-6 * y[304] * y[315])/(130e-6 + 1e-6 * y[304] * y[315])
    R320 = (13.7 * 1e-6 * y[315] * y[61])/(130e-6 + 1e-6 * y[315] * y[61])
    return (R171 + R317 + R320) - (0)
 
def m_2agpg140_c(t, y):
    R172 = (13.7 * 1e-6 * y[1117])/(130e-6 + 1e-6 * y[1117])
    R251 = (13.7 * 1e-6 * y[186] * y[278] * y[577])/(130e-6 + 1e-6 * y[186] * y[278] * y[577])
    R1518 = (13.7 * 1e-6 * y[186] * y[173])/(130e-6 + 1e-6 * y[186] * y[173])
    R1572 = (13.7 * 1e-6 * y[186] * y[247])/(130e-6 + 1e-6 * y[186] * y[247])
    return (R172) - (R251 + R1518 + R1572)
 
def m_pa120_c(t, y):
    R173 = (13.7 * 1e-6 * y[656] * y[86])/(130e-6 + 1e-6 * y[656] * y[86])
    R403 = (13.7 * 1e-6 * y[447] * y[173])/(130e-6 + 1e-6 * y[447] * y[173])
    R536 = (13.7 * 1e-6 * y[21] * y[278])/(130e-6 + 1e-6 * y[21] * y[278])
    R514 = (13.7 * 1e-6 * y[404] * y[36] * y[187])/(130e-6 + 1e-6 * y[404] * y[36] * y[187])
    R1785 = (13.7 * 1e-6 * y[278] * y[173] * y[187])/(130e-6 + 1e-6 * y[278] * y[173] * y[187])
    R1808 = (13.7 * 1e-6 * y[173] * y[187])/(130e-6 + 1e-6 * y[173] * y[187])
    return (R173 + R403 + R536) - (R514 + R1785 + R1808)
 
def m_pa140_c(t, y):
    R174 = (13.7 * 1e-6 * y[657] * y[72])/(130e-6 + 1e-6 * y[657] * y[72])
    R404 = (13.7 * 1e-6 * y[448] * y[173])/(130e-6 + 1e-6 * y[448] * y[173])
    R539 = (13.7 * 1e-6 * y[22] * y[278])/(130e-6 + 1e-6 * y[22] * y[278])
    R515 = (13.7 * 1e-6 * y[404] * y[36] * y[188])/(130e-6 + 1e-6 * y[404] * y[36] * y[188])
    R1786 = (13.7 * 1e-6 * y[278] * y[173] * y[188])/(130e-6 + 1e-6 * y[278] * y[173] * y[188])
    R1813 = (13.7 * 1e-6 * y[173] * y[188])/(130e-6 + 1e-6 * y[173] * y[188])
    return (R174 + R404 + R539) - (R515 + R1786 + R1813)
 
def m_na1_c(t, y):
    R176 = (13.7 * 1e-6 * y[190] * y[927])/(130e-6 + 1e-6 * y[190] * y[927])
    R233 = (13.7 * 1e-6 * y[239] * y[927])/(130e-6 + 1e-6 * y[239] * y[927])
    R373 = (13.7 * 1e-6 * y[1382] * y[927])/(130e-6 + 1e-6 * y[1382] * y[927])
    R1220 = (13.7 * 1e-6 * y[724] * y[927])/(130e-6 + 1e-6 * y[724] * y[927])
    R1232 = (13.7 * 1e-6 * y[739] * y[927])/(130e-6 + 1e-6 * y[739] * y[927])
    R1265 = (13.7 * 1e-6 * y[757] * y[927])/(130e-6 + 1e-6 * y[757] * y[927])
    R1417 = (13.7 * 1e-6 * y[760] * y[927])/(130e-6 + 1e-6 * y[760] * y[927])
    R1964 = (13.7 * 1e-6 * y[927] * y[1101])/(130e-6 + 1e-6 * y[927] * y[1101])
    R1979 = (13.7 * 1e-6 * y[927] * y[1110])/(130e-6 + 1e-6 * y[927] * y[1110])
    R2014 = (13.7 * 1e-6 * y[927] * y[1130])/(130e-6 + 1e-6 * y[927] * y[1130])
    R2147 = (13.7 * 1e-6 * y[927] * y[758])/(130e-6 + 1e-6 * y[927] * y[758])
    R2201 = (13.7 * 1e-6 * y[927] * y[1167])/(130e-6 + 1e-6 * y[927] * y[1167])
    R2272 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2280 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2289 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    return (R176 + R233 + R373 + R1220 + R1232 + R1265 + R1417 + R1964 + R1979 + R2014 + R2147 + R2201) - (R2272 + R2280 + R2289)
 
def m_ac_p(t, y):
    R177 = (13.7 * 1e-6 * y[1342])/(130e-6 + 1e-6 * y[1342])
    R175 = (13.7 * 1e-6 * y[190] * y[61])/(130e-6 + 1e-6 * y[190] * y[61])
    R176 = (13.7 * 1e-6 * y[190] * y[927])/(130e-6 + 1e-6 * y[190] * y[927])
    return (R177) - (R175 + R176)
 
def m_ins_c(t, y):
    R178 = (13.7 * 1e-6 * y[216] * y[173] * y[36])/(130e-6 + 1e-6 * y[216] * y[173] * y[36])
    R1426 = (13.7 * 1e-6 * y[61] * y[833])/(130e-6 + 1e-6 * y[61] * y[833])
    R1427 = (13.7 * 1e-6 * y[61] * y[833])/(130e-6 + 1e-6 * y[61] * y[833])
    R1728 = (13.7 * 1e-6 * y[173] * y[747])/(130e-6 + 1e-6 * y[173] * y[747])
    R1419 = (13.7 * 1e-6 * y[173] * y[191])/(130e-6 + 1e-6 * y[173] * y[191])
    R1421 = (13.7 * 1e-6 * y[278] * y[191])/(130e-6 + 1e-6 * y[278] * y[191])
    R2098 = (13.7 * 1e-6 * y[191] * y[37])/(130e-6 + 1e-6 * y[191] * y[37])
    return (R178 + R1426 + R1427 + R1728) - (R1419 + R1421 + R2098)
 
def m_pa141_c(t, y):
    R179 = (13.7 * 1e-6 * y[658] * y[74])/(130e-6 + 1e-6 * y[658] * y[74])
    R405 = (13.7 * 1e-6 * y[449] * y[173])/(130e-6 + 1e-6 * y[449] * y[173])
    R541 = (13.7 * 1e-6 * y[24] * y[278])/(130e-6 + 1e-6 * y[24] * y[278])
    R516 = (13.7 * 1e-6 * y[404] * y[36] * y[192])/(130e-6 + 1e-6 * y[404] * y[36] * y[192])
    R1787 = (13.7 * 1e-6 * y[278] * y[173] * y[192])/(130e-6 + 1e-6 * y[278] * y[173] * y[192])
    R1816 = (13.7 * 1e-6 * y[173] * y[192])/(130e-6 + 1e-6 * y[173] * y[192])
    return (R179 + R405 + R541) - (R516 + R1787 + R1816)
 
def m_pa160_c(t, y):
    R180 = (13.7 * 1e-6 * y[659] * y[79])/(130e-6 + 1e-6 * y[659] * y[79])
    R411 = (13.7 * 1e-6 * y[450] * y[173])/(130e-6 + 1e-6 * y[450] * y[173])
    R545 = (13.7 * 1e-6 * y[26] * y[278])/(130e-6 + 1e-6 * y[26] * y[278])
    R517 = (13.7 * 1e-6 * y[404] * y[36] * y[193])/(130e-6 + 1e-6 * y[404] * y[36] * y[193])
    R1788 = (13.7 * 1e-6 * y[278] * y[173] * y[193])/(130e-6 + 1e-6 * y[278] * y[173] * y[193])
    R1818 = (13.7 * 1e-6 * y[173] * y[193])/(130e-6 + 1e-6 * y[173] * y[193])
    return (R180 + R411 + R545) - (R517 + R1788 + R1818)
 
def m_4abz_c(t, y):
    R181 = (13.7 * 1e-6 * y[196])/(130e-6 + 1e-6 * y[196])
    R613 = (13.7 * 1e-6 * y[194] * y[815])/(130e-6 + 1e-6 * y[194] * y[815])
    return (R181) - (R613)
 
def m_2agpg141_c(t, y):
    R182 = (13.7 * 1e-6 * y[1118])/(130e-6 + 1e-6 * y[1118])
    R269 = (13.7 * 1e-6 * y[195] * y[278] * y[578])/(130e-6 + 1e-6 * y[195] * y[278] * y[578])
    R1520 = (13.7 * 1e-6 * y[195] * y[173])/(130e-6 + 1e-6 * y[195] * y[173])
    R1574 = (13.7 * 1e-6 * y[195] * y[265])/(130e-6 + 1e-6 * y[195] * y[265])
    return (R182) - (R269 + R1520 + R1574)
 
def m_4adcho_c(t, y):
    R183 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R181 = (13.7 * 1e-6 * y[196])/(130e-6 + 1e-6 * y[196])
    return (R183) - (R181)
 
def m_hxan_c(t, y):
    R184 = (13.7 * 1e-6 * y[69] * y[173] * y[36])/(130e-6 + 1e-6 * y[69] * y[173] * y[36])
    R1419 = (13.7 * 1e-6 * y[173] * y[191])/(130e-6 + 1e-6 * y[173] * y[191])
    R1435 = (13.7 * 1e-6 * y[836])/(130e-6 + 1e-6 * y[836])
    R2098 = (13.7 * 1e-6 * y[191] * y[37])/(130e-6 + 1e-6 * y[191] * y[37])
    R2099 = (13.7 * 1e-6 * y[458] * y[37])/(130e-6 + 1e-6 * y[458] * y[37])
    R1415 = (13.7 * 1e-6 * y[173] * y[197] * y[236])/(130e-6 + 1e-6 * y[173] * y[197] * y[236])
    R1423 = (13.7 * 1e-6 * y[197] * y[983])/(130e-6 + 1e-6 * y[197] * y[983])
    return (R184 + R1419 + R1435 + R2098 + R2099) - (R1415 + R1423)
 
def m_pa161_c(t, y):
    R185 = (13.7 * 1e-6 * y[660] * y[81])/(130e-6 + 1e-6 * y[660] * y[81])
    R365 = (13.7 * 1e-6 * y[451] * y[173])/(130e-6 + 1e-6 * y[451] * y[173])
    R546 = (13.7 * 1e-6 * y[27] * y[278])/(130e-6 + 1e-6 * y[27] * y[278])
    R518 = (13.7 * 1e-6 * y[404] * y[36] * y[198])/(130e-6 + 1e-6 * y[404] * y[36] * y[198])
    R1793 = (13.7 * 1e-6 * y[278] * y[173] * y[198])/(130e-6 + 1e-6 * y[278] * y[173] * y[198])
    R1827 = (13.7 * 1e-6 * y[173] * y[198])/(130e-6 + 1e-6 * y[173] * y[198])
    return (R185 + R365 + R546) - (R518 + R1793 + R1827)
 
def m_pa180_c(t, y):
    R186 = (13.7 * 1e-6 * y[663] * y[84])/(130e-6 + 1e-6 * y[663] * y[84])
    R366 = (13.7 * 1e-6 * y[452] * y[173])/(130e-6 + 1e-6 * y[452] * y[173])
    R547 = (13.7 * 1e-6 * y[47] * y[278])/(130e-6 + 1e-6 * y[47] * y[278])
    R519 = (13.7 * 1e-6 * y[404] * y[36] * y[199])/(130e-6 + 1e-6 * y[404] * y[36] * y[199])
    R1795 = (13.7 * 1e-6 * y[278] * y[173] * y[199])/(130e-6 + 1e-6 * y[278] * y[173] * y[199])
    R1829 = (13.7 * 1e-6 * y[173] * y[199])/(130e-6 + 1e-6 * y[173] * y[199])
    return (R186 + R366 + R547) - (R519 + R1795 + R1829)
 
def m_pa181_c(t, y):
    R187 = (13.7 * 1e-6 * y[664] * y[82])/(130e-6 + 1e-6 * y[664] * y[82])
    R367 = (13.7 * 1e-6 * y[453] * y[173])/(130e-6 + 1e-6 * y[453] * y[173])
    R553 = (13.7 * 1e-6 * y[48] * y[278])/(130e-6 + 1e-6 * y[48] * y[278])
    R520 = (13.7 * 1e-6 * y[404] * y[36] * y[200])/(130e-6 + 1e-6 * y[404] * y[36] * y[200])
    R1796 = (13.7 * 1e-6 * y[278] * y[173] * y[200])/(130e-6 + 1e-6 * y[278] * y[173] * y[200])
    R1837 = (13.7 * 1e-6 * y[173] * y[200])/(130e-6 + 1e-6 * y[173] * y[200])
    return (R187 + R367 + R553) - (R520 + R1796 + R1837)
 
def m_nadph_c(t, y):
    R188 = (13.7 * 1e-6 * y[175] * y[6] * y[37])/(130e-6 + 1e-6 * y[175] * y[6] * y[37])
    R249 = (13.7 * 1e-6 * y[132] * y[173] * y[6])/(130e-6 + 1e-6 * y[132] * y[173] * y[6])
    R258 = (13.7 * 1e-6 * y[173] * y[6] * y[1356])/(130e-6 + 1e-6 * y[173] * y[6] * y[1356])
    R328 = (13.7 * 1e-6 * y[1372] * y[6])/(130e-6 + 1e-6 * y[1372] * y[6])
    R336 = (13.7 * 1e-6 * y[821] * y[6] * y[37])/(130e-6 + 1e-6 * y[821] * y[6] * y[37])
    R344 = (13.7 * 1e-6 * y[1376] * y[173] * y[6])/(130e-6 + 1e-6 * y[1376] * y[173] * y[6])
    R622 = (13.7 * 1e-6 * y[6] * y[525])/(130e-6 + 1e-6 * y[6] * y[525])
    R1112 = (13.7 * 1e-6 * y[743] * y[6])/(130e-6 + 1e-6 * y[743] * y[6])
    R1145 = (13.7 * 1e-6 * y[108] * y[6])/(130e-6 + 1e-6 * y[108] * y[6])
    R1184 = (13.7 * 1e-6 * y[715] * y[173] * y[6])/(130e-6 + 1e-6 * y[715] * y[173] * y[6])
    R1195 = (13.7 * 1e-6 * y[110] * y[173] * y[6])/(130e-6 + 1e-6 * y[110] * y[173] * y[6])
    R1253 = (13.7 * 1e-6 * y[754] * y[6])/(130e-6 + 1e-6 * y[754] * y[6])
    R1370 = (13.7 * 1e-6 * y[174] * y[6])/(130e-6 + 1e-6 * y[174] * y[6])
    R1402 = (13.7 * 1e-6 * y[1627] * y[6])/(130e-6 + 1e-6 * y[1627] * y[6])
    R1455 = (13.7 * 1e-6 * y[1426] * y[6])/(130e-6 + 1e-6 * y[1426] * y[6])
    R1528 = (13.7 * 1e-6 * y[6] * y[500])/(130e-6 + 1e-6 * y[6] * y[500])
    R1627 = (13.7 * 1e-6 * y[643] * y[6])/(130e-6 + 1e-6 * y[643] * y[6])
    R1926 = (13.7 * 1e-6 * y[717] * y[6])/(130e-6 + 1e-6 * y[717] * y[6])
    R2161 = (13.7 * 1e-6 * y[61] * y[113] * y[6])/(130e-6 + 1e-6 * y[61] * y[113] * y[6])
    R2200 = (13.7 * 1e-6 * y[173] * y[6] * y[111])/(130e-6 + 1e-6 * y[173] * y[6] * y[111])
    R6 = (13.7 * 1e-6 * y[30] * y[36] * y[201])/(130e-6 + 1e-6 * y[30] * y[36] * y[201])
    R8 = (13.7 * 1e-6 * y[31] * y[36] * y[201])/(130e-6 + 1e-6 * y[31] * y[36] * y[201])
    R10 = (13.7 * 1e-6 * y[849] * y[36] * y[201])/(130e-6 + 1e-6 * y[849] * y[36] * y[201])
    R12 = (13.7 * 1e-6 * y[32] * y[36] * y[201])/(130e-6 + 1e-6 * y[32] * y[36] * y[201])
    R13 = (13.7 * 1e-6 * y[33] * y[36] * y[201])/(130e-6 + 1e-6 * y[33] * y[36] * y[201])
    R58 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R229 = (13.7 * 1e-6 * y[36] * y[94] * y[201])/(130e-6 + 1e-6 * y[36] * y[94] * y[201])
    R287 = (13.7 * 1e-6 * y[515] * y[36] * y[201])/(130e-6 + 1e-6 * y[515] * y[36] * y[201])
    R319 = (13.7 * 1e-6 * y[1367] * y[36] * y[201])/(130e-6 + 1e-6 * y[1367] * y[36] * y[201])
    R347 = (13.7 * 1e-6 * y[1377] * y[36] * y[201])/(130e-6 + 1e-6 * y[1377] * y[36] * y[201])
    R350 = (13.7 * 1e-6 * y[479] * y[36] * y[201])/(130e-6 + 1e-6 * y[479] * y[36] * y[201])
    R559 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R561 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R592 = (13.7 * 1e-6 * y[505] * y[36] * y[201])/(130e-6 + 1e-6 * y[505] * y[36] * y[201])
    R600 = (13.7 * 1e-6 * y[506] * y[36] * y[201])/(130e-6 + 1e-6 * y[506] * y[36] * y[201])
    R610 = (13.7 * 1e-6 * y[14] * y[36] * y[201])/(130e-6 + 1e-6 * y[14] * y[36] * y[201])
    R615 = (13.7 * 1e-6 * y[1023] * y[36] * y[201])/(130e-6 + 1e-6 * y[1023] * y[36] * y[201])
    R634 = (13.7 * 1e-6 * y[18] * y[36] * y[201])/(130e-6 + 1e-6 * y[18] * y[36] * y[201])
    R639 = (13.7 * 1e-6 * y[19] * y[36] * y[201])/(130e-6 + 1e-6 * y[19] * y[36] * y[201])
    R640 = (13.7 * 1e-6 * y[440] * y[36] * y[201])/(130e-6 + 1e-6 * y[440] * y[36] * y[201])
    R645 = (13.7 * 1e-6 * y[544] * y[36] * y[201])/(130e-6 + 1e-6 * y[544] * y[36] * y[201])
    R646 = (13.7 * 1e-6 * y[20] * y[36] * y[201])/(130e-6 + 1e-6 * y[20] * y[36] * y[201])
    R648 = (13.7 * 1e-6 * y[36] * y[201] * y[445])/(130e-6 + 1e-6 * y[36] * y[201] * y[445])
    R650 = (13.7 * 1e-6 * y[36] * y[201] * y[463])/(130e-6 + 1e-6 * y[36] * y[201] * y[463])
    R659 = (13.7 * 1e-6 * y[23] * y[36] * y[201])/(130e-6 + 1e-6 * y[23] * y[36] * y[201])
    R660 = (13.7 * 1e-6 * y[36] * y[201] * y[360])/(130e-6 + 1e-6 * y[36] * y[201] * y[360])
    R662 = (13.7 * 1e-6 * y[36] * y[201] * y[371])/(130e-6 + 1e-6 * y[36] * y[201] * y[371])
    R669 = (13.7 * 1e-6 * y[36] * y[201] * y[374])/(130e-6 + 1e-6 * y[36] * y[201] * y[374])
    R672 = (13.7 * 1e-6 * y[28] * y[36] * y[201])/(130e-6 + 1e-6 * y[28] * y[36] * y[201])
    R676 = (13.7 * 1e-6 * y[36] * y[201] * y[393])/(130e-6 + 1e-6 * y[36] * y[201] * y[393])
    R678 = (13.7 * 1e-6 * y[36] * y[201] * y[401])/(130e-6 + 1e-6 * y[36] * y[201] * y[401])
    R682 = (13.7 * 1e-6 * y[36] * y[201] * y[410])/(130e-6 + 1e-6 * y[36] * y[201] * y[410])
    R684 = (13.7 * 1e-6 * y[36] * y[201] * y[421])/(130e-6 + 1e-6 * y[36] * y[201] * y[421])
    R691 = (13.7 * 1e-6 * y[36] * y[201] * y[428])/(130e-6 + 1e-6 * y[36] * y[201] * y[428])
    R692 = (13.7 * 1e-6 * y[29] * y[36] * y[201])/(130e-6 + 1e-6 * y[29] * y[36] * y[201])
    R694 = (13.7 * 1e-6 * y[36] * y[201] * y[438])/(130e-6 + 1e-6 * y[36] * y[201] * y[438])
    R995 = (13.7 * 1e-6 * y[282] * y[36] * y[201])/(130e-6 + 1e-6 * y[282] * y[36] * y[201])
    R1080 = (13.7 * 1e-6 * y[1174] * y[36] * y[201])/(130e-6 + 1e-6 * y[1174] * y[36] * y[201])
    R1083 = (13.7 * 1e-6 * y[36] * y[201] * y[285])/(130e-6 + 1e-6 * y[36] * y[201] * y[285])
    R1094 = (13.7 * 1e-6 * y[284] * y[36] * y[201])/(130e-6 + 1e-6 * y[284] * y[36] * y[201])
    R1140 = (13.7 * 1e-6 * y[718] * y[36] * y[201])/(130e-6 + 1e-6 * y[718] * y[36] * y[201])
    R1206 = (13.7 * 1e-6 * y[213] * y[710] * y[36] * y[201])/(130e-6 + 1e-6 * y[213] * y[710] * y[36] * y[201])
    R1207 = (13.7 * 1e-6 * y[730] * y[36] * y[201])/(130e-6 + 1e-6 * y[730] * y[36] * y[201])
    R1245 = (13.7 * 1e-6 * y[222] * y[36] * y[201])/(130e-6 + 1e-6 * y[222] * y[36] * y[201])
    R1256 = (13.7 * 1e-6 * y[703] * y[36] * y[201])/(130e-6 + 1e-6 * y[703] * y[36] * y[201])
    R1263 = (13.7 * 1e-6 * y[593] * y[36] * y[201])/(130e-6 + 1e-6 * y[593] * y[36] * y[201])
    R1296 = (13.7 * 1e-6 * y[310] * y[36] * y[201])/(130e-6 + 1e-6 * y[310] * y[36] * y[201])
    R1382 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R1401 = (13.7 * 1e-6 * y[36] * y[1631] * y[201])/(130e-6 + 1e-6 * y[36] * y[1631] * y[201])
    R1457 = (13.7 * 1e-6 * y[103] * y[36] * y[201])/(130e-6 + 1e-6 * y[103] * y[36] * y[201])
    R1716 = (13.7 * 1e-6 * y[201] * y[966] * y[335])/(130e-6 + 1e-6 * y[201] * y[966] * y[335])
    R1784 = (13.7 * 1e-6 * y[692] * y[36] * y[201])/(130e-6 + 1e-6 * y[692] * y[36] * y[201])
    R2155 = (13.7 * 1e-6 * y[36] * y[201] * y[444])/(130e-6 + 1e-6 * y[36] * y[201] * y[444])
    R2163 = (13.7 * 1e-6 * y[529] * y[36] * y[201])/(130e-6 + 1e-6 * y[529] * y[36] * y[201])
    R2164 = (13.7 * 1e-6 * y[36] * y[441] * y[201])/(130e-6 + 1e-6 * y[36] * y[441] * y[201])
    R2181 = (13.7 * 1e-6 * y[495] * y[36] * y[201])/(130e-6 + 1e-6 * y[495] * y[36] * y[201])
    R2222 = (13.7 * 1e-6 * y[236] * y[201])/(130e-6 + 1e-6 * y[236] * y[201])
    R2237 = (13.7 * 1e-6 * y[36] * y[201] * y[415])/(130e-6 + 1e-6 * y[36] * y[201] * y[415])
    R2245 = (13.7 * 1e-6 * y[36] * y[201] * y[522])/(130e-6 + 1e-6 * y[36] * y[201] * y[522])
    R2265 = (13.7 * 1e-6 * y[1249] * y[36] * y[201])/(130e-6 + 1e-6 * y[1249] * y[36] * y[201])
    R2350 = (13.7 * 1e-6 * y[36] * y[201] * y[1278])/(130e-6 + 1e-6 * y[36] * y[201] * y[1278])
    return (R188 + R249 + R258 + R328 + R336 + R344 + R622 + R1112 + R1145 + R1184 + R1195 + R1253 + R1370 + R1402 + R1455 + R1528 + R1627 + R1926 + R2161 + R2200) - (R6 + R8 + R10 + R12 + R13 + R58 + R229 + R287 + R319 + R347 + R350 + R559 + R561 + R592 + R600 + R610 + R615 + R634 + R639 + R640 + R645 + R646 + R648 + R650 + R659 + R660 + R662 + R669 + R672 + R676 + R678 + R682 + R684 + R691 + R692 + R694 + R995 + R1080 + R1083 + R1094 + R1140 + R1206 + R1207 + R1245 + R1256 + R1263 + R1296 + R1382 + R1401 + R1457 + R1716 + R1784 + R2155 + R2163 + R2164 + R2181 + R2222 + R2237 + R2245 + R2265 + R2350)
 
def m_ag_e(t, y):
    R189 = (13.7 * 1e-6 * y[1343] * y[1344])/(130e-6 + 1e-6 * y[1343] * y[1344])
    R704 = (13.7 * 1e-6 * y[202])/(130e-6 + 1e-6 * y[202])
    return (R189) - (R704)
 
def m_ade_p(t, y):
    R191 = (13.7 * 1e-6 * y[1345])/(130e-6 + 1e-6 * y[1345])
    R190 = (13.7 * 1e-6 * y[203] * y[61])/(130e-6 + 1e-6 * y[203] * y[61])
    return (R191) - (R190)
 
def m_rhcys_c(t, y):
    R194 = (13.7 * 1e-6 * y[172] * y[173])/(130e-6 + 1e-6 * y[172] * y[173])
    R2064 = (13.7 * 1e-6 * y[204])/(130e-6 + 1e-6 * y[204])
    return (R194) - (R2064)
 
def m_fprica_c(t, y):
    R195 = (13.7 * 1e-6 * y[1057] * y[154])/(130e-6 + 1e-6 * y[1057] * y[154])
    R1407 = (13.7 * 1e-6 * y[173] * y[747])/(130e-6 + 1e-6 * y[173] * y[747])
    return (R195 + R1407) - (0)
 
def m_thf_c(t, y):
    R195 = (13.7 * 1e-6 * y[1057] * y[154])/(130e-6 + 1e-6 * y[1057] * y[154])
    R600 = (13.7 * 1e-6 * y[506] * y[36] * y[201])/(130e-6 + 1e-6 * y[506] * y[36] * y[201])
    R1067 = (13.7 * 1e-6 * y[1057] * y[173])/(130e-6 + 1e-6 * y[1057] * y[173])
    R1086 = (13.7 * 1e-6 * y[1057] * y[937])/(130e-6 + 1e-6 * y[1057] * y[937])
    R1159 = (13.7 * 1e-6 * y[1057] * y[1140])/(130e-6 + 1e-6 * y[1057] * y[1140])
    R1646 = (13.7 * 1e-6 * y[1078] * y[436])/(130e-6 + 1e-6 * y[1078] * y[436])
    R1843 = (13.7 * 1e-6 * y[490] * y[173] * y[717])/(130e-6 + 1e-6 * y[490] * y[173] * y[717])
    R2371 = (13.7 * 1e-6 * y[1057] * y[1302])/(130e-6 + 1e-6 * y[1057] * y[1302])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1188 = (13.7 * 1e-6 * y[500] * y[206])/(130e-6 + 1e-6 * y[500] * y[206])
    R1259 = (13.7 * 1e-6 * y[261] * y[236] * y[206])/(130e-6 + 1e-6 * y[261] * y[236] * y[206])
    return (R195 + R600 + R1067 + R1086 + R1159 + R1646 + R1843 + R2371) - (R926 + R1188 + R1259)
 
def m_idp_c(t, y):
    R196 = (13.7 * 1e-6 * y[71] * y[313])/(130e-6 + 1e-6 * y[71] * y[313])
    R1740 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    return (R196 + R1740) - (0)
 
def m_2agpg160_c(t, y):
    R197 = (13.7 * 1e-6 * y[232])/(130e-6 + 1e-6 * y[232])
    R274 = (13.7 * 1e-6 * y[208] * y[278] * y[579])/(130e-6 + 1e-6 * y[208] * y[278] * y[579])
    R1524 = (13.7 * 1e-6 * y[208] * y[173])/(130e-6 + 1e-6 * y[208] * y[173])
    R1576 = (13.7 * 1e-6 * y[208] * y[268])/(130e-6 + 1e-6 * y[208] * y[268])
    return (R197) - (R274 + R1524 + R1576)
 
def m_ametam_c(t, y):
    R198 = (13.7 * 1e-6 * y[921] * y[36])/(130e-6 + 1e-6 * y[921] * y[36])
    R2193 = (13.7 * 1e-6 * y[209] * y[183])/(130e-6 + 1e-6 * y[209] * y[183])
    return (R198) - (R2193)
 
def m_camp_c(t, y):
    R199 = (13.7 * 1e-6 * y[278])/(130e-6 + 1e-6 * y[278])
    R1845 = (13.7 * 1e-6 * y[210] * y[173])/(130e-6 + 1e-6 * y[210] * y[173])
    return (R199) - (R1845)
 
def m_5caiz_c(t, y):
    R201 = (13.7 * 1e-6 * y[1141] * y[278] * y[782])/(130e-6 + 1e-6 * y[1141] * y[278] * y[782])
    R202 = (13.7 * 1e-6 * y[1346])/(130e-6 + 1e-6 * y[1346])
    return (R201 + R202) - (0)
 
def m_succoa_c(t, y):
    R203 = (13.7 * 1e-6 * y[213] * y[99] * y[236])/(130e-6 + 1e-6 * y[213] * y[99] * y[236])
    R1994 = (13.7 * 1e-6 * y[140] * y[290])/(130e-6 + 1e-6 * y[140] * y[290])
    R2221 = (13.7 * 1e-6 * y[278] * y[99] * y[290])/(130e-6 + 1e-6 * y[278] * y[99] * y[290])
    R327 = (13.7 * 1e-6 * y[303] * y[212])/(130e-6 + 1e-6 * y[303] * y[212])
    R1413 = (13.7 * 1e-6 * y[1627] * y[212])/(130e-6 + 1e-6 * y[1627] * y[212])
    R1697 = (13.7 * 1e-6 * y[212])/(130e-6 + 1e-6 * y[212])
    R2162 = (13.7 * 1e-6 * y[173] * y[212] * y[502])/(130e-6 + 1e-6 * y[173] * y[212] * y[502])
    return (R203 + R1994 + R2221) - (R327 + R1413 + R1697 + R2162)
 
def m_akg_c(t, y):
    R204 = (13.7 * 1e-6 * y[214] * y[61])/(130e-6 + 1e-6 * y[214] * y[61])
    R1195 = (13.7 * 1e-6 * y[110] * y[173] * y[6])/(130e-6 + 1e-6 * y[110] * y[173] * y[6])
    R1370 = (13.7 * 1e-6 * y[174] * y[6])/(130e-6 + 1e-6 * y[174] * y[6])
    R1414 = (13.7 * 1e-6 * y[110] * y[814])/(130e-6 + 1e-6 * y[110] * y[814])
    R1469 = (13.7 * 1e-6 * y[1018] * y[110])/(130e-6 + 1e-6 * y[1018] * y[110])
    R1832 = (13.7 * 1e-6 * y[110] * y[1044])/(130e-6 + 1e-6 * y[110] * y[1044])
    R2047 = (13.7 * 1e-6 * y[1040] * y[110])/(130e-6 + 1e-6 * y[1040] * y[110])
    R2263 = (13.7 * 1e-6 * y[1253] * y[110])/(130e-6 + 1e-6 * y[1253] * y[110])
    R2365 = (13.7 * 1e-6 * y[110] * y[1299])/(130e-6 + 1e-6 * y[110] * y[1299])
    R2378 = (13.7 * 1e-6 * y[481] * y[110])/(130e-6 + 1e-6 * y[481] * y[110])
    R95 = (13.7 * 1e-6 * y[112] * y[213])/(130e-6 + 1e-6 * y[112] * y[213])
    R157 = (13.7 * 1e-6 * y[1338] * y[213])/(130e-6 + 1e-6 * y[1338] * y[213])
    R203 = (13.7 * 1e-6 * y[213] * y[99] * y[236])/(130e-6 + 1e-6 * y[213] * y[99] * y[236])
    R222 = (13.7 * 1e-6 * y[213] * y[235])/(130e-6 + 1e-6 * y[213] * y[235])
    R306 = (13.7 * 1e-6 * y[213] * y[300])/(130e-6 + 1e-6 * y[213] * y[300])
    R1206 = (13.7 * 1e-6 * y[213] * y[710] * y[36] * y[201])/(130e-6 + 1e-6 * y[213] * y[710] * y[36] * y[201])
    R1393 = (13.7 * 1e-6 * y[213] * y[823])/(130e-6 + 1e-6 * y[213] * y[823])
    R1778 = (13.7 * 1e-6 * y[213] * y[36] * y[1201])/(130e-6 + 1e-6 * y[213] * y[36] * y[1201])
    R1942 = (13.7 * 1e-6 * y[213] * y[1091])/(130e-6 + 1e-6 * y[213] * y[1091])
    R2077 = (13.7 * 1e-6 * y[213] * y[183])/(130e-6 + 1e-6 * y[213] * y[183])
    R2129 = (13.7 * 1e-6 * y[213] * y[1659])/(130e-6 + 1e-6 * y[213] * y[1659])
    R2182 = (13.7 * 1e-6 * y[213] * y[1177])/(130e-6 + 1e-6 * y[213] * y[1177])
    R2250 = (13.7 * 1e-6 * y[213] * y[335] * y[1244])/(130e-6 + 1e-6 * y[213] * y[335] * y[1244])
    R2296 = (13.7 * 1e-6 * y[213] * y[1266])/(130e-6 + 1e-6 * y[213] * y[1266])
    R2305 = (13.7 * 1e-6 * y[213] * y[1272])/(130e-6 + 1e-6 * y[213] * y[1272])
    return (R204 + R1195 + R1370 + R1414 + R1469 + R1832 + R2047 + R2263 + R2365 + R2378) - (R95 + R157 + R203 + R222 + R306 + R1206 + R1393 + R1778 + R1942 + R2077 + R2129 + R2182 + R2250 + R2296 + R2305)
 
def m_akg_p(t, y):
    R205 = (13.7 * 1e-6 * y[1347])/(130e-6 + 1e-6 * y[1347])
    R204 = (13.7 * 1e-6 * y[214] * y[61])/(130e-6 + 1e-6 * y[214] * y[61])
    return (R205) - (R204)
 
def m_rib__D_c(t, y):
    R206 = (13.7 * 1e-6 * y[216] * y[173])/(130e-6 + 1e-6 * y[216] * y[173])
    R512 = (13.7 * 1e-6 * y[454] * y[173])/(130e-6 + 1e-6 * y[454] * y[173])
    R1419 = (13.7 * 1e-6 * y[173] * y[191])/(130e-6 + 1e-6 * y[173] * y[191])
    R2065 = (13.7 * 1e-6 * y[278] * y[173] * y[1161])/(130e-6 + 1e-6 * y[278] * y[173] * y[1161])
    R2137 = (13.7 * 1e-6 * y[173] * y[227])/(130e-6 + 1e-6 * y[173] * y[227])
    R2299 = (13.7 * 1e-6 * y[173] * y[446])/(130e-6 + 1e-6 * y[173] * y[446])
    R2329 = (13.7 * 1e-6 * y[173] * y[969])/(130e-6 + 1e-6 * y[173] * y[969])
    R2054 = (13.7 * 1e-6 * y[278] * y[215])/(130e-6 + 1e-6 * y[278] * y[215])
    return (R206 + R512 + R1419 + R2065 + R2137 + R2299 + R2329) - (R2054)
 
def m_adn_c(t, y):
    R207 = (13.7 * 1e-6 * y[219] * y[61])/(130e-6 + 1e-6 * y[219] * y[61])
    R208 = (13.7 * 1e-6 * y[219] * y[61])/(130e-6 + 1e-6 * y[219] * y[61])
    R2313 = (13.7 * 1e-6 * y[71] * y[173])/(130e-6 + 1e-6 * y[71] * y[173])
    R178 = (13.7 * 1e-6 * y[216] * y[173] * y[36])/(130e-6 + 1e-6 * y[216] * y[173] * y[36])
    R200 = (13.7 * 1e-6 * y[216] * y[278])/(130e-6 + 1e-6 * y[216] * y[278])
    R206 = (13.7 * 1e-6 * y[216] * y[173])/(130e-6 + 1e-6 * y[216] * y[173])
    R2087 = (13.7 * 1e-6 * y[216] * y[37])/(130e-6 + 1e-6 * y[216] * y[37])
    return (R207 + R208 + R2313) - (R178 + R200 + R206 + R2087)
 
def m_2agpg161_c(t, y):
    R210 = (13.7 * 1e-6 * y[1121])/(130e-6 + 1e-6 * y[1121])
    R277 = (13.7 * 1e-6 * y[217] * y[278] * y[580])/(130e-6 + 1e-6 * y[217] * y[278] * y[580])
    R1525 = (13.7 * 1e-6 * y[217] * y[173])/(130e-6 + 1e-6 * y[217] * y[173])
    R1577 = (13.7 * 1e-6 * y[217] * y[271])/(130e-6 + 1e-6 * y[217] * y[271])
    return (R210) - (R277 + R1525 + R1577)
 
def m_alaala_c(t, y):
    R211 = (13.7 * 1e-6 * y[224] * y[278] * y[173])/(130e-6 + 1e-6 * y[224] * y[278] * y[173])
    R212 = (13.7 * 1e-6 * y[45] * y[278])/(130e-6 + 1e-6 * y[45] * y[278])
    R209 = (13.7 * 1e-6 * y[218] * y[173])/(130e-6 + 1e-6 * y[218] * y[173])
    R2369 = (13.7 * 1e-6 * y[218] * y[278] * y[1269])/(130e-6 + 1e-6 * y[218] * y[278] * y[1269])
    return (R211 + R212) - (R209 + R2369)
 
def m_adn_p(t, y):
    R213 = (13.7 * 1e-6 * y[1348])/(130e-6 + 1e-6 * y[1348])
    R577 = (13.7 * 1e-6 * y[75] * y[406])/(130e-6 + 1e-6 * y[75] * y[406])
    R1725 = (13.7 * 1e-6 * y[263] * y[406])/(130e-6 + 1e-6 * y[263] * y[406])
    R207 = (13.7 * 1e-6 * y[219] * y[61])/(130e-6 + 1e-6 * y[219] * y[61])
    R208 = (13.7 * 1e-6 * y[219] * y[61])/(130e-6 + 1e-6 * y[219] * y[61])
    return (R213 + R577 + R1725) - (R207 + R208)
 
def m_adocbip_c(t, y):
    R214 = (13.7 * 1e-6 * y[338] * y[278])/(130e-6 + 1e-6 * y[338] * y[278])
    R117 = (13.7 * 1e-6 * y[220] * y[928] * y[36])/(130e-6 + 1e-6 * y[220] * y[928] * y[36])
    return (R214) - (R117)
 
def m_adocbl_c(t, y):
    R215 = (13.7 * 1e-6 * y[134] * y[1175])/(130e-6 + 1e-6 * y[134] * y[1175])
    R216 = (13.7 * 1e-6 * y[223] * y[278] * y[173])/(130e-6 + 1e-6 * y[223] * y[278] * y[173])
    R391 = (13.7 * 1e-6 * y[278] * y[346] * y[36])/(130e-6 + 1e-6 * y[278] * y[346] * y[36])
    return (R215 + R216 + R391) - (0)
 
def m_gmp_c(t, y):
    R215 = (13.7 * 1e-6 * y[134] * y[1175])/(130e-6 + 1e-6 * y[134] * y[1175])
    R1174 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1285 = (13.7 * 1e-6 * y[278] * y[764])/(130e-6 + 1e-6 * y[278] * y[764])
    R1317 = (13.7 * 1e-6 * y[783] * y[983])/(130e-6 + 1e-6 * y[783] * y[983])
    R1760 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1191 = (13.7 * 1e-6 * y[278] * y[222])/(130e-6 + 1e-6 * y[278] * y[222])
    R1245 = (13.7 * 1e-6 * y[222] * y[36] * y[201])/(130e-6 + 1e-6 * y[222] * y[36] * y[201])
    R1733 = (13.7 * 1e-6 * y[222] * y[173])/(130e-6 + 1e-6 * y[222] * y[173])
    return (R215 + R1174 + R1246 + R1285 + R1317 + R1760) - (R1191 + R1245 + R1733)
 
def m_adocbl_p(t, y):
    R217 = (13.7 * 1e-6 * y[1349] * y[61])/(130e-6 + 1e-6 * y[1349] * y[61])
    R216 = (13.7 * 1e-6 * y[223] * y[278] * y[173])/(130e-6 + 1e-6 * y[223] * y[278] * y[173])
    return (R217) - (R216)
 
def m_alaala_p(t, y):
    R218 = (13.7 * 1e-6 * y[1350])/(130e-6 + 1e-6 * y[1350])
    R1597 = (13.7 * 1e-6 * y[1035])/(130e-6 + 1e-6 * y[1035])
    R1686 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1688 = (13.7 * 1e-6 * y[406] * y[1035])/(130e-6 + 1e-6 * y[406] * y[1035])
    R1694 = (13.7 * 1e-6 * y[406] * y[898])/(130e-6 + 1e-6 * y[406] * y[898])
    R211 = (13.7 * 1e-6 * y[224] * y[278] * y[173])/(130e-6 + 1e-6 * y[224] * y[278] * y[173])
    return (R218 + R1597 + R1686 + R1688 + R1694) - (R211)
 
def m_LalaLglu_c(t, y):
    R219 = (13.7 * 1e-6 * y[842])/(130e-6 + 1e-6 * y[842])
    R1450 = (13.7 * 1e-6 * y[225] * y[173])/(130e-6 + 1e-6 * y[225] * y[173])
    return (R219) - (R1450)
 
def m_pyam5p_c(t, y):
    R221 = (13.7 * 1e-6 * y[45] * y[1025])/(130e-6 + 1e-6 * y[45] * y[1025])
    R223 = (13.7 * 1e-6 * y[235] * y[1025])/(130e-6 + 1e-6 * y[235] * y[1025])
    R2102 = (13.7 * 1e-6 * y[278] * y[832])/(130e-6 + 1e-6 * y[278] * y[832])
    R1429 = (13.7 * 1e-6 * y[173] * y[226])/(130e-6 + 1e-6 * y[173] * y[226])
    R2101 = (13.7 * 1e-6 * y[173] * y[335] * y[226])/(130e-6 + 1e-6 * y[173] * y[335] * y[226])
    return (R221 + R223 + R2102) - (R1429 + R2101)
 
def m_r5p_c(t, y):
    R224 = (13.7 * 1e-6 * y[1196] * y[173])/(130e-6 + 1e-6 * y[1196] * y[173])
    R257 = (13.7 * 1e-6 * y[71] * y[173])/(130e-6 + 1e-6 * y[71] * y[173])
    R440 = (13.7 * 1e-6 * y[332] * y[173])/(130e-6 + 1e-6 * y[332] * y[173])
    R1681 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    R1683 = (13.7 * 1e-6 * y[173] * y[952])/(130e-6 + 1e-6 * y[173] * y[952])
    R2004 = (13.7 * 1e-6 * y[1172])/(130e-6 + 1e-6 * y[1172])
    R2054 = (13.7 * 1e-6 * y[278] * y[215])/(130e-6 + 1e-6 * y[278] * y[215])
    R2022 = (13.7 * 1e-6 * y[278] * y[227])/(130e-6 + 1e-6 * y[278] * y[227])
    R2106 = (13.7 * 1e-6 * y[227])/(130e-6 + 1e-6 * y[227])
    R2137 = (13.7 * 1e-6 * y[173] * y[227])/(130e-6 + 1e-6 * y[173] * y[227])
    R2209 = (13.7 * 1e-6 * y[227] * y[1156])/(130e-6 + 1e-6 * y[227] * y[1156])
    return (R224 + R257 + R440 + R1681 + R1683 + R2004 + R2054) - (R2022 + R2106 + R2137 + R2209)
 
def m_2agpg180_c(t, y):
    R225 = (13.7 * 1e-6 * y[1123])/(130e-6 + 1e-6 * y[1123])
    R283 = (13.7 * 1e-6 * y[228] * y[278] * y[582])/(130e-6 + 1e-6 * y[228] * y[278] * y[582])
    R1526 = (13.7 * 1e-6 * y[228] * y[173])/(130e-6 + 1e-6 * y[228] * y[173])
    R1578 = (13.7 * 1e-6 * y[228] * y[276])/(130e-6 + 1e-6 * y[228] * y[276])
    return (R225) - (R283 + R1526 + R1578)
 
def m_all__D_p(t, y):
    R226 = (13.7 * 1e-6 * y[1351])/(130e-6 + 1e-6 * y[1351])
    R273 = (13.7 * 1e-6 * y[229] * y[278] * y[173])/(130e-6 + 1e-6 * y[229] * y[278] * y[173])
    return (R226) - (R273)
 
def m_2agpe160_p(t, y):
    R227 = (13.7 * 1e-6 * y[1352] * y[1037])/(130e-6 + 1e-6 * y[1352] * y[1037])
    R1983 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R77 = (13.7 * 1e-6 * y[230])/(130e-6 + 1e-6 * y[230])
    return (R227 + R1983) - (R77)
 
def m_lpp_p(t, y):
    R227 = (13.7 * 1e-6 * y[1352] * y[1037])/(130e-6 + 1e-6 * y[1352] * y[1037])
    R228 = (13.7 * 1e-6 * y[1352] * y[370])/(130e-6 + 1e-6 * y[1352] * y[370])
    return (R227 + R228) - (0)
 
def m_2agpg160_p(t, y):
    R228 = (13.7 * 1e-6 * y[1352] * y[370])/(130e-6 + 1e-6 * y[1352] * y[370])
    R1995 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R197 = (13.7 * 1e-6 * y[232])/(130e-6 + 1e-6 * y[232])
    return (R228 + R1995) - (R197)
 
def m_acetol_c(t, y):
    R229 = (13.7 * 1e-6 * y[36] * y[94] * y[201])/(130e-6 + 1e-6 * y[36] * y[94] * y[201])
    R234 = (13.7 * 1e-6 * y[233] * y[36] * y[113])/(130e-6 + 1e-6 * y[233] * y[36] * y[113])
    return (R229) - (R234)
 
def m_alatrna_c(t, y):
    R230 = (13.7 * 1e-6 * y[235] * y[278] * y[1353])/(130e-6 + 1e-6 * y[235] * y[278] * y[1353])
    return (R230) - (0)
 
def m_ala__L_c(t, y):
    R231 = (13.7 * 1e-6 * y[239] * y[278] * y[173])/(130e-6 + 1e-6 * y[239] * y[278] * y[173])
    R232 = (13.7 * 1e-6 * y[239] * y[61])/(130e-6 + 1e-6 * y[239] * y[61])
    R233 = (13.7 * 1e-6 * y[239] * y[927])/(130e-6 + 1e-6 * y[239] * y[927])
    R490 = (13.7 * 1e-6 * y[1409] * y[36])/(130e-6 + 1e-6 * y[1409] * y[36])
    R1450 = (13.7 * 1e-6 * y[225] * y[173])/(130e-6 + 1e-6 * y[225] * y[173])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R220 = (13.7 * 1e-6 * y[235])/(130e-6 + 1e-6 * y[235])
    R222 = (13.7 * 1e-6 * y[213] * y[235])/(130e-6 + 1e-6 * y[213] * y[235])
    R223 = (13.7 * 1e-6 * y[235] * y[1025])/(130e-6 + 1e-6 * y[235] * y[1025])
    R230 = (13.7 * 1e-6 * y[235] * y[278] * y[1353])/(130e-6 + 1e-6 * y[235] * y[278] * y[1353])
    R279 = (13.7 * 1e-6 * y[235] * y[36] * y[1360])/(130e-6 + 1e-6 * y[235] * y[36] * y[1360])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2319 = (13.7 * 1e-6 * y[490] * y[235])/(130e-6 + 1e-6 * y[490] * y[235])
    R2349 = (13.7 * 1e-6 * y[235] * y[278] * y[1292])/(130e-6 + 1e-6 * y[235] * y[278] * y[1292])
    return (R231 + R232 + R233 + R490 + R1450 + R2205) - (R220 + R222 + R223 + R230 + R279 + R926 + R2319 + R2349)
 
def m_nad_c(t, y):
    R234 = (13.7 * 1e-6 * y[233] * y[36] * y[113])/(130e-6 + 1e-6 * y[233] * y[36] * y[113])
    R239 = (13.7 * 1e-6 * y[737] * y[36] * y[113])/(130e-6 + 1e-6 * y[737] * y[36] * y[113])
    R312 = (13.7 * 1e-6 * y[1367] * y[36] * y[113])/(130e-6 + 1e-6 * y[1367] * y[36] * y[113])
    R339 = (13.7 * 1e-6 * y[479] * y[36] * y[113])/(130e-6 + 1e-6 * y[479] * y[36] * y[113])
    R346 = (13.7 * 1e-6 * y[1377] * y[36] * y[113])/(130e-6 + 1e-6 * y[1377] * y[36] * y[113])
    R398 = (13.7 * 1e-6 * y[1393] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[1393] * y[36] * y[113] * y[335])
    R543 = (13.7 * 1e-6 * y[777] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[777] * y[36] * y[113] * y[335])
    R549 = (13.7 * 1e-6 * y[819] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[819] * y[36] * y[113] * y[335])
    R560 = (13.7 * 1e-6 * y[1422] * y[36] * y[113])/(130e-6 + 1e-6 * y[1422] * y[36] * y[113])
    R571 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R606 = (13.7 * 1e-6 * y[1431] * y[36] * y[113])/(130e-6 + 1e-6 * y[1431] * y[36] * y[113])
    R638 = (13.7 * 1e-6 * y[440] * y[36] * y[113])/(130e-6 + 1e-6 * y[440] * y[36] * y[113])
    R644 = (13.7 * 1e-6 * y[36] * y[113] * y[445])/(130e-6 + 1e-6 * y[36] * y[113] * y[445])
    R649 = (13.7 * 1e-6 * y[36] * y[113] * y[463])/(130e-6 + 1e-6 * y[36] * y[113] * y[463])
    R658 = (13.7 * 1e-6 * y[36] * y[113] * y[360])/(130e-6 + 1e-6 * y[36] * y[113] * y[360])
    R661 = (13.7 * 1e-6 * y[36] * y[113] * y[371])/(130e-6 + 1e-6 * y[36] * y[113] * y[371])
    R668 = (13.7 * 1e-6 * y[36] * y[113] * y[374])/(130e-6 + 1e-6 * y[36] * y[113] * y[374])
    R670 = (13.7 * 1e-6 * y[36] * y[113] * y[393])/(130e-6 + 1e-6 * y[36] * y[113] * y[393])
    R677 = (13.7 * 1e-6 * y[36] * y[113] * y[401])/(130e-6 + 1e-6 * y[36] * y[113] * y[401])
    R681 = (13.7 * 1e-6 * y[36] * y[113] * y[410])/(130e-6 + 1e-6 * y[36] * y[113] * y[410])
    R683 = (13.7 * 1e-6 * y[36] * y[113] * y[421])/(130e-6 + 1e-6 * y[36] * y[113] * y[421])
    R690 = (13.7 * 1e-6 * y[36] * y[113] * y[428])/(130e-6 + 1e-6 * y[36] * y[113] * y[428])
    R693 = (13.7 * 1e-6 * y[36] * y[113] * y[438])/(130e-6 + 1e-6 * y[36] * y[113] * y[438])
    R993 = (13.7 * 1e-6 * y[282] * y[36] * y[113])/(130e-6 + 1e-6 * y[282] * y[36] * y[113])
    R1085 = (13.7 * 1e-6 * y[36] * y[113] * y[285])/(130e-6 + 1e-6 * y[36] * y[113] * y[285])
    R1093 = (13.7 * 1e-6 * y[284] * y[36] * y[113])/(130e-6 + 1e-6 * y[284] * y[36] * y[113])
    R1261 = (13.7 * 1e-6 * y[593] * y[36] * y[113])/(130e-6 + 1e-6 * y[593] * y[36] * y[113])
    R1381 = (13.7 * 1e-6 * y[66] * y[36] * y[113])/(130e-6 + 1e-6 * y[66] * y[36] * y[113])
    R1400 = (13.7 * 1e-6 * y[36] * y[1631] * y[113])/(130e-6 + 1e-6 * y[36] * y[1631] * y[113])
    R1432 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R1448 = (13.7 * 1e-6 * y[36] * y[94] * y[113])/(130e-6 + 1e-6 * y[36] * y[94] * y[113])
    R1452 = (13.7 * 1e-6 * y[36] * y[845] * y[113])/(130e-6 + 1e-6 * y[36] * y[845] * y[113])
    R1453 = (13.7 * 1e-6 * y[36] * y[608] * y[113])/(130e-6 + 1e-6 * y[36] * y[608] * y[113])
    R1628 = (13.7 * 1e-6 * y[915] * y[113])/(130e-6 + 1e-6 * y[915] * y[113])
    R1666 = (13.7 * 1e-6 * y[36] * y[113] * y[966])/(130e-6 + 1e-6 * y[36] * y[113] * y[966])
    R1679 = (13.7 * 1e-6 * y[278] * y[36] * y[947])/(130e-6 + 1e-6 * y[278] * y[36] * y[947])
    R1715 = (13.7 * 1e-6 * y[113] * y[966] * y[335])/(130e-6 + 1e-6 * y[113] * y[966] * y[335])
    R1779 = (13.7 * 1e-6 * y[36] * y[113] * y[959])/(130e-6 + 1e-6 * y[36] * y[113] * y[959])
    R1936 = (13.7 * 1e-6 * y[36] * y[717] * y[113])/(130e-6 + 1e-6 * y[36] * y[717] * y[113])
    R2018 = (13.7 * 1e-6 * y[36] * y[113] * y[335] * y[1133])/(130e-6 + 1e-6 * y[36] * y[113] * y[335] * y[1133])
    R2055 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2062 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2069 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2088 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2111 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2126 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2161 = (13.7 * 1e-6 * y[61] * y[113] * y[6])/(130e-6 + 1e-6 * y[61] * y[113] * y[6])
    R2192 = (13.7 * 1e-6 * y[173] * y[6])/(130e-6 + 1e-6 * y[173] * y[6])
    R2212 = (13.7 * 1e-6 * y[278] * y[954] * y[95])/(130e-6 + 1e-6 * y[278] * y[954] * y[95])
    R2274 = (13.7 * 1e-6 * y[728] * y[36] * y[113])/(130e-6 + 1e-6 * y[728] * y[36] * y[113])
    R96 = (13.7 * 1e-6 * y[1169] * y[173] * y[236])/(130e-6 + 1e-6 * y[1169] * y[173] * y[236])
    R110 = (13.7 * 1e-6 * y[132] * y[99] * y[236])/(130e-6 + 1e-6 * y[132] * y[99] * y[236])
    R203 = (13.7 * 1e-6 * y[213] * y[99] * y[236])/(130e-6 + 1e-6 * y[213] * y[99] * y[236])
    R240 = (13.7 * 1e-6 * y[571] * y[236])/(130e-6 + 1e-6 * y[571] * y[236])
    R246 = (13.7 * 1e-6 * y[173] * y[236] * y[996])/(130e-6 + 1e-6 * y[173] * y[236] * y[996])
    R247 = (13.7 * 1e-6 * y[132] * y[173] * y[236])/(130e-6 + 1e-6 * y[132] * y[173] * y[236])
    R256 = (13.7 * 1e-6 * y[1141] * y[173] * y[236])/(130e-6 + 1e-6 * y[1141] * y[173] * y[236])
    R259 = (13.7 * 1e-6 * y[592] * y[173] * y[236])/(130e-6 + 1e-6 * y[592] * y[173] * y[236])
    R343 = (13.7 * 1e-6 * y[1376] * y[173] * y[236])/(130e-6 + 1e-6 * y[1376] * y[173] * y[236])
    R565 = (13.7 * 1e-6 * y[913] * y[173] * y[236])/(130e-6 + 1e-6 * y[913] * y[173] * y[236])
    R587 = (13.7 * 1e-6 * y[809] * y[236])/(130e-6 + 1e-6 * y[809] * y[236])
    R590 = (13.7 * 1e-6 * y[356] * y[236])/(130e-6 + 1e-6 * y[356] * y[236])
    R611 = (13.7 * 1e-6 * y[1132] * y[236])/(130e-6 + 1e-6 * y[1132] * y[236])
    R655 = (13.7 * 1e-6 * y[1237] * y[173] * y[236])/(130e-6 + 1e-6 * y[1237] * y[173] * y[236])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R996 = (13.7 * 1e-6 * y[605] * y[236])/(130e-6 + 1e-6 * y[605] * y[236])
    R1108 = (13.7 * 1e-6 * y[669] * y[236])/(130e-6 + 1e-6 * y[669] * y[236])
    R1157 = (13.7 * 1e-6 * y[480] * y[236] * y[37])/(130e-6 + 1e-6 * y[480] * y[236] * y[37])
    R1165 = (13.7 * 1e-6 * y[509] * y[173] * y[236])/(130e-6 + 1e-6 * y[509] * y[173] * y[236])
    R1182 = (13.7 * 1e-6 * y[686] * y[236])/(130e-6 + 1e-6 * y[686] * y[236])
    R1251 = (13.7 * 1e-6 * y[240] * y[236])/(130e-6 + 1e-6 * y[240] * y[236])
    R1259 = (13.7 * 1e-6 * y[261] * y[236] * y[206])/(130e-6 + 1e-6 * y[261] * y[236] * y[206])
    R1298 = (13.7 * 1e-6 * y[1448] * y[236])/(130e-6 + 1e-6 * y[1448] * y[236])
    R1299 = (13.7 * 1e-6 * y[1449] * y[236])/(130e-6 + 1e-6 * y[1449] * y[236])
    R1300 = (13.7 * 1e-6 * y[1450] * y[236])/(130e-6 + 1e-6 * y[1450] * y[236])
    R1305 = (13.7 * 1e-6 * y[1451] * y[236])/(130e-6 + 1e-6 * y[1451] * y[236])
    R1355 = (13.7 * 1e-6 * y[1444] * y[236])/(130e-6 + 1e-6 * y[1444] * y[236])
    R1357 = (13.7 * 1e-6 * y[1445] * y[236])/(130e-6 + 1e-6 * y[1445] * y[236])
    R1358 = (13.7 * 1e-6 * y[1446] * y[236])/(130e-6 + 1e-6 * y[1446] * y[236])
    R1359 = (13.7 * 1e-6 * y[1447] * y[236])/(130e-6 + 1e-6 * y[1447] * y[236])
    R1363 = (13.7 * 1e-6 * y[173] * y[804] * y[236])/(130e-6 + 1e-6 * y[173] * y[804] * y[236])
    R1408 = (13.7 * 1e-6 * y[173] * y[747] * y[236])/(130e-6 + 1e-6 * y[173] * y[747] * y[236])
    R1415 = (13.7 * 1e-6 * y[173] * y[197] * y[236])/(130e-6 + 1e-6 * y[173] * y[197] * y[236])
    R1433 = (13.7 * 1e-6 * y[1634] * y[236])/(130e-6 + 1e-6 * y[1634] * y[236])
    R1451 = (13.7 * 1e-6 * y[173] * y[608] * y[236])/(130e-6 + 1e-6 * y[173] * y[608] * y[236])
    R1467 = (13.7 * 1e-6 * y[106] * y[236])/(130e-6 + 1e-6 * y[106] * y[236])
    R1557 = (13.7 * 1e-6 * y[971] * y[236])/(130e-6 + 1e-6 * y[971] * y[236])
    R1565 = (13.7 * 1e-6 * y[886] * y[236])/(130e-6 + 1e-6 * y[886] * y[236])
    R1614 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1617 = (13.7 * 1e-6 * y[1648] * y[236])/(130e-6 + 1e-6 * y[1648] * y[236])
    R1626 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1783 = (13.7 * 1e-6 * y[692] * y[173] * y[236])/(130e-6 + 1e-6 * y[692] * y[173] * y[236])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    R1846 = (13.7 * 1e-6 * y[99] * y[236] * y[92])/(130e-6 + 1e-6 * y[99] * y[236] * y[92])
    R1847 = (13.7 * 1e-6 * y[236] * y[1026])/(130e-6 + 1e-6 * y[236] * y[1026])
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    R1866 = (13.7 * 1e-6 * y[752] * y[236])/(130e-6 + 1e-6 * y[752] * y[236])
    R1877 = (13.7 * 1e-6 * y[547] * y[236])/(130e-6 + 1e-6 * y[547] * y[236])
    R2008 = (13.7 * 1e-6 * y[236] * y[350])/(130e-6 + 1e-6 * y[236] * y[350])
    R2051 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R2115 = (13.7 * 1e-6 * y[236] * y[1181])/(130e-6 + 1e-6 * y[236] * y[1181])
    R2146 = (13.7 * 1e-6 * y[278] * y[236])/(130e-6 + 1e-6 * y[278] * y[236])
    R2150 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R2152 = (13.7 * 1e-6 * y[173] * y[236] * y[1212])/(130e-6 + 1e-6 * y[173] * y[236] * y[1212])
    R2159 = (13.7 * 1e-6 * y[1310] * y[236])/(130e-6 + 1e-6 * y[1310] * y[236])
    R2184 = (13.7 * 1e-6 * y[236] * y[1216])/(130e-6 + 1e-6 * y[236] * y[1216])
    R2199 = (13.7 * 1e-6 * y[173] * y[236] * y[111])/(130e-6 + 1e-6 * y[173] * y[236] * y[111])
    R2222 = (13.7 * 1e-6 * y[236] * y[201])/(130e-6 + 1e-6 * y[236] * y[201])
    R2240 = (13.7 * 1e-6 * y[1354] * y[236])/(130e-6 + 1e-6 * y[1354] * y[236])
    R2282 = (13.7 * 1e-6 * y[236] * y[257])/(130e-6 + 1e-6 * y[236] * y[257])
    R2315 = (13.7 * 1e-6 * y[173] * y[236] * y[1275])/(130e-6 + 1e-6 * y[173] * y[236] * y[1275])
    R2323 = (13.7 * 1e-6 * y[173] * y[236] * y[780])/(130e-6 + 1e-6 * y[173] * y[236] * y[780])
    R2360 = (13.7 * 1e-6 * y[173] * y[236] * y[694])/(130e-6 + 1e-6 * y[173] * y[236] * y[694])
    R2361 = (13.7 * 1e-6 * y[236] * y[1298])/(130e-6 + 1e-6 * y[236] * y[1298])
    return (R234 + R239 + R312 + R339 + R346 + R398 + R543 + R549 + R560 + R571 + R606 + R638 + R644 + R649 + R658 + R661 + R668 + R670 + R677 + R681 + R683 + R690 + R693 + R993 + R1085 + R1093 + R1261 + R1381 + R1400 + R1432 + R1448 + R1452 + R1453 + R1628 + R1666 + R1679 + R1715 + R1779 + R1936 + R2018 + R2055 + R2062 + R2069 + R2088 + R2111 + R2126 + R2161 + R2192 + R2212 + R2274) - (R96 + R110 + R203 + R240 + R246 + R247 + R256 + R259 + R343 + R565 + R587 + R590 + R611 + R655 + R926 + R996 + R1108 + R1157 + R1165 + R1182 + R1251 + R1259 + R1298 + R1299 + R1300 + R1305 + R1355 + R1357 + R1358 + R1359 + R1363 + R1408 + R1415 + R1433 + R1451 + R1467 + R1557 + R1565 + R1614 + R1617 + R1626 + R1783 + R1841 + R1846 + R1847 + R1849 + R1852 + R1856 + R1866 + R1877 + R2008 + R2051 + R2115 + R2146 + R2150 + R2152 + R2159 + R2184 + R2199 + R2222 + R2240 + R2282 + R2315 + R2323 + R2360 + R2361)
 
def m_2agpg181_c(t, y):
    R235 = (13.7 * 1e-6 * y[1124])/(130e-6 + 1e-6 * y[1124])
    R301 = (13.7 * 1e-6 * y[237] * y[278] * y[583])/(130e-6 + 1e-6 * y[237] * y[278] * y[583])
    R1527 = (13.7 * 1e-6 * y[237] * y[173])/(130e-6 + 1e-6 * y[237] * y[173])
    R1584 = (13.7 * 1e-6 * y[237] * y[294])/(130e-6 + 1e-6 * y[237] * y[294])
    return (R235) - (R301 + R1527 + R1584)
 
def m_2ddglcn_c(t, y):
    R236 = (13.7 * 1e-6 * y[1354])/(130e-6 + 1e-6 * y[1354])
    R552 = (13.7 * 1e-6 * y[476] * y[61])/(130e-6 + 1e-6 * y[476] * y[61])
    R1758 = (13.7 * 1e-6 * y[1648])/(130e-6 + 1e-6 * y[1648])
    R557 = (13.7 * 1e-6 * y[238] * y[278])/(130e-6 + 1e-6 * y[238] * y[278])
    return (R236 + R552 + R1758) - (R557)
 
def m_ala__L_p(t, y):
    R238 = (13.7 * 1e-6 * y[1355])/(130e-6 + 1e-6 * y[1355])
    R231 = (13.7 * 1e-6 * y[239] * y[278] * y[173])/(130e-6 + 1e-6 * y[239] * y[278] * y[173])
    R232 = (13.7 * 1e-6 * y[239] * y[61])/(130e-6 + 1e-6 * y[239] * y[61])
    R233 = (13.7 * 1e-6 * y[239] * y[927])/(130e-6 + 1e-6 * y[239] * y[927])
    return (R238) - (R231 + R232 + R233)
 
def m_glyc_c(t, y):
    R239 = (13.7 * 1e-6 * y[737] * y[36] * y[113])/(130e-6 + 1e-6 * y[737] * y[36] * y[113])
    R1138 = (13.7 * 1e-6 * y[743] * y[173])/(130e-6 + 1e-6 * y[743] * y[173])
    R1272 = (13.7 * 1e-6 * y[675] * y[173])/(130e-6 + 1e-6 * y[675] * y[173])
    R1251 = (13.7 * 1e-6 * y[240] * y[236])/(130e-6 + 1e-6 * y[240] * y[236])
    R1281 = (13.7 * 1e-6 * y[240])/(130e-6 + 1e-6 * y[240])
    R1282 = (13.7 * 1e-6 * y[278] * y[240])/(130e-6 + 1e-6 * y[278] * y[240])
    return (R239 + R1138 + R1272) - (R1251 + R1281 + R1282)
 
def m_pg120_c(t, y):
    R243 = (13.7 * 1e-6 * y[169] * y[278] * y[576])/(130e-6 + 1e-6 * y[169] * y[278] * y[576])
    R1892 = (13.7 * 1e-6 * y[173] * y[1064])/(130e-6 + 1e-6 * y[173] * y[1064])
    R1558 = (13.7 * 1e-6 * y[17] * y[241])/(130e-6 + 1e-6 * y[17] * y[241])
    R1570 = (13.7 * 1e-6 * y[169] * y[241])/(130e-6 + 1e-6 * y[169] * y[241])
    R1888 = (13.7 * 1e-6 * y[278] * y[173] * y[241])/(130e-6 + 1e-6 * y[278] * y[173] * y[241])
    return (R243 + R1892) - (R1558 + R1570 + R1888)
 
def m_glc__D_c(t, y):
    R244 = (13.7 * 1e-6 * y[894] * y[891])/(130e-6 + 1e-6 * y[894] * y[891])
    R245 = (13.7 * 1e-6 * y[894] * y[243])/(130e-6 + 1e-6 * y[894] * y[243])
    R248 = (13.7 * 1e-6 * y[894] * y[244])/(130e-6 + 1e-6 * y[894] * y[244])
    R250 = (13.7 * 1e-6 * y[894] * y[102])/(130e-6 + 1e-6 * y[894] * y[102])
    R1127 = (13.7 * 1e-6 * y[173] * y[916])/(130e-6 + 1e-6 * y[173] * y[916])
    R1147 = (13.7 * 1e-6 * y[108] * y[173])/(130e-6 + 1e-6 * y[108] * y[173])
    R1164 = (13.7 * 1e-6 * y[278] * y[651] * y[173])/(130e-6 + 1e-6 * y[278] * y[651] * y[173])
    R1170 = (13.7 * 1e-6 * y[651] * y[61])/(130e-6 + 1e-6 * y[651] * y[61])
    R1438 = (13.7 * 1e-6 * y[173] * y[851])/(130e-6 + 1e-6 * y[173] * y[851])
    R1701 = (13.7 * 1e-6 * y[173] * y[891])/(130e-6 + 1e-6 * y[173] * y[891])
    R1702 = (13.7 * 1e-6 * y[173] * y[243])/(130e-6 + 1e-6 * y[173] * y[243])
    R1703 = (13.7 * 1e-6 * y[173] * y[244])/(130e-6 + 1e-6 * y[173] * y[244])
    R1710 = (13.7 * 1e-6 * y[173] * y[102])/(130e-6 + 1e-6 * y[173] * y[102])
    R1711 = (13.7 * 1e-6 * y[173] * y[246])/(130e-6 + 1e-6 * y[173] * y[246])
    R2246 = (13.7 * 1e-6 * y[173] * y[1242])/(130e-6 + 1e-6 * y[173] * y[1242])
    R2249 = (13.7 * 1e-6 * y[173] * y[1241])/(130e-6 + 1e-6 * y[173] * y[1241])
    R1197 = (13.7 * 1e-6 * y[127] * y[242])/(130e-6 + 1e-6 * y[127] * y[242])
    R1348 = (13.7 * 1e-6 * y[278] * y[242])/(130e-6 + 1e-6 * y[278] * y[242])
    R2333 = (13.7 * 1e-6 * y[242])/(130e-6 + 1e-6 * y[242])
    return (R244 + R245 + R248 + R250 + R1127 + R1147 + R1164 + R1170 + R1438 + R1701 + R1702 + R1703 + R1710 + R1711 + R2246 + R2249) - (R1197 + R1348 + R2333)
 
def m_maltttr_c(t, y):
    R244 = (13.7 * 1e-6 * y[894] * y[891])/(130e-6 + 1e-6 * y[894] * y[891])
    R1587 = (13.7 * 1e-6 * y[278] * y[173] * y[893])/(130e-6 + 1e-6 * y[278] * y[173] * y[893])
    R1588 = (13.7 * 1e-6 * y[244] * y[37])/(130e-6 + 1e-6 * y[244] * y[37])
    R1703 = (13.7 * 1e-6 * y[173] * y[244])/(130e-6 + 1e-6 * y[173] * y[244])
    R245 = (13.7 * 1e-6 * y[894] * y[243])/(130e-6 + 1e-6 * y[894] * y[243])
    R1702 = (13.7 * 1e-6 * y[173] * y[243])/(130e-6 + 1e-6 * y[173] * y[243])
    return (R244 + R1587 + R1588 + R1703) - (R245 + R1702)
 
def m_maltpt_c(t, y):
    R245 = (13.7 * 1e-6 * y[894] * y[243])/(130e-6 + 1e-6 * y[894] * y[243])
    R1580 = (13.7 * 1e-6 * y[278] * y[173] * y[890])/(130e-6 + 1e-6 * y[278] * y[173] * y[890])
    R1612 = (13.7 * 1e-6 * y[102] * y[37])/(130e-6 + 1e-6 * y[102] * y[37])
    R1710 = (13.7 * 1e-6 * y[173] * y[102])/(130e-6 + 1e-6 * y[173] * y[102])
    R248 = (13.7 * 1e-6 * y[894] * y[244])/(130e-6 + 1e-6 * y[894] * y[244])
    R1588 = (13.7 * 1e-6 * y[244] * y[37])/(130e-6 + 1e-6 * y[244] * y[37])
    R1703 = (13.7 * 1e-6 * y[173] * y[244])/(130e-6 + 1e-6 * y[173] * y[244])
    return (R245 + R1580 + R1612 + R1710) - (R248 + R1588 + R1703)
 
def m_pac_c(t, y):
    R246 = (13.7 * 1e-6 * y[173] * y[236] * y[996])/(130e-6 + 1e-6 * y[173] * y[236] * y[996])
    R1804 = (13.7 * 1e-6 * y[278] * y[99] * y[245])/(130e-6 + 1e-6 * y[278] * y[99] * y[245])
    return (R246) - (R1804)
 
def m_malthp_c(t, y):
    R250 = (13.7 * 1e-6 * y[894] * y[102])/(130e-6 + 1e-6 * y[894] * y[102])
    R1634 = (13.7 * 1e-6 * y[246] * y[37])/(130e-6 + 1e-6 * y[246] * y[37])
    R1711 = (13.7 * 1e-6 * y[173] * y[246])/(130e-6 + 1e-6 * y[173] * y[246])
    return (R250) - (R1634 + R1711)
 
def m_pg140_c(t, y):
    R251 = (13.7 * 1e-6 * y[186] * y[278] * y[577])/(130e-6 + 1e-6 * y[186] * y[278] * y[577])
    R1898 = (13.7 * 1e-6 * y[173] * y[1065])/(130e-6 + 1e-6 * y[173] * y[1065])
    R1559 = (13.7 * 1e-6 * y[25] * y[247])/(130e-6 + 1e-6 * y[25] * y[247])
    R1572 = (13.7 * 1e-6 * y[186] * y[247])/(130e-6 + 1e-6 * y[186] * y[247])
    R1893 = (13.7 * 1e-6 * y[278] * y[173] * y[247])/(130e-6 + 1e-6 * y[278] * y[173] * y[247])
    return (R251 + R1898) - (R1559 + R1572 + R1893)
 
def m_amob_c(t, y):
    R254 = (13.7 * 1e-6 * y[273] * y[921])/(130e-6 + 1e-6 * y[273] * y[921])
    return (R254) - (0)
 
def m_dann_c(t, y):
    R254 = (13.7 * 1e-6 * y[273] * y[921])/(130e-6 + 1e-6 * y[273] * y[921])
    R531 = (13.7 * 1e-6 * y[278] * y[16] * y[249])/(130e-6 + 1e-6 * y[278] * y[16] * y[249])
    return (R254) - (R531)
 
def m_mql8_c(t, y):
    R255 = (13.7 * 1e-6 * y[507] * y[921])/(130e-6 + 1e-6 * y[507] * y[921])
    R295 = (13.7 * 1e-6 * y[300] * y[441])/(130e-6 + 1e-6 * y[300] * y[441])
    R608 = (13.7 * 1e-6 * y[1430] * y[441])/(130e-6 + 1e-6 * y[1430] * y[441])
    R618 = (13.7 * 1e-6 * y[1433] * y[441])/(130e-6 + 1e-6 * y[1433] * y[441])
    R1021 = (13.7 * 1e-6 * y[620] * y[36] * y[441])/(130e-6 + 1e-6 * y[620] * y[36] * y[441])
    R1116 = (13.7 * 1e-6 * y[743] * y[441])/(130e-6 + 1e-6 * y[743] * y[441])
    R1275 = (13.7 * 1e-6 * y[702] * y[441])/(130e-6 + 1e-6 * y[702] * y[441])
    R1425 = (13.7 * 1e-6 * y[645] * y[36] * y[441])/(130e-6 + 1e-6 * y[645] * y[36] * y[441])
    R1553 = (13.7 * 1e-6 * y[846] * y[441])/(130e-6 + 1e-6 * y[846] * y[441])
    R1616 = (13.7 * 1e-6 * y[643] * y[441])/(130e-6 + 1e-6 * y[643] * y[441])
    R2055 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2069 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2164 = (13.7 * 1e-6 * y[36] * y[441] * y[201])/(130e-6 + 1e-6 * y[36] * y[441] * y[201])
    R502 = (13.7 * 1e-6 * y[36] * y[250] * y[335])/(130e-6 + 1e-6 * y[36] * y[250] * y[335])
    R573 = (13.7 * 1e-6 * y[1424] * y[250])/(130e-6 + 1e-6 * y[1424] * y[250])
    R580 = (13.7 * 1e-6 * y[496] * y[250])/(130e-6 + 1e-6 * y[496] * y[250])
    R1039 = (13.7 * 1e-6 * y[153] * y[250])/(130e-6 + 1e-6 * y[153] * y[250])
    R1707 = (13.7 * 1e-6 * y[250] * y[964])/(130e-6 + 1e-6 * y[250] * y[964])
    R1708 = (13.7 * 1e-6 * y[36] * y[250] * y[962])/(130e-6 + 1e-6 * y[36] * y[250] * y[962])
    R1782 = (13.7 * 1e-6 * y[61] * y[250] * y[960])/(130e-6 + 1e-6 * y[61] * y[250] * y[960])
    R2125 = (13.7 * 1e-6 * y[250] * y[335])/(130e-6 + 1e-6 * y[250] * y[335])
    R2216 = (13.7 * 1e-6 * y[36] * y[250] * y[1664])/(130e-6 + 1e-6 * y[36] * y[250] * y[1664])
    R2217 = (13.7 * 1e-6 * y[61] * y[250] * y[1231])/(130e-6 + 1e-6 * y[61] * y[250] * y[1231])
    return (R255 + R295 + R608 + R618 + R1021 + R1116 + R1275 + R1425 + R1553 + R1616 + R2055 + R2069 + R2164) - (R502 + R573 + R580 + R1039 + R1707 + R1708 + R1782 + R2125 + R2216 + R2217)
 
def m_4ampm_c(t, y):
    R256 = (13.7 * 1e-6 * y[1141] * y[173] * y[236])/(130e-6 + 1e-6 * y[1141] * y[173] * y[236])
    R361 = (13.7 * 1e-6 * y[1099] * y[173])/(130e-6 + 1e-6 * y[1099] * y[173])
    R1380 = (13.7 * 1e-6 * y[1626] * y[278])/(130e-6 + 1e-6 * y[1626] * y[278])
    R1962 = (13.7 * 1e-6 * y[251] * y[278])/(130e-6 + 1e-6 * y[251] * y[278])
    return (R256 + R361 + R1380) - (R1962)
 
def m_for_c(t, y):
    R256 = (13.7 * 1e-6 * y[1141] * y[173] * y[236])/(130e-6 + 1e-6 * y[1141] * y[173] * y[236])
    R530 = (13.7 * 1e-6 * y[753])/(130e-6 + 1e-6 * y[753])
    R563 = (13.7 * 1e-6 * y[913] * y[173] * y[335])/(130e-6 + 1e-6 * y[913] * y[173] * y[335])
    R565 = (13.7 * 1e-6 * y[913] * y[173] * y[236])/(130e-6 + 1e-6 * y[913] * y[173] * y[236])
    R1034 = (13.7 * 1e-6 * y[620] * y[61])/(130e-6 + 1e-6 * y[620] * y[61])
    R1067 = (13.7 * 1e-6 * y[1057] * y[173])/(130e-6 + 1e-6 * y[1057] * y[173])
    R1306 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1308 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1821 = (13.7 * 1e-6 * y[1214] * y[99])/(130e-6 + 1e-6 * y[1214] * y[99])
    R1887 = (13.7 * 1e-6 * y[99] * y[92])/(130e-6 + 1e-6 * y[99] * y[92])
    R2149 = (13.7 * 1e-6 * y[599] * y[173])/(130e-6 + 1e-6 * y[599] * y[173])
    R2379 = (13.7 * 1e-6 * y[173] * y[1309])/(130e-6 + 1e-6 * y[173] * y[1309])
    R1036 = (13.7 * 1e-6 * y[252])/(130e-6 + 1e-6 * y[252])
    R1079 = (13.7 * 1e-6 * y[252] * y[36])/(130e-6 + 1e-6 * y[252] * y[36])
    R1160 = (13.7 * 1e-6 * y[278] * y[252] * y[1140])/(130e-6 + 1e-6 * y[278] * y[252] * y[1140])
    return (R256 + R530 + R563 + R565 + R1034 + R1067 + R1306 + R1308 + R1821 + R1887 + R2149 + R2379) - (R1036 + R1079 + R1160)
 
def m_ppa_c(t, y):
    R258 = (13.7 * 1e-6 * y[173] * y[6] * y[1356])/(130e-6 + 1e-6 * y[173] * y[6] * y[1356])
    R1975 = (13.7 * 1e-6 * y[35] * y[1166])/(130e-6 + 1e-6 * y[35] * y[1166])
    R1979 = (13.7 * 1e-6 * y[927] * y[1110])/(130e-6 + 1e-6 * y[927] * y[1110])
    R1994 = (13.7 * 1e-6 * y[140] * y[290])/(130e-6 + 1e-6 * y[140] * y[290])
    R122 = (13.7 * 1e-6 * y[278] * y[99] * y[253])/(130e-6 + 1e-6 * y[278] * y[99] * y[253])
    return (R258 + R1975 + R1979 + R1994) - (R122)
 
def m_but_c(t, y):
    R259 = (13.7 * 1e-6 * y[592] * y[173] * y[236])/(130e-6 + 1e-6 * y[592] * y[173] * y[236])
    R357 = (13.7 * 1e-6 * y[330] * y[61])/(130e-6 + 1e-6 * y[330] * y[61])
    R354 = (13.7 * 1e-6 * y[127] * y[254])/(130e-6 + 1e-6 * y[127] * y[254])
    return (R259 + R357) - (R354)
 
def m_all6p_c(t, y):
    R260 = (13.7 * 1e-6 * y[267] * y[278])/(130e-6 + 1e-6 * y[267] * y[278])
    R261 = (13.7 * 1e-6 * y[255])/(130e-6 + 1e-6 * y[255])
    return (R260) - (R261)
 
def m_allul6p_c(t, y):
    R261 = (13.7 * 1e-6 * y[255])/(130e-6 + 1e-6 * y[255])
    R270 = (13.7 * 1e-6 * y[256])/(130e-6 + 1e-6 * y[256])
    return (R261) - (R270)
 
def m_urdglyc_c(t, y):
    R262 = (13.7 * 1e-6 * y[258] * y[173] * y[36])/(130e-6 + 1e-6 * y[258] * y[173] * y[36])
    R2282 = (13.7 * 1e-6 * y[236] * y[257])/(130e-6 + 1e-6 * y[236] * y[257])
    R2368 = (13.7 * 1e-6 * y[173] * y[36] * y[257])/(130e-6 + 1e-6 * y[173] * y[36] * y[257])
    return (R262) - (R2282 + R2368)
 
def m_alltt_c(t, y):
    R263 = (13.7 * 1e-6 * y[259] * y[173])/(130e-6 + 1e-6 * y[259] * y[173])
    R262 = (13.7 * 1e-6 * y[258] * y[173] * y[36])/(130e-6 + 1e-6 * y[258] * y[173] * y[36])
    return (R263) - (R262)
 
def m_alltn_c(t, y):
    R264 = (13.7 * 1e-6 * y[264] * y[61])/(130e-6 + 1e-6 * y[264] * y[61])
    R2290 = (13.7 * 1e-6 * y[173] * y[335] * y[1279])/(130e-6 + 1e-6 * y[173] * y[335] * y[1279])
    R263 = (13.7 * 1e-6 * y[259] * y[173])/(130e-6 + 1e-6 * y[259] * y[173])
    return (R264 + R2290) - (R263)
 
def m_cys__L_c(t, y):
    R265 = (13.7 * 1e-6 * y[343] * y[173])/(130e-6 + 1e-6 * y[343] * y[173])
    R489 = (13.7 * 1e-6 * y[1190] * y[430])/(130e-6 + 1e-6 * y[1190] * y[430])
    R496 = (13.7 * 1e-6 * y[278] * y[439] * y[173])/(130e-6 + 1e-6 * y[278] * y[439] * y[173])
    R486 = (13.7 * 1e-6 * y[260] * y[173])/(130e-6 + 1e-6 * y[260] * y[173])
    R493 = (13.7 * 1e-6 * y[278] * y[260] * y[1410])/(130e-6 + 1e-6 * y[278] * y[260] * y[1410])
    R495 = (13.7 * 1e-6 * y[278] * y[260] * y[173])/(130e-6 + 1e-6 * y[278] * y[260] * y[173])
    R500 = (13.7 * 1e-6 * y[260])/(130e-6 + 1e-6 * y[260])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1192 = (13.7 * 1e-6 * y[278] * y[260] * y[110])/(130e-6 + 1e-6 * y[278] * y[260] * y[110])
    R2007 = (13.7 * 1e-6 * y[1100] * y[404] * y[260])/(130e-6 + 1e-6 * y[1100] * y[404] * y[260])
    R2166 = (13.7 * 1e-6 * y[260] * y[829])/(130e-6 + 1e-6 * y[260] * y[829])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    return (R265 + R489 + R496) - (R486 + R493 + R495 + R500 + R926 + R1192 + R2007 + R2166 + R2205)
 
def m_gly_c(t, y):
    R265 = (13.7 * 1e-6 * y[343] * y[173])/(130e-6 + 1e-6 * y[343] * y[173])
    R266 = (13.7 * 1e-6 * y[173] * y[1148])/(130e-6 + 1e-6 * y[173] * y[1148])
    R1188 = (13.7 * 1e-6 * y[500] * y[206])/(130e-6 + 1e-6 * y[500] * y[206])
    R1231 = (13.7 * 1e-6 * y[739] * y[61])/(130e-6 + 1e-6 * y[739] * y[61])
    R1232 = (13.7 * 1e-6 * y[739] * y[927])/(130e-6 + 1e-6 * y[739] * y[927])
    R2114 = (13.7 * 1e-6 * y[173] * y[335] * y[1658])/(130e-6 + 1e-6 * y[173] * y[335] * y[1658])
    R2176 = (13.7 * 1e-6 * y[1372])/(130e-6 + 1e-6 * y[1372])
    R2179 = (13.7 * 1e-6 * y[1216])/(130e-6 + 1e-6 * y[1216])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1228 = (13.7 * 1e-6 * y[127] * y[261])/(130e-6 + 1e-6 * y[127] * y[261])
    R1259 = (13.7 * 1e-6 * y[261] * y[236] * y[206])/(130e-6 + 1e-6 * y[261] * y[236] * y[206])
    R1290 = (13.7 * 1e-6 * y[278] * y[261] * y[1613])/(130e-6 + 1e-6 * y[278] * y[261] * y[1613])
    R1304 = (13.7 * 1e-6 * y[278] * y[719] * y[261])/(130e-6 + 1e-6 * y[278] * y[719] * y[261])
    R2032 = (13.7 * 1e-6 * y[278] * y[261] * y[725])/(130e-6 + 1e-6 * y[278] * y[261] * y[725])
    return (R265 + R266 + R1188 + R1231 + R1232 + R2114 + R2176 + R2179) - (R926 + R1228 + R1259 + R1290 + R1304 + R2032)
 
def m_pro__L_c(t, y):
    R266 = (13.7 * 1e-6 * y[173] * y[1148])/(130e-6 + 1e-6 * y[173] * y[1148])
    R1784 = (13.7 * 1e-6 * y[692] * y[36] * y[201])/(130e-6 + 1e-6 * y[692] * y[36] * y[201])
    R2012 = (13.7 * 1e-6 * y[278] * y[173] * y[1130])/(130e-6 + 1e-6 * y[278] * y[173] * y[1130])
    R2013 = (13.7 * 1e-6 * y[61] * y[1130])/(130e-6 + 1e-6 * y[61] * y[1130])
    R2014 = (13.7 * 1e-6 * y[927] * y[1130])/(130e-6 + 1e-6 * y[927] * y[1130])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2011 = (13.7 * 1e-6 * y[278] * y[262] * y[1657])/(130e-6 + 1e-6 * y[278] * y[262] * y[1657])
    R2044 = (13.7 * 1e-6 * y[282] * y[262])/(130e-6 + 1e-6 * y[282] * y[262])
    return (R266 + R1784 + R2012 + R2013 + R2014) - (R926 + R2011 + R2044)
 
def m_amp_p(t, y):
    R267 = (13.7 * 1e-6 * y[1357])/(130e-6 + 1e-6 * y[1357])
    R1725 = (13.7 * 1e-6 * y[263] * y[406])/(130e-6 + 1e-6 * y[263] * y[406])
    return (R267) - (R1725)
 
def m_alltn_p(t, y):
    R268 = (13.7 * 1e-6 * y[1358])/(130e-6 + 1e-6 * y[1358])
    R264 = (13.7 * 1e-6 * y[264] * y[61])/(130e-6 + 1e-6 * y[264] * y[61])
    return (R268) - (R264)
 
def m_pg141_c(t, y):
    R269 = (13.7 * 1e-6 * y[195] * y[278] * y[578])/(130e-6 + 1e-6 * y[195] * y[278] * y[578])
    R1902 = (13.7 * 1e-6 * y[173] * y[1067])/(130e-6 + 1e-6 * y[173] * y[1067])
    R1560 = (13.7 * 1e-6 * y[80] * y[265])/(130e-6 + 1e-6 * y[80] * y[265])
    R1574 = (13.7 * 1e-6 * y[195] * y[265])/(130e-6 + 1e-6 * y[195] * y[265])
    R1894 = (13.7 * 1e-6 * y[278] * y[173] * y[265])/(130e-6 + 1e-6 * y[278] * y[173] * y[265])
    return (R269 + R1902) - (R1560 + R1574 + R1894)
 
def m_f6p_c(t, y):
    R270 = (13.7 * 1e-6 * y[256])/(130e-6 + 1e-6 * y[256])
    R930 = (13.7 * 1e-6 * y[574] * y[37])/(130e-6 + 1e-6 * y[574] * y[37])
    R1007 = (13.7 * 1e-6 * y[623] * y[173])/(130e-6 + 1e-6 * y[623] * y[173])
    R1059 = (13.7 * 1e-6 * y[635] * y[563])/(130e-6 + 1e-6 * y[635] * y[563])
    R1141 = (13.7 * 1e-6 * y[159] * y[173])/(130e-6 + 1e-6 * y[159] * y[173])
    R1353 = (13.7 * 1e-6 * y[278] * y[573])/(130e-6 + 1e-6 * y[278] * y[573])
    R1557 = (13.7 * 1e-6 * y[971] * y[236])/(130e-6 + 1e-6 * y[971] * y[236])
    R1607 = (13.7 * 1e-6 * y[797])/(130e-6 + 1e-6 * y[797])
    R1867 = (13.7 * 1e-6 * y[108])/(130e-6 + 1e-6 * y[108])
    R2115 = (13.7 * 1e-6 * y[236] * y[1181])/(130e-6 + 1e-6 * y[236] * y[1181])
    R2210 = (13.7 * 1e-6 * y[1237] * y[1156])/(130e-6 + 1e-6 * y[1237] * y[1156])
    R2241 = (13.7 * 1e-6 * y[480] * y[1225])/(130e-6 + 1e-6 * y[480] * y[1225])
    R928 = (13.7 * 1e-6 * y[266])/(130e-6 + 1e-6 * y[266])
    R929 = (13.7 * 1e-6 * y[266] * y[173])/(130e-6 + 1e-6 * y[266] * y[173])
    R1183 = (13.7 * 1e-6 * y[266] * y[710])/(130e-6 + 1e-6 * y[266] * y[710])
    R1881 = (13.7 * 1e-6 * y[278] * y[266])/(130e-6 + 1e-6 * y[278] * y[266])
    return (R270 + R930 + R1007 + R1059 + R1141 + R1353 + R1557 + R1607 + R1867 + R2115 + R2210 + R2241) - (R928 + R929 + R1183 + R1881)
 
def m_all__D_c(t, y):
    R273 = (13.7 * 1e-6 * y[229] * y[278] * y[173])/(130e-6 + 1e-6 * y[229] * y[278] * y[173])
    R260 = (13.7 * 1e-6 * y[267] * y[278])/(130e-6 + 1e-6 * y[267] * y[278])
    return (R273) - (R260)
 
def m_pg160_c(t, y):
    R274 = (13.7 * 1e-6 * y[208] * y[278] * y[579])/(130e-6 + 1e-6 * y[208] * y[278] * y[579])
    R1907 = (13.7 * 1e-6 * y[173] * y[1069])/(130e-6 + 1e-6 * y[173] * y[1069])
    R1561 = (13.7 * 1e-6 * y[87] * y[268])/(130e-6 + 1e-6 * y[87] * y[268])
    R1576 = (13.7 * 1e-6 * y[208] * y[268])/(130e-6 + 1e-6 * y[208] * y[268])
    R1895 = (13.7 * 1e-6 * y[278] * y[173] * y[268])/(130e-6 + 1e-6 * y[278] * y[173] * y[268])
    return (R274 + R1907) - (R1561 + R1576 + R1895)
 
def m_pran_c(t, y):
    R275 = (13.7 * 1e-6 * y[270] * y[983])/(130e-6 + 1e-6 * y[270] * y[983])
    R2034 = (13.7 * 1e-6 * y[269])/(130e-6 + 1e-6 * y[269])
    return (R275) - (R2034)
 
def m_anth_c(t, y):
    R276 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R116 = (13.7 * 1e-6 * y[127] * y[270])/(130e-6 + 1e-6 * y[127] * y[270])
    R275 = (13.7 * 1e-6 * y[270] * y[983])/(130e-6 + 1e-6 * y[270] * y[983])
    return (R276) - (R116 + R275)
 
def m_pg161_c(t, y):
    R277 = (13.7 * 1e-6 * y[217] * y[278] * y[580])/(130e-6 + 1e-6 * y[217] * y[278] * y[580])
    R1910 = (13.7 * 1e-6 * y[173] * y[1070])/(130e-6 + 1e-6 * y[173] * y[1070])
    R375 = (13.7 * 1e-6 * y[921] * y[271])/(130e-6 + 1e-6 * y[921] * y[271])
    R1562 = (13.7 * 1e-6 * y[96] * y[271])/(130e-6 + 1e-6 * y[96] * y[271])
    R1577 = (13.7 * 1e-6 * y[217] * y[271])/(130e-6 + 1e-6 * y[217] * y[271])
    R1896 = (13.7 * 1e-6 * y[278] * y[173] * y[271])/(130e-6 + 1e-6 * y[278] * y[173] * y[271])
    return (R277 + R1910) - (R375 + R1562 + R1577 + R1896)
 
def m_aact_c(t, y):
    R278 = (13.7 * 1e-6 * y[312] * y[36])/(130e-6 + 1e-6 * y[312] * y[36])
    R82 = (13.7 * 1e-6 * y[272] * y[173] * y[335])/(130e-6 + 1e-6 * y[272] * y[173] * y[335])
    return (R278) - (R82)
 
def m_8aonn_c(t, y):
    R279 = (13.7 * 1e-6 * y[235] * y[36] * y[1360])/(130e-6 + 1e-6 * y[235] * y[36] * y[1360])
    R254 = (13.7 * 1e-6 * y[273] * y[921])/(130e-6 + 1e-6 * y[273] * y[921])
    return (R279) - (R254)
 
def m_asn__L_p(t, y):
    R281 = (13.7 * 1e-6 * y[1362])/(130e-6 + 1e-6 * y[1362])
    R348 = (13.7 * 1e-6 * y[274] * y[406])/(130e-6 + 1e-6 * y[274] * y[406])
    R358 = (13.7 * 1e-6 * y[274] * y[278] * y[173])/(130e-6 + 1e-6 * y[274] * y[278] * y[173])
    R359 = (13.7 * 1e-6 * y[274] * y[61])/(130e-6 + 1e-6 * y[274] * y[61])
    return (R281) - (R348 + R358 + R359)
 
def m_aso3_p(t, y):
    R282 = (13.7 * 1e-6 * y[309] * y[278] * y[173])/(130e-6 + 1e-6 * y[309] * y[278] * y[173])
    R284 = (13.7 * 1e-6 * y[1363])/(130e-6 + 1e-6 * y[1363])
    return (R282 + R284) - (0)
 
def m_pg180_c(t, y):
    R283 = (13.7 * 1e-6 * y[228] * y[278] * y[582])/(130e-6 + 1e-6 * y[228] * y[278] * y[582])
    R1912 = (13.7 * 1e-6 * y[173] * y[1075])/(130e-6 + 1e-6 * y[173] * y[1075])
    R1563 = (13.7 * 1e-6 * y[118] * y[276])/(130e-6 + 1e-6 * y[118] * y[276])
    R1578 = (13.7 * 1e-6 * y[228] * y[276])/(130e-6 + 1e-6 * y[228] * y[276])
    R1899 = (13.7 * 1e-6 * y[278] * y[173] * y[276])/(130e-6 + 1e-6 * y[278] * y[173] * y[276])
    return (R283 + R1912) - (R1563 + R1578 + R1899)
 
def m_ala_B_c(t, y):
    R285 = (13.7 * 1e-6 * y[300] * y[36])/(130e-6 + 1e-6 * y[300] * y[36])
    R333 = (13.7 * 1e-6 * y[316] * y[61])/(130e-6 + 1e-6 * y[316] * y[61])
    R1806 = (13.7 * 1e-6 * y[277] * y[278] * y[517])/(130e-6 + 1e-6 * y[277] * y[278] * y[517])
    return (R285 + R333) - (R1806)
 
def m_atp_c(t, y):
    R286 = (13.7 * 1e-6 * y[1364] * y[173])/(130e-6 + 1e-6 * y[1364] * y[173])
    R332 = (13.7 * 1e-6 * y[35] * y[61] * y[37])/(130e-6 + 1e-6 * y[35] * y[61] * y[37])
    R1975 = (13.7 * 1e-6 * y[35] * y[1166])/(130e-6 + 1e-6 * y[35] * y[1166])
    R2117 = (13.7 * 1e-6 * y[35] * y[36] * y[563])/(130e-6 + 1e-6 * y[35] * y[36] * y[563])
    R32 = (13.7 * 1e-6 * y[38] * y[278] * y[173])/(130e-6 + 1e-6 * y[38] * y[278] * y[173])
    R46 = (13.7 * 1e-6 * y[54] * y[278] * y[173])/(130e-6 + 1e-6 * y[54] * y[278] * y[173])
    R56 = (13.7 * 1e-6 * y[64] * y[278] * y[173])/(130e-6 + 1e-6 * y[64] * y[278] * y[173])
    R63 = (13.7 * 1e-6 * y[15] * y[278] * y[577])/(130e-6 + 1e-6 * y[15] * y[278] * y[577])
    R64 = (13.7 * 1e-6 * y[15] * y[278] * y[578])/(130e-6 + 1e-6 * y[15] * y[278] * y[578])
    R69 = (13.7 * 1e-6 * y[15] * y[278] * y[579])/(130e-6 + 1e-6 * y[15] * y[278] * y[579])
    R71 = (13.7 * 1e-6 * y[15] * y[278] * y[580])/(130e-6 + 1e-6 * y[15] * y[278] * y[580])
    R72 = (13.7 * 1e-6 * y[15] * y[278] * y[583])/(130e-6 + 1e-6 * y[15] * y[278] * y[583])
    R74 = (13.7 * 1e-6 * y[15] * y[278] * y[582])/(130e-6 + 1e-6 * y[15] * y[278] * y[582])
    R75 = (13.7 * 1e-6 * y[165] * y[278])/(130e-6 + 1e-6 * y[165] * y[278])
    R76 = (13.7 * 1e-6 * y[15] * y[278] * y[576])/(130e-6 + 1e-6 * y[15] * y[278] * y[576])
    R78 = (13.7 * 1e-6 * y[15] * y[278] * y[575])/(130e-6 + 1e-6 * y[15] * y[278] * y[575])
    R79 = (13.7 * 1e-6 * y[15] * y[278] * y[581])/(130e-6 + 1e-6 * y[15] * y[278] * y[581])
    R85 = (13.7 * 1e-6 * y[98] * y[278])/(130e-6 + 1e-6 * y[98] * y[278])
    R90 = (13.7 * 1e-6 * y[120] * y[278])/(130e-6 + 1e-6 * y[120] * y[278])
    R120 = (13.7 * 1e-6 * y[127] * y[278] * y[782])/(130e-6 + 1e-6 * y[127] * y[278] * y[782])
    R121 = (13.7 * 1e-6 * y[17] * y[278] * y[576])/(130e-6 + 1e-6 * y[17] * y[278] * y[576])
    R122 = (13.7 * 1e-6 * y[278] * y[99] * y[253])/(130e-6 + 1e-6 * y[278] * y[99] * y[253])
    R134 = (13.7 * 1e-6 * y[25] * y[278] * y[577])/(130e-6 + 1e-6 * y[25] * y[278] * y[577])
    R136 = (13.7 * 1e-6 * y[1178] * y[278])/(130e-6 + 1e-6 * y[1178] * y[278])
    R139 = (13.7 * 1e-6 * y[80] * y[278] * y[578])/(130e-6 + 1e-6 * y[80] * y[278] * y[578])
    R141 = (13.7 * 1e-6 * y[87] * y[278] * y[579])/(130e-6 + 1e-6 * y[87] * y[278] * y[579])
    R143 = (13.7 * 1e-6 * y[96] * y[278] * y[580])/(130e-6 + 1e-6 * y[96] * y[278] * y[580])
    R146 = (13.7 * 1e-6 * y[118] * y[278] * y[582])/(130e-6 + 1e-6 * y[118] * y[278] * y[582])
    R147 = (13.7 * 1e-6 * y[130] * y[278] * y[583])/(130e-6 + 1e-6 * y[130] * y[278] * y[583])
    R166 = (13.7 * 1e-6 * y[120] * y[278] * y[99])/(130e-6 + 1e-6 * y[120] * y[278] * y[99])
    R192 = (13.7 * 1e-6 * y[71] * y[278])/(130e-6 + 1e-6 * y[71] * y[278])
    R199 = (13.7 * 1e-6 * y[278])/(130e-6 + 1e-6 * y[278])
    R200 = (13.7 * 1e-6 * y[216] * y[278])/(130e-6 + 1e-6 * y[216] * y[278])
    R201 = (13.7 * 1e-6 * y[1141] * y[278] * y[782])/(130e-6 + 1e-6 * y[1141] * y[278] * y[782])
    R211 = (13.7 * 1e-6 * y[224] * y[278] * y[173])/(130e-6 + 1e-6 * y[224] * y[278] * y[173])
    R212 = (13.7 * 1e-6 * y[45] * y[278])/(130e-6 + 1e-6 * y[45] * y[278])
    R214 = (13.7 * 1e-6 * y[338] * y[278])/(130e-6 + 1e-6 * y[338] * y[278])
    R216 = (13.7 * 1e-6 * y[223] * y[278] * y[173])/(130e-6 + 1e-6 * y[223] * y[278] * y[173])
    R230 = (13.7 * 1e-6 * y[235] * y[278] * y[1353])/(130e-6 + 1e-6 * y[235] * y[278] * y[1353])
    R231 = (13.7 * 1e-6 * y[239] * y[278] * y[173])/(130e-6 + 1e-6 * y[239] * y[278] * y[173])
    R243 = (13.7 * 1e-6 * y[169] * y[278] * y[576])/(130e-6 + 1e-6 * y[169] * y[278] * y[576])
    R251 = (13.7 * 1e-6 * y[186] * y[278] * y[577])/(130e-6 + 1e-6 * y[186] * y[278] * y[577])
    R253 = (13.7 * 1e-6 * y[131] * y[278])/(130e-6 + 1e-6 * y[131] * y[278])
    R260 = (13.7 * 1e-6 * y[267] * y[278])/(130e-6 + 1e-6 * y[267] * y[278])
    R269 = (13.7 * 1e-6 * y[195] * y[278] * y[578])/(130e-6 + 1e-6 * y[195] * y[278] * y[578])
    R272 = (13.7 * 1e-6 * y[179] * y[278] * y[173])/(130e-6 + 1e-6 * y[179] * y[278] * y[173])
    R273 = (13.7 * 1e-6 * y[229] * y[278] * y[173])/(130e-6 + 1e-6 * y[229] * y[278] * y[173])
    R274 = (13.7 * 1e-6 * y[208] * y[278] * y[579])/(130e-6 + 1e-6 * y[208] * y[278] * y[579])
    R277 = (13.7 * 1e-6 * y[217] * y[278] * y[580])/(130e-6 + 1e-6 * y[217] * y[278] * y[580])
    R282 = (13.7 * 1e-6 * y[309] * y[278] * y[173])/(130e-6 + 1e-6 * y[309] * y[278] * y[173])
    R283 = (13.7 * 1e-6 * y[228] * y[278] * y[582])/(130e-6 + 1e-6 * y[228] * y[278] * y[582])
    R293 = (13.7 * 1e-6 * y[300] * y[278])/(130e-6 + 1e-6 * y[300] * y[278])
    R298 = (13.7 * 1e-6 * y[295] * y[278] * y[173])/(130e-6 + 1e-6 * y[295] * y[278] * y[173])
    R301 = (13.7 * 1e-6 * y[237] * y[278] * y[583])/(130e-6 + 1e-6 * y[237] * y[278] * y[583])
    R304 = (13.7 * 1e-6 * y[301] * y[278] * y[173])/(130e-6 + 1e-6 * y[301] * y[278] * y[173])
    R307 = (13.7 * 1e-6 * y[300] * y[278] * y[1366])/(130e-6 + 1e-6 * y[300] * y[278] * y[1366])
    R308 = (13.7 * 1e-6 * y[302] * y[278] * y[173])/(130e-6 + 1e-6 * y[302] * y[278] * y[173])
    R323 = (13.7 * 1e-6 * y[300] * y[278] * y[1010])/(130e-6 + 1e-6 * y[300] * y[278] * y[1010])
    R324 = (13.7 * 1e-6 * y[303] * y[278] * y[1370])/(130e-6 + 1e-6 * y[303] * y[278] * y[1370])
    R325 = (13.7 * 1e-6 * y[315] * y[278] * y[173])/(130e-6 + 1e-6 * y[315] * y[278] * y[173])
    R329 = (13.7 * 1e-6 * y[278] * y[173] * y[36])/(130e-6 + 1e-6 * y[278] * y[173] * y[36])
    R330 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R331 = (13.7 * 1e-6 * y[278] * y[983])/(130e-6 + 1e-6 * y[278] * y[983])
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R351 = (13.7 * 1e-6 * y[300] * y[278] * y[95])/(130e-6 + 1e-6 * y[300] * y[278] * y[95])
    R352 = (13.7 * 1e-6 * y[323] * y[278] * y[1378])/(130e-6 + 1e-6 * y[323] * y[278] * y[1378])
    R355 = (13.7 * 1e-6 * y[278] * y[329] * y[173])/(130e-6 + 1e-6 * y[278] * y[329] * y[173])
    R358 = (13.7 * 1e-6 * y[274] * y[278] * y[173])/(130e-6 + 1e-6 * y[274] * y[278] * y[173])
    R370 = (13.7 * 1e-6 * y[920] * y[278])/(130e-6 + 1e-6 * y[920] * y[278])
    R374 = (13.7 * 1e-6 * y[278] * y[345] * y[36])/(130e-6 + 1e-6 * y[278] * y[345] * y[36])
    R379 = (13.7 * 1e-6 * y[278] * y[347] * y[173])/(130e-6 + 1e-6 * y[278] * y[347] * y[173])
    R381 = (13.7 * 1e-6 * y[278] * y[344] * y[173])/(130e-6 + 1e-6 * y[278] * y[344] * y[173])
    R382 = (13.7 * 1e-6 * y[278] * y[352] * y[173])/(130e-6 + 1e-6 * y[278] * y[352] * y[173])
    R385 = (13.7 * 1e-6 * y[278] * y[349] * y[173])/(130e-6 + 1e-6 * y[278] * y[349] * y[173])
    R391 = (13.7 * 1e-6 * y[278] * y[346] * y[36])/(130e-6 + 1e-6 * y[278] * y[346] * y[36])
    R392 = (13.7 * 1e-6 * y[278] * y[16] * y[95])/(130e-6 + 1e-6 * y[278] * y[16] * y[95])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R394 = (13.7 * 1e-6 * y[278] * y[359] * y[173])/(130e-6 + 1e-6 * y[278] * y[359] * y[173])
    R420 = (13.7 * 1e-6 * y[278] * y[99] * y[383])/(130e-6 + 1e-6 * y[278] * y[99] * y[383])
    R421 = (13.7 * 1e-6 * y[278] * y[388] * y[173])/(130e-6 + 1e-6 * y[278] * y[388] * y[173])
    R423 = (13.7 * 1e-6 * y[278] * y[391] * y[173])/(130e-6 + 1e-6 * y[278] * y[391] * y[173])
    R442 = (13.7 * 1e-6 * y[278] * y[99] * y[402])/(130e-6 + 1e-6 * y[278] * y[99] * y[402])
    R444 = (13.7 * 1e-6 * y[278] * y[1399] * y[173])/(130e-6 + 1e-6 * y[278] * y[1399] * y[173])
    R448 = (13.7 * 1e-6 * y[278] * y[408] * y[173])/(130e-6 + 1e-6 * y[278] * y[408] * y[173])
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R451 = (13.7 * 1e-6 * y[278] * y[1401] * y[173])/(130e-6 + 1e-6 * y[278] * y[1401] * y[173])
    R455 = (13.7 * 1e-6 * y[278] * y[793] * y[173])/(130e-6 + 1e-6 * y[278] * y[793] * y[173])
    R456 = (13.7 * 1e-6 * y[278] * y[411] * y[173])/(130e-6 + 1e-6 * y[278] * y[411] * y[173])
    R471 = (13.7 * 1e-6 * y[278] * y[426] * y[173])/(130e-6 + 1e-6 * y[278] * y[426] * y[173])
    R483 = (13.7 * 1e-6 * y[278] * y[99] * y[384])/(130e-6 + 1e-6 * y[278] * y[99] * y[384])
    R487 = (13.7 * 1e-6 * y[278] * y[434] * y[173])/(130e-6 + 1e-6 * y[278] * y[434] * y[173])
    R493 = (13.7 * 1e-6 * y[278] * y[260] * y[1410])/(130e-6 + 1e-6 * y[278] * y[260] * y[1410])
    R495 = (13.7 * 1e-6 * y[278] * y[260] * y[173])/(130e-6 + 1e-6 * y[278] * y[260] * y[173])
    R496 = (13.7 * 1e-6 * y[278] * y[439] * y[173])/(130e-6 + 1e-6 * y[278] * y[439] * y[173])
    R508 = (13.7 * 1e-6 * y[77] * y[278] * y[173])/(130e-6 + 1e-6 * y[77] * y[278] * y[173])
    R525 = (13.7 * 1e-6 * y[278] * y[332])/(130e-6 + 1e-6 * y[278] * y[332])
    R526 = (13.7 * 1e-6 * y[278] * y[979])/(130e-6 + 1e-6 * y[278] * y[979])
    R531 = (13.7 * 1e-6 * y[278] * y[16] * y[249])/(130e-6 + 1e-6 * y[278] * y[16] * y[249])
    R532 = (13.7 * 1e-6 * y[278] * y[980])/(130e-6 + 1e-6 * y[278] * y[980])
    R536 = (13.7 * 1e-6 * y[21] * y[278])/(130e-6 + 1e-6 * y[21] * y[278])
    R539 = (13.7 * 1e-6 * y[22] * y[278])/(130e-6 + 1e-6 * y[22] * y[278])
    R541 = (13.7 * 1e-6 * y[24] * y[278])/(130e-6 + 1e-6 * y[24] * y[278])
    R545 = (13.7 * 1e-6 * y[26] * y[278])/(130e-6 + 1e-6 * y[26] * y[278])
    R546 = (13.7 * 1e-6 * y[27] * y[278])/(130e-6 + 1e-6 * y[27] * y[278])
    R547 = (13.7 * 1e-6 * y[47] * y[278])/(130e-6 + 1e-6 * y[47] * y[278])
    R551 = (13.7 * 1e-6 * y[668] * y[278])/(130e-6 + 1e-6 * y[668] * y[278])
    R553 = (13.7 * 1e-6 * y[48] * y[278])/(130e-6 + 1e-6 * y[48] * y[278])
    R556 = (13.7 * 1e-6 * y[512] * y[278])/(130e-6 + 1e-6 * y[512] * y[278])
    R557 = (13.7 * 1e-6 * y[238] * y[278])/(130e-6 + 1e-6 * y[238] * y[278])
    R566 = (13.7 * 1e-6 * y[278] * y[977])/(130e-6 + 1e-6 * y[278] * y[977])
    R588 = (13.7 * 1e-6 * y[498] * y[278] * y[36])/(130e-6 + 1e-6 * y[498] * y[278] * y[36])
    R601 = (13.7 * 1e-6 * y[278] * y[516] * y[110])/(130e-6 + 1e-6 * y[278] * y[516] * y[110])
    R614 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    R631 = (13.7 * 1e-6 * y[278] * y[981])/(130e-6 + 1e-6 * y[278] * y[981])
    R636 = (13.7 * 1e-6 * y[278] * y[469])/(130e-6 + 1e-6 * y[278] * y[469])
    R652 = (13.7 * 1e-6 * y[278] * y[1442])/(130e-6 + 1e-6 * y[278] * y[1442])
    R710 = (13.7 * 1e-6 * y[278] * y[570] * y[173])/(130e-6 + 1e-6 * y[278] * y[570] * y[173])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R969 = (13.7 * 1e-6 * y[278] * y[99] * y[466] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[466] * y[61])
    R973 = (13.7 * 1e-6 * y[278] * y[99] * y[474] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[474] * y[61])
    R974 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[869])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[869])
    R976 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[870])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[870])
    R978 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[785])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[785])
    R979 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[786])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[786])
    R980 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[871])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[871])
    R983 = (13.7 * 1e-6 * y[278] * y[594] * y[173])/(130e-6 + 1e-6 * y[278] * y[594] * y[173])
    R988 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[872])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[872])
    R989 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[831])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[831])
    R990 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[1011])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[1011])
    R991 = (13.7 * 1e-6 * y[278] * y[598] * y[173])/(130e-6 + 1e-6 * y[278] * y[598] * y[173])
    R1000 = (13.7 * 1e-6 * y[278] * y[603] * y[173])/(130e-6 + 1e-6 * y[278] * y[603] * y[173])
    R1009 = (13.7 * 1e-6 * y[278] * y[606])/(130e-6 + 1e-6 * y[278] * y[606])
    R1015 = (13.7 * 1e-6 * y[278] * y[614] * y[173])/(130e-6 + 1e-6 * y[278] * y[614] * y[173])
    R1019 = (13.7 * 1e-6 * y[278] * y[615] * y[173])/(130e-6 + 1e-6 * y[278] * y[615] * y[173])
    R1033 = (13.7 * 1e-6 * y[278] * y[622] * y[173])/(130e-6 + 1e-6 * y[278] * y[622] * y[173])
    R1042 = (13.7 * 1e-6 * y[278] * y[634])/(130e-6 + 1e-6 * y[278] * y[634])
    R1045 = (13.7 * 1e-6 * y[278] * y[624])/(130e-6 + 1e-6 * y[278] * y[624])
    R1050 = (13.7 * 1e-6 * y[278] * y[629] * y[173])/(130e-6 + 1e-6 * y[278] * y[629] * y[173])
    R1069 = (13.7 * 1e-6 * y[278] * y[644] * y[173])/(130e-6 + 1e-6 * y[278] * y[644] * y[173])
    R1092 = (13.7 * 1e-6 * y[278] * y[284] * y[36])/(130e-6 + 1e-6 * y[278] * y[284] * y[36])
    R1106 = (13.7 * 1e-6 * y[278] * y[670] * y[173])/(130e-6 + 1e-6 * y[278] * y[670] * y[173])
    R1119 = (13.7 * 1e-6 * y[278] * y[674] * y[173])/(130e-6 + 1e-6 * y[278] * y[674] * y[173])
    R1121 = (13.7 * 1e-6 * y[278] * y[682] * y[173])/(130e-6 + 1e-6 * y[278] * y[682] * y[173])
    R1125 = (13.7 * 1e-6 * y[278] * y[681])/(130e-6 + 1e-6 * y[278] * y[681])
    R1129 = (13.7 * 1e-6 * y[278] * y[684] * y[173])/(130e-6 + 1e-6 * y[278] * y[684] * y[173])
    R1133 = (13.7 * 1e-6 * y[278] * y[691] * y[173])/(130e-6 + 1e-6 * y[278] * y[691] * y[173])
    R1143 = (13.7 * 1e-6 * y[278] * y[680] * y[173])/(130e-6 + 1e-6 * y[278] * y[680] * y[173])
    R1160 = (13.7 * 1e-6 * y[278] * y[252] * y[1140])/(130e-6 + 1e-6 * y[278] * y[252] * y[1140])
    R1164 = (13.7 * 1e-6 * y[278] * y[651] * y[173])/(130e-6 + 1e-6 * y[278] * y[651] * y[173])
    R1167 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R1176 = (13.7 * 1e-6 * y[278] * y[723] * y[36])/(130e-6 + 1e-6 * y[278] * y[723] * y[36])
    R1178 = (13.7 * 1e-6 * y[278] * y[110] * y[95])/(130e-6 + 1e-6 * y[278] * y[110] * y[95])
    R1179 = (13.7 * 1e-6 * y[278] * y[710] * y[1604])/(130e-6 + 1e-6 * y[278] * y[710] * y[1604])
    R1180 = (13.7 * 1e-6 * y[278] * y[712] * y[173])/(130e-6 + 1e-6 * y[278] * y[712] * y[173])
    R1187 = (13.7 * 1e-6 * y[278] * y[110] * y[183])/(130e-6 + 1e-6 * y[278] * y[110] * y[183])
    R1189 = (13.7 * 1e-6 * y[278] * y[110])/(130e-6 + 1e-6 * y[278] * y[110])
    R1191 = (13.7 * 1e-6 * y[278] * y[222])/(130e-6 + 1e-6 * y[278] * y[222])
    R1192 = (13.7 * 1e-6 * y[278] * y[260] * y[110])/(130e-6 + 1e-6 * y[278] * y[260] * y[110])
    R1212 = (13.7 * 1e-6 * y[278] * y[110] * y[727])/(130e-6 + 1e-6 * y[278] * y[110] * y[727])
    R1213 = (13.7 * 1e-6 * y[278] * y[724] * y[173])/(130e-6 + 1e-6 * y[278] * y[724] * y[173])
    R1235 = (13.7 * 1e-6 * y[278] * y[741] * y[173])/(130e-6 + 1e-6 * y[278] * y[741] * y[173])
    R1239 = (13.7 * 1e-6 * y[278] * y[749] * y[173])/(130e-6 + 1e-6 * y[278] * y[749] * y[173])
    R1240 = (13.7 * 1e-6 * y[278] * y[746] * y[36])/(130e-6 + 1e-6 * y[278] * y[746] * y[36])
    R1241 = (13.7 * 1e-6 * y[278] * y[1176])/(130e-6 + 1e-6 * y[278] * y[1176])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1252 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R1254 = (13.7 * 1e-6 * y[278] * y[65])/(130e-6 + 1e-6 * y[278] * y[65])
    R1258 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R1282 = (13.7 * 1e-6 * y[278] * y[240])/(130e-6 + 1e-6 * y[278] * y[240])
    R1285 = (13.7 * 1e-6 * y[278] * y[764])/(130e-6 + 1e-6 * y[278] * y[764])
    R1290 = (13.7 * 1e-6 * y[278] * y[261] * y[1613])/(130e-6 + 1e-6 * y[278] * y[261] * y[1613])
    R1293 = (13.7 * 1e-6 * y[278] * y[763] * y[766])/(130e-6 + 1e-6 * y[278] * y[763] * y[766])
    R1301 = (13.7 * 1e-6 * y[278] * y[763] * y[173])/(130e-6 + 1e-6 * y[278] * y[763] * y[173])
    R1302 = (13.7 * 1e-6 * y[278] * y[771] * y[173])/(130e-6 + 1e-6 * y[278] * y[771] * y[173])
    R1304 = (13.7 * 1e-6 * y[278] * y[719] * y[261])/(130e-6 + 1e-6 * y[278] * y[719] * y[261])
    R1310 = (13.7 * 1e-6 * y[278] * y[928])/(130e-6 + 1e-6 * y[278] * y[928])
    R1333 = (13.7 * 1e-6 * y[278] * y[791])/(130e-6 + 1e-6 * y[278] * y[791])
    R1337 = (13.7 * 1e-6 * y[278] * y[792])/(130e-6 + 1e-6 * y[278] * y[792])
    R1346 = (13.7 * 1e-6 * y[1619] * y[278])/(130e-6 + 1e-6 * y[1619] * y[278])
    R1348 = (13.7 * 1e-6 * y[278] * y[242])/(130e-6 + 1e-6 * y[278] * y[242])
    R1349 = (13.7 * 1e-6 * y[278] * y[705])/(130e-6 + 1e-6 * y[278] * y[705])
    R1353 = (13.7 * 1e-6 * y[278] * y[573])/(130e-6 + 1e-6 * y[278] * y[573])
    R1360 = (13.7 * 1e-6 * y[278] * y[173] * y[1622])/(130e-6 + 1e-6 * y[278] * y[173] * y[1622])
    R1366 = (13.7 * 1e-6 * y[278] * y[803] * y[1624])/(130e-6 + 1e-6 * y[278] * y[803] * y[1624])
    R1367 = (13.7 * 1e-6 * y[278] * y[173] * y[807])/(130e-6 + 1e-6 * y[278] * y[173] * y[807])
    R1380 = (13.7 * 1e-6 * y[1626] * y[278])/(130e-6 + 1e-6 * y[1626] * y[278])
    R1391 = (13.7 * 1e-6 * y[508] * y[278])/(130e-6 + 1e-6 * y[508] * y[278])
    R1395 = (13.7 * 1e-6 * y[278] * y[823] * y[1629])/(130e-6 + 1e-6 * y[278] * y[823] * y[1629])
    R1403 = (13.7 * 1e-6 * y[278] * y[1627])/(130e-6 + 1e-6 * y[278] * y[1627])
    R1404 = (13.7 * 1e-6 * y[278] * y[173] * y[824])/(130e-6 + 1e-6 * y[278] * y[173] * y[824])
    R1421 = (13.7 * 1e-6 * y[278] * y[191])/(130e-6 + 1e-6 * y[278] * y[191])
    R1442 = (13.7 * 1e-6 * y[278] * y[173] * y[843])/(130e-6 + 1e-6 * y[278] * y[173] * y[843])
    R1447 = (13.7 * 1e-6 * y[278] * y[173] * y[991])/(130e-6 + 1e-6 * y[278] * y[173] * y[991])
    R1470 = (13.7 * 1e-6 * y[278] * y[852] * y[1638])/(130e-6 + 1e-6 * y[278] * y[852] * y[1638])
    R1477 = (13.7 * 1e-6 * y[278] * y[173] * y[855])/(130e-6 + 1e-6 * y[278] * y[173] * y[855])
    R1481 = (13.7 * 1e-6 * y[278] * y[173] * y[561])/(130e-6 + 1e-6 * y[278] * y[173] * y[561])
    R1487 = (13.7 * 1e-6 * y[278] * y[173] * y[558])/(130e-6 + 1e-6 * y[278] * y[173] * y[558])
    R1490 = (13.7 * 1e-6 * y[278] * y[173] * y[867])/(130e-6 + 1e-6 * y[278] * y[173] * y[867])
    R1536 = (13.7 * 1e-6 * y[278] * y[334] * y[1641])/(130e-6 + 1e-6 * y[278] * y[334] * y[1641])
    R1537 = (13.7 * 1e-6 * y[278] * y[173] * y[875])/(130e-6 + 1e-6 * y[278] * y[173] * y[875])
    R1573 = (13.7 * 1e-6 * y[278] * y[173] * y[107])/(130e-6 + 1e-6 * y[278] * y[173] * y[107])
    R1580 = (13.7 * 1e-6 * y[278] * y[173] * y[890])/(130e-6 + 1e-6 * y[278] * y[173] * y[890])
    R1582 = (13.7 * 1e-6 * y[278] * y[173] * y[892])/(130e-6 + 1e-6 * y[278] * y[173] * y[892])
    R1587 = (13.7 * 1e-6 * y[278] * y[173] * y[893])/(130e-6 + 1e-6 * y[278] * y[173] * y[893])
    R1590 = (13.7 * 1e-6 * y[278] * y[173] * y[896])/(130e-6 + 1e-6 * y[278] * y[173] * y[896])
    R1637 = (13.7 * 1e-6 * y[278] * y[173] * y[326])/(130e-6 + 1e-6 * y[278] * y[173] * y[326])
    R1638 = (13.7 * 1e-6 * y[278] * y[173] * y[923])/(130e-6 + 1e-6 * y[278] * y[173] * y[923])
    R1645 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R1647 = (13.7 * 1e-6 * y[278] * y[114])/(130e-6 + 1e-6 * y[278] * y[114])
    R1648 = (13.7 * 1e-6 * y[278] * y[173] * y[931])/(130e-6 + 1e-6 * y[278] * y[173] * y[931])
    R1651 = (13.7 * 1e-6 * y[278] * y[173] * y[936])/(130e-6 + 1e-6 * y[278] * y[173] * y[936])
    R1652 = (13.7 * 1e-6 * y[278] * y[456])/(130e-6 + 1e-6 * y[278] * y[456])
    R1653 = (13.7 * 1e-6 * y[278] * y[100])/(130e-6 + 1e-6 * y[278] * y[100])
    R1654 = (13.7 * 1e-6 * y[278] * y[483])/(130e-6 + 1e-6 * y[278] * y[483])
    R1655 = (13.7 * 1e-6 * y[278] * y[1173])/(130e-6 + 1e-6 * y[278] * y[1173])
    R1656 = (13.7 * 1e-6 * y[278] * y[457])/(130e-6 + 1e-6 * y[278] * y[457])
    R1657 = (13.7 * 1e-6 * y[278] * y[462])/(130e-6 + 1e-6 * y[278] * y[462])
    R1663 = (13.7 * 1e-6 * y[278] * y[326] * y[1649])/(130e-6 + 1e-6 * y[278] * y[326] * y[1649])
    R1664 = (13.7 * 1e-6 * y[278] * y[173] * y[938])/(130e-6 + 1e-6 * y[278] * y[173] * y[938])
    R1667 = (13.7 * 1e-6 * y[278] * y[173] * y[943])/(130e-6 + 1e-6 * y[278] * y[173] * y[943])
    R1673 = (13.7 * 1e-6 * y[278] * y[173] * y[940])/(130e-6 + 1e-6 * y[278] * y[173] * y[940])
    R1676 = (13.7 * 1e-6 * y[278] * y[173] * y[942])/(130e-6 + 1e-6 * y[278] * y[173] * y[942])
    R1679 = (13.7 * 1e-6 * y[278] * y[36] * y[947])/(130e-6 + 1e-6 * y[278] * y[36] * y[947])
    R1691 = (13.7 * 1e-6 * y[278] * y[36] * y[945])/(130e-6 + 1e-6 * y[278] * y[36] * y[945])
    R1739 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1765 = (13.7 * 1e-6 * y[278] * y[173])/(130e-6 + 1e-6 * y[278] * y[173])
    R1766 = (13.7 * 1e-6 * y[278] * y[173] * y[306])/(130e-6 + 1e-6 * y[278] * y[173] * y[306])
    R1785 = (13.7 * 1e-6 * y[278] * y[173] * y[187])/(130e-6 + 1e-6 * y[278] * y[173] * y[187])
    R1786 = (13.7 * 1e-6 * y[278] * y[173] * y[188])/(130e-6 + 1e-6 * y[278] * y[173] * y[188])
    R1787 = (13.7 * 1e-6 * y[278] * y[173] * y[192])/(130e-6 + 1e-6 * y[278] * y[173] * y[192])
    R1788 = (13.7 * 1e-6 * y[278] * y[173] * y[193])/(130e-6 + 1e-6 * y[278] * y[173] * y[193])
    R1793 = (13.7 * 1e-6 * y[278] * y[173] * y[198])/(130e-6 + 1e-6 * y[278] * y[173] * y[198])
    R1795 = (13.7 * 1e-6 * y[278] * y[173] * y[199])/(130e-6 + 1e-6 * y[278] * y[173] * y[199])
    R1796 = (13.7 * 1e-6 * y[278] * y[173] * y[200])/(130e-6 + 1e-6 * y[278] * y[173] * y[200])
    R1804 = (13.7 * 1e-6 * y[278] * y[99] * y[245])/(130e-6 + 1e-6 * y[278] * y[99] * y[245])
    R1806 = (13.7 * 1e-6 * y[277] * y[278] * y[517])/(130e-6 + 1e-6 * y[277] * y[278] * y[517])
    R1814 = (13.7 * 1e-6 * y[278] * y[173] * y[1014])/(130e-6 + 1e-6 * y[278] * y[173] * y[1014])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    R1859 = (13.7 * 1e-6 * y[278] * y[173] * y[139])/(130e-6 + 1e-6 * y[278] * y[173] * y[139])
    R1860 = (13.7 * 1e-6 * y[278] * y[173] * y[150])/(130e-6 + 1e-6 * y[278] * y[173] * y[150])
    R1861 = (13.7 * 1e-6 * y[278] * y[173] * y[155])/(130e-6 + 1e-6 * y[278] * y[173] * y[155])
    R1863 = (13.7 * 1e-6 * y[278] * y[173] * y[158])/(130e-6 + 1e-6 * y[278] * y[173] * y[158])
    R1864 = (13.7 * 1e-6 * y[278] * y[173] * y[160])/(130e-6 + 1e-6 * y[278] * y[173] * y[160])
    R1865 = (13.7 * 1e-6 * y[278] * y[173] * y[163])/(130e-6 + 1e-6 * y[278] * y[173] * y[163])
    R1868 = (13.7 * 1e-6 * y[752] * y[278])/(130e-6 + 1e-6 * y[752] * y[278])
    R1870 = (13.7 * 1e-6 * y[278] * y[173] * y[164])/(130e-6 + 1e-6 * y[278] * y[173] * y[164])
    R1879 = (13.7 * 1e-6 * y[278] * y[173] * y[1064])/(130e-6 + 1e-6 * y[278] * y[173] * y[1064])
    R1881 = (13.7 * 1e-6 * y[278] * y[266])/(130e-6 + 1e-6 * y[278] * y[266])
    R1882 = (13.7 * 1e-6 * y[278] * y[173] * y[1065])/(130e-6 + 1e-6 * y[278] * y[173] * y[1065])
    R1883 = (13.7 * 1e-6 * y[278] * y[173] * y[1067])/(130e-6 + 1e-6 * y[278] * y[173] * y[1067])
    R1884 = (13.7 * 1e-6 * y[278] * y[173] * y[1069])/(130e-6 + 1e-6 * y[278] * y[173] * y[1069])
    R1885 = (13.7 * 1e-6 * y[278] * y[173] * y[1070])/(130e-6 + 1e-6 * y[278] * y[173] * y[1070])
    R1886 = (13.7 * 1e-6 * y[278] * y[713])/(130e-6 + 1e-6 * y[278] * y[713])
    R1888 = (13.7 * 1e-6 * y[278] * y[173] * y[241])/(130e-6 + 1e-6 * y[278] * y[173] * y[241])
    R1889 = (13.7 * 1e-6 * y[278] * y[173] * y[1075])/(130e-6 + 1e-6 * y[278] * y[173] * y[1075])
    R1890 = (13.7 * 1e-6 * y[278] * y[173] * y[1055])/(130e-6 + 1e-6 * y[278] * y[173] * y[1055])
    R1891 = (13.7 * 1e-6 * y[278] * y[173] * y[1076])/(130e-6 + 1e-6 * y[278] * y[173] * y[1076])
    R1893 = (13.7 * 1e-6 * y[278] * y[173] * y[247])/(130e-6 + 1e-6 * y[278] * y[173] * y[247])
    R1894 = (13.7 * 1e-6 * y[278] * y[173] * y[265])/(130e-6 + 1e-6 * y[278] * y[173] * y[265])
    R1895 = (13.7 * 1e-6 * y[278] * y[173] * y[268])/(130e-6 + 1e-6 * y[278] * y[173] * y[268])
    R1896 = (13.7 * 1e-6 * y[278] * y[173] * y[271])/(130e-6 + 1e-6 * y[278] * y[173] * y[271])
    R1899 = (13.7 * 1e-6 * y[278] * y[173] * y[276])/(130e-6 + 1e-6 * y[278] * y[173] * y[276])
    R1903 = (13.7 * 1e-6 * y[278] * y[173] * y[294])/(130e-6 + 1e-6 * y[278] * y[173] * y[294])
    R1940 = (13.7 * 1e-6 * y[278] * y[173] * y[609])/(130e-6 + 1e-6 * y[278] * y[173] * y[609])
    R1943 = (13.7 * 1e-6 * y[278] * y[1091] * y[1655])/(130e-6 + 1e-6 * y[278] * y[1091] * y[1655])
    R1954 = (13.7 * 1e-6 * y[278] * y[173] * y[1])/(130e-6 + 1e-6 * y[278] * y[173] * y[1])
    R1962 = (13.7 * 1e-6 * y[251] * y[278])/(130e-6 + 1e-6 * y[251] * y[278])
    R1963 = (13.7 * 1e-6 * y[278] * y[1001])/(130e-6 + 1e-6 * y[278] * y[1001])
    R1969 = (13.7 * 1e-6 * y[1056] * y[278])/(130e-6 + 1e-6 * y[1056] * y[278])
    R1993 = (13.7 * 1e-6 * y[278] * y[298])/(130e-6 + 1e-6 * y[278] * y[298])
    R2001 = (13.7 * 1e-6 * y[278] * y[73])/(130e-6 + 1e-6 * y[278] * y[73])
    R2002 = (13.7 * 1e-6 * y[278] * y[37])/(130e-6 + 1e-6 * y[278] * y[37])
    R2011 = (13.7 * 1e-6 * y[278] * y[262] * y[1657])/(130e-6 + 1e-6 * y[278] * y[262] * y[1657])
    R2012 = (13.7 * 1e-6 * y[278] * y[173] * y[1130])/(130e-6 + 1e-6 * y[278] * y[173] * y[1130])
    R2021 = (13.7 * 1e-6 * y[278] * y[173] * y[92])/(130e-6 + 1e-6 * y[278] * y[173] * y[92])
    R2022 = (13.7 * 1e-6 * y[278] * y[227])/(130e-6 + 1e-6 * y[278] * y[227])
    R2032 = (13.7 * 1e-6 * y[278] * y[261] * y[725])/(130e-6 + 1e-6 * y[278] * y[261] * y[725])
    R2033 = (13.7 * 1e-6 * y[278] * y[1146])/(130e-6 + 1e-6 * y[278] * y[1146])
    R2037 = (13.7 * 1e-6 * y[1346] * y[300] * y[278])/(130e-6 + 1e-6 * y[1346] * y[300] * y[278])
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    R2045 = (13.7 * 1e-6 * y[278] * y[173] * y[1128])/(130e-6 + 1e-6 * y[278] * y[173] * y[1128])
    R2054 = (13.7 * 1e-6 * y[278] * y[215])/(130e-6 + 1e-6 * y[278] * y[215])
    R2056 = (13.7 * 1e-6 * y[278] * y[280])/(130e-6 + 1e-6 * y[278] * y[280])
    R2065 = (13.7 * 1e-6 * y[278] * y[173] * y[1161])/(130e-6 + 1e-6 * y[278] * y[173] * y[1161])
    R2070 = (13.7 * 1e-6 * y[278] * y[1163])/(130e-6 + 1e-6 * y[278] * y[1163])
    R2075 = (13.7 * 1e-6 * y[278] * y[36] * y[1120])/(130e-6 + 1e-6 * y[278] * y[36] * y[1120])
    R2078 = (13.7 * 1e-6 * y[278] * y[173] * y[1171])/(130e-6 + 1e-6 * y[278] * y[173] * y[1171])
    R2096 = (13.7 * 1e-6 * y[278] * y[646])/(130e-6 + 1e-6 * y[278] * y[646])
    R2102 = (13.7 * 1e-6 * y[278] * y[832])/(130e-6 + 1e-6 * y[278] * y[832])
    R2108 = (13.7 * 1e-6 * y[278] * y[1179])/(130e-6 + 1e-6 * y[278] * y[1179])
    R2109 = (13.7 * 1e-6 * y[278] * y[1031])/(130e-6 + 1e-6 * y[278] * y[1031])
    R2113 = (13.7 * 1e-6 * y[278] * y[928] * y[173] * y[794])/(130e-6 + 1e-6 * y[278] * y[928] * y[173] * y[794])
    R2128 = (13.7 * 1e-6 * y[278] * y[1191])/(130e-6 + 1e-6 * y[278] * y[1191])
    R2131 = (13.7 * 1e-6 * y[278] * y[173] * y[1660])/(130e-6 + 1e-6 * y[278] * y[173] * y[1660])
    R2132 = (13.7 * 1e-6 * y[278] * y[36] * y[500])/(130e-6 + 1e-6 * y[278] * y[36] * y[500])
    R2136 = (13.7 * 1e-6 * y[278] * y[1172])/(130e-6 + 1e-6 * y[278] * y[1172])
    R2140 = (13.7 * 1e-6 * y[278] * y[285])/(130e-6 + 1e-6 * y[278] * y[285])
    R2143 = (13.7 * 1e-6 * y[278] * y[500] * y[1661])/(130e-6 + 1e-6 * y[278] * y[500] * y[1661])
    R2144 = (13.7 * 1e-6 * y[278] * y[500] * y[1662])/(130e-6 + 1e-6 * y[278] * y[500] * y[1662])
    R2146 = (13.7 * 1e-6 * y[278] * y[236])/(130e-6 + 1e-6 * y[278] * y[236])
    R2153 = (13.7 * 1e-6 * y[278] * y[868])/(130e-6 + 1e-6 * y[278] * y[868])
    R2165 = (13.7 * 1e-6 * y[278] * y[1204])/(130e-6 + 1e-6 * y[278] * y[1204])
    R2174 = (13.7 * 1e-6 * y[278] * y[173] * y[1210])/(130e-6 + 1e-6 * y[278] * y[173] * y[1210])
    R2189 = (13.7 * 1e-6 * y[278] * y[173] * y[1219])/(130e-6 + 1e-6 * y[278] * y[173] * y[1219])
    R2190 = (13.7 * 1e-6 * y[278] * y[1216] * y[1663])/(130e-6 + 1e-6 * y[278] * y[1216] * y[1663])
    R2194 = (13.7 * 1e-6 * y[278] * y[173] * y[1167])/(130e-6 + 1e-6 * y[278] * y[173] * y[1167])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R2206 = (13.7 * 1e-6 * y[278] * y[99] * y[1224])/(130e-6 + 1e-6 * y[278] * y[99] * y[1224])
    R2212 = (13.7 * 1e-6 * y[278] * y[954] * y[95])/(130e-6 + 1e-6 * y[278] * y[954] * y[95])
    R2221 = (13.7 * 1e-6 * y[278] * y[99] * y[290])/(130e-6 + 1e-6 * y[278] * y[99] * y[290])
    R2225 = (13.7 * 1e-6 * y[278] * y[173] * y[1235])/(130e-6 + 1e-6 * y[278] * y[173] * y[1235])
    R2228 = (13.7 * 1e-6 * y[278] * y[975])/(130e-6 + 1e-6 * y[278] * y[975])
    R2231 = (13.7 * 1e-6 * y[278] * y[1209])/(130e-6 + 1e-6 * y[278] * y[1209])
    R2232 = (13.7 * 1e-6 * y[278] * y[1233])/(130e-6 + 1e-6 * y[278] * y[1233])
    R2235 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    R2238 = (13.7 * 1e-6 * y[278] * y[173] * y[1211])/(130e-6 + 1e-6 * y[278] * y[173] * y[1211])
    R2251 = (13.7 * 1e-6 * y[278] * y[173] * y[1246])/(130e-6 + 1e-6 * y[278] * y[173] * y[1246])
    R2253 = (13.7 * 1e-6 * y[278] * y[173] * y[953] * y[983])/(130e-6 + 1e-6 * y[278] * y[173] * y[953] * y[983])
    R2268 = (13.7 * 1e-6 * y[278] * y[1665] * y[1108])/(130e-6 + 1e-6 * y[278] * y[1665] * y[1108])
    R2275 = (13.7 * 1e-6 * y[278] * y[173] * y[1256])/(130e-6 + 1e-6 * y[278] * y[173] * y[1256])
    R2285 = (13.7 * 1e-6 * y[278] * y[173] * y[1261])/(130e-6 + 1e-6 * y[278] * y[173] * y[1261])
    R2291 = (13.7 * 1e-6 * y[278] * y[536])/(130e-6 + 1e-6 * y[278] * y[536])
    R2297 = (13.7 * 1e-6 * y[278] * y[1666] * y[1266])/(130e-6 + 1e-6 * y[278] * y[1666] * y[1266])
    R2308 = (13.7 * 1e-6 * y[443] * y[278] * y[1290])/(130e-6 + 1e-6 * y[443] * y[278] * y[1290])
    R2310 = (13.7 * 1e-6 * y[278] * y[1667] * y[1272])/(130e-6 + 1e-6 * y[278] * y[1667] * y[1272])
    R2311 = (13.7 * 1e-6 * y[278] * y[173] * y[1276])/(130e-6 + 1e-6 * y[278] * y[173] * y[1276])
    R2334 = (13.7 * 1e-6 * y[278] * y[1282])/(130e-6 + 1e-6 * y[278] * y[1282])
    R2335 = (13.7 * 1e-6 * y[278] * y[876])/(130e-6 + 1e-6 * y[278] * y[876])
    R2338 = (13.7 * 1e-6 * y[278] * y[173] * y[1285])/(130e-6 + 1e-6 * y[278] * y[173] * y[1285])
    R2341 = (13.7 * 1e-6 * y[278] * y[173] * y[1287])/(130e-6 + 1e-6 * y[278] * y[173] * y[1287])
    R2344 = (13.7 * 1e-6 * y[278] * y[173] * y[1286])/(130e-6 + 1e-6 * y[278] * y[173] * y[1286])
    R2348 = (13.7 * 1e-6 * y[278] * y[1606] * y[1291])/(130e-6 + 1e-6 * y[278] * y[1606] * y[1291])
    R2349 = (13.7 * 1e-6 * y[235] * y[278] * y[1292])/(130e-6 + 1e-6 * y[235] * y[278] * y[1292])
    R2369 = (13.7 * 1e-6 * y[218] * y[278] * y[1269])/(130e-6 + 1e-6 * y[218] * y[278] * y[1269])
    R2373 = (13.7 * 1e-6 * y[34] * y[278] * y[1292])/(130e-6 + 1e-6 * y[34] * y[278] * y[1292])
    R2375 = (13.7 * 1e-6 * y[63] * y[278] * y[1292])/(130e-6 + 1e-6 * y[63] * y[278] * y[1292])
    R2376 = (13.7 * 1e-6 * y[278] * y[90])/(130e-6 + 1e-6 * y[278] * y[90])
    return (R286 + R332 + R1975 + R2117) - (R32 + R46 + R56 + R63 + R64 + R69 + R71 + R72 + R74 + R75 + R76 + R78 + R79 + R85 + R90 + R120 + R121 + R122 + R134 + R136 + R139 + R141 + R143 + R146 + R147 + R166 + R192 + R199 + R200 + R201 + R211 + R212 + R214 + R216 + R230 + R231 + R243 + R251 + R253 + R260 + R269 + R272 + R273 + R274 + R277 + R282 + R283 + R293 + R298 + R301 + R304 + R307 + R308 + R323 + R324 + R325 + R329 + R330 + R331 + R349 + R351 + R352 + R355 + R358 + R370 + R374 + R379 + R381 + R382 + R385 + R391 + R392 + R393 + R394 + R420 + R421 + R423 + R442 + R444 + R448 + R449 + R451 + R455 + R456 + R471 + R483 + R487 + R493 + R495 + R496 + R508 + R525 + R526 + R531 + R532 + R536 + R539 + R541 + R545 + R546 + R547 + R551 + R553 + R556 + R557 + R566 + R588 + R601 + R614 + R631 + R636 + R652 + R710 + R926 + R969 + R973 + R974 + R976 + R978 + R979 + R980 + R983 + R988 + R989 + R990 + R991 + R1000 + R1009 + R1015 + R1019 + R1033 + R1042 + R1045 + R1050 + R1069 + R1092 + R1106 + R1119 + R1121 + R1125 + R1129 + R1133 + R1143 + R1160 + R1164 + R1167 + R1176 + R1178 + R1179 + R1180 + R1187 + R1189 + R1191 + R1192 + R1212 + R1213 + R1235 + R1239 + R1240 + R1241 + R1246 + R1252 + R1254 + R1258 + R1282 + R1285 + R1290 + R1293 + R1301 + R1302 + R1304 + R1310 + R1333 + R1337 + R1346 + R1348 + R1349 + R1353 + R1360 + R1366 + R1367 + R1380 + R1391 + R1395 + R1403 + R1404 + R1421 + R1442 + R1447 + R1470 + R1477 + R1481 + R1487 + R1490 + R1536 + R1537 + R1573 + R1580 + R1582 + R1587 + R1590 + R1637 + R1638 + R1645 + R1647 + R1648 + R1651 + R1652 + R1653 + R1654 + R1655 + R1656 + R1657 + R1663 + R1664 + R1667 + R1673 + R1676 + R1679 + R1691 + R1739 + R1765 + R1766 + R1785 + R1786 + R1787 + R1788 + R1793 + R1795 + R1796 + R1804 + R1806 + R1814 + R1841 + R1852 + R1856 + R1859 + R1860 + R1861 + R1863 + R1864 + R1865 + R1868 + R1870 + R1879 + R1881 + R1882 + R1883 + R1884 + R1885 + R1886 + R1888 + R1889 + R1890 + R1891 + R1893 + R1894 + R1895 + R1896 + R1899 + R1903 + R1940 + R1943 + R1954 + R1962 + R1963 + R1969 + R1993 + R2001 + R2002 + R2011 + R2012 + R2021 + R2022 + R2032 + R2033 + R2037 + R2042 + R2045 + R2054 + R2056 + R2065 + R2070 + R2075 + R2078 + R2096 + R2102 + R2108 + R2109 + R2113 + R2128 + R2131 + R2132 + R2136 + R2140 + R2143 + R2144 + R2146 + R2153 + R2165 + R2174 + R2189 + R2190 + R2194 + R2205 + R2206 + R2212 + R2221 + R2225 + R2228 + R2231 + R2232 + R2235 + R2238 + R2251 + R2253 + R2268 + R2275 + R2285 + R2291 + R2297 + R2308 + R2310 + R2311 + R2334 + R2335 + R2338 + R2341 + R2344 + R2348 + R2349 + R2369 + R2373 + R2375 + R2376)
 
def m_5aprbu_c(t, y):
    R287 = (13.7 * 1e-6 * y[515] * y[36] * y[201])/(130e-6 + 1e-6 * y[515] * y[36] * y[201])
    R1957 = (13.7 * 1e-6 * y[279] * y[173])/(130e-6 + 1e-6 * y[279] * y[173])
    return (R287) - (R1957)
 
def m_rbl__L_c(t, y):
    R288 = (13.7 * 1e-6 * y[297])/(130e-6 + 1e-6 * y[297])
    R2056 = (13.7 * 1e-6 * y[278] * y[280])/(130e-6 + 1e-6 * y[278] * y[280])
    return (R288) - (R2056)
 
def m_arbtn_c(t, y):
    R289 = (13.7 * 1e-6 * y[291] * y[136])/(130e-6 + 1e-6 * y[291] * y[136])
    R290 = (13.7 * 1e-6 * y[291] * y[655])/(130e-6 + 1e-6 * y[291] * y[655])
    R291 = (13.7 * 1e-6 * y[291] * y[649])/(130e-6 + 1e-6 * y[291] * y[649])
    R303 = (13.7 * 1e-6 * y[281] * y[61])/(130e-6 + 1e-6 * y[281] * y[61])
    return (R289 + R290 + R291) - (R303)
 
def m_fad_c(t, y):
    R289 = (13.7 * 1e-6 * y[291] * y[136])/(130e-6 + 1e-6 * y[291] * y[136])
    R463 = (13.7 * 1e-6 * y[422] * y[136])/(130e-6 + 1e-6 * y[422] * y[136])
    R1002 = (13.7 * 1e-6 * y[136] * y[612])/(130e-6 + 1e-6 * y[136] * y[612])
    R1018 = (13.7 * 1e-6 * y[136] * y[566])/(130e-6 + 1e-6 * y[136] * y[566])
    R1026 = (13.7 * 1e-6 * y[136] * y[619])/(130e-6 + 1e-6 * y[136] * y[619])
    R1047 = (13.7 * 1e-6 * y[136] * y[626])/(130e-6 + 1e-6 * y[136] * y[626])
    R1062 = (13.7 * 1e-6 * y[136] * y[640])/(130e-6 + 1e-6 * y[136] * y[640])
    R1092 = (13.7 * 1e-6 * y[278] * y[284] * y[36])/(130e-6 + 1e-6 * y[278] * y[284] * y[36])
    R118 = (13.7 * 1e-6 * y[327] * y[282])/(130e-6 + 1e-6 * y[327] * y[282])
    R119 = (13.7 * 1e-6 * y[282] * y[596])/(130e-6 + 1e-6 * y[282] * y[596])
    R126 = (13.7 * 1e-6 * y[282] * y[597])/(130e-6 + 1e-6 * y[282] * y[597])
    R127 = (13.7 * 1e-6 * y[585] * y[282])/(130e-6 + 1e-6 * y[585] * y[282])
    R128 = (13.7 * 1e-6 * y[586] * y[282])/(130e-6 + 1e-6 * y[586] * y[282])
    R129 = (13.7 * 1e-6 * y[282] * y[587])/(130e-6 + 1e-6 * y[282] * y[587])
    R130 = (13.7 * 1e-6 * y[282] * y[589])/(130e-6 + 1e-6 * y[282] * y[589])
    R131 = (13.7 * 1e-6 * y[282] * y[591])/(130e-6 + 1e-6 * y[282] * y[591])
    R527 = (13.7 * 1e-6 * y[45] * y[282] * y[173])/(130e-6 + 1e-6 * y[45] * y[282] * y[173])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R993 = (13.7 * 1e-6 * y[282] * y[36] * y[113])/(130e-6 + 1e-6 * y[282] * y[36] * y[113])
    R995 = (13.7 * 1e-6 * y[282] * y[36] * y[201])/(130e-6 + 1e-6 * y[282] * y[36] * y[201])
    R2044 = (13.7 * 1e-6 * y[282] * y[262])/(130e-6 + 1e-6 * y[282] * y[262])
    return (R289 + R463 + R1002 + R1018 + R1026 + R1047 + R1062 + R1092) - (R118 + R119 + R126 + R127 + R128 + R129 + R130 + R131 + R527 + R926 + R993 + R995 + R2044)
 
def m_fe2_c(t, y):
    R289 = (13.7 * 1e-6 * y[291] * y[136])/(130e-6 + 1e-6 * y[291] * y[136])
    R290 = (13.7 * 1e-6 * y[291] * y[655])/(130e-6 + 1e-6 * y[291] * y[655])
    R291 = (13.7 * 1e-6 * y[291] * y[649])/(130e-6 + 1e-6 * y[291] * y[649])
    R463 = (13.7 * 1e-6 * y[422] * y[136])/(130e-6 + 1e-6 * y[422] * y[136])
    R464 = (13.7 * 1e-6 * y[422] * y[655])/(130e-6 + 1e-6 * y[422] * y[655])
    R465 = (13.7 * 1e-6 * y[422] * y[649])/(130e-6 + 1e-6 * y[422] * y[649])
    R983 = (13.7 * 1e-6 * y[278] * y[594] * y[173])/(130e-6 + 1e-6 * y[278] * y[594] * y[173])
    R984 = (13.7 * 1e-6 * y[594] * y[61])/(130e-6 + 1e-6 * y[594] * y[61])
    R987 = (13.7 * 1e-6 * y[594])/(130e-6 + 1e-6 * y[594])
    R1002 = (13.7 * 1e-6 * y[136] * y[612])/(130e-6 + 1e-6 * y[136] * y[612])
    R1003 = (13.7 * 1e-6 * y[612] * y[655])/(130e-6 + 1e-6 * y[612] * y[655])
    R1012 = (13.7 * 1e-6 * y[612] * y[649])/(130e-6 + 1e-6 * y[612] * y[649])
    R1018 = (13.7 * 1e-6 * y[136] * y[566])/(130e-6 + 1e-6 * y[136] * y[566])
    R1026 = (13.7 * 1e-6 * y[136] * y[619])/(130e-6 + 1e-6 * y[136] * y[619])
    R1027 = (13.7 * 1e-6 * y[619] * y[655])/(130e-6 + 1e-6 * y[619] * y[655])
    R1028 = (13.7 * 1e-6 * y[619] * y[649])/(130e-6 + 1e-6 * y[619] * y[649])
    R1047 = (13.7 * 1e-6 * y[136] * y[626])/(130e-6 + 1e-6 * y[136] * y[626])
    R1048 = (13.7 * 1e-6 * y[626] * y[655])/(130e-6 + 1e-6 * y[626] * y[655])
    R1049 = (13.7 * 1e-6 * y[626] * y[649])/(130e-6 + 1e-6 * y[626] * y[649])
    R1062 = (13.7 * 1e-6 * y[136] * y[640])/(130e-6 + 1e-6 * y[136] * y[640])
    R1063 = (13.7 * 1e-6 * y[640] * y[655])/(130e-6 + 1e-6 * y[640] * y[655])
    R1064 = (13.7 * 1e-6 * y[640] * y[649])/(130e-6 + 1e-6 * y[640] * y[649])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R985 = (13.7 * 1e-6 * y[283] * y[61])/(130e-6 + 1e-6 * y[283] * y[61])
    R1011 = (13.7 * 1e-6 * y[283] * y[1131])/(130e-6 + 1e-6 * y[283] * y[1131])
    R2160 = (13.7 * 1e-6 * y[283] * y[1202])/(130e-6 + 1e-6 * y[283] * y[1202])
    return (R289 + R290 + R291 + R463 + R464 + R465 + R983 + R984 + R987 + R1002 + R1003 + R1012 + R1018 + R1026 + R1027 + R1028 + R1047 + R1048 + R1049 + R1062 + R1063 + R1064) - (R926 + R985 + R1011 + R2160)
 
def m_fmn_c(t, y):
    R290 = (13.7 * 1e-6 * y[291] * y[655])/(130e-6 + 1e-6 * y[291] * y[655])
    R464 = (13.7 * 1e-6 * y[422] * y[655])/(130e-6 + 1e-6 * y[422] * y[655])
    R981 = (13.7 * 1e-6 * y[328] * y[655] * y[335])/(130e-6 + 1e-6 * y[328] * y[655] * y[335])
    R982 = (13.7 * 1e-6 * y[655] * y[335] * y[1230])/(130e-6 + 1e-6 * y[655] * y[335] * y[1230])
    R1003 = (13.7 * 1e-6 * y[612] * y[655])/(130e-6 + 1e-6 * y[612] * y[655])
    R1022 = (13.7 * 1e-6 * y[655] * y[841] * y[335])/(130e-6 + 1e-6 * y[655] * y[841] * y[335])
    R1023 = (13.7 * 1e-6 * y[655] * y[1053] * y[335])/(130e-6 + 1e-6 * y[655] * y[1053] * y[335])
    R1027 = (13.7 * 1e-6 * y[619] * y[655])/(130e-6 + 1e-6 * y[619] * y[655])
    R1030 = (13.7 * 1e-6 * y[569] * y[655] * y[335])/(130e-6 + 1e-6 * y[569] * y[655] * y[335])
    R1048 = (13.7 * 1e-6 * y[626] * y[655])/(130e-6 + 1e-6 * y[626] * y[655])
    R1063 = (13.7 * 1e-6 * y[640] * y[655])/(130e-6 + 1e-6 * y[640] * y[655])
    R2140 = (13.7 * 1e-6 * y[278] * y[285])/(130e-6 + 1e-6 * y[278] * y[285])
    R1092 = (13.7 * 1e-6 * y[278] * y[284] * y[36])/(130e-6 + 1e-6 * y[278] * y[284] * y[36])
    R1093 = (13.7 * 1e-6 * y[284] * y[36] * y[113])/(130e-6 + 1e-6 * y[284] * y[36] * y[113])
    R1094 = (13.7 * 1e-6 * y[284] * y[36] * y[201])/(130e-6 + 1e-6 * y[284] * y[36] * y[201])
    return (R290 + R464 + R981 + R982 + R1003 + R1022 + R1023 + R1027 + R1030 + R1048 + R1063 + R2140) - (R1092 + R1093 + R1094)
 
def m_ribflv_c(t, y):
    R291 = (13.7 * 1e-6 * y[291] * y[649])/(130e-6 + 1e-6 * y[291] * y[649])
    R465 = (13.7 * 1e-6 * y[422] * y[649])/(130e-6 + 1e-6 * y[422] * y[649])
    R1012 = (13.7 * 1e-6 * y[612] * y[649])/(130e-6 + 1e-6 * y[612] * y[649])
    R1028 = (13.7 * 1e-6 * y[619] * y[649])/(130e-6 + 1e-6 * y[619] * y[649])
    R1049 = (13.7 * 1e-6 * y[626] * y[649])/(130e-6 + 1e-6 * y[626] * y[649])
    R1064 = (13.7 * 1e-6 * y[640] * y[649])/(130e-6 + 1e-6 * y[640] * y[649])
    R2142 = (13.7 * 1e-6 * y[1193])/(130e-6 + 1e-6 * y[1193])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1083 = (13.7 * 1e-6 * y[36] * y[201] * y[285])/(130e-6 + 1e-6 * y[36] * y[201] * y[285])
    R1085 = (13.7 * 1e-6 * y[36] * y[113] * y[285])/(130e-6 + 1e-6 * y[36] * y[113] * y[285])
    R2140 = (13.7 * 1e-6 * y[278] * y[285])/(130e-6 + 1e-6 * y[278] * y[285])
    return (R291 + R465 + R1012 + R1028 + R1049 + R1064 + R2142) - (R926 + R1083 + R1085 + R2140)
 
def m_cbasp_c(t, y):
    R292 = (13.7 * 1e-6 * y[300] * y[353])/(130e-6 + 1e-6 * y[300] * y[353])
    R609 = (13.7 * 1e-6 * y[1430] * y[173])/(130e-6 + 1e-6 * y[1430] * y[173])
    return (R292 + R609) - (0)
 
def m_4pasp_c(t, y):
    R293 = (13.7 * 1e-6 * y[300] * y[278])/(130e-6 + 1e-6 * y[300] * y[278])
    R336 = (13.7 * 1e-6 * y[821] * y[6] * y[37])/(130e-6 + 1e-6 * y[821] * y[6] * y[37])
    return (R293 + R336) - (0)
 
def m_iasp_c(t, y):
    R294 = (13.7 * 1e-6 * y[300] * y[444])/(130e-6 + 1e-6 * y[300] * y[444])
    R295 = (13.7 * 1e-6 * y[300] * y[441])/(130e-6 + 1e-6 * y[300] * y[441])
    R296 = (13.7 * 1e-6 * y[300] * y[153])/(130e-6 + 1e-6 * y[300] * y[153])
    R297 = (13.7 * 1e-6 * y[300] * y[335])/(130e-6 + 1e-6 * y[300] * y[335])
    R2127 = (13.7 * 1e-6 * y[492] * y[288])/(130e-6 + 1e-6 * y[492] * y[288])
    return (R294 + R295 + R296 + R297) - (R2127)
 
def m_q8h2_c(t, y):
    R294 = (13.7 * 1e-6 * y[300] * y[444])/(130e-6 + 1e-6 * y[300] * y[444])
    R572 = (13.7 * 1e-6 * y[1022] * y[921])/(130e-6 + 1e-6 * y[1022] * y[921])
    R604 = (13.7 * 1e-6 * y[1430] * y[444])/(130e-6 + 1e-6 * y[1430] * y[444])
    R617 = (13.7 * 1e-6 * y[1433] * y[444])/(130e-6 + 1e-6 * y[1433] * y[444])
    R1020 = (13.7 * 1e-6 * y[620] * y[36] * y[444])/(130e-6 + 1e-6 * y[620] * y[36] * y[444])
    R1113 = (13.7 * 1e-6 * y[743] * y[444])/(130e-6 + 1e-6 * y[743] * y[444])
    R1198 = (13.7 * 1e-6 * y[651] * y[406] * y[444])/(130e-6 + 1e-6 * y[651] * y[406] * y[444])
    R1274 = (13.7 * 1e-6 * y[702] * y[444])/(130e-6 + 1e-6 * y[702] * y[444])
    R1424 = (13.7 * 1e-6 * y[645] * y[36] * y[444])/(130e-6 + 1e-6 * y[645] * y[36] * y[444])
    R1468 = (13.7 * 1e-6 * y[106] * y[444])/(130e-6 + 1e-6 * y[106] * y[444])
    R1549 = (13.7 * 1e-6 * y[846] * y[444])/(130e-6 + 1e-6 * y[846] * y[444])
    R1615 = (13.7 * 1e-6 * y[643] * y[444])/(130e-6 + 1e-6 * y[643] * y[444])
    R1968 = (13.7 * 1e-6 * y[173] * y[92] * y[444])/(130e-6 + 1e-6 * y[173] * y[92] * y[444])
    R2062 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2111 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2155 = (13.7 * 1e-6 * y[36] * y[201] * y[444])/(130e-6 + 1e-6 * y[36] * y[201] * y[444])
    R2215 = (13.7 * 1e-6 * y[444] * y[290])/(130e-6 + 1e-6 * y[444] * y[290])
    R507 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R509 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R1704 = (13.7 * 1e-6 * y[964] * y[289])/(130e-6 + 1e-6 * y[964] * y[289])
    R1706 = (13.7 * 1e-6 * y[36] * y[962] * y[289])/(130e-6 + 1e-6 * y[36] * y[962] * y[289])
    R1781 = (13.7 * 1e-6 * y[61] * y[960] * y[289])/(130e-6 + 1e-6 * y[61] * y[960] * y[289])
    R2123 = (13.7 * 1e-6 * y[335] * y[289])/(130e-6 + 1e-6 * y[335] * y[289])
    return (R294 + R572 + R604 + R617 + R1020 + R1113 + R1198 + R1274 + R1424 + R1468 + R1549 + R1615 + R1968 + R2062 + R2111 + R2155 + R2215) - (R507 + R509 + R1704 + R1706 + R1781 + R2123)
 
def m_succ_c(t, y):
    R296 = (13.7 * 1e-6 * y[300] * y[153])/(130e-6 + 1e-6 * y[300] * y[153])
    R1039 = (13.7 * 1e-6 * y[153] * y[250])/(130e-6 + 1e-6 * y[153] * y[250])
    R1041 = (13.7 * 1e-6 * y[507] * y[153])/(130e-6 + 1e-6 * y[507] * y[153])
    R1374 = (13.7 * 1e-6 * y[173] * y[817])/(130e-6 + 1e-6 * y[173] * y[817])
    R1376 = (13.7 * 1e-6 * y[174])/(130e-6 + 1e-6 * y[174])
    R1624 = (13.7 * 1e-6 * y[948])/(130e-6 + 1e-6 * y[948])
    R2017 = (13.7 * 1e-6 * y[153] * y[427])/(130e-6 + 1e-6 * y[153] * y[427])
    R2124 = (13.7 * 1e-6 * y[173] * y[1659])/(130e-6 + 1e-6 * y[173] * y[1659])
    R2151 = (13.7 * 1e-6 * y[173] * y[1197])/(130e-6 + 1e-6 * y[173] * y[1197])
    R2166 = (13.7 * 1e-6 * y[260] * y[829])/(130e-6 + 1e-6 * y[260] * y[829])
    R2199 = (13.7 * 1e-6 * y[173] * y[236] * y[111])/(130e-6 + 1e-6 * y[173] * y[236] * y[111])
    R2200 = (13.7 * 1e-6 * y[173] * y[6] * y[111])/(130e-6 + 1e-6 * y[173] * y[6] * y[111])
    R2208 = (13.7 * 1e-6 * y[61] * y[358])/(130e-6 + 1e-6 * y[61] * y[358])
    R2211 = (13.7 * 1e-6 * y[61] * y[358])/(130e-6 + 1e-6 * y[61] * y[358])
    R2250 = (13.7 * 1e-6 * y[213] * y[335] * y[1244])/(130e-6 + 1e-6 * y[213] * y[335] * y[1244])
    R400 = (13.7 * 1e-6 * y[361] * y[290])/(130e-6 + 1e-6 * y[361] * y[290])
    R1994 = (13.7 * 1e-6 * y[140] * y[290])/(130e-6 + 1e-6 * y[140] * y[290])
    R2213 = (13.7 * 1e-6 * y[61] * y[290])/(130e-6 + 1e-6 * y[61] * y[290])
    R2215 = (13.7 * 1e-6 * y[444] * y[290])/(130e-6 + 1e-6 * y[444] * y[290])
    R2219 = (13.7 * 1e-6 * y[647] * y[290])/(130e-6 + 1e-6 * y[647] * y[290])
    R2221 = (13.7 * 1e-6 * y[278] * y[99] * y[290])/(130e-6 + 1e-6 * y[278] * y[99] * y[290])
    R2243 = (13.7 * 1e-6 * y[290] * y[1239])/(130e-6 + 1e-6 * y[290] * y[1239])
    return (R296 + R1039 + R1041 + R1374 + R1376 + R1624 + R2017 + R2124 + R2151 + R2166 + R2199 + R2200 + R2208 + R2211 + R2250) - (R400 + R1994 + R2213 + R2215 + R2219 + R2221 + R2243)
 
def m_arbtn_fe3_c(t, y):
    R298 = (13.7 * 1e-6 * y[295] * y[278] * y[173])/(130e-6 + 1e-6 * y[295] * y[278] * y[173])
    R289 = (13.7 * 1e-6 * y[291] * y[136])/(130e-6 + 1e-6 * y[291] * y[136])
    R290 = (13.7 * 1e-6 * y[291] * y[655])/(130e-6 + 1e-6 * y[291] * y[655])
    R291 = (13.7 * 1e-6 * y[291] * y[649])/(130e-6 + 1e-6 * y[291] * y[649])
    return (R298) - (R289 + R290 + R291)
 
def m_arbtn_fe3_e(t, y):
    R299 = (13.7 * 1e-6 * y[293] * y[1365])/(130e-6 + 1e-6 * y[293] * y[1365])
    R302 = (13.7 * 1e-6 * y[292] * y[61])/(130e-6 + 1e-6 * y[292] * y[61])
    R731 = (13.7 * 1e-6 * y[292])/(130e-6 + 1e-6 * y[292])
    return (R299) - (R302 + R731)
 
def m_arbtn_e(t, y):
    R300 = (13.7 * 1e-6 * y[296] * y[61])/(130e-6 + 1e-6 * y[296] * y[61])
    R299 = (13.7 * 1e-6 * y[293] * y[1365])/(130e-6 + 1e-6 * y[293] * y[1365])
    R726 = (13.7 * 1e-6 * y[293])/(130e-6 + 1e-6 * y[293])
    return (R300) - (R299 + R726)
 
def m_pg181_c(t, y):
    R301 = (13.7 * 1e-6 * y[237] * y[278] * y[583])/(130e-6 + 1e-6 * y[237] * y[278] * y[583])
    R1914 = (13.7 * 1e-6 * y[173] * y[1076])/(130e-6 + 1e-6 * y[173] * y[1076])
    R378 = (13.7 * 1e-6 * y[921] * y[294])/(130e-6 + 1e-6 * y[921] * y[294])
    R1569 = (13.7 * 1e-6 * y[130] * y[294])/(130e-6 + 1e-6 * y[130] * y[294])
    R1584 = (13.7 * 1e-6 * y[237] * y[294])/(130e-6 + 1e-6 * y[237] * y[294])
    R1903 = (13.7 * 1e-6 * y[278] * y[173] * y[294])/(130e-6 + 1e-6 * y[278] * y[173] * y[294])
    return (R301 + R1914) - (R378 + R1569 + R1584 + R1903)
 
def m_arbtn_fe3_p(t, y):
    R302 = (13.7 * 1e-6 * y[292] * y[61])/(130e-6 + 1e-6 * y[292] * y[61])
    R298 = (13.7 * 1e-6 * y[295] * y[278] * y[173])/(130e-6 + 1e-6 * y[295] * y[278] * y[173])
    return (R302) - (R298)
 
def m_arbtn_p(t, y):
    R303 = (13.7 * 1e-6 * y[281] * y[61])/(130e-6 + 1e-6 * y[281] * y[61])
    R300 = (13.7 * 1e-6 * y[296] * y[61])/(130e-6 + 1e-6 * y[296] * y[61])
    return (R303) - (R300)
 
def m_arab__L_c(t, y):
    R304 = (13.7 * 1e-6 * y[301] * y[278] * y[173])/(130e-6 + 1e-6 * y[301] * y[278] * y[173])
    R309 = (13.7 * 1e-6 * y[301] * y[61])/(130e-6 + 1e-6 * y[301] * y[61])
    R288 = (13.7 * 1e-6 * y[297])/(130e-6 + 1e-6 * y[297])
    R310 = (13.7 * 1e-6 * y[297] * y[61])/(130e-6 + 1e-6 * y[297] * y[61])
    return (R304 + R309) - (R288 + R310)
 
def m_oaa_c(t, y):
    R306 = (13.7 * 1e-6 * y[213] * y[300])/(130e-6 + 1e-6 * y[213] * y[300])
    R399 = (13.7 * 1e-6 * y[357])/(130e-6 + 1e-6 * y[357])
    R1614 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1615 = (13.7 * 1e-6 * y[643] * y[444])/(130e-6 + 1e-6 * y[643] * y[444])
    R1616 = (13.7 * 1e-6 * y[643] * y[441])/(130e-6 + 1e-6 * y[643] * y[441])
    R1991 = (13.7 * 1e-6 * y[16] * y[173] * y[563])/(130e-6 + 1e-6 * y[16] * y[173] * y[563])
    R2242 = (13.7 * 1e-6 * y[1238])/(130e-6 + 1e-6 * y[1238])
    R436 = (13.7 * 1e-6 * y[127] * y[173] * y[298])/(130e-6 + 1e-6 * y[127] * y[173] * y[298])
    R1631 = (13.7 * 1e-6 * y[173] * y[298] * y[140])/(130e-6 + 1e-6 * y[173] * y[298] * y[140])
    R1820 = (13.7 * 1e-6 * y[36] * y[298])/(130e-6 + 1e-6 * y[36] * y[298])
    R1993 = (13.7 * 1e-6 * y[278] * y[298])/(130e-6 + 1e-6 * y[278] * y[298])
    return (R306 + R399 + R1614 + R1615 + R1616 + R1991 + R2242) - (R436 + R1631 + R1820 + R1993)
 
def m_asptrna_c(t, y):
    R307 = (13.7 * 1e-6 * y[300] * y[278] * y[1366])/(130e-6 + 1e-6 * y[300] * y[278] * y[1366])
    return (R307) - (0)
 
def m_asp__L_c(t, y):
    R308 = (13.7 * 1e-6 * y[302] * y[278] * y[173])/(130e-6 + 1e-6 * y[302] * y[278] * y[173])
    R311 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R313 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R314 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R342 = (13.7 * 1e-6 * y[323] * y[173])/(130e-6 + 1e-6 * y[323] * y[173])
    R140 = (13.7 * 1e-6 * y[300] * y[928] * y[747])/(130e-6 + 1e-6 * y[300] * y[928] * y[747])
    R285 = (13.7 * 1e-6 * y[300] * y[36])/(130e-6 + 1e-6 * y[300] * y[36])
    R292 = (13.7 * 1e-6 * y[300] * y[353])/(130e-6 + 1e-6 * y[300] * y[353])
    R293 = (13.7 * 1e-6 * y[300] * y[278])/(130e-6 + 1e-6 * y[300] * y[278])
    R294 = (13.7 * 1e-6 * y[300] * y[444])/(130e-6 + 1e-6 * y[300] * y[444])
    R295 = (13.7 * 1e-6 * y[300] * y[441])/(130e-6 + 1e-6 * y[300] * y[441])
    R296 = (13.7 * 1e-6 * y[300] * y[153])/(130e-6 + 1e-6 * y[300] * y[153])
    R297 = (13.7 * 1e-6 * y[300] * y[335])/(130e-6 + 1e-6 * y[300] * y[335])
    R305 = (13.7 * 1e-6 * y[300])/(130e-6 + 1e-6 * y[300])
    R306 = (13.7 * 1e-6 * y[213] * y[300])/(130e-6 + 1e-6 * y[213] * y[300])
    R307 = (13.7 * 1e-6 * y[300] * y[278] * y[1366])/(130e-6 + 1e-6 * y[300] * y[278] * y[1366])
    R323 = (13.7 * 1e-6 * y[300] * y[278] * y[1010])/(130e-6 + 1e-6 * y[300] * y[278] * y[1010])
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R351 = (13.7 * 1e-6 * y[300] * y[278] * y[95])/(130e-6 + 1e-6 * y[300] * y[278] * y[95])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2037 = (13.7 * 1e-6 * y[1346] * y[300] * y[278])/(130e-6 + 1e-6 * y[1346] * y[300] * y[278])
    return (R308 + R311 + R313 + R314 + R342) - (R140 + R285 + R292 + R293 + R294 + R295 + R296 + R297 + R305 + R306 + R307 + R323 + R349 + R351 + R926 + R2037)
 
def m_arab__L_p(t, y):
    R310 = (13.7 * 1e-6 * y[297] * y[61])/(130e-6 + 1e-6 * y[297] * y[61])
    R316 = (13.7 * 1e-6 * y[1369])/(130e-6 + 1e-6 * y[1369])
    R304 = (13.7 * 1e-6 * y[301] * y[278] * y[173])/(130e-6 + 1e-6 * y[301] * y[278] * y[173])
    R309 = (13.7 * 1e-6 * y[301] * y[61])/(130e-6 + 1e-6 * y[301] * y[61])
    return (R310 + R316) - (R304 + R309)
 
def m_asp__L_p(t, y):
    R315 = (13.7 * 1e-6 * y[1368])/(130e-6 + 1e-6 * y[1368])
    R348 = (13.7 * 1e-6 * y[274] * y[406])/(130e-6 + 1e-6 * y[274] * y[406])
    R308 = (13.7 * 1e-6 * y[302] * y[278] * y[173])/(130e-6 + 1e-6 * y[302] * y[278] * y[173])
    R311 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R313 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    R314 = (13.7 * 1e-6 * y[302] * y[61])/(130e-6 + 1e-6 * y[302] * y[61])
    return (R315 + R348) - (R308 + R311 + R313 + R314)
 
def m_arg__L_c(t, y):
    R317 = (13.7 * 1e-6 * y[304] * y[315])/(130e-6 + 1e-6 * y[304] * y[315])
    R321 = (13.7 * 1e-6 * y[315] * y[151])/(130e-6 + 1e-6 * y[315] * y[151])
    R322 = (13.7 * 1e-6 * y[307])/(130e-6 + 1e-6 * y[307])
    R325 = (13.7 * 1e-6 * y[315] * y[278] * y[173])/(130e-6 + 1e-6 * y[315] * y[278] * y[173])
    R318 = (13.7 * 1e-6 * y[303] * y[36])/(130e-6 + 1e-6 * y[303] * y[36])
    R324 = (13.7 * 1e-6 * y[303] * y[278] * y[1370])/(130e-6 + 1e-6 * y[303] * y[278] * y[1370])
    R327 = (13.7 * 1e-6 * y[303] * y[212])/(130e-6 + 1e-6 * y[303] * y[212])
    R334 = (13.7 * 1e-6 * y[303] * y[61])/(130e-6 + 1e-6 * y[303] * y[61])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (R317 + R321 + R322 + R325) - (R318 + R324 + R327 + R334 + R926)
 
def m_agm_c(t, y):
    R318 = (13.7 * 1e-6 * y[303] * y[36])/(130e-6 + 1e-6 * y[303] * y[36])
    R168 = (13.7 * 1e-6 * y[304] * y[173])/(130e-6 + 1e-6 * y[304] * y[173])
    R317 = (13.7 * 1e-6 * y[304] * y[315])/(130e-6 + 1e-6 * y[304] * y[315])
    return (R318) - (R168 + R317)
 
def m_co2_p(t, y):
    R320 = (13.7 * 1e-6 * y[315] * y[61])/(130e-6 + 1e-6 * y[315] * y[61])
    R445 = (13.7 * 1e-6 * y[1400])/(130e-6 + 1e-6 * y[1400])
    R446 = (13.7 * 1e-6 * y[305])/(130e-6 + 1e-6 * y[305])
    return (R320 + R445) - (R446)
 
def m_orn_p(t, y):
    R321 = (13.7 * 1e-6 * y[315] * y[151])/(130e-6 + 1e-6 * y[315] * y[151])
    R1767 = (13.7 * 1e-6 * y[1510])/(130e-6 + 1e-6 * y[1510])
    R2076 = (13.7 * 1e-6 * y[151] * y[1171])/(130e-6 + 1e-6 * y[151] * y[1171])
    R1766 = (13.7 * 1e-6 * y[278] * y[173] * y[306])/(130e-6 + 1e-6 * y[278] * y[173] * y[306])
    return (R321 + R1767 + R2076) - (R1766)
 
def m_argsuc_c(t, y):
    R323 = (13.7 * 1e-6 * y[300] * y[278] * y[1010])/(130e-6 + 1e-6 * y[300] * y[278] * y[1010])
    R322 = (13.7 * 1e-6 * y[307])/(130e-6 + 1e-6 * y[307])
    return (R323) - (R322)
 
def m_argtrna_c(t, y):
    R324 = (13.7 * 1e-6 * y[303] * y[278] * y[1370])/(130e-6 + 1e-6 * y[303] * y[278] * y[1370])
    return (R324) - (0)
 
def m_aso3_c(t, y):
    R326 = (13.7 * 1e-6 * y[1371] * y[763])/(130e-6 + 1e-6 * y[1371] * y[763])
    R282 = (13.7 * 1e-6 * y[309] * y[278] * y[173])/(130e-6 + 1e-6 * y[309] * y[278] * y[173])
    return (R326) - (R282)
 
def m_gthox_c(t, y):
    R326 = (13.7 * 1e-6 * y[1371] * y[763])/(130e-6 + 1e-6 * y[1371] * y[763])
    R1284 = (13.7 * 1e-6 * y[1024] * y[763])/(130e-6 + 1e-6 * y[1024] * y[763])
    R1296 = (13.7 * 1e-6 * y[310] * y[36] * y[201])/(130e-6 + 1e-6 * y[310] * y[36] * y[201])
    return (R326 + R1284) - (R1296)
 
def m_sucarg_c(t, y):
    R327 = (13.7 * 1e-6 * y[303] * y[212])/(130e-6 + 1e-6 * y[303] * y[212])
    R2112 = (13.7 * 1e-6 * y[173] * y[36] * y[311])/(130e-6 + 1e-6 * y[173] * y[36] * y[311])
    return (R327) - (R2112)
 
def m_2aobut_c(t, y):
    R328 = (13.7 * 1e-6 * y[1372] * y[6])/(130e-6 + 1e-6 * y[1372] * y[6])
    R1228 = (13.7 * 1e-6 * y[127] * y[261])/(130e-6 + 1e-6 * y[127] * y[261])
    R2184 = (13.7 * 1e-6 * y[236] * y[1216])/(130e-6 + 1e-6 * y[236] * y[1216])
    R278 = (13.7 * 1e-6 * y[312] * y[36])/(130e-6 + 1e-6 * y[312] * y[36])
    return (R328 + R1228 + R2184) - (R278)
 
def m_itp_c(t, y):
    R329 = (13.7 * 1e-6 * y[278] * y[173] * y[36])/(130e-6 + 1e-6 * y[278] * y[173] * y[36])
    R196 = (13.7 * 1e-6 * y[71] * y[313])/(130e-6 + 1e-6 * y[71] * y[313])
    R1740 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    R1772 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    return (R329) - (R196 + R1740 + R1772)
 
def m_prbatp_c(t, y):
    R331 = (13.7 * 1e-6 * y[278] * y[983])/(130e-6 + 1e-6 * y[278] * y[983])
    R2038 = (13.7 * 1e-6 * y[173] * y[314])/(130e-6 + 1e-6 * y[173] * y[314])
    return (R331) - (R2038)
 
def m_arg__L_p(t, y):
    R334 = (13.7 * 1e-6 * y[303] * y[61])/(130e-6 + 1e-6 * y[303] * y[61])
    R335 = (13.7 * 1e-6 * y[1373])/(130e-6 + 1e-6 * y[1373])
    R317 = (13.7 * 1e-6 * y[304] * y[315])/(130e-6 + 1e-6 * y[304] * y[315])
    R320 = (13.7 * 1e-6 * y[315] * y[61])/(130e-6 + 1e-6 * y[315] * y[61])
    R321 = (13.7 * 1e-6 * y[315] * y[151])/(130e-6 + 1e-6 * y[315] * y[151])
    R325 = (13.7 * 1e-6 * y[315] * y[278] * y[173])/(130e-6 + 1e-6 * y[315] * y[278] * y[173])
    return (R334 + R335) - (R317 + R320 + R321 + R325)
 
def m_ala_B_p(t, y):
    R337 = (13.7 * 1e-6 * y[1374])/(130e-6 + 1e-6 * y[1374])
    R333 = (13.7 * 1e-6 * y[316] * y[61])/(130e-6 + 1e-6 * y[316] * y[61])
    return (R337) - (R333)
 
def m_3dhgulnp_c(t, y):
    R338 = (13.7 * 1e-6 * y[319] * y[173])/(130e-6 + 1e-6 * y[319] * y[173])
    R556 = (13.7 * 1e-6 * y[512] * y[278])/(130e-6 + 1e-6 * y[512] * y[278])
    R1486 = (13.7 * 1e-6 * y[317] * y[36])/(130e-6 + 1e-6 * y[317] * y[36])
    return (R338 + R556) - (R1486)
 
def m_idon__L_c(t, y):
    R339 = (13.7 * 1e-6 * y[479] * y[36] * y[113])/(130e-6 + 1e-6 * y[479] * y[36] * y[113])
    R350 = (13.7 * 1e-6 * y[479] * y[36] * y[201])/(130e-6 + 1e-6 * y[479] * y[36] * y[201])
    R1381 = (13.7 * 1e-6 * y[66] * y[36] * y[113])/(130e-6 + 1e-6 * y[66] * y[36] * y[113])
    R1382 = (13.7 * 1e-6 * y[66] * y[36] * y[201])/(130e-6 + 1e-6 * y[66] * y[36] * y[201])
    R1383 = (13.7 * 1e-6 * y[61] * y[812])/(130e-6 + 1e-6 * y[61] * y[812])
    return (R339 + R350 + R1381 + R1382 + R1383) - (0)
 
def m_ascb6p_c(t, y):
    R340 = (13.7 * 1e-6 * y[320] * y[563])/(130e-6 + 1e-6 * y[320] * y[563])
    R338 = (13.7 * 1e-6 * y[319] * y[173])/(130e-6 + 1e-6 * y[319] * y[173])
    return (R340) - (R338)
 
def m_ascb__L_p(t, y):
    R341 = (13.7 * 1e-6 * y[1375])/(130e-6 + 1e-6 * y[1375])
    R340 = (13.7 * 1e-6 * y[320] * y[563])/(130e-6 + 1e-6 * y[320] * y[563])
    return (R341) - (R340)
 
def m_glyb_c(t, y):
    R343 = (13.7 * 1e-6 * y[1376] * y[173] * y[236])/(130e-6 + 1e-6 * y[1376] * y[173] * y[236])
    R344 = (13.7 * 1e-6 * y[1376] * y[173] * y[6])/(130e-6 + 1e-6 * y[1376] * y[173] * y[6])
    R1235 = (13.7 * 1e-6 * y[278] * y[741] * y[173])/(130e-6 + 1e-6 * y[278] * y[741] * y[173])
    R1236 = (13.7 * 1e-6 * y[741] * y[61])/(130e-6 + 1e-6 * y[741] * y[61])
    return (R343 + R344 + R1235 + R1236) - (0)
 
def m_btn_c(t, y):
    R346 = (13.7 * 1e-6 * y[1377] * y[36] * y[113])/(130e-6 + 1e-6 * y[1377] * y[36] * y[113])
    R347 = (13.7 * 1e-6 * y[1377] * y[36] * y[201])/(130e-6 + 1e-6 * y[1377] * y[36] * y[201])
    R353 = (13.7 * 1e-6 * y[921] * y[461] * y[1379])/(130e-6 + 1e-6 * y[921] * y[461] * y[1379])
    return (R346 + R347 + R353) - (0)
 
def m_asn__L_c(t, y):
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R351 = (13.7 * 1e-6 * y[300] * y[278] * y[95])/(130e-6 + 1e-6 * y[300] * y[278] * y[95])
    R358 = (13.7 * 1e-6 * y[274] * y[278] * y[173])/(130e-6 + 1e-6 * y[274] * y[278] * y[173])
    R359 = (13.7 * 1e-6 * y[274] * y[61])/(130e-6 + 1e-6 * y[274] * y[61])
    R342 = (13.7 * 1e-6 * y[323] * y[173])/(130e-6 + 1e-6 * y[323] * y[173])
    R352 = (13.7 * 1e-6 * y[323] * y[278] * y[1378])/(130e-6 + 1e-6 * y[323] * y[278] * y[1378])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (R349 + R351 + R358 + R359) - (R342 + R352 + R926)
 
def m_asntrna_c(t, y):
    R352 = (13.7 * 1e-6 * y[323] * y[278] * y[1378])/(130e-6 + 1e-6 * y[323] * y[278] * y[1378])
    return (R352) - (0)
 
def m_dad_5_c(t, y):
    R353 = (13.7 * 1e-6 * y[921] * y[461] * y[1379])/(130e-6 + 1e-6 * y[921] * y[461] * y[1379])
    R481 = (13.7 * 1e-6 * y[921] * y[1252])/(130e-6 + 1e-6 * y[921] * y[1252])
    R61 = (13.7 * 1e-6 * y[325] * y[173])/(130e-6 + 1e-6 * y[325] * y[173])
    return (R353 + R481) - (R61)
 
def m_met__L_c(t, y):
    R353 = (13.7 * 1e-6 * y[921] * y[461] * y[1379])/(130e-6 + 1e-6 * y[921] * y[461] * y[1379])
    R481 = (13.7 * 1e-6 * y[921] * y[1252])/(130e-6 + 1e-6 * y[921] * y[1252])
    R1321 = (13.7 * 1e-6 * y[921] * y[436])/(130e-6 + 1e-6 * y[921] * y[436])
    R1322 = (13.7 * 1e-6 * y[436] * y[930])/(130e-6 + 1e-6 * y[436] * y[930])
    R1646 = (13.7 * 1e-6 * y[1078] * y[436])/(130e-6 + 1e-6 * y[1078] * y[436])
    R1661 = (13.7 * 1e-6 * y[925] * y[1240])/(130e-6 + 1e-6 * y[925] * y[1240])
    R1662 = (13.7 * 1e-6 * y[926] * y[1240])/(130e-6 + 1e-6 * y[926] * y[1240])
    R1664 = (13.7 * 1e-6 * y[278] * y[173] * y[938])/(130e-6 + 1e-6 * y[278] * y[173] * y[938])
    R2378 = (13.7 * 1e-6 * y[481] * y[110])/(130e-6 + 1e-6 * y[481] * y[110])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1637 = (13.7 * 1e-6 * y[278] * y[173] * y[326])/(130e-6 + 1e-6 * y[278] * y[173] * y[326])
    R1642 = (13.7 * 1e-6 * y[93] * y[326])/(130e-6 + 1e-6 * y[93] * y[326])
    R1643 = (13.7 * 1e-6 * y[93] * y[326])/(130e-6 + 1e-6 * y[93] * y[326])
    R1663 = (13.7 * 1e-6 * y[278] * y[326] * y[1649])/(130e-6 + 1e-6 * y[278] * y[326] * y[1649])
    return (R353 + R481 + R1321 + R1322 + R1646 + R1661 + R1662 + R1664 + R2378) - (R926 + R1637 + R1642 + R1643 + R1663)
 
def m_btcoa_c(t, y):
    R354 = (13.7 * 1e-6 * y[127] * y[254])/(130e-6 + 1e-6 * y[127] * y[254])
    R1464 = (13.7 * 1e-6 * y[799] * y[99])/(130e-6 + 1e-6 * y[799] * y[99])
    R118 = (13.7 * 1e-6 * y[327] * y[282])/(130e-6 + 1e-6 * y[327] * y[282])
    return (R354 + R1464) - (R118)
 
def m_butso3_c(t, y):
    R355 = (13.7 * 1e-6 * y[278] * y[329] * y[173])/(130e-6 + 1e-6 * y[278] * y[329] * y[173])
    R981 = (13.7 * 1e-6 * y[328] * y[655] * y[335])/(130e-6 + 1e-6 * y[328] * y[655] * y[335])
    return (R355) - (R981)
 
def m_butso3_p(t, y):
    R356 = (13.7 * 1e-6 * y[1380])/(130e-6 + 1e-6 * y[1380])
    R355 = (13.7 * 1e-6 * y[278] * y[329] * y[173])/(130e-6 + 1e-6 * y[278] * y[329] * y[173])
    return (R356) - (R355)
 
def m_but_p(t, y):
    R360 = (13.7 * 1e-6 * y[1381])/(130e-6 + 1e-6 * y[1381])
    R357 = (13.7 * 1e-6 * y[330] * y[61])/(130e-6 + 1e-6 * y[330] * y[61])
    return (R360) - (R357)
 
def m_ca2_p(t, y):
    R362 = (13.7 * 1e-6 * y[1382] * y[61])/(130e-6 + 1e-6 * y[1382] * y[61])
    R364 = (13.7 * 1e-6 * y[1384])/(130e-6 + 1e-6 * y[1384])
    R373 = (13.7 * 1e-6 * y[1382] * y[927])/(130e-6 + 1e-6 * y[1382] * y[927])
    return (R362 + R364 + R373) - (0)
 
def m_cmp_c(t, y):
    R365 = (13.7 * 1e-6 * y[451] * y[173])/(130e-6 + 1e-6 * y[451] * y[173])
    R366 = (13.7 * 1e-6 * y[452] * y[173])/(130e-6 + 1e-6 * y[452] * y[173])
    R367 = (13.7 * 1e-6 * y[453] * y[173])/(130e-6 + 1e-6 * y[453] * y[173])
    R403 = (13.7 * 1e-6 * y[447] * y[173])/(130e-6 + 1e-6 * y[447] * y[173])
    R404 = (13.7 * 1e-6 * y[448] * y[173])/(130e-6 + 1e-6 * y[448] * y[173])
    R405 = (13.7 * 1e-6 * y[449] * y[173])/(130e-6 + 1e-6 * y[449] * y[173])
    R411 = (13.7 * 1e-6 * y[450] * y[173])/(130e-6 + 1e-6 * y[450] * y[173])
    R521 = (13.7 * 1e-6 * y[454] * y[928])/(130e-6 + 1e-6 * y[454] * y[928])
    R1629 = (13.7 * 1e-6 * y[336])/(130e-6 + 1e-6 * y[336])
    R1763 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1780 = (13.7 * 1e-6 * y[854] * y[1198])/(130e-6 + 1e-6 * y[854] * y[1198])
    R1794 = (13.7 * 1e-6 * y[854] * y[986])/(130e-6 + 1e-6 * y[854] * y[986])
    R1807 = (13.7 * 1e-6 * y[854] * y[789])/(130e-6 + 1e-6 * y[854] * y[789])
    R1922 = (13.7 * 1e-6 * y[447] * y[743])/(130e-6 + 1e-6 * y[447] * y[743])
    R1923 = (13.7 * 1e-6 * y[448] * y[743])/(130e-6 + 1e-6 * y[448] * y[743])
    R1925 = (13.7 * 1e-6 * y[449] * y[743])/(130e-6 + 1e-6 * y[449] * y[743])
    R1927 = (13.7 * 1e-6 * y[450] * y[743])/(130e-6 + 1e-6 * y[450] * y[743])
    R1928 = (13.7 * 1e-6 * y[451] * y[743])/(130e-6 + 1e-6 * y[451] * y[743])
    R1933 = (13.7 * 1e-6 * y[452] * y[743])/(130e-6 + 1e-6 * y[452] * y[743])
    R1934 = (13.7 * 1e-6 * y[453] * y[743])/(130e-6 + 1e-6 * y[453] * y[743])
    R2007 = (13.7 * 1e-6 * y[1100] * y[404] * y[260])/(130e-6 + 1e-6 * y[1100] * y[404] * y[260])
    R2052 = (13.7 * 1e-6 * y[447] * y[500])/(130e-6 + 1e-6 * y[447] * y[500])
    R2053 = (13.7 * 1e-6 * y[448] * y[500])/(130e-6 + 1e-6 * y[448] * y[500])
    R2057 = (13.7 * 1e-6 * y[449] * y[500])/(130e-6 + 1e-6 * y[449] * y[500])
    R2058 = (13.7 * 1e-6 * y[450] * y[500])/(130e-6 + 1e-6 * y[450] * y[500])
    R2061 = (13.7 * 1e-6 * y[451] * y[500])/(130e-6 + 1e-6 * y[451] * y[500])
    R2063 = (13.7 * 1e-6 * y[452] * y[500])/(130e-6 + 1e-6 * y[452] * y[500])
    R2067 = (13.7 * 1e-6 * y[453] * y[500])/(130e-6 + 1e-6 * y[453] * y[500])
    R440 = (13.7 * 1e-6 * y[332] * y[173])/(130e-6 + 1e-6 * y[332] * y[173])
    R525 = (13.7 * 1e-6 * y[278] * y[332])/(130e-6 + 1e-6 * y[278] * y[332])
    R1750 = (13.7 * 1e-6 * y[332] * y[173])/(130e-6 + 1e-6 * y[332] * y[173])
    return (R365 + R366 + R367 + R403 + R404 + R405 + R411 + R521 + R1629 + R1763 + R1780 + R1794 + R1807 + R1922 + R1923 + R1925 + R1927 + R1928 + R1933 + R1934 + R2007 + R2052 + R2053 + R2057 + R2058 + R2061 + R2063 + R2067) - (R440 + R525 + R1750)
 
def m_15dap_p(t, y):
    R368 = (13.7 * 1e-6 * y[873] * y[61] * y[875])/(130e-6 + 1e-6 * y[873] * y[61] * y[875])
    R513 = (13.7 * 1e-6 * y[1414])/(130e-6 + 1e-6 * y[1414])
    return (R368 + R513) - (0)
 
def m_lys__L_c(t, y):
    R368 = (13.7 * 1e-6 * y[873] * y[61] * y[875])/(130e-6 + 1e-6 * y[873] * y[61] * y[875])
    R505 = (13.7 * 1e-6 * y[443] * y[36])/(130e-6 + 1e-6 * y[443] * y[36])
    R1043 = (13.7 * 1e-6 * y[625] * y[173])/(130e-6 + 1e-6 * y[625] * y[173])
    R1537 = (13.7 * 1e-6 * y[278] * y[173] * y[875])/(130e-6 + 1e-6 * y[278] * y[173] * y[875])
    R1538 = (13.7 * 1e-6 * y[61] * y[875])/(130e-6 + 1e-6 * y[61] * y[875])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1529 = (13.7 * 1e-6 * y[36] * y[334])/(130e-6 + 1e-6 * y[36] * y[334])
    R1536 = (13.7 * 1e-6 * y[278] * y[334] * y[1641])/(130e-6 + 1e-6 * y[278] * y[334] * y[1641])
    R1544 = (13.7 * 1e-6 * y[61] * y[334])/(130e-6 + 1e-6 * y[61] * y[334])
    return (R368 + R505 + R1043 + R1537 + R1538) - (R926 + R1529 + R1536 + R1544)
 
def m_o2_c(t, y):
    R369 = (13.7 * 1e-6 * y[93])/(130e-6 + 1e-6 * y[93])
    R1811 = (13.7 * 1e-6 * y[1004])/(130e-6 + 1e-6 * y[1004])
    R2197 = (13.7 * 1e-6 * y[36] * y[1183])/(130e-6 + 1e-6 * y[36] * y[1183])
    R82 = (13.7 * 1e-6 * y[272] * y[173] * y[335])/(130e-6 + 1e-6 * y[272] * y[173] * y[335])
    R297 = (13.7 * 1e-6 * y[300] * y[335])/(130e-6 + 1e-6 * y[300] * y[335])
    R398 = (13.7 * 1e-6 * y[1393] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[1393] * y[36] * y[113] * y[335])
    R477 = (13.7 * 1e-6 * y[1252] * y[36] * y[335])/(130e-6 + 1e-6 * y[1252] * y[36] * y[335])
    R502 = (13.7 * 1e-6 * y[36] * y[250] * y[335])/(130e-6 + 1e-6 * y[36] * y[250] * y[335])
    R507 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R509 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R543 = (13.7 * 1e-6 * y[777] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[777] * y[36] * y[113] * y[335])
    R549 = (13.7 * 1e-6 * y[819] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[819] * y[36] * y[113] * y[335])
    R563 = (13.7 * 1e-6 * y[913] * y[173] * y[335])/(130e-6 + 1e-6 * y[913] * y[173] * y[335])
    R591 = (13.7 * 1e-6 * y[470] * y[335])/(130e-6 + 1e-6 * y[470] * y[335])
    R981 = (13.7 * 1e-6 * y[328] * y[655] * y[335])/(130e-6 + 1e-6 * y[328] * y[655] * y[335])
    R982 = (13.7 * 1e-6 * y[655] * y[335] * y[1230])/(130e-6 + 1e-6 * y[655] * y[335] * y[1230])
    R1022 = (13.7 * 1e-6 * y[655] * y[841] * y[335])/(130e-6 + 1e-6 * y[655] * y[841] * y[335])
    R1023 = (13.7 * 1e-6 * y[655] * y[1053] * y[335])/(130e-6 + 1e-6 * y[655] * y[1053] * y[335])
    R1030 = (13.7 * 1e-6 * y[569] * y[655] * y[335])/(130e-6 + 1e-6 * y[569] * y[655] * y[335])
    R1186 = (13.7 * 1e-6 * y[716] * y[173] * y[335])/(130e-6 + 1e-6 * y[716] * y[173] * y[335])
    R1344 = (13.7 * 1e-6 * y[430] * y[335])/(130e-6 + 1e-6 * y[430] * y[335])
    R1394 = (13.7 * 1e-6 * y[473] * y[335])/(130e-6 + 1e-6 * y[473] * y[335])
    R1715 = (13.7 * 1e-6 * y[113] * y[966] * y[335])/(130e-6 + 1e-6 * y[113] * y[966] * y[335])
    R1716 = (13.7 * 1e-6 * y[201] * y[966] * y[335])/(130e-6 + 1e-6 * y[201] * y[966] * y[335])
    R1840 = (13.7 * 1e-6 * y[1017] * y[335])/(130e-6 + 1e-6 * y[1017] * y[335])
    R1848 = (13.7 * 1e-6 * y[335] * y[1026])/(130e-6 + 1e-6 * y[335] * y[1026])
    R1851 = (13.7 * 1e-6 * y[1016] * y[335])/(130e-6 + 1e-6 * y[1016] * y[335])
    R1855 = (13.7 * 1e-6 * y[1029] * y[335])/(130e-6 + 1e-6 * y[1029] * y[335])
    R1976 = (13.7 * 1e-6 * y[1656] * y[173] * y[335])/(130e-6 + 1e-6 * y[1656] * y[173] * y[335])
    R2016 = (13.7 * 1e-6 * y[335] * y[427])/(130e-6 + 1e-6 * y[335] * y[427])
    R2018 = (13.7 * 1e-6 * y[36] * y[113] * y[335] * y[1133])/(130e-6 + 1e-6 * y[36] * y[113] * y[335] * y[1133])
    R2101 = (13.7 * 1e-6 * y[173] * y[335] * y[226])/(130e-6 + 1e-6 * y[173] * y[335] * y[226])
    R2114 = (13.7 * 1e-6 * y[173] * y[335] * y[1658])/(130e-6 + 1e-6 * y[173] * y[335] * y[1658])
    R2123 = (13.7 * 1e-6 * y[335] * y[289])/(130e-6 + 1e-6 * y[335] * y[289])
    R2125 = (13.7 * 1e-6 * y[250] * y[335])/(130e-6 + 1e-6 * y[250] * y[335])
    R2250 = (13.7 * 1e-6 * y[213] * y[335] * y[1244])/(130e-6 + 1e-6 * y[213] * y[335] * y[1244])
    R2290 = (13.7 * 1e-6 * y[173] * y[335] * y[1279])/(130e-6 + 1e-6 * y[173] * y[335] * y[1279])
    return (R369 + R1811 + R2197) - (R82 + R297 + R398 + R477 + R502 + R507 + R509 + R543 + R549 + R563 + R591 + R981 + R982 + R1022 + R1023 + R1030 + R1186 + R1344 + R1394 + R1715 + R1716 + R1840 + R1848 + R1851 + R1855 + R1976 + R2016 + R2018 + R2101 + R2114 + R2123 + R2125 + R2250 + R2290)
 
def m_2p4c2me_c(t, y):
    R370 = (13.7 * 1e-6 * y[920] * y[278])/(130e-6 + 1e-6 * y[920] * y[278])
    R1629 = (13.7 * 1e-6 * y[336])/(130e-6 + 1e-6 * y[336])
    return (R370) - (R1629)
 
def m_cpe160_c(t, y):
    R372 = (13.7 * 1e-6 * y[921] * y[160])/(130e-6 + 1e-6 * y[921] * y[160])
    return (R372) - (0)
 
def m_adocbi_c(t, y):
    R374 = (13.7 * 1e-6 * y[278] * y[345] * y[36])/(130e-6 + 1e-6 * y[278] * y[345] * y[36])
    R214 = (13.7 * 1e-6 * y[338] * y[278])/(130e-6 + 1e-6 * y[338] * y[278])
    return (R374) - (R214)
 
def m_pppi_c(t, y):
    R374 = (13.7 * 1e-6 * y[278] * y[345] * y[36])/(130e-6 + 1e-6 * y[278] * y[345] * y[36])
    R391 = (13.7 * 1e-6 * y[278] * y[346] * y[36])/(130e-6 + 1e-6 * y[278] * y[346] * y[36])
    R1774 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    R1775 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R2001 = (13.7 * 1e-6 * y[278] * y[73])/(130e-6 + 1e-6 * y[278] * y[73])
    R1973 = (13.7 * 1e-6 * y[173] * y[339])/(130e-6 + 1e-6 * y[173] * y[339])
    return (R374 + R391 + R1774 + R1775 + R2001) - (R1973)
 
def m_cpg160_c(t, y):
    R375 = (13.7 * 1e-6 * y[921] * y[271])/(130e-6 + 1e-6 * y[921] * y[271])
    return (R375) - (0)
 
def m_cpe180_c(t, y):
    R377 = (13.7 * 1e-6 * y[921] * y[164])/(130e-6 + 1e-6 * y[921] * y[164])
    return (R377) - (0)
 
def m_cpg180_c(t, y):
    R378 = (13.7 * 1e-6 * y[921] * y[294])/(130e-6 + 1e-6 * y[921] * y[294])
    return (R378) - (0)
 
def m_cgly_c(t, y):
    R379 = (13.7 * 1e-6 * y[278] * y[347] * y[173])/(130e-6 + 1e-6 * y[278] * y[347] * y[173])
    R265 = (13.7 * 1e-6 * y[343] * y[173])/(130e-6 + 1e-6 * y[343] * y[173])
    return (R379) - (R265)
 
def m_cbi_p(t, y):
    R380 = (13.7 * 1e-6 * y[1387] * y[61])/(130e-6 + 1e-6 * y[1387] * y[61])
    R381 = (13.7 * 1e-6 * y[278] * y[344] * y[173])/(130e-6 + 1e-6 * y[278] * y[344] * y[173])
    return (R380) - (R381)
 
def m_cbi_c(t, y):
    R381 = (13.7 * 1e-6 * y[278] * y[344] * y[173])/(130e-6 + 1e-6 * y[278] * y[344] * y[173])
    R374 = (13.7 * 1e-6 * y[278] * y[345] * y[36])/(130e-6 + 1e-6 * y[278] * y[345] * y[36])
    return (R381) - (R374)
 
def m_cbl1_c(t, y):
    R382 = (13.7 * 1e-6 * y[278] * y[352] * y[173])/(130e-6 + 1e-6 * y[278] * y[352] * y[173])
    R391 = (13.7 * 1e-6 * y[278] * y[346] * y[36])/(130e-6 + 1e-6 * y[278] * y[346] * y[36])
    return (R382) - (R391)
 
def m_cgly_p(t, y):
    R383 = (13.7 * 1e-6 * y[1388])/(130e-6 + 1e-6 * y[1388])
    R1297 = (13.7 * 1e-6 * y[771] * y[406])/(130e-6 + 1e-6 * y[771] * y[406])
    R379 = (13.7 * 1e-6 * y[278] * y[347] * y[173])/(130e-6 + 1e-6 * y[278] * y[347] * y[173])
    return (R383 + R1297) - (R379)
 
def m_chol_c(t, y):
    R385 = (13.7 * 1e-6 * y[278] * y[349] * y[173])/(130e-6 + 1e-6 * y[278] * y[349] * y[173])
    R386 = (13.7 * 1e-6 * y[349] * y[61])/(130e-6 + 1e-6 * y[349] * y[61])
    R1260 = (13.7 * 1e-6 * y[665] * y[173])/(130e-6 + 1e-6 * y[665] * y[173])
    return (R385 + R386 + R1260) - (0)
 
def m_chol_p(t, y):
    R387 = (13.7 * 1e-6 * y[1390])/(130e-6 + 1e-6 * y[1390])
    R1267 = (13.7 * 1e-6 * y[670] * y[406])/(130e-6 + 1e-6 * y[670] * y[406])
    R385 = (13.7 * 1e-6 * y[278] * y[349] * y[173])/(130e-6 + 1e-6 * y[278] * y[349] * y[173])
    R386 = (13.7 * 1e-6 * y[349] * y[61])/(130e-6 + 1e-6 * y[349] * y[61])
    return (R387 + R1267) - (R385 + R386)
 
def m_pphn_c(t, y):
    R388 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    R2008 = (13.7 * 1e-6 * y[236] * y[350])/(130e-6 + 1e-6 * y[236] * y[350])
    R2009 = (13.7 * 1e-6 * y[36] * y[350])/(130e-6 + 1e-6 * y[36] * y[350])
    return (R388) - (R2008 + R2009)
 
def m_chor_c(t, y):
    R389 = (13.7 * 1e-6 * y[1138])/(130e-6 + 1e-6 * y[1138])
    R183 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R276 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R388 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    R397 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    R1371 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    R1372 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    return (R389) - (R183 + R276 + R388 + R397 + R1371 + R1372)
 
def m_cbl1_p(t, y):
    R390 = (13.7 * 1e-6 * y[1391] * y[61])/(130e-6 + 1e-6 * y[1391] * y[61])
    R382 = (13.7 * 1e-6 * y[278] * y[352] * y[173])/(130e-6 + 1e-6 * y[278] * y[352] * y[173])
    return (R390) - (R382)
 
def m_cbp_c(t, y):
    R392 = (13.7 * 1e-6 * y[278] * y[16] * y[95])/(130e-6 + 1e-6 * y[278] * y[16] * y[95])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R1777 = (13.7 * 1e-6 * y[1258] * y[37])/(130e-6 + 1e-6 * y[1258] * y[37])
    R292 = (13.7 * 1e-6 * y[300] * y[353])/(130e-6 + 1e-6 * y[300] * y[353])
    R1822 = (13.7 * 1e-6 * y[353] * y[151])/(130e-6 + 1e-6 * y[353] * y[151])
    return (R392 + R393 + R1777) - (R292 + R1822)
 
def m_cd2_p(t, y):
    R394 = (13.7 * 1e-6 * y[278] * y[359] * y[173])/(130e-6 + 1e-6 * y[278] * y[359] * y[173])
    R395 = (13.7 * 1e-6 * y[359] * y[61])/(130e-6 + 1e-6 * y[359] * y[61])
    R396 = (13.7 * 1e-6 * y[1392])/(130e-6 + 1e-6 * y[1392])
    R401 = (13.7 * 1e-6 * y[354])/(130e-6 + 1e-6 * y[354])
    return (R394 + R395 + R396) - (R401)
 
def m_4hbz_c(t, y):
    R397 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    R1311 = (13.7 * 1e-6 * y[355] * y[1012])/(130e-6 + 1e-6 * y[355] * y[1012])
    return (R397) - (R1311)
 
def m_cenchddd_c(t, y):
    R398 = (13.7 * 1e-6 * y[1393] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[1393] * y[36] * y[113] * y[335])
    R590 = (13.7 * 1e-6 * y[356] * y[236])/(130e-6 + 1e-6 * y[356] * y[236])
    return (R398) - (R590)
 
def m_cit_c(t, y):
    R400 = (13.7 * 1e-6 * y[361] * y[290])/(130e-6 + 1e-6 * y[361] * y[290])
    R436 = (13.7 * 1e-6 * y[127] * y[173] * y[298])/(130e-6 + 1e-6 * y[127] * y[173] * y[298])
    R991 = (13.7 * 1e-6 * y[278] * y[598] * y[173])/(130e-6 + 1e-6 * y[278] * y[598] * y[173])
    R155 = (13.7 * 1e-6 * y[357])/(130e-6 + 1e-6 * y[357])
    R399 = (13.7 * 1e-6 * y[357])/(130e-6 + 1e-6 * y[357])
    return (R400 + R436 + R991) - (R155 + R399)
 
def m_succ_p(t, y):
    R400 = (13.7 * 1e-6 * y[361] * y[290])/(130e-6 + 1e-6 * y[361] * y[290])
    R2213 = (13.7 * 1e-6 * y[61] * y[290])/(130e-6 + 1e-6 * y[61] * y[290])
    R2214 = (13.7 * 1e-6 * y[1564])/(130e-6 + 1e-6 * y[1564])
    R2219 = (13.7 * 1e-6 * y[647] * y[290])/(130e-6 + 1e-6 * y[647] * y[290])
    R2243 = (13.7 * 1e-6 * y[290] * y[1239])/(130e-6 + 1e-6 * y[290] * y[1239])
    R2208 = (13.7 * 1e-6 * y[61] * y[358])/(130e-6 + 1e-6 * y[61] * y[358])
    R2211 = (13.7 * 1e-6 * y[61] * y[358])/(130e-6 + 1e-6 * y[61] * y[358])
    return (R400 + R2213 + R2214 + R2219 + R2243) - (R2208 + R2211)
 
def m_cd2_c(t, y):
    R401 = (13.7 * 1e-6 * y[354])/(130e-6 + 1e-6 * y[354])
    R394 = (13.7 * 1e-6 * y[278] * y[359] * y[173])/(130e-6 + 1e-6 * y[278] * y[359] * y[173])
    R395 = (13.7 * 1e-6 * y[359] * y[61])/(130e-6 + 1e-6 * y[359] * y[61])
    return (R401) - (R394 + R395)
 
def m_tdec2eACP_c(t, y):
    R402 = (13.7 * 1e-6 * y[514])/(130e-6 + 1e-6 * y[514])
    R658 = (13.7 * 1e-6 * y[36] * y[113] * y[360])/(130e-6 + 1e-6 * y[36] * y[113] * y[360])
    R660 = (13.7 * 1e-6 * y[36] * y[201] * y[360])/(130e-6 + 1e-6 * y[36] * y[201] * y[360])
    R2239 = (13.7 * 1e-6 * y[360])/(130e-6 + 1e-6 * y[360])
    return (R402) - (R658 + R660 + R2239)
 
def m_cit_p(t, y):
    R406 = (13.7 * 1e-6 * y[1394])/(130e-6 + 1e-6 * y[1394])
    R400 = (13.7 * 1e-6 * y[361] * y[290])/(130e-6 + 1e-6 * y[361] * y[290])
    return (R406) - (R400)
 
def m_lipa_cold_e(t, y):
    R407 = (13.7 * 1e-6 * y[857])/(130e-6 + 1e-6 * y[857])
    R1522 = (13.7 * 1e-6 * y[362])/(130e-6 + 1e-6 * y[362])
    return (R407) - (R1522)
 
def m_pa120_p(t, y):
    R408 = (13.7 * 1e-6 * y[379] * y[406])/(130e-6 + 1e-6 * y[379] * y[406])
    R1785 = (13.7 * 1e-6 * y[278] * y[173] * y[187])/(130e-6 + 1e-6 * y[278] * y[173] * y[187])
    R1812 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1916 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1958 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    return (R408 + R1785) - (R1812 + R1916 + R1958)
 
def m_pg120_p(t, y):
    R408 = (13.7 * 1e-6 * y[379] * y[406])/(130e-6 + 1e-6 * y[379] * y[406])
    R1888 = (13.7 * 1e-6 * y[278] * y[173] * y[241])/(130e-6 + 1e-6 * y[278] * y[173] * y[241])
    R1897 = (13.7 * 1e-6 * y[406] * y[1046])/(130e-6 + 1e-6 * y[406] * y[1046])
    R418 = (13.7 * 1e-6 * y[364])/(130e-6 + 1e-6 * y[364])
    R1939 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R1987 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    return (R408 + R1888 + R1897) - (R418 + R1939 + R1987)
 
def m_pa140_p(t, y):
    R409 = (13.7 * 1e-6 * y[381] * y[406])/(130e-6 + 1e-6 * y[381] * y[406])
    R1786 = (13.7 * 1e-6 * y[278] * y[173] * y[188])/(130e-6 + 1e-6 * y[278] * y[173] * y[188])
    R1815 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1917 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1960 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    return (R409 + R1786) - (R1815 + R1917 + R1960)
 
def m_pg140_p(t, y):
    R409 = (13.7 * 1e-6 * y[381] * y[406])/(130e-6 + 1e-6 * y[381] * y[406])
    R1893 = (13.7 * 1e-6 * y[278] * y[173] * y[247])/(130e-6 + 1e-6 * y[278] * y[173] * y[247])
    R1900 = (13.7 * 1e-6 * y[406] * y[1047])/(130e-6 + 1e-6 * y[406] * y[1047])
    R419 = (13.7 * 1e-6 * y[366])/(130e-6 + 1e-6 * y[366])
    R1944 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R1988 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    return (R409 + R1893 + R1900) - (R419 + R1944 + R1988)
 
def m_pa141_p(t, y):
    R410 = (13.7 * 1e-6 * y[386] * y[406])/(130e-6 + 1e-6 * y[386] * y[406])
    R1787 = (13.7 * 1e-6 * y[278] * y[173] * y[192])/(130e-6 + 1e-6 * y[278] * y[173] * y[192])
    R1817 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1918 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1961 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    return (R410 + R1787) - (R1817 + R1918 + R1961)
 
def m_pg141_p(t, y):
    R410 = (13.7 * 1e-6 * y[386] * y[406])/(130e-6 + 1e-6 * y[386] * y[406])
    R1894 = (13.7 * 1e-6 * y[278] * y[173] * y[265])/(130e-6 + 1e-6 * y[278] * y[173] * y[265])
    R1905 = (13.7 * 1e-6 * y[406] * y[1048])/(130e-6 + 1e-6 * y[406] * y[1048])
    R426 = (13.7 * 1e-6 * y[368])/(130e-6 + 1e-6 * y[368])
    R1945 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R1989 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    return (R410 + R1894 + R1905) - (R426 + R1945 + R1989)
 
def m_pa160_p(t, y):
    R412 = (13.7 * 1e-6 * y[387] * y[406])/(130e-6 + 1e-6 * y[387] * y[406])
    R1788 = (13.7 * 1e-6 * y[278] * y[173] * y[193])/(130e-6 + 1e-6 * y[278] * y[173] * y[193])
    R1819 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1919 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1966 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    return (R412 + R1788) - (R1819 + R1919 + R1966)
 
def m_pg160_p(t, y):
    R412 = (13.7 * 1e-6 * y[387] * y[406])/(130e-6 + 1e-6 * y[387] * y[406])
    R1895 = (13.7 * 1e-6 * y[278] * y[173] * y[268])/(130e-6 + 1e-6 * y[278] * y[173] * y[268])
    R1908 = (13.7 * 1e-6 * y[406] * y[1049])/(130e-6 + 1e-6 * y[406] * y[1049])
    R228 = (13.7 * 1e-6 * y[1352] * y[370])/(130e-6 + 1e-6 * y[1352] * y[370])
    R427 = (13.7 * 1e-6 * y[370])/(130e-6 + 1e-6 * y[370])
    R1946 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R1995 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    return (R412 + R1895 + R1908) - (R228 + R427 + R1946 + R1995)
 
def m_tddec2eACP_c(t, y):
    R413 = (13.7 * 1e-6 * y[534])/(130e-6 + 1e-6 * y[534])
    R661 = (13.7 * 1e-6 * y[36] * y[113] * y[371])/(130e-6 + 1e-6 * y[36] * y[113] * y[371])
    R662 = (13.7 * 1e-6 * y[36] * y[201] * y[371])/(130e-6 + 1e-6 * y[36] * y[201] * y[371])
    return (R413) - (R661 + R662)
 
def m_pa161_p(t, y):
    R414 = (13.7 * 1e-6 * y[389] * y[406])/(130e-6 + 1e-6 * y[389] * y[406])
    R1793 = (13.7 * 1e-6 * y[278] * y[173] * y[198])/(130e-6 + 1e-6 * y[278] * y[173] * y[198])
    R1828 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1920 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1967 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    return (R414 + R1793) - (R1828 + R1920 + R1967)
 
def m_pg161_p(t, y):
    R414 = (13.7 * 1e-6 * y[389] * y[406])/(130e-6 + 1e-6 * y[389] * y[406])
    R1896 = (13.7 * 1e-6 * y[278] * y[173] * y[271])/(130e-6 + 1e-6 * y[278] * y[173] * y[271])
    R1911 = (13.7 * 1e-6 * y[406] * y[1050])/(130e-6 + 1e-6 * y[406] * y[1050])
    R429 = (13.7 * 1e-6 * y[373])/(130e-6 + 1e-6 * y[373])
    R1947 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R1996 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    return (R414 + R1896 + R1911) - (R429 + R1947 + R1996)
 
def m_t3c5ddeceACP_c(t, y):
    R415 = (13.7 * 1e-6 * y[539])/(130e-6 + 1e-6 * y[539])
    R668 = (13.7 * 1e-6 * y[36] * y[113] * y[374])/(130e-6 + 1e-6 * y[36] * y[113] * y[374])
    R669 = (13.7 * 1e-6 * y[36] * y[201] * y[374])/(130e-6 + 1e-6 * y[36] * y[201] * y[374])
    return (R415) - (R668 + R669)
 
def m_pa180_p(t, y):
    R416 = (13.7 * 1e-6 * y[390] * y[406])/(130e-6 + 1e-6 * y[390] * y[406])
    R1795 = (13.7 * 1e-6 * y[278] * y[173] * y[199])/(130e-6 + 1e-6 * y[278] * y[173] * y[199])
    R1836 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1921 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1971 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    return (R416 + R1795) - (R1836 + R1921 + R1971)
 
def m_pg180_p(t, y):
    R416 = (13.7 * 1e-6 * y[390] * y[406])/(130e-6 + 1e-6 * y[390] * y[406])
    R1899 = (13.7 * 1e-6 * y[278] * y[173] * y[276])/(130e-6 + 1e-6 * y[278] * y[173] * y[276])
    R1913 = (13.7 * 1e-6 * y[406] * y[1052])/(130e-6 + 1e-6 * y[406] * y[1052])
    R430 = (13.7 * 1e-6 * y[376])/(130e-6 + 1e-6 * y[376])
    R1948 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R1998 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    return (R416 + R1899 + R1913) - (R430 + R1948 + R1998)
 
def m_pa181_p(t, y):
    R417 = (13.7 * 1e-6 * y[392] * y[406])/(130e-6 + 1e-6 * y[392] * y[406])
    R1796 = (13.7 * 1e-6 * y[278] * y[173] * y[200])/(130e-6 + 1e-6 * y[278] * y[173] * y[200])
    R1838 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1924 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1972 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    return (R417 + R1796) - (R1838 + R1924 + R1972)
 
def m_pg181_p(t, y):
    R417 = (13.7 * 1e-6 * y[392] * y[406])/(130e-6 + 1e-6 * y[392] * y[406])
    R1903 = (13.7 * 1e-6 * y[278] * y[173] * y[294])/(130e-6 + 1e-6 * y[278] * y[173] * y[294])
    R1915 = (13.7 * 1e-6 * y[406] * y[1054])/(130e-6 + 1e-6 * y[406] * y[1054])
    R432 = (13.7 * 1e-6 * y[378])/(130e-6 + 1e-6 * y[378])
    R1955 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R1999 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    return (R417 + R1903 + R1915) - (R432 + R1955 + R1999)
 
def m_clpn120_p(t, y):
    R418 = (13.7 * 1e-6 * y[364])/(130e-6 + 1e-6 * y[364])
    R408 = (13.7 * 1e-6 * y[379] * y[406])/(130e-6 + 1e-6 * y[379] * y[406])
    return (R418) - (R408)
 
def m_glyc_p(t, y):
    R418 = (13.7 * 1e-6 * y[364])/(130e-6 + 1e-6 * y[364])
    R419 = (13.7 * 1e-6 * y[366])/(130e-6 + 1e-6 * y[366])
    R426 = (13.7 * 1e-6 * y[368])/(130e-6 + 1e-6 * y[368])
    R427 = (13.7 * 1e-6 * y[370])/(130e-6 + 1e-6 * y[370])
    R429 = (13.7 * 1e-6 * y[373])/(130e-6 + 1e-6 * y[373])
    R430 = (13.7 * 1e-6 * y[376])/(130e-6 + 1e-6 * y[376])
    R432 = (13.7 * 1e-6 * y[378])/(130e-6 + 1e-6 * y[378])
    R1091 = (13.7 * 1e-6 * y[742] * y[406])/(130e-6 + 1e-6 * y[742] * y[406])
    R1273 = (13.7 * 1e-6 * y[682] * y[406])/(130e-6 + 1e-6 * y[682] * y[406])
    R1279 = (13.7 * 1e-6 * y[1598])/(130e-6 + 1e-6 * y[1598])
    R1281 = (13.7 * 1e-6 * y[240])/(130e-6 + 1e-6 * y[240])
    return (R418 + R419 + R426 + R427 + R429 + R430 + R432 + R1091 + R1273 + R1279 + R1281) - (0)
 
def m_clpn140_p(t, y):
    R419 = (13.7 * 1e-6 * y[366])/(130e-6 + 1e-6 * y[366])
    R409 = (13.7 * 1e-6 * y[381] * y[406])/(130e-6 + 1e-6 * y[381] * y[406])
    return (R419) - (R409)
 
def m_crnDcoa_c(t, y):
    R420 = (13.7 * 1e-6 * y[278] * y[99] * y[383])/(130e-6 + 1e-6 * y[278] * y[99] * y[383])
    R484 = (13.7 * 1e-6 * y[431])/(130e-6 + 1e-6 * y[431])
    return (R420 + R484) - (0)
 
def m_crn__D_c(t, y):
    R421 = (13.7 * 1e-6 * y[278] * y[388] * y[173])/(130e-6 + 1e-6 * y[278] * y[388] * y[173])
    R422 = (13.7 * 1e-6 * y[388] * y[61])/(130e-6 + 1e-6 * y[388] * y[61])
    R420 = (13.7 * 1e-6 * y[278] * y[99] * y[383])/(130e-6 + 1e-6 * y[278] * y[99] * y[383])
    R428 = (13.7 * 1e-6 * y[383] * y[391])/(130e-6 + 1e-6 * y[383] * y[391])
    return (R421 + R422) - (R420 + R428)
 
def m_crn_c(t, y):
    R423 = (13.7 * 1e-6 * y[278] * y[391] * y[173])/(130e-6 + 1e-6 * y[278] * y[391] * y[173])
    R424 = (13.7 * 1e-6 * y[391] * y[61])/(130e-6 + 1e-6 * y[391] * y[61])
    R425 = (13.7 * 1e-6 * y[391] * y[432])/(130e-6 + 1e-6 * y[391] * y[432])
    R428 = (13.7 * 1e-6 * y[383] * y[391])/(130e-6 + 1e-6 * y[383] * y[391])
    R482 = (13.7 * 1e-6 * y[1407] * y[384])/(130e-6 + 1e-6 * y[1407] * y[384])
    R483 = (13.7 * 1e-6 * y[278] * y[99] * y[384])/(130e-6 + 1e-6 * y[278] * y[99] * y[384])
    R485 = (13.7 * 1e-6 * y[384] * y[400])/(130e-6 + 1e-6 * y[384] * y[400])
    return (R423 + R424 + R425 + R428) - (R482 + R483 + R485)
 
def m_gbbtn_p(t, y):
    R425 = (13.7 * 1e-6 * y[391] * y[432])/(130e-6 + 1e-6 * y[391] * y[432])
    R1162 = (13.7 * 1e-6 * y[1577])/(130e-6 + 1e-6 * y[1577])
    return (R425 + R1162) - (0)
 
def m_clpn141_p(t, y):
    R426 = (13.7 * 1e-6 * y[368])/(130e-6 + 1e-6 * y[368])
    R410 = (13.7 * 1e-6 * y[386] * y[406])/(130e-6 + 1e-6 * y[386] * y[406])
    return (R426) - (R410)
 
def m_clpn160_p(t, y):
    R427 = (13.7 * 1e-6 * y[370])/(130e-6 + 1e-6 * y[370])
    R412 = (13.7 * 1e-6 * y[387] * y[406])/(130e-6 + 1e-6 * y[387] * y[406])
    return (R427) - (R412)
 
def m_crn__D_p(t, y):
    R428 = (13.7 * 1e-6 * y[383] * y[391])/(130e-6 + 1e-6 * y[383] * y[391])
    R421 = (13.7 * 1e-6 * y[278] * y[388] * y[173])/(130e-6 + 1e-6 * y[278] * y[388] * y[173])
    R422 = (13.7 * 1e-6 * y[388] * y[61])/(130e-6 + 1e-6 * y[388] * y[61])
    return (R428) - (R421 + R422)
 
def m_clpn161_p(t, y):
    R429 = (13.7 * 1e-6 * y[373])/(130e-6 + 1e-6 * y[373])
    R414 = (13.7 * 1e-6 * y[389] * y[406])/(130e-6 + 1e-6 * y[389] * y[406])
    return (R429) - (R414)
 
def m_clpn180_p(t, y):
    R430 = (13.7 * 1e-6 * y[376])/(130e-6 + 1e-6 * y[376])
    R416 = (13.7 * 1e-6 * y[390] * y[406])/(130e-6 + 1e-6 * y[390] * y[406])
    return (R430) - (R416)
 
def m_crn_p(t, y):
    R431 = (13.7 * 1e-6 * y[1395])/(130e-6 + 1e-6 * y[1395])
    R423 = (13.7 * 1e-6 * y[278] * y[391] * y[173])/(130e-6 + 1e-6 * y[278] * y[391] * y[173])
    R424 = (13.7 * 1e-6 * y[391] * y[61])/(130e-6 + 1e-6 * y[391] * y[61])
    R425 = (13.7 * 1e-6 * y[391] * y[432])/(130e-6 + 1e-6 * y[391] * y[432])
    R428 = (13.7 * 1e-6 * y[383] * y[391])/(130e-6 + 1e-6 * y[383] * y[391])
    return (R431) - (R423 + R424 + R425 + R428)
 
def m_clpn181_p(t, y):
    R432 = (13.7 * 1e-6 * y[378])/(130e-6 + 1e-6 * y[378])
    R417 = (13.7 * 1e-6 * y[392] * y[406])/(130e-6 + 1e-6 * y[392] * y[406])
    return (R432) - (R417)
 
def m_tmrs2eACP_c(t, y):
    R433 = (13.7 * 1e-6 * y[543])/(130e-6 + 1e-6 * y[543])
    R670 = (13.7 * 1e-6 * y[36] * y[113] * y[393])/(130e-6 + 1e-6 * y[36] * y[113] * y[393])
    R676 = (13.7 * 1e-6 * y[36] * y[201] * y[393])/(130e-6 + 1e-6 * y[36] * y[201] * y[393])
    return (R433) - (R670 + R676)
 
def m_cl_c(t, y):
    R434 = (13.7 * 1e-6 * y[395] * y[36])/(130e-6 + 1e-6 * y[395] * y[36])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (R434) - (R926)
 
def m_cl_p(t, y):
    R435 = (13.7 * 1e-6 * y[1396])/(130e-6 + 1e-6 * y[1396])
    R434 = (13.7 * 1e-6 * y[395] * y[36])/(130e-6 + 1e-6 * y[395] * y[36])
    return (R435) - (R434)
 
def m_ura_c(t, y):
    R437 = (13.7 * 1e-6 * y[397] * y[173] * y[36])/(130e-6 + 1e-6 * y[397] * y[173] * y[36])
    R637 = (13.7 * 1e-6 * y[469] * y[37])/(130e-6 + 1e-6 * y[469] * y[37])
    R2118 = (13.7 * 1e-6 * y[37] * y[446])/(130e-6 + 1e-6 * y[37] * y[446])
    R2277 = (13.7 * 1e-6 * y[61] * y[1257])/(130e-6 + 1e-6 * y[61] * y[1257])
    R2279 = (13.7 * 1e-6 * y[61] * y[1257])/(130e-6 + 1e-6 * y[61] * y[1257])
    R2299 = (13.7 * 1e-6 * y[173] * y[446])/(130e-6 + 1e-6 * y[173] * y[446])
    R2276 = (13.7 * 1e-6 * y[983] * y[396])/(130e-6 + 1e-6 * y[983] * y[396])
    return (R437 + R637 + R2118 + R2277 + R2279 + R2299) - (R2276)
 
def m_csn_c(t, y):
    R438 = (13.7 * 1e-6 * y[398] * y[61])/(130e-6 + 1e-6 * y[398] * y[61])
    R440 = (13.7 * 1e-6 * y[332] * y[173])/(130e-6 + 1e-6 * y[332] * y[173])
    R512 = (13.7 * 1e-6 * y[454] * y[173])/(130e-6 + 1e-6 * y[454] * y[173])
    R437 = (13.7 * 1e-6 * y[397] * y[173] * y[36])/(130e-6 + 1e-6 * y[397] * y[173] * y[36])
    return (R438 + R440 + R512) - (R437)
 
def m_csn_p(t, y):
    R439 = (13.7 * 1e-6 * y[1397])/(130e-6 + 1e-6 * y[1397])
    R438 = (13.7 * 1e-6 * y[398] * y[61])/(130e-6 + 1e-6 * y[398] * y[61])
    return (R439) - (R438)
 
def m_cmp_p(t, y):
    R441 = (13.7 * 1e-6 * y[1398])/(130e-6 + 1e-6 * y[1398])
    R1751 = (13.7 * 1e-6 * y[399] * y[406])/(130e-6 + 1e-6 * y[399] * y[406])
    return (R441) - (R1751)
 
def m_ctbtcoa_c(t, y):
    R442 = (13.7 * 1e-6 * y[278] * y[99] * y[402])/(130e-6 + 1e-6 * y[278] * y[99] * y[402])
    R492 = (13.7 * 1e-6 * y[431])/(130e-6 + 1e-6 * y[431])
    R485 = (13.7 * 1e-6 * y[384] * y[400])/(130e-6 + 1e-6 * y[384] * y[400])
    return (R442 + R492) - (R485)
 
def m_t3c7mrseACP_c(t, y):
    R443 = (13.7 * 1e-6 * y[551])/(130e-6 + 1e-6 * y[551])
    R677 = (13.7 * 1e-6 * y[36] * y[113] * y[401])/(130e-6 + 1e-6 * y[36] * y[113] * y[401])
    R678 = (13.7 * 1e-6 * y[36] * y[201] * y[401])/(130e-6 + 1e-6 * y[36] * y[201] * y[401])
    return (R443) - (R677 + R678)
 
def m_ctbt_c(t, y):
    R444 = (13.7 * 1e-6 * y[278] * y[1399] * y[173])/(130e-6 + 1e-6 * y[278] * y[1399] * y[173])
    R447 = (13.7 * 1e-6 * y[1399] * y[61])/(130e-6 + 1e-6 * y[1399] * y[61])
    R485 = (13.7 * 1e-6 * y[384] * y[400])/(130e-6 + 1e-6 * y[384] * y[400])
    R442 = (13.7 * 1e-6 * y[278] * y[99] * y[402])/(130e-6 + 1e-6 * y[278] * y[99] * y[402])
    return (R444 + R447 + R485) - (R442)
 
def m_cobalt2_p(t, y):
    R448 = (13.7 * 1e-6 * y[278] * y[408] * y[173])/(130e-6 + 1e-6 * y[278] * y[408] * y[173])
    R452 = (13.7 * 1e-6 * y[408] * y[61])/(130e-6 + 1e-6 * y[408] * y[61])
    R453 = (13.7 * 1e-6 * y[1402])/(130e-6 + 1e-6 * y[1402])
    R454 = (13.7 * 1e-6 * y[403])/(130e-6 + 1e-6 * y[403])
    return (R448 + R452 + R453) - (R454)
 
def m_ctp_c(t, y):
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R1652 = (13.7 * 1e-6 * y[278] * y[456])/(130e-6 + 1e-6 * y[278] * y[456])
    R514 = (13.7 * 1e-6 * y[404] * y[36] * y[187])/(130e-6 + 1e-6 * y[404] * y[36] * y[187])
    R515 = (13.7 * 1e-6 * y[404] * y[36] * y[188])/(130e-6 + 1e-6 * y[404] * y[36] * y[188])
    R516 = (13.7 * 1e-6 * y[404] * y[36] * y[192])/(130e-6 + 1e-6 * y[404] * y[36] * y[192])
    R517 = (13.7 * 1e-6 * y[404] * y[36] * y[193])/(130e-6 + 1e-6 * y[404] * y[36] * y[193])
    R518 = (13.7 * 1e-6 * y[404] * y[36] * y[198])/(130e-6 + 1e-6 * y[404] * y[36] * y[198])
    R519 = (13.7 * 1e-6 * y[404] * y[36] * y[199])/(130e-6 + 1e-6 * y[404] * y[36] * y[199])
    R520 = (13.7 * 1e-6 * y[404] * y[36] * y[200])/(130e-6 + 1e-6 * y[404] * y[36] * y[200])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1476 = (13.7 * 1e-6 * y[404] * y[861])/(130e-6 + 1e-6 * y[404] * y[861])
    R1636 = (13.7 * 1e-6 * y[542] * y[404] * y[36])/(130e-6 + 1e-6 * y[542] * y[404] * y[36])
    R1749 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1763 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R2007 = (13.7 * 1e-6 * y[1100] * y[404] * y[260])/(130e-6 + 1e-6 * y[1100] * y[404] * y[260])
    R2103 = (13.7 * 1e-6 * y[404] * y[646])/(130e-6 + 1e-6 * y[404] * y[646])
    return (R449 + R1652) - (R514 + R515 + R516 + R517 + R518 + R519 + R520 + R926 + R1476 + R1636 + R1749 + R1763 + R2007 + R2103)
 
def m_cu2_p(t, y):
    R450 = (13.7 * 1e-6 * y[407] * y[61] * y[1004])/(130e-6 + 1e-6 * y[407] * y[61] * y[1004])
    R456 = (13.7 * 1e-6 * y[278] * y[411] * y[173])/(130e-6 + 1e-6 * y[278] * y[411] * y[173])
    R457 = (13.7 * 1e-6 * y[1403])/(130e-6 + 1e-6 * y[1403])
    R459 = (13.7 * 1e-6 * y[405])/(130e-6 + 1e-6 * y[405])
    return (R450 + R456 + R457) - (R459)
 
def m_h2o_p(t, y):
    R450 = (13.7 * 1e-6 * y[407] * y[61] * y[1004])/(130e-6 + 1e-6 * y[407] * y[61] * y[1004])
    R580 = (13.7 * 1e-6 * y[496] * y[250])/(130e-6 + 1e-6 * y[496] * y[250])
    R582 = (13.7 * 1e-6 * y[507] * y[496])/(130e-6 + 1e-6 * y[507] * y[496])
    R1077 = (13.7 * 1e-6 * y[594] * y[61] * y[1004])/(130e-6 + 1e-6 * y[594] * y[61] * y[1004])
    R1336 = (13.7 * 1e-6 * y[858])/(130e-6 + 1e-6 * y[858])
    R1704 = (13.7 * 1e-6 * y[964] * y[289])/(130e-6 + 1e-6 * y[964] * y[289])
    R1707 = (13.7 * 1e-6 * y[250] * y[964])/(130e-6 + 1e-6 * y[250] * y[964])
    R1781 = (13.7 * 1e-6 * y[61] * y[960] * y[289])/(130e-6 + 1e-6 * y[61] * y[960] * y[289])
    R1782 = (13.7 * 1e-6 * y[61] * y[250] * y[960])/(130e-6 + 1e-6 * y[61] * y[250] * y[960])
    R2217 = (13.7 * 1e-6 * y[61] * y[250] * y[1231])/(130e-6 + 1e-6 * y[61] * y[250] * y[1231])
    R2220 = (13.7 * 1e-6 * y[507] * y[61] * y[1231])/(130e-6 + 1e-6 * y[507] * y[61] * y[1231])
    R1 = (13.7 * 1e-6 * y[83] * y[406])/(130e-6 + 1e-6 * y[83] * y[406])
    R35 = (13.7 * 1e-6 * y[513] * y[406] * y[1004])/(130e-6 + 1e-6 * y[513] * y[406] * y[1004])
    R39 = (13.7 * 1e-6 * y[64] * y[406])/(130e-6 + 1e-6 * y[64] * y[406])
    R54 = (13.7 * 1e-6 * y[58] * y[406])/(130e-6 + 1e-6 * y[58] * y[406])
    R55 = (13.7 * 1e-6 * y[56] * y[406])/(130e-6 + 1e-6 * y[56] * y[406])
    R65 = (13.7 * 1e-6 * y[55] * y[406])/(130e-6 + 1e-6 * y[55] * y[406])
    R66 = (13.7 * 1e-6 * y[57] * y[406])/(130e-6 + 1e-6 * y[57] * y[406])
    R123 = (13.7 * 1e-6 * y[142] * y[406])/(130e-6 + 1e-6 * y[142] * y[406])
    R145 = (13.7 * 1e-6 * y[176] * y[406])/(130e-6 + 1e-6 * y[176] * y[406])
    R158 = (13.7 * 1e-6 * y[963] * y[406])/(130e-6 + 1e-6 * y[963] * y[406])
    R160 = (13.7 * 1e-6 * y[963] * y[406])/(130e-6 + 1e-6 * y[963] * y[406])
    R348 = (13.7 * 1e-6 * y[274] * y[406])/(130e-6 + 1e-6 * y[274] * y[406])
    R408 = (13.7 * 1e-6 * y[379] * y[406])/(130e-6 + 1e-6 * y[379] * y[406])
    R409 = (13.7 * 1e-6 * y[381] * y[406])/(130e-6 + 1e-6 * y[381] * y[406])
    R410 = (13.7 * 1e-6 * y[386] * y[406])/(130e-6 + 1e-6 * y[386] * y[406])
    R412 = (13.7 * 1e-6 * y[387] * y[406])/(130e-6 + 1e-6 * y[387] * y[406])
    R414 = (13.7 * 1e-6 * y[389] * y[406])/(130e-6 + 1e-6 * y[389] * y[406])
    R416 = (13.7 * 1e-6 * y[390] * y[406])/(130e-6 + 1e-6 * y[390] * y[406])
    R417 = (13.7 * 1e-6 * y[392] * y[406])/(130e-6 + 1e-6 * y[392] * y[406])
    R564 = (13.7 * 1e-6 * y[39] * y[406])/(130e-6 + 1e-6 * y[39] * y[406])
    R570 = (13.7 * 1e-6 * y[62] * y[406])/(130e-6 + 1e-6 * y[62] * y[406])
    R577 = (13.7 * 1e-6 * y[75] * y[406])/(130e-6 + 1e-6 * y[75] * y[406])
    R594 = (13.7 * 1e-6 * y[76] * y[406])/(130e-6 + 1e-6 * y[76] * y[406])
    R1087 = (13.7 * 1e-6 * y[653] * y[406])/(130e-6 + 1e-6 * y[653] * y[406])
    R1091 = (13.7 * 1e-6 * y[742] * y[406])/(130e-6 + 1e-6 * y[742] * y[406])
    R1154 = (13.7 * 1e-6 * y[661] * y[406])/(130e-6 + 1e-6 * y[661] * y[406])
    R1198 = (13.7 * 1e-6 * y[651] * y[406] * y[444])/(130e-6 + 1e-6 * y[651] * y[406] * y[444])
    R1203 = (13.7 * 1e-6 * y[712] * y[406])/(130e-6 + 1e-6 * y[712] * y[406])
    R1267 = (13.7 * 1e-6 * y[670] * y[406])/(130e-6 + 1e-6 * y[670] * y[406])
    R1269 = (13.7 * 1e-6 * y[674] * y[406])/(130e-6 + 1e-6 * y[674] * y[406])
    R1271 = (13.7 * 1e-6 * y[691] * y[406])/(130e-6 + 1e-6 * y[691] * y[406])
    R1273 = (13.7 * 1e-6 * y[682] * y[406])/(130e-6 + 1e-6 * y[682] * y[406])
    R1278 = (13.7 * 1e-6 * y[684] * y[406])/(130e-6 + 1e-6 * y[684] * y[406])
    R1297 = (13.7 * 1e-6 * y[771] * y[406])/(130e-6 + 1e-6 * y[771] * y[406])
    R1334 = (13.7 * 1e-6 * y[735] * y[406])/(130e-6 + 1e-6 * y[735] * y[406])
    R1338 = (13.7 * 1e-6 * y[406])/(130e-6 + 1e-6 * y[406])
    R1443 = (13.7 * 1e-6 * y[406] * y[850])/(130e-6 + 1e-6 * y[406] * y[850])
    R1496 = (13.7 * 1e-6 * y[1058] * y[406])/(130e-6 + 1e-6 * y[1058] * y[406])
    R1497 = (13.7 * 1e-6 * y[1059] * y[406])/(130e-6 + 1e-6 * y[1059] * y[406])
    R1498 = (13.7 * 1e-6 * y[1060] * y[406])/(130e-6 + 1e-6 * y[1060] * y[406])
    R1499 = (13.7 * 1e-6 * y[1061] * y[406])/(130e-6 + 1e-6 * y[1061] * y[406])
    R1501 = (13.7 * 1e-6 * y[1062] * y[406])/(130e-6 + 1e-6 * y[1062] * y[406])
    R1505 = (13.7 * 1e-6 * y[1063] * y[406])/(130e-6 + 1e-6 * y[1063] * y[406])
    R1506 = (13.7 * 1e-6 * y[1066] * y[406])/(130e-6 + 1e-6 * y[1066] * y[406])
    R1508 = (13.7 * 1e-6 * y[1071] * y[406])/(130e-6 + 1e-6 * y[1071] * y[406])
    R1510 = (13.7 * 1e-6 * y[1072] * y[406])/(130e-6 + 1e-6 * y[1072] * y[406])
    R1511 = (13.7 * 1e-6 * y[1073] * y[406])/(130e-6 + 1e-6 * y[1073] * y[406])
    R1516 = (13.7 * 1e-6 * y[1074] * y[406])/(130e-6 + 1e-6 * y[1074] * y[406])
    R1517 = (13.7 * 1e-6 * y[1077] * y[406])/(130e-6 + 1e-6 * y[1077] * y[406])
    R1519 = (13.7 * 1e-6 * y[1079] * y[406])/(130e-6 + 1e-6 * y[1079] * y[406])
    R1521 = (13.7 * 1e-6 * y[1080] * y[406])/(130e-6 + 1e-6 * y[1080] * y[406])
    R1523 = (13.7 * 1e-6 * y[1081] * y[406])/(130e-6 + 1e-6 * y[1081] * y[406])
    R1530 = (13.7 * 1e-6 * y[1086] * y[406])/(130e-6 + 1e-6 * y[1086] * y[406])
    R1531 = (13.7 * 1e-6 * y[1087] * y[406])/(130e-6 + 1e-6 * y[1087] * y[406])
    R1532 = (13.7 * 1e-6 * y[1088] * y[406])/(130e-6 + 1e-6 * y[1088] * y[406])
    R1533 = (13.7 * 1e-6 * y[1089] * y[406])/(130e-6 + 1e-6 * y[1089] * y[406])
    R1534 = (13.7 * 1e-6 * y[1090] * y[406])/(130e-6 + 1e-6 * y[1090] * y[406])
    R1535 = (13.7 * 1e-6 * y[1093] * y[406])/(130e-6 + 1e-6 * y[1093] * y[406])
    R1599 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1600 = (13.7 * 1e-6 * y[406] * y[899])/(130e-6 + 1e-6 * y[406] * y[899])
    R1601 = (13.7 * 1e-6 * y[406] * y[1035])/(130e-6 + 1e-6 * y[406] * y[1035])
    R1602 = (13.7 * 1e-6 * y[406] * y[902])/(130e-6 + 1e-6 * y[406] * y[902])
    R1603 = (13.7 * 1e-6 * y[406] * y[951])/(130e-6 + 1e-6 * y[406] * y[951])
    R1604 = (13.7 * 1e-6 * y[406] * y[900])/(130e-6 + 1e-6 * y[406] * y[900])
    R1610 = (13.7 * 1e-6 * y[406] * y[950])/(130e-6 + 1e-6 * y[406] * y[950])
    R1611 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1613 = (13.7 * 1e-6 * y[406] * y[901])/(130e-6 + 1e-6 * y[406] * y[901])
    R1686 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1687 = (13.7 * 1e-6 * y[406] * y[903])/(130e-6 + 1e-6 * y[406] * y[903])
    R1688 = (13.7 * 1e-6 * y[406] * y[1035])/(130e-6 + 1e-6 * y[406] * y[1035])
    R1693 = (13.7 * 1e-6 * y[406] * y[904])/(130e-6 + 1e-6 * y[406] * y[904])
    R1694 = (13.7 * 1e-6 * y[406] * y[898])/(130e-6 + 1e-6 * y[406] * y[898])
    R1695 = (13.7 * 1e-6 * y[406] * y[957])/(130e-6 + 1e-6 * y[406] * y[957])
    R1700 = (13.7 * 1e-6 * y[406] * y[898])/(130e-6 + 1e-6 * y[406] * y[898])
    R1725 = (13.7 * 1e-6 * y[263] * y[406])/(130e-6 + 1e-6 * y[263] * y[406])
    R1726 = (13.7 * 1e-6 * y[406] * y[1281])/(130e-6 + 1e-6 * y[406] * y[1281])
    R1729 = (13.7 * 1e-6 * y[406] * y[826])/(130e-6 + 1e-6 * y[406] * y[826])
    R1732 = (13.7 * 1e-6 * y[484] * y[406])/(130e-6 + 1e-6 * y[484] * y[406])
    R1734 = (13.7 * 1e-6 * y[530] * y[406])/(130e-6 + 1e-6 * y[530] * y[406])
    R1735 = (13.7 * 1e-6 * y[748] * y[406])/(130e-6 + 1e-6 * y[748] * y[406])
    R1736 = (13.7 * 1e-6 * y[535] * y[406])/(130e-6 + 1e-6 * y[535] * y[406])
    R1742 = (13.7 * 1e-6 * y[406] * y[1270])/(130e-6 + 1e-6 * y[406] * y[1270])
    R1745 = (13.7 * 1e-6 * y[467] * y[406])/(130e-6 + 1e-6 * y[467] * y[406])
    R1748 = (13.7 * 1e-6 * y[779] * y[406])/(130e-6 + 1e-6 * y[779] * y[406])
    R1751 = (13.7 * 1e-6 * y[399] * y[406])/(130e-6 + 1e-6 * y[399] * y[406])
    R1753 = (13.7 * 1e-6 * y[532] * y[406])/(130e-6 + 1e-6 * y[532] * y[406])
    R1759 = (13.7 * 1e-6 * y[442] * y[406])/(130e-6 + 1e-6 * y[442] * y[406])
    R1812 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1815 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1817 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1819 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1828 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1836 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1838 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1871 = (13.7 * 1e-6 * y[406] * y[1004] * y[1043])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1043])
    R1897 = (13.7 * 1e-6 * y[406] * y[1046])/(130e-6 + 1e-6 * y[406] * y[1046])
    R1900 = (13.7 * 1e-6 * y[406] * y[1047])/(130e-6 + 1e-6 * y[406] * y[1047])
    R1905 = (13.7 * 1e-6 * y[406] * y[1048])/(130e-6 + 1e-6 * y[406] * y[1048])
    R1908 = (13.7 * 1e-6 * y[406] * y[1049])/(130e-6 + 1e-6 * y[406] * y[1049])
    R1911 = (13.7 * 1e-6 * y[406] * y[1050])/(130e-6 + 1e-6 * y[406] * y[1050])
    R1913 = (13.7 * 1e-6 * y[406] * y[1052])/(130e-6 + 1e-6 * y[406] * y[1052])
    R1915 = (13.7 * 1e-6 * y[406] * y[1054])/(130e-6 + 1e-6 * y[406] * y[1054])
    R1916 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1917 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1918 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1919 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1920 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1921 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1924 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1929 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R1930 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R1931 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R1932 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R1935 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R1937 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R1938 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R1939 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R1944 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R1945 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R1946 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R1947 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R1948 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R1951 = (13.7 * 1e-6 * y[406] * y[949])/(130e-6 + 1e-6 * y[406] * y[949])
    R1955 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R1958 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1960 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1961 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1966 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1967 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1971 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1972 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1974 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R1981 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R1982 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R1983 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R1984 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R1985 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R1986 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R1987 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R1988 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R1989 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R1995 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R1996 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R1998 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R1999 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R2025 = (13.7 * 1e-6 * y[406] * y[1137])/(130e-6 + 1e-6 * y[406] * y[1137])
    R2050 = (13.7 * 1e-6 * y[406] * y[1150])/(130e-6 + 1e-6 * y[406] * y[1150])
    R2074 = (13.7 * 1e-6 * y[406] * y[1215])/(130e-6 + 1e-6 * y[406] * y[1215])
    R2138 = (13.7 * 1e-6 * y[406] * y[1192])/(130e-6 + 1e-6 * y[406] * y[1192])
    R2252 = (13.7 * 1e-6 * y[406] * y[1245])/(130e-6 + 1e-6 * y[406] * y[1245])
    R2293 = (13.7 * 1e-6 * y[406] * y[1004] * y[1262])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1262])
    R2294 = (13.7 * 1e-6 * y[406] * y[1264])/(130e-6 + 1e-6 * y[406] * y[1264])
    R2309 = (13.7 * 1e-6 * y[406] * y[1294])/(130e-6 + 1e-6 * y[406] * y[1294])
    R2312 = (13.7 * 1e-6 * y[406] * y[1273])/(130e-6 + 1e-6 * y[406] * y[1273])
    R2353 = (13.7 * 1e-6 * y[406] * y[549])/(130e-6 + 1e-6 * y[406] * y[549])
    R2358 = (13.7 * 1e-6 * y[406] * y[1297])/(130e-6 + 1e-6 * y[406] * y[1297])
    R2363 = (13.7 * 1e-6 * y[406] * y[1301])/(130e-6 + 1e-6 * y[406] * y[1301])
    R2366 = (13.7 * 1e-6 * y[406] * y[1300])/(130e-6 + 1e-6 * y[406] * y[1300])
    return (R450 + R580 + R582 + R1077 + R1336 + R1704 + R1707 + R1781 + R1782 + R2217 + R2220) - (R1 + R35 + R39 + R54 + R55 + R65 + R66 + R123 + R145 + R158 + R160 + R348 + R408 + R409 + R410 + R412 + R414 + R416 + R417 + R564 + R570 + R577 + R594 + R1087 + R1091 + R1154 + R1198 + R1203 + R1267 + R1269 + R1271 + R1273 + R1278 + R1297 + R1334 + R1338 + R1443 + R1496 + R1497 + R1498 + R1499 + R1501 + R1505 + R1506 + R1508 + R1510 + R1511 + R1516 + R1517 + R1519 + R1521 + R1523 + R1530 + R1531 + R1532 + R1533 + R1534 + R1535 + R1599 + R1600 + R1601 + R1602 + R1603 + R1604 + R1610 + R1611 + R1613 + R1686 + R1687 + R1688 + R1693 + R1694 + R1695 + R1700 + R1725 + R1726 + R1729 + R1732 + R1734 + R1735 + R1736 + R1742 + R1745 + R1748 + R1751 + R1753 + R1759 + R1812 + R1815 + R1817 + R1819 + R1828 + R1836 + R1838 + R1871 + R1897 + R1900 + R1905 + R1908 + R1911 + R1913 + R1915 + R1916 + R1917 + R1918 + R1919 + R1920 + R1921 + R1924 + R1929 + R1930 + R1931 + R1932 + R1935 + R1937 + R1938 + R1939 + R1944 + R1945 + R1946 + R1947 + R1948 + R1951 + R1955 + R1958 + R1960 + R1961 + R1966 + R1967 + R1971 + R1972 + R1974 + R1981 + R1982 + R1983 + R1984 + R1985 + R1986 + R1987 + R1988 + R1989 + R1995 + R1996 + R1998 + R1999 + R2025 + R2050 + R2074 + R2138 + R2252 + R2293 + R2294 + R2309 + R2312 + R2353 + R2358 + R2363 + R2366)
 
def m_cu_p(t, y):
    R451 = (13.7 * 1e-6 * y[278] * y[1401] * y[173])/(130e-6 + 1e-6 * y[278] * y[1401] * y[173])
    R461 = (13.7 * 1e-6 * y[412])/(130e-6 + 1e-6 * y[412])
    R450 = (13.7 * 1e-6 * y[407] * y[61] * y[1004])/(130e-6 + 1e-6 * y[407] * y[61] * y[1004])
    return (R451 + R461) - (R450)
 
def m_cobalt2_c(t, y):
    R454 = (13.7 * 1e-6 * y[403])/(130e-6 + 1e-6 * y[403])
    R448 = (13.7 * 1e-6 * y[278] * y[408] * y[173])/(130e-6 + 1e-6 * y[278] * y[408] * y[173])
    R452 = (13.7 * 1e-6 * y[408] * y[61])/(130e-6 + 1e-6 * y[408] * y[61])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (R454) - (R448 + R452 + R926)
 
def m_colipa_p(t, y):
    R455 = (13.7 * 1e-6 * y[278] * y[793] * y[173])/(130e-6 + 1e-6 * y[278] * y[793] * y[173])
    R462 = (13.7 * 1e-6 * y[409])/(130e-6 + 1e-6 * y[409])
    R656 = (13.7 * 1e-6 * y[409] * y[553])/(130e-6 + 1e-6 * y[409] * y[553])
    R1437 = (13.7 * 1e-6 * y[409] * y[1306])/(130e-6 + 1e-6 * y[409] * y[1306])
    R1790 = (13.7 * 1e-6 * y[409] * y[992])/(130e-6 + 1e-6 * y[409] * y[992])
    return (R455) - (R462 + R656 + R1437 + R1790)
 
def m_tpalm2eACP_c(t, y):
    R458 = (13.7 * 1e-6 * y[556])/(130e-6 + 1e-6 * y[556])
    R681 = (13.7 * 1e-6 * y[36] * y[113] * y[410])/(130e-6 + 1e-6 * y[36] * y[113] * y[410])
    R682 = (13.7 * 1e-6 * y[36] * y[201] * y[410])/(130e-6 + 1e-6 * y[36] * y[201] * y[410])
    return (R458) - (R681 + R682)
 
def m_cu2_c(t, y):
    R459 = (13.7 * 1e-6 * y[405])/(130e-6 + 1e-6 * y[405])
    R456 = (13.7 * 1e-6 * y[278] * y[411] * y[173])/(130e-6 + 1e-6 * y[278] * y[411] * y[173])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (R459) - (R456 + R926)
 
def m_cu_e(t, y):
    R460 = (13.7 * 1e-6 * y[1401] * y[1344])/(130e-6 + 1e-6 * y[1401] * y[1344])
    R461 = (13.7 * 1e-6 * y[412])/(130e-6 + 1e-6 * y[412])
    R788 = (13.7 * 1e-6 * y[412])/(130e-6 + 1e-6 * y[412])
    return (R460) - (R461 + R788)
 
def m_colipa_e(t, y):
    R462 = (13.7 * 1e-6 * y[409])/(130e-6 + 1e-6 * y[409])
    R776 = (13.7 * 1e-6 * y[413])/(130e-6 + 1e-6 * y[413])
    R1482 = (13.7 * 1e-6 * y[413] * y[1344] * y[1614])/(130e-6 + 1e-6 * y[413] * y[1344] * y[1614])
    return (R462) - (R776 + R1482)
 
def m_cpgn_un_c(t, y):
    R463 = (13.7 * 1e-6 * y[422] * y[136])/(130e-6 + 1e-6 * y[422] * y[136])
    R464 = (13.7 * 1e-6 * y[422] * y[655])/(130e-6 + 1e-6 * y[422] * y[655])
    R465 = (13.7 * 1e-6 * y[422] * y[649])/(130e-6 + 1e-6 * y[422] * y[649])
    R469 = (13.7 * 1e-6 * y[414] * y[61])/(130e-6 + 1e-6 * y[414] * y[61])
    return (R463 + R464 + R465) - (R469)
 
def m_so3_c(t, y):
    R466 = (13.7 * 1e-6 * y[1404] * y[1255])/(130e-6 + 1e-6 * y[1404] * y[1255])
    R981 = (13.7 * 1e-6 * y[328] * y[655] * y[335])/(130e-6 + 1e-6 * y[328] * y[655] * y[335])
    R982 = (13.7 * 1e-6 * y[655] * y[335] * y[1230])/(130e-6 + 1e-6 * y[655] * y[335] * y[1230])
    R1022 = (13.7 * 1e-6 * y[655] * y[841] * y[335])/(130e-6 + 1e-6 * y[655] * y[841] * y[335])
    R1023 = (13.7 * 1e-6 * y[655] * y[1053] * y[335])/(130e-6 + 1e-6 * y[655] * y[1053] * y[335])
    R1030 = (13.7 * 1e-6 * y[569] * y[655] * y[335])/(130e-6 + 1e-6 * y[569] * y[655] * y[335])
    R1842 = (13.7 * 1e-6 * y[152] * y[1240])/(130e-6 + 1e-6 * y[152] * y[1240])
    R1844 = (13.7 * 1e-6 * y[762] * y[152])/(130e-6 + 1e-6 * y[762] * y[152])
    R2250 = (13.7 * 1e-6 * y[213] * y[335] * y[1244])/(130e-6 + 1e-6 * y[213] * y[335] * y[1244])
    R2237 = (13.7 * 1e-6 * y[36] * y[201] * y[415])/(130e-6 + 1e-6 * y[36] * y[201] * y[415])
    return (R466 + R981 + R982 + R1022 + R1023 + R1030 + R1842 + R1844 + R2250) - (R2237)
 
def m_tcynt_c(t, y):
    R466 = (13.7 * 1e-6 * y[1404] * y[1255])/(130e-6 + 1e-6 * y[1404] * y[1255])
    R1595 = (13.7 * 1e-6 * y[1404] * y[1647])/(130e-6 + 1e-6 * y[1404] * y[1647])
    return (R466 + R1595) - (0)
 
def m_so3_p(t, y):
    R467 = (13.7 * 1e-6 * y[424] * y[1256])/(130e-6 + 1e-6 * y[424] * y[1256])
    R2178 = (13.7 * 1e-6 * y[1560])/(130e-6 + 1e-6 * y[1560])
    return (R467 + R2178) - (0)
 
def m_tcynt_p(t, y):
    R467 = (13.7 * 1e-6 * y[424] * y[1256])/(130e-6 + 1e-6 * y[424] * y[1256])
    R2259 = (13.7 * 1e-6 * y[1570])/(130e-6 + 1e-6 * y[1570])
    return (R467 + R2259) - (0)
 
def m_cpgn_un_e(t, y):
    R468 = (13.7 * 1e-6 * y[420] * y[61])/(130e-6 + 1e-6 * y[420] * y[61])
    R472 = (13.7 * 1e-6 * y[419] * y[1365])/(130e-6 + 1e-6 * y[419] * y[1365])
    R778 = (13.7 * 1e-6 * y[419])/(130e-6 + 1e-6 * y[419])
    return (R468) - (R472 + R778)
 
def m_cpgn_un_p(t, y):
    R469 = (13.7 * 1e-6 * y[414] * y[61])/(130e-6 + 1e-6 * y[414] * y[61])
    R468 = (13.7 * 1e-6 * y[420] * y[61])/(130e-6 + 1e-6 * y[420] * y[61])
    return (R469) - (R468)
 
def m_t3c9palmeACP_c(t, y):
    R470 = (13.7 * 1e-6 * y[560])/(130e-6 + 1e-6 * y[560])
    R683 = (13.7 * 1e-6 * y[36] * y[113] * y[421])/(130e-6 + 1e-6 * y[36] * y[113] * y[421])
    R684 = (13.7 * 1e-6 * y[36] * y[201] * y[421])/(130e-6 + 1e-6 * y[36] * y[201] * y[421])
    return (R470) - (R683 + R684)
 
def m_cpgn_c(t, y):
    R471 = (13.7 * 1e-6 * y[278] * y[426] * y[173])/(130e-6 + 1e-6 * y[278] * y[426] * y[173])
    R463 = (13.7 * 1e-6 * y[422] * y[136])/(130e-6 + 1e-6 * y[422] * y[136])
    R464 = (13.7 * 1e-6 * y[422] * y[655])/(130e-6 + 1e-6 * y[422] * y[655])
    R465 = (13.7 * 1e-6 * y[422] * y[649])/(130e-6 + 1e-6 * y[422] * y[649])
    return (R471) - (R463 + R464 + R465)
 
def m_cpgn_e(t, y):
    R472 = (13.7 * 1e-6 * y[419] * y[1365])/(130e-6 + 1e-6 * y[419] * y[1365])
    R476 = (13.7 * 1e-6 * y[423] * y[61])/(130e-6 + 1e-6 * y[423] * y[61])
    R777 = (13.7 * 1e-6 * y[423])/(130e-6 + 1e-6 * y[423])
    return (R472) - (R476 + R777)
 
def m_cyan_p(t, y):
    R473 = (13.7 * 1e-6 * y[1405])/(130e-6 + 1e-6 * y[1405])
    R467 = (13.7 * 1e-6 * y[424] * y[1256])/(130e-6 + 1e-6 * y[424] * y[1256])
    return (R473) - (R467)
 
def m_cynt_c(t, y):
    R475 = (13.7 * 1e-6 * y[429] * y[61])/(130e-6 + 1e-6 * y[429] * y[61])
    R474 = (13.7 * 1e-6 * y[425] * y[36] * y[782])/(130e-6 + 1e-6 * y[425] * y[36] * y[782])
    return (R475) - (R474)
 
def m_cpgn_p(t, y):
    R476 = (13.7 * 1e-6 * y[423] * y[61])/(130e-6 + 1e-6 * y[423] * y[61])
    R471 = (13.7 * 1e-6 * y[278] * y[426] * y[173])/(130e-6 + 1e-6 * y[278] * y[426] * y[173])
    return (R476) - (R471)
 
def m_pppg9_c(t, y):
    R477 = (13.7 * 1e-6 * y[1252] * y[36] * y[335])/(130e-6 + 1e-6 * y[1252] * y[36] * y[335])
    R481 = (13.7 * 1e-6 * y[921] * y[1252])/(130e-6 + 1e-6 * y[921] * y[1252])
    R2016 = (13.7 * 1e-6 * y[335] * y[427])/(130e-6 + 1e-6 * y[335] * y[427])
    R2017 = (13.7 * 1e-6 * y[153] * y[427])/(130e-6 + 1e-6 * y[153] * y[427])
    return (R477 + R481) - (R2016 + R2017)
 
def m_toctd2eACP_c(t, y):
    R478 = (13.7 * 1e-6 * y[5])/(130e-6 + 1e-6 * y[5])
    R690 = (13.7 * 1e-6 * y[36] * y[113] * y[428])/(130e-6 + 1e-6 * y[36] * y[113] * y[428])
    R691 = (13.7 * 1e-6 * y[36] * y[201] * y[428])/(130e-6 + 1e-6 * y[36] * y[201] * y[428])
    return (R478) - (R690 + R691)
 
def m_cynt_p(t, y):
    R479 = (13.7 * 1e-6 * y[1406])/(130e-6 + 1e-6 * y[1406])
    R475 = (13.7 * 1e-6 * y[429] * y[61])/(130e-6 + 1e-6 * y[429] * y[61])
    return (R479) - (R475)
 
def m_h2s_c(t, y):
    R480 = (13.7 * 1e-6 * y[433] * y[173])/(130e-6 + 1e-6 * y[433] * y[173])
    R486 = (13.7 * 1e-6 * y[260] * y[173])/(130e-6 + 1e-6 * y[260] * y[173])
    R2237 = (13.7 * 1e-6 * y[36] * y[201] * y[415])/(130e-6 + 1e-6 * y[36] * y[201] * y[415])
    R489 = (13.7 * 1e-6 * y[1190] * y[430])/(130e-6 + 1e-6 * y[1190] * y[430])
    R1344 = (13.7 * 1e-6 * y[430] * y[335])/(130e-6 + 1e-6 * y[430] * y[335])
    R1345 = (13.7 * 1e-6 * y[430])/(130e-6 + 1e-6 * y[430])
    return (R480 + R486 + R2237) - (R489 + R1344 + R1345)
 
def m_crncoa_c(t, y):
    R482 = (13.7 * 1e-6 * y[1407] * y[384])/(130e-6 + 1e-6 * y[1407] * y[384])
    R483 = (13.7 * 1e-6 * y[278] * y[99] * y[384])/(130e-6 + 1e-6 * y[278] * y[99] * y[384])
    R485 = (13.7 * 1e-6 * y[384] * y[400])/(130e-6 + 1e-6 * y[384] * y[400])
    R484 = (13.7 * 1e-6 * y[431])/(130e-6 + 1e-6 * y[431])
    R492 = (13.7 * 1e-6 * y[431])/(130e-6 + 1e-6 * y[431])
    return (R482 + R483 + R485) - (R484 + R492)
 
def m_gbbtn_c(t, y):
    R482 = (13.7 * 1e-6 * y[1407] * y[384])/(130e-6 + 1e-6 * y[1407] * y[384])
    R425 = (13.7 * 1e-6 * y[391] * y[432])/(130e-6 + 1e-6 * y[391] * y[432])
    return (R482) - (R425)
 
def m_cys__D_c(t, y):
    R487 = (13.7 * 1e-6 * y[278] * y[434] * y[173])/(130e-6 + 1e-6 * y[278] * y[434] * y[173])
    R480 = (13.7 * 1e-6 * y[433] * y[173])/(130e-6 + 1e-6 * y[433] * y[173])
    return (R487) - (R480)
 
def m_cys__D_p(t, y):
    R488 = (13.7 * 1e-6 * y[1408])/(130e-6 + 1e-6 * y[1408])
    R487 = (13.7 * 1e-6 * y[278] * y[434] * y[173])/(130e-6 + 1e-6 * y[278] * y[434] * y[173])
    return (R488) - (R487)
 
def m_so2_c(t, y):
    R490 = (13.7 * 1e-6 * y[1409] * y[36])/(130e-6 + 1e-6 * y[1409] * y[36])
    R2177 = (13.7 * 1e-6 * y[1208])/(130e-6 + 1e-6 * y[1208])
    return (R490 + R2177) - (0)
 
def m_hcys__L_c(t, y):
    R491 = (13.7 * 1e-6 * y[1206] * y[173])/(130e-6 + 1e-6 * y[1206] * y[173])
    R2064 = (13.7 * 1e-6 * y[204])/(130e-6 + 1e-6 * y[204])
    R1321 = (13.7 * 1e-6 * y[921] * y[436])/(130e-6 + 1e-6 * y[921] * y[436])
    R1322 = (13.7 * 1e-6 * y[436] * y[930])/(130e-6 + 1e-6 * y[436] * y[930])
    R1646 = (13.7 * 1e-6 * y[1078] * y[436])/(130e-6 + 1e-6 * y[1078] * y[436])
    return (R491 + R2064) - (R1321 + R1322 + R1646)
 
def m_cystrna_c(t, y):
    R493 = (13.7 * 1e-6 * y[278] * y[260] * y[1410])/(130e-6 + 1e-6 * y[278] * y[260] * y[1410])
    return (R493) - (0)
 
def m_t3c11vaceACP_c(t, y):
    R494 = (13.7 * 1e-6 * y[8])/(130e-6 + 1e-6 * y[8])
    R693 = (13.7 * 1e-6 * y[36] * y[113] * y[438])/(130e-6 + 1e-6 * y[36] * y[113] * y[438])
    R694 = (13.7 * 1e-6 * y[36] * y[201] * y[438])/(130e-6 + 1e-6 * y[36] * y[201] * y[438])
    return (R494) - (R693 + R694)
 
def m_cys__L_p(t, y):
    R495 = (13.7 * 1e-6 * y[278] * y[260] * y[173])/(130e-6 + 1e-6 * y[278] * y[260] * y[173])
    R497 = (13.7 * 1e-6 * y[1411])/(130e-6 + 1e-6 * y[1411])
    R500 = (13.7 * 1e-6 * y[260])/(130e-6 + 1e-6 * y[260])
    R496 = (13.7 * 1e-6 * y[278] * y[439] * y[173])/(130e-6 + 1e-6 * y[278] * y[439] * y[173])
    return (R495 + R497 + R500) - (R496)
 
def m_but2eACP_c(t, y):
    R501 = (13.7 * 1e-6 * y[10])/(130e-6 + 1e-6 * y[10])
    R638 = (13.7 * 1e-6 * y[440] * y[36] * y[113])/(130e-6 + 1e-6 * y[440] * y[36] * y[113])
    R640 = (13.7 * 1e-6 * y[440] * y[36] * y[201])/(130e-6 + 1e-6 * y[440] * y[36] * y[201])
    return (R501) - (R638 + R640)
 
def m_mqn8_c(t, y):
    R502 = (13.7 * 1e-6 * y[36] * y[250] * y[335])/(130e-6 + 1e-6 * y[36] * y[250] * y[335])
    R573 = (13.7 * 1e-6 * y[1424] * y[250])/(130e-6 + 1e-6 * y[1424] * y[250])
    R580 = (13.7 * 1e-6 * y[496] * y[250])/(130e-6 + 1e-6 * y[496] * y[250])
    R1039 = (13.7 * 1e-6 * y[153] * y[250])/(130e-6 + 1e-6 * y[153] * y[250])
    R1707 = (13.7 * 1e-6 * y[250] * y[964])/(130e-6 + 1e-6 * y[250] * y[964])
    R1708 = (13.7 * 1e-6 * y[36] * y[250] * y[962])/(130e-6 + 1e-6 * y[36] * y[250] * y[962])
    R1782 = (13.7 * 1e-6 * y[61] * y[250] * y[960])/(130e-6 + 1e-6 * y[61] * y[250] * y[960])
    R2125 = (13.7 * 1e-6 * y[250] * y[335])/(130e-6 + 1e-6 * y[250] * y[335])
    R2216 = (13.7 * 1e-6 * y[36] * y[250] * y[1664])/(130e-6 + 1e-6 * y[36] * y[250] * y[1664])
    R2217 = (13.7 * 1e-6 * y[61] * y[250] * y[1231])/(130e-6 + 1e-6 * y[61] * y[250] * y[1231])
    R295 = (13.7 * 1e-6 * y[300] * y[441])/(130e-6 + 1e-6 * y[300] * y[441])
    R608 = (13.7 * 1e-6 * y[1430] * y[441])/(130e-6 + 1e-6 * y[1430] * y[441])
    R618 = (13.7 * 1e-6 * y[1433] * y[441])/(130e-6 + 1e-6 * y[1433] * y[441])
    R1021 = (13.7 * 1e-6 * y[620] * y[36] * y[441])/(130e-6 + 1e-6 * y[620] * y[36] * y[441])
    R1116 = (13.7 * 1e-6 * y[743] * y[441])/(130e-6 + 1e-6 * y[743] * y[441])
    R1275 = (13.7 * 1e-6 * y[702] * y[441])/(130e-6 + 1e-6 * y[702] * y[441])
    R1425 = (13.7 * 1e-6 * y[645] * y[36] * y[441])/(130e-6 + 1e-6 * y[645] * y[36] * y[441])
    R1553 = (13.7 * 1e-6 * y[846] * y[441])/(130e-6 + 1e-6 * y[846] * y[441])
    R1616 = (13.7 * 1e-6 * y[643] * y[441])/(130e-6 + 1e-6 * y[643] * y[441])
    R2055 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2069 = (13.7 * 1e-6 * y[36] * y[441] * y[113])/(130e-6 + 1e-6 * y[36] * y[441] * y[113])
    R2164 = (13.7 * 1e-6 * y[36] * y[441] * y[201])/(130e-6 + 1e-6 * y[36] * y[441] * y[201])
    return (R502 + R573 + R580 + R1039 + R1707 + R1708 + R1782 + R2125 + R2216 + R2217) - (R295 + R608 + R618 + R1021 + R1116 + R1275 + R1425 + R1553 + R1616 + R2055 + R2069 + R2164)
 
def m_damp_p(t, y):
    R503 = (13.7 * 1e-6 * y[1413])/(130e-6 + 1e-6 * y[1413])
    R1759 = (13.7 * 1e-6 * y[442] * y[406])/(130e-6 + 1e-6 * y[442] * y[406])
    return (R503) - (R1759)
 
def m_26dap__M_c(t, y):
    R506 = (13.7 * 1e-6 * y[1184])/(130e-6 + 1e-6 * y[1184])
    R508 = (13.7 * 1e-6 * y[77] * y[278] * y[173])/(130e-6 + 1e-6 * y[77] * y[278] * y[173])
    R1445 = (13.7 * 1e-6 * y[34] * y[173])/(130e-6 + 1e-6 * y[34] * y[173])
    R505 = (13.7 * 1e-6 * y[443] * y[36])/(130e-6 + 1e-6 * y[443] * y[36])
    R2308 = (13.7 * 1e-6 * y[443] * y[278] * y[1290])/(130e-6 + 1e-6 * y[443] * y[278] * y[1290])
    return (R506 + R508 + R1445) - (R505 + R2308)
 
def m_q8_c(t, y):
    R507 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R509 = (13.7 * 1e-6 * y[36] * y[335] * y[289])/(130e-6 + 1e-6 * y[36] * y[335] * y[289])
    R1704 = (13.7 * 1e-6 * y[964] * y[289])/(130e-6 + 1e-6 * y[964] * y[289])
    R1706 = (13.7 * 1e-6 * y[36] * y[962] * y[289])/(130e-6 + 1e-6 * y[36] * y[962] * y[289])
    R1781 = (13.7 * 1e-6 * y[61] * y[960] * y[289])/(130e-6 + 1e-6 * y[61] * y[960] * y[289])
    R2123 = (13.7 * 1e-6 * y[335] * y[289])/(130e-6 + 1e-6 * y[335] * y[289])
    R294 = (13.7 * 1e-6 * y[300] * y[444])/(130e-6 + 1e-6 * y[300] * y[444])
    R604 = (13.7 * 1e-6 * y[1430] * y[444])/(130e-6 + 1e-6 * y[1430] * y[444])
    R617 = (13.7 * 1e-6 * y[1433] * y[444])/(130e-6 + 1e-6 * y[1433] * y[444])
    R1020 = (13.7 * 1e-6 * y[620] * y[36] * y[444])/(130e-6 + 1e-6 * y[620] * y[36] * y[444])
    R1113 = (13.7 * 1e-6 * y[743] * y[444])/(130e-6 + 1e-6 * y[743] * y[444])
    R1198 = (13.7 * 1e-6 * y[651] * y[406] * y[444])/(130e-6 + 1e-6 * y[651] * y[406] * y[444])
    R1274 = (13.7 * 1e-6 * y[702] * y[444])/(130e-6 + 1e-6 * y[702] * y[444])
    R1424 = (13.7 * 1e-6 * y[645] * y[36] * y[444])/(130e-6 + 1e-6 * y[645] * y[36] * y[444])
    R1468 = (13.7 * 1e-6 * y[106] * y[444])/(130e-6 + 1e-6 * y[106] * y[444])
    R1549 = (13.7 * 1e-6 * y[846] * y[444])/(130e-6 + 1e-6 * y[846] * y[444])
    R1615 = (13.7 * 1e-6 * y[643] * y[444])/(130e-6 + 1e-6 * y[643] * y[444])
    R1968 = (13.7 * 1e-6 * y[173] * y[92] * y[444])/(130e-6 + 1e-6 * y[173] * y[92] * y[444])
    R2062 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2111 = (13.7 * 1e-6 * y[36] * y[113] * y[444])/(130e-6 + 1e-6 * y[36] * y[113] * y[444])
    R2155 = (13.7 * 1e-6 * y[36] * y[201] * y[444])/(130e-6 + 1e-6 * y[36] * y[201] * y[444])
    R2215 = (13.7 * 1e-6 * y[444] * y[290])/(130e-6 + 1e-6 * y[444] * y[290])
    return (R507 + R509 + R1704 + R1706 + R1781 + R2123) - (R294 + R604 + R617 + R1020 + R1113 + R1198 + R1274 + R1424 + R1468 + R1549 + R1615 + R1968 + R2062 + R2111 + R2155 + R2215)
 
def m_thex2eACP_c(t, y):
    R510 = (13.7 * 1e-6 * y[12])/(130e-6 + 1e-6 * y[12])
    R644 = (13.7 * 1e-6 * y[36] * y[113] * y[445])/(130e-6 + 1e-6 * y[36] * y[113] * y[445])
    R648 = (13.7 * 1e-6 * y[36] * y[201] * y[445])/(130e-6 + 1e-6 * y[36] * y[201] * y[445])
    return (R510) - (R644 + R648)
 
def m_uri_c(t, y):
    R511 = (13.7 * 1e-6 * y[454] * y[173] * y[36])/(130e-6 + 1e-6 * y[454] * y[173] * y[36])
    R1738 = (13.7 * 1e-6 * y[173] * y[90])/(130e-6 + 1e-6 * y[173] * y[90])
    R2301 = (13.7 * 1e-6 * y[61] * y[482])/(130e-6 + 1e-6 * y[61] * y[482])
    R2302 = (13.7 * 1e-6 * y[61] * y[482])/(130e-6 + 1e-6 * y[61] * y[482])
    R2118 = (13.7 * 1e-6 * y[37] * y[446])/(130e-6 + 1e-6 * y[37] * y[446])
    R2299 = (13.7 * 1e-6 * y[173] * y[446])/(130e-6 + 1e-6 * y[173] * y[446])
    R2300 = (13.7 * 1e-6 * y[928] * y[446])/(130e-6 + 1e-6 * y[928] * y[446])
    return (R511 + R1738 + R2301 + R2302) - (R2118 + R2299 + R2300)
 
def m_cdpdddecg_c(t, y):
    R514 = (13.7 * 1e-6 * y[404] * y[36] * y[187])/(130e-6 + 1e-6 * y[404] * y[36] * y[187])
    R403 = (13.7 * 1e-6 * y[447] * y[173])/(130e-6 + 1e-6 * y[447] * y[173])
    R1922 = (13.7 * 1e-6 * y[447] * y[743])/(130e-6 + 1e-6 * y[447] * y[743])
    R2052 = (13.7 * 1e-6 * y[447] * y[500])/(130e-6 + 1e-6 * y[447] * y[500])
    return (R514) - (R403 + R1922 + R2052)
 
def m_cdpdtdecg_c(t, y):
    R515 = (13.7 * 1e-6 * y[404] * y[36] * y[188])/(130e-6 + 1e-6 * y[404] * y[36] * y[188])
    R404 = (13.7 * 1e-6 * y[448] * y[173])/(130e-6 + 1e-6 * y[448] * y[173])
    R1923 = (13.7 * 1e-6 * y[448] * y[743])/(130e-6 + 1e-6 * y[448] * y[743])
    R2053 = (13.7 * 1e-6 * y[448] * y[500])/(130e-6 + 1e-6 * y[448] * y[500])
    return (R515) - (R404 + R1923 + R2053)
 
def m_cdpdtdec7eg_c(t, y):
    R516 = (13.7 * 1e-6 * y[404] * y[36] * y[192])/(130e-6 + 1e-6 * y[404] * y[36] * y[192])
    R405 = (13.7 * 1e-6 * y[449] * y[173])/(130e-6 + 1e-6 * y[449] * y[173])
    R1925 = (13.7 * 1e-6 * y[449] * y[743])/(130e-6 + 1e-6 * y[449] * y[743])
    R2057 = (13.7 * 1e-6 * y[449] * y[500])/(130e-6 + 1e-6 * y[449] * y[500])
    return (R516) - (R405 + R1925 + R2057)
 
def m_cdpdhdecg_c(t, y):
    R517 = (13.7 * 1e-6 * y[404] * y[36] * y[193])/(130e-6 + 1e-6 * y[404] * y[36] * y[193])
    R411 = (13.7 * 1e-6 * y[450] * y[173])/(130e-6 + 1e-6 * y[450] * y[173])
    R1927 = (13.7 * 1e-6 * y[450] * y[743])/(130e-6 + 1e-6 * y[450] * y[743])
    R2058 = (13.7 * 1e-6 * y[450] * y[500])/(130e-6 + 1e-6 * y[450] * y[500])
    return (R517) - (R411 + R1927 + R2058)
 
def m_cdpdhdec9eg_c(t, y):
    R518 = (13.7 * 1e-6 * y[404] * y[36] * y[198])/(130e-6 + 1e-6 * y[404] * y[36] * y[198])
    R365 = (13.7 * 1e-6 * y[451] * y[173])/(130e-6 + 1e-6 * y[451] * y[173])
    R1928 = (13.7 * 1e-6 * y[451] * y[743])/(130e-6 + 1e-6 * y[451] * y[743])
    R2061 = (13.7 * 1e-6 * y[451] * y[500])/(130e-6 + 1e-6 * y[451] * y[500])
    return (R518) - (R365 + R1928 + R2061)
 
def m_cdpdodecg_c(t, y):
    R519 = (13.7 * 1e-6 * y[404] * y[36] * y[199])/(130e-6 + 1e-6 * y[404] * y[36] * y[199])
    R366 = (13.7 * 1e-6 * y[452] * y[173])/(130e-6 + 1e-6 * y[452] * y[173])
    R1933 = (13.7 * 1e-6 * y[452] * y[743])/(130e-6 + 1e-6 * y[452] * y[743])
    R2063 = (13.7 * 1e-6 * y[452] * y[500])/(130e-6 + 1e-6 * y[452] * y[500])
    return (R519) - (R366 + R1933 + R2063)
 
def m_cdpdodec11eg_c(t, y):
    R520 = (13.7 * 1e-6 * y[404] * y[36] * y[200])/(130e-6 + 1e-6 * y[404] * y[36] * y[200])
    R367 = (13.7 * 1e-6 * y[453] * y[173])/(130e-6 + 1e-6 * y[453] * y[173])
    R1934 = (13.7 * 1e-6 * y[453] * y[743])/(130e-6 + 1e-6 * y[453] * y[743])
    R2067 = (13.7 * 1e-6 * y[453] * y[500])/(130e-6 + 1e-6 * y[453] * y[500])
    return (R520) - (R367 + R1934 + R2067)
 
def m_cytd_c(t, y):
    R522 = (13.7 * 1e-6 * y[455] * y[61])/(130e-6 + 1e-6 * y[455] * y[61])
    R523 = (13.7 * 1e-6 * y[455] * y[61])/(130e-6 + 1e-6 * y[455] * y[61])
    R1750 = (13.7 * 1e-6 * y[332] * y[173])/(130e-6 + 1e-6 * y[332] * y[173])
    R511 = (13.7 * 1e-6 * y[454] * y[173] * y[36])/(130e-6 + 1e-6 * y[454] * y[173] * y[36])
    R512 = (13.7 * 1e-6 * y[454] * y[173])/(130e-6 + 1e-6 * y[454] * y[173])
    R521 = (13.7 * 1e-6 * y[454] * y[928])/(130e-6 + 1e-6 * y[454] * y[928])
    return (R522 + R523 + R1750) - (R511 + R512 + R521)
 
def m_cytd_p(t, y):
    R524 = (13.7 * 1e-6 * y[1415])/(130e-6 + 1e-6 * y[1415])
    R570 = (13.7 * 1e-6 * y[62] * y[406])/(130e-6 + 1e-6 * y[62] * y[406])
    R1751 = (13.7 * 1e-6 * y[399] * y[406])/(130e-6 + 1e-6 * y[399] * y[406])
    R522 = (13.7 * 1e-6 * y[455] * y[61])/(130e-6 + 1e-6 * y[455] * y[61])
    R523 = (13.7 * 1e-6 * y[455] * y[61])/(130e-6 + 1e-6 * y[455] * y[61])
    return (R524 + R570 + R1751) - (R522 + R523)
 
def m_cdp_c(t, y):
    R525 = (13.7 * 1e-6 * y[278] * y[332])/(130e-6 + 1e-6 * y[278] * y[332])
    R1749 = (13.7 * 1e-6 * y[404] * y[173])/(130e-6 + 1e-6 * y[404] * y[173])
    R1652 = (13.7 * 1e-6 * y[278] * y[456])/(130e-6 + 1e-6 * y[278] * y[456])
    R2092 = (13.7 * 1e-6 * y[456] * y[1240])/(130e-6 + 1e-6 * y[456] * y[1240])
    R2093 = (13.7 * 1e-6 * y[456] * y[762])/(130e-6 + 1e-6 * y[456] * y[762])
    return (R525 + R1749) - (R1652 + R2092 + R2093)
 
def m_dcdp_c(t, y):
    R526 = (13.7 * 1e-6 * y[278] * y[979])/(130e-6 + 1e-6 * y[278] * y[979])
    R2092 = (13.7 * 1e-6 * y[456] * y[1240])/(130e-6 + 1e-6 * y[456] * y[1240])
    R2093 = (13.7 * 1e-6 * y[456] * y[762])/(130e-6 + 1e-6 * y[456] * y[762])
    R1656 = (13.7 * 1e-6 * y[278] * y[457])/(130e-6 + 1e-6 * y[278] * y[457])
    return (R526 + R2092 + R2093) - (R1656)
 
def m_din_c(t, y):
    R528 = (13.7 * 1e-6 * y[464] * y[173] * y[36])/(130e-6 + 1e-6 * y[464] * y[173] * y[36])
    R629 = (13.7 * 1e-6 * y[533] * y[61])/(130e-6 + 1e-6 * y[533] * y[61])
    R1730 = (13.7 * 1e-6 * y[978] * y[173])/(130e-6 + 1e-6 * y[978] * y[173])
    R2099 = (13.7 * 1e-6 * y[458] * y[37])/(130e-6 + 1e-6 * y[458] * y[37])
    return (R528 + R629 + R1730) - (R2099)
 
def m_ditp_c(t, y):
    R529 = (13.7 * 1e-6 * y[935] * y[173] * y[36])/(130e-6 + 1e-6 * y[935] * y[173] * y[36])
    R1741 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    R1755 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    return (R529) - (R1741 + R1755)
 
def m_db4p_c(t, y):
    R530 = (13.7 * 1e-6 * y[753])/(130e-6 + 1e-6 * y[753])
    R2141 = (13.7 * 1e-6 * y[1094] * y[460])/(130e-6 + 1e-6 * y[1094] * y[460])
    return (R530) - (R2141)
 
def m_dtbt_c(t, y):
    R531 = (13.7 * 1e-6 * y[278] * y[16] * y[249])/(130e-6 + 1e-6 * y[278] * y[16] * y[249])
    R353 = (13.7 * 1e-6 * y[921] * y[461] * y[1379])/(130e-6 + 1e-6 * y[921] * y[461] * y[1379])
    return (R531) - (R353)
 
def m_dadp_c(t, y):
    R532 = (13.7 * 1e-6 * y[278] * y[980])/(130e-6 + 1e-6 * y[278] * y[980])
    R2081 = (13.7 * 1e-6 * y[35] * y[1240])/(130e-6 + 1e-6 * y[35] * y[1240])
    R2082 = (13.7 * 1e-6 * y[35] * y[762])/(130e-6 + 1e-6 * y[35] * y[762])
    R1657 = (13.7 * 1e-6 * y[278] * y[462])/(130e-6 + 1e-6 * y[278] * y[462])
    return (R532 + R2081 + R2082) - (R1657)
 
def m_toct2eACP_c(t, y):
    R533 = (13.7 * 1e-6 * y[13])/(130e-6 + 1e-6 * y[13])
    R649 = (13.7 * 1e-6 * y[36] * y[113] * y[463])/(130e-6 + 1e-6 * y[36] * y[113] * y[463])
    R650 = (13.7 * 1e-6 * y[36] * y[201] * y[463])/(130e-6 + 1e-6 * y[36] * y[201] * y[463])
    return (R533) - (R649 + R650)
 
def m_dad_2_c(t, y):
    R534 = (13.7 * 1e-6 * y[465] * y[61])/(130e-6 + 1e-6 * y[465] * y[61])
    R1757 = (13.7 * 1e-6 * y[980] * y[173])/(130e-6 + 1e-6 * y[980] * y[173])
    R528 = (13.7 * 1e-6 * y[464] * y[173] * y[36])/(130e-6 + 1e-6 * y[464] * y[173] * y[36])
    R2089 = (13.7 * 1e-6 * y[464] * y[37])/(130e-6 + 1e-6 * y[464] * y[37])
    return (R534 + R1757) - (R528 + R2089)
 
def m_dad_2_p(t, y):
    R535 = (13.7 * 1e-6 * y[1416])/(130e-6 + 1e-6 * y[1416])
    R1759 = (13.7 * 1e-6 * y[442] * y[406])/(130e-6 + 1e-6 * y[442] * y[406])
    R534 = (13.7 * 1e-6 * y[465] * y[61])/(130e-6 + 1e-6 * y[465] * y[61])
    return (R535 + R1759) - (R534)
 
def m_dca_p(t, y):
    R537 = (13.7 * 1e-6 * y[1417])/(130e-6 + 1e-6 * y[1417])
    R969 = (13.7 * 1e-6 * y[278] * y[99] * y[466] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[466] * y[61])
    return (R537) - (R969)
 
def m_dcmp_p(t, y):
    R538 = (13.7 * 1e-6 * y[1418])/(130e-6 + 1e-6 * y[1418])
    R1745 = (13.7 * 1e-6 * y[467] * y[406])/(130e-6 + 1e-6 * y[467] * y[406])
    return (R538) - (R1745)
 
def m_dutp_c(t, y):
    R540 = (13.7 * 1e-6 * y[934] * y[173] * y[36])/(130e-6 + 1e-6 * y[934] * y[173] * y[36])
    R1655 = (13.7 * 1e-6 * y[278] * y[1173])/(130e-6 + 1e-6 * y[278] * y[1173])
    R2104 = (13.7 * 1e-6 * y[646] * y[929])/(130e-6 + 1e-6 * y[646] * y[929])
    R643 = (13.7 * 1e-6 * y[468] * y[173])/(130e-6 + 1e-6 * y[468] * y[173])
    return (R540 + R1655 + R2104) - (R643)
 
def m_duri_c(t, y):
    R542 = (13.7 * 1e-6 * y[471] * y[173] * y[36])/(130e-6 + 1e-6 * y[471] * y[173] * y[36])
    R641 = (13.7 * 1e-6 * y[540] * y[61])/(130e-6 + 1e-6 * y[540] * y[61])
    R1723 = (13.7 * 1e-6 * y[536] * y[173])/(130e-6 + 1e-6 * y[536] * y[173])
    R636 = (13.7 * 1e-6 * y[278] * y[469])/(130e-6 + 1e-6 * y[278] * y[469])
    R637 = (13.7 * 1e-6 * y[469] * y[37])/(130e-6 + 1e-6 * y[469] * y[37])
    return (R542 + R641 + R1723) - (R636 + R637)
 
def m_dhcinnm_c(t, y):
    R543 = (13.7 * 1e-6 * y[777] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[777] * y[36] * y[113] * y[335])
    R590 = (13.7 * 1e-6 * y[356] * y[236])/(130e-6 + 1e-6 * y[356] * y[236])
    R591 = (13.7 * 1e-6 * y[470] * y[335])/(130e-6 + 1e-6 * y[470] * y[335])
    return (R543 + R590) - (R591)
 
def m_dcyt_c(t, y):
    R544 = (13.7 * 1e-6 * y[472] * y[61])/(130e-6 + 1e-6 * y[472] * y[61])
    R1744 = (13.7 * 1e-6 * y[979] * y[173])/(130e-6 + 1e-6 * y[979] * y[173])
    R542 = (13.7 * 1e-6 * y[471] * y[173] * y[36])/(130e-6 + 1e-6 * y[471] * y[173] * y[36])
    return (R544 + R1744) - (R542)
 
def m_dcyt_p(t, y):
    R548 = (13.7 * 1e-6 * y[1419])/(130e-6 + 1e-6 * y[1419])
    R1745 = (13.7 * 1e-6 * y[467] * y[406])/(130e-6 + 1e-6 * y[467] * y[406])
    R544 = (13.7 * 1e-6 * y[472] * y[61])/(130e-6 + 1e-6 * y[472] * y[61])
    return (R548 + R1745) - (R544)
 
def m_dhpppn_c(t, y):
    R549 = (13.7 * 1e-6 * y[819] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[819] * y[36] * y[113] * y[335])
    R611 = (13.7 * 1e-6 * y[1132] * y[236])/(130e-6 + 1e-6 * y[1132] * y[236])
    R1394 = (13.7 * 1e-6 * y[473] * y[335])/(130e-6 + 1e-6 * y[473] * y[335])
    return (R549 + R611) - (R1394)
 
def m_ddca_p(t, y):
    R550 = (13.7 * 1e-6 * y[1420])/(130e-6 + 1e-6 * y[1420])
    R1496 = (13.7 * 1e-6 * y[1058] * y[406])/(130e-6 + 1e-6 * y[1058] * y[406])
    R1508 = (13.7 * 1e-6 * y[1071] * y[406])/(130e-6 + 1e-6 * y[1071] * y[406])
    R1523 = (13.7 * 1e-6 * y[1081] * y[406])/(130e-6 + 1e-6 * y[1081] * y[406])
    R1916 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1929 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R1939 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R1958 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1974 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R1987 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R973 = (13.7 * 1e-6 * y[278] * y[99] * y[474] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[474] * y[61])
    return (R550 + R1496 + R1508 + R1523 + R1916 + R1929 + R1939 + R1958 + R1974 + R1987) - (R973)
 
def m_2dh3dgal6p_c(t, y):
    R551 = (13.7 * 1e-6 * y[668] * y[278])/(130e-6 + 1e-6 * y[668] * y[278])
    R562 = (13.7 * 1e-6 * y[475])/(130e-6 + 1e-6 * y[475])
    return (R551) - (R562)
 
def m_2ddglcn_p(t, y):
    R555 = (13.7 * 1e-6 * y[1421])/(130e-6 + 1e-6 * y[1421])
    R552 = (13.7 * 1e-6 * y[476] * y[61])/(130e-6 + 1e-6 * y[476] * y[61])
    return (R555) - (R552)
 
def m_2ddg6p_c(t, y):
    R557 = (13.7 * 1e-6 * y[238] * y[278])/(130e-6 + 1e-6 * y[238] * y[278])
    R686 = (13.7 * 1e-6 * y[754])/(130e-6 + 1e-6 * y[754])
    R685 = (13.7 * 1e-6 * y[477])/(130e-6 + 1e-6 * y[477])
    return (R557 + R686) - (R685)
 
def m_2dda7p_c(t, y):
    R558 = (13.7 * 1e-6 * y[1237] * y[173] * y[563])/(130e-6 + 1e-6 * y[1237] * y[173] * y[563])
    R626 = (13.7 * 1e-6 * y[478])/(130e-6 + 1e-6 * y[478])
    return (R558) - (R626)
 
def m_2dhguln_c(t, y):
    R559 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R339 = (13.7 * 1e-6 * y[479] * y[36] * y[113])/(130e-6 + 1e-6 * y[479] * y[36] * y[113])
    R350 = (13.7 * 1e-6 * y[479] * y[36] * y[201])/(130e-6 + 1e-6 * y[479] * y[36] * y[201])
    return (R559) - (R339 + R350)
 
def m_g3p_c(t, y):
    R562 = (13.7 * 1e-6 * y[475])/(130e-6 + 1e-6 * y[475])
    R616 = (13.7 * 1e-6 * y[1125])/(130e-6 + 1e-6 * y[1125])
    R685 = (13.7 * 1e-6 * y[477])/(130e-6 + 1e-6 * y[477])
    R928 = (13.7 * 1e-6 * y[266])/(130e-6 + 1e-6 * y[266])
    R1006 = (13.7 * 1e-6 * y[623])/(130e-6 + 1e-6 * y[623])
    R2157 = (13.7 * 1e-6 * y[1051])/(130e-6 + 1e-6 * y[1051])
    R2209 = (13.7 * 1e-6 * y[227] * y[1156])/(130e-6 + 1e-6 * y[227] * y[1156])
    R2210 = (13.7 * 1e-6 * y[1237] * y[1156])/(130e-6 + 1e-6 * y[1237] * y[1156])
    R2234 = (13.7 * 1e-6 * y[492])/(130e-6 + 1e-6 * y[492])
    R2257 = (13.7 * 1e-6 * y[816] * y[500])/(130e-6 + 1e-6 * y[816] * y[500])
    R2267 = (13.7 * 1e-6 * y[816])/(130e-6 + 1e-6 * y[816])
    R647 = (13.7 * 1e-6 * y[480] * y[36] * y[92])/(130e-6 + 1e-6 * y[480] * y[36] * y[92])
    R1157 = (13.7 * 1e-6 * y[480] * y[236] * y[37])/(130e-6 + 1e-6 * y[480] * y[236] * y[37])
    R2241 = (13.7 * 1e-6 * y[480] * y[1225])/(130e-6 + 1e-6 * y[480] * y[1225])
    return (R562 + R616 + R685 + R928 + R1006 + R2157 + R2209 + R2210 + R2234 + R2257 + R2267) - (R647 + R1157 + R2241)
 
def m_2kmb_c(t, y):
    R563 = (13.7 * 1e-6 * y[913] * y[173] * y[335])/(130e-6 + 1e-6 * y[913] * y[173] * y[335])
    R565 = (13.7 * 1e-6 * y[913] * y[173] * y[236])/(130e-6 + 1e-6 * y[913] * y[173] * y[236])
    R2378 = (13.7 * 1e-6 * y[481] * y[110])/(130e-6 + 1e-6 * y[481] * y[110])
    return (R563 + R565) - (R2378)
 
def m_uri_p(t, y):
    R564 = (13.7 * 1e-6 * y[39] * y[406])/(130e-6 + 1e-6 * y[39] * y[406])
    R1742 = (13.7 * 1e-6 * y[406] * y[1270])/(130e-6 + 1e-6 * y[406] * y[1270])
    R2303 = (13.7 * 1e-6 * y[1542])/(130e-6 + 1e-6 * y[1542])
    R2301 = (13.7 * 1e-6 * y[61] * y[482])/(130e-6 + 1e-6 * y[61] * y[482])
    R2302 = (13.7 * 1e-6 * y[61] * y[482])/(130e-6 + 1e-6 * y[61] * y[482])
    return (R564 + R1742 + R2303) - (R2301 + R2302)
 
def m_dgdp_c(t, y):
    R566 = (13.7 * 1e-6 * y[278] * y[977])/(130e-6 + 1e-6 * y[278] * y[977])
    R2083 = (13.7 * 1e-6 * y[157] * y[1240])/(130e-6 + 1e-6 * y[157] * y[1240])
    R2086 = (13.7 * 1e-6 * y[157] * y[762])/(130e-6 + 1e-6 * y[157] * y[762])
    R1654 = (13.7 * 1e-6 * y[278] * y[483])/(130e-6 + 1e-6 * y[278] * y[483])
    return (R566 + R2083 + R2086) - (R1654)
 
def m_dgmp_p(t, y):
    R567 = (13.7 * 1e-6 * y[1423])/(130e-6 + 1e-6 * y[1423])
    R1732 = (13.7 * 1e-6 * y[484] * y[406])/(130e-6 + 1e-6 * y[484] * y[406])
    return (R567) - (R1732)
 
def m_dgsn_c(t, y):
    R568 = (13.7 * 1e-6 * y[489] * y[61])/(130e-6 + 1e-6 * y[489] * y[61])
    R1731 = (13.7 * 1e-6 * y[977] * y[173])/(130e-6 + 1e-6 * y[977] * y[173])
    R1774 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    R2091 = (13.7 * 1e-6 * y[485] * y[37])/(130e-6 + 1e-6 * y[485] * y[37])
    return (R568 + R1731 + R1774) - (R2091)
 
def m_grdp_c(t, y):
    R569 = (13.7 * 1e-6 * y[487] * y[834])/(130e-6 + 1e-6 * y[487] * y[834])
    R1283 = (13.7 * 1e-6 * y[486] * y[834])/(130e-6 + 1e-6 * y[486] * y[834])
    return (R569) - (R1283)
 
def m_dmpp_c(t, y):
    R571 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R1431 = (13.7 * 1e-6 * y[834])/(130e-6 + 1e-6 * y[834])
    R569 = (13.7 * 1e-6 * y[487] * y[834])/(130e-6 + 1e-6 * y[487] * y[834])
    return (R571 + R1431) - (R569)
 
def m_dms_c(t, y):
    R573 = (13.7 * 1e-6 * y[1424] * y[250])/(130e-6 + 1e-6 * y[1424] * y[250])
    R581 = (13.7 * 1e-6 * y[507] * y[1424])/(130e-6 + 1e-6 * y[507] * y[1424])
    return (R573 + R581) - (0)
 
def m_dgsn_p(t, y):
    R574 = (13.7 * 1e-6 * y[1425])/(130e-6 + 1e-6 * y[1425])
    R1732 = (13.7 * 1e-6 * y[484] * y[406])/(130e-6 + 1e-6 * y[484] * y[406])
    R568 = (13.7 * 1e-6 * y[489] * y[61])/(130e-6 + 1e-6 * y[489] * y[61])
    return (R574 + R1732) - (R568)
 
def m_3mob_c(t, y):
    R575 = (13.7 * 1e-6 * y[1426])/(130e-6 + 1e-6 * y[1426])
    R2305 = (13.7 * 1e-6 * y[213] * y[1272])/(130e-6 + 1e-6 * y[213] * y[1272])
    R1441 = (13.7 * 1e-6 * y[490] * y[127] * y[173])/(130e-6 + 1e-6 * y[490] * y[127] * y[173])
    R1843 = (13.7 * 1e-6 * y[490] * y[173] * y[717])/(130e-6 + 1e-6 * y[490] * y[173] * y[717])
    R2319 = (13.7 * 1e-6 * y[490] * y[235])/(130e-6 + 1e-6 * y[490] * y[235])
    return (R575 + R2305) - (R1441 + R1843 + R2319)
 
def m_3mop_c(t, y):
    R576 = (13.7 * 1e-6 * y[848])/(130e-6 + 1e-6 * y[848])
    R1393 = (13.7 * 1e-6 * y[213] * y[823])/(130e-6 + 1e-6 * y[213] * y[823])
    return (R576 + R1393) - (0)
 
def m_dhap_c(t, y):
    R578 = (13.7 * 1e-6 * y[497] * y[563])/(130e-6 + 1e-6 * y[497] * y[563])
    R1006 = (13.7 * 1e-6 * y[623])/(130e-6 + 1e-6 * y[623])
    R1010 = (13.7 * 1e-6 * y[607])/(130e-6 + 1e-6 * y[607])
    R1112 = (13.7 * 1e-6 * y[743] * y[6])/(130e-6 + 1e-6 * y[743] * y[6])
    R1113 = (13.7 * 1e-6 * y[743] * y[444])/(130e-6 + 1e-6 * y[743] * y[444])
    R1116 = (13.7 * 1e-6 * y[743] * y[441])/(130e-6 + 1e-6 * y[743] * y[441])
    R1118 = (13.7 * 1e-6 * y[495] * y[743])/(130e-6 + 1e-6 * y[495] * y[743])
    R2080 = (13.7 * 1e-6 * y[1164])/(130e-6 + 1e-6 * y[1164])
    R2157 = (13.7 * 1e-6 * y[1051])/(130e-6 + 1e-6 * y[1051])
    R1677 = (13.7 * 1e-6 * y[492])/(130e-6 + 1e-6 * y[492])
    R2127 = (13.7 * 1e-6 * y[492] * y[288])/(130e-6 + 1e-6 * y[492] * y[288])
    R2234 = (13.7 * 1e-6 * y[492])/(130e-6 + 1e-6 * y[492])
    return (R578 + R1006 + R1010 + R1112 + R1113 + R1116 + R1118 + R2080 + R2157) - (R1677 + R2127 + R2234)
 
def m_dha_p(t, y):
    R579 = (13.7 * 1e-6 * y[1427])/(130e-6 + 1e-6 * y[1427])
    R586 = (13.7 * 1e-6 * y[493])/(130e-6 + 1e-6 * y[493])
    return (R579) - (R586)
 
def m_dms_p(t, y):
    R580 = (13.7 * 1e-6 * y[496] * y[250])/(130e-6 + 1e-6 * y[496] * y[250])
    R582 = (13.7 * 1e-6 * y[507] * y[496])/(130e-6 + 1e-6 * y[507] * y[496])
    R584 = (13.7 * 1e-6 * y[1429])/(130e-6 + 1e-6 * y[1429])
    return (R580 + R582 + R584) - (0)
 
def m_2dmmq8_c(t, y):
    R581 = (13.7 * 1e-6 * y[507] * y[1424])/(130e-6 + 1e-6 * y[507] * y[1424])
    R582 = (13.7 * 1e-6 * y[507] * y[496])/(130e-6 + 1e-6 * y[507] * y[496])
    R1041 = (13.7 * 1e-6 * y[507] * y[153])/(130e-6 + 1e-6 * y[507] * y[153])
    R2218 = (13.7 * 1e-6 * y[507] * y[36] * y[1664])/(130e-6 + 1e-6 * y[507] * y[36] * y[1664])
    R2220 = (13.7 * 1e-6 * y[507] * y[61] * y[1231])/(130e-6 + 1e-6 * y[507] * y[61] * y[1231])
    R1118 = (13.7 * 1e-6 * y[495] * y[743])/(130e-6 + 1e-6 * y[495] * y[743])
    R1276 = (13.7 * 1e-6 * y[495] * y[702])/(130e-6 + 1e-6 * y[495] * y[702])
    R1428 = (13.7 * 1e-6 * y[495] * y[645] * y[36])/(130e-6 + 1e-6 * y[495] * y[645] * y[36])
    R2088 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2126 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2181 = (13.7 * 1e-6 * y[495] * y[36] * y[201])/(130e-6 + 1e-6 * y[495] * y[36] * y[201])
    return (R581 + R582 + R1041 + R2218 + R2220) - (R1118 + R1276 + R1428 + R2088 + R2126 + R2181)
 
def m_dmso_p(t, y):
    R583 = (13.7 * 1e-6 * y[1428])/(130e-6 + 1e-6 * y[1428])
    R580 = (13.7 * 1e-6 * y[496] * y[250])/(130e-6 + 1e-6 * y[496] * y[250])
    R582 = (13.7 * 1e-6 * y[507] * y[496])/(130e-6 + 1e-6 * y[507] * y[496])
    return (R583) - (R580 + R582)
 
def m_dha_c(t, y):
    R586 = (13.7 * 1e-6 * y[493])/(130e-6 + 1e-6 * y[493])
    R928 = (13.7 * 1e-6 * y[266])/(130e-6 + 1e-6 * y[266])
    R1251 = (13.7 * 1e-6 * y[240] * y[236])/(130e-6 + 1e-6 * y[240] * y[236])
    R578 = (13.7 * 1e-6 * y[497] * y[563])/(130e-6 + 1e-6 * y[497] * y[563])
    return (R586 + R928 + R1251) - (R578)
 
def m_23dhb_c(t, y):
    R587 = (13.7 * 1e-6 * y[809] * y[236])/(130e-6 + 1e-6 * y[809] * y[236])
    R589 = (13.7 * 1e-6 * y[565] * y[173])/(130e-6 + 1e-6 * y[565] * y[173])
    R588 = (13.7 * 1e-6 * y[498] * y[278] * y[36])/(130e-6 + 1e-6 * y[498] * y[278] * y[36])
    return (R587 + R589) - (R588)
 
def m_23dhba_c(t, y):
    R588 = (13.7 * 1e-6 * y[498] * y[278] * y[36])/(130e-6 + 1e-6 * y[498] * y[278] * y[36])
    R699 = (13.7 * 1e-6 * y[499] * y[1189])/(130e-6 + 1e-6 * y[499] * y[1189])
    return (R588) - (R699)
 
def m_ser__L_c(t, y):
    R589 = (13.7 * 1e-6 * y[565] * y[173])/(130e-6 + 1e-6 * y[565] * y[173])
    R1270 = (13.7 * 1e-6 * y[687] * y[173])/(130e-6 + 1e-6 * y[687] * y[173])
    R2049 = (13.7 * 1e-6 * y[173] * y[1149])/(130e-6 + 1e-6 * y[173] * y[1149])
    R2145 = (13.7 * 1e-6 * y[61] * y[758])/(130e-6 + 1e-6 * y[61] * y[758])
    R2147 = (13.7 * 1e-6 * y[927] * y[758])/(130e-6 + 1e-6 * y[927] * y[758])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1188 = (13.7 * 1e-6 * y[500] * y[206])/(130e-6 + 1e-6 * y[500] * y[206])
    R1528 = (13.7 * 1e-6 * y[6] * y[500])/(130e-6 + 1e-6 * y[6] * y[500])
    R2052 = (13.7 * 1e-6 * y[447] * y[500])/(130e-6 + 1e-6 * y[447] * y[500])
    R2053 = (13.7 * 1e-6 * y[448] * y[500])/(130e-6 + 1e-6 * y[448] * y[500])
    R2057 = (13.7 * 1e-6 * y[449] * y[500])/(130e-6 + 1e-6 * y[449] * y[500])
    R2058 = (13.7 * 1e-6 * y[450] * y[500])/(130e-6 + 1e-6 * y[450] * y[500])
    R2061 = (13.7 * 1e-6 * y[451] * y[500])/(130e-6 + 1e-6 * y[451] * y[500])
    R2063 = (13.7 * 1e-6 * y[452] * y[500])/(130e-6 + 1e-6 * y[452] * y[500])
    R2067 = (13.7 * 1e-6 * y[453] * y[500])/(130e-6 + 1e-6 * y[453] * y[500])
    R2132 = (13.7 * 1e-6 * y[278] * y[36] * y[500])/(130e-6 + 1e-6 * y[278] * y[36] * y[500])
    R2133 = (13.7 * 1e-6 * y[127] * y[500])/(130e-6 + 1e-6 * y[127] * y[500])
    R2135 = (13.7 * 1e-6 * y[500])/(130e-6 + 1e-6 * y[500])
    R2143 = (13.7 * 1e-6 * y[278] * y[500] * y[1661])/(130e-6 + 1e-6 * y[278] * y[500] * y[1661])
    R2144 = (13.7 * 1e-6 * y[278] * y[500] * y[1662])/(130e-6 + 1e-6 * y[278] * y[500] * y[1662])
    R2257 = (13.7 * 1e-6 * y[816] * y[500])/(130e-6 + 1e-6 * y[816] * y[500])
    R2266 = (13.7 * 1e-6 * y[828] * y[500])/(130e-6 + 1e-6 * y[828] * y[500])
    return (R589 + R1270 + R2049 + R2145 + R2147) - (R926 + R1188 + R1528 + R2052 + R2053 + R2057 + R2058 + R2061 + R2063 + R2067 + R2132 + R2133 + R2135 + R2143 + R2144 + R2257 + R2266)
 
def m_hkntd_c(t, y):
    R591 = (13.7 * 1e-6 * y[470] * y[335])/(130e-6 + 1e-6 * y[470] * y[335])
    R1377 = (13.7 * 1e-6 * y[173] * y[501])/(130e-6 + 1e-6 * y[173] * y[501])
    return (R591) - (R1377)
 
def m_thdp_c(t, y):
    R592 = (13.7 * 1e-6 * y[505] * y[36] * y[201])/(130e-6 + 1e-6 * y[505] * y[36] * y[201])
    R2162 = (13.7 * 1e-6 * y[173] * y[212] * y[502])/(130e-6 + 1e-6 * y[173] * y[212] * y[502])
    return (R592) - (R2162)
 
def m_gsn_p(t, y):
    R594 = (13.7 * 1e-6 * y[76] * y[406])/(130e-6 + 1e-6 * y[76] * y[406])
    R1289 = (13.7 * 1e-6 * y[1602])/(130e-6 + 1e-6 * y[1602])
    R1735 = (13.7 * 1e-6 * y[748] * y[406])/(130e-6 + 1e-6 * y[748] * y[406])
    R1287 = (13.7 * 1e-6 * y[503] * y[61])/(130e-6 + 1e-6 * y[503] * y[61])
    return (R594 + R1289 + R1735) - (R1287)
 
def m_dhnpt_c(t, y):
    R598 = (13.7 * 1e-6 * y[511] * y[173])/(130e-6 + 1e-6 * y[511] * y[173])
    R603 = (13.7 * 1e-6 * y[504])/(130e-6 + 1e-6 * y[504])
    return (R598) - (R603)
 
def m_23dhdp_c(t, y):
    R599 = (13.7 * 1e-6 * y[821] * y[92])/(130e-6 + 1e-6 * y[821] * y[92])
    R592 = (13.7 * 1e-6 * y[505] * y[36] * y[201])/(130e-6 + 1e-6 * y[505] * y[36] * y[201])
    return (R599) - (R592)
 
def m_dhf_c(t, y):
    R601 = (13.7 * 1e-6 * y[278] * y[516] * y[110])/(130e-6 + 1e-6 * y[278] * y[516] * y[110])
    R2230 = (13.7 * 1e-6 * y[536] * y[717])/(130e-6 + 1e-6 * y[536] * y[717])
    R600 = (13.7 * 1e-6 * y[506] * y[36] * y[201])/(130e-6 + 1e-6 * y[506] * y[36] * y[201])
    return (R601 + R2230) - (R600)
 
def m_2dmmql8_c(t, y):
    R602 = (13.7 * 1e-6 * y[968] * y[36] * y[1012])/(130e-6 + 1e-6 * y[968] * y[36] * y[1012])
    R1118 = (13.7 * 1e-6 * y[495] * y[743])/(130e-6 + 1e-6 * y[495] * y[743])
    R1276 = (13.7 * 1e-6 * y[495] * y[702])/(130e-6 + 1e-6 * y[495] * y[702])
    R1428 = (13.7 * 1e-6 * y[495] * y[645] * y[36])/(130e-6 + 1e-6 * y[495] * y[645] * y[36])
    R2088 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2126 = (13.7 * 1e-6 * y[495] * y[36] * y[113])/(130e-6 + 1e-6 * y[495] * y[36] * y[113])
    R2181 = (13.7 * 1e-6 * y[495] * y[36] * y[201])/(130e-6 + 1e-6 * y[495] * y[36] * y[201])
    R255 = (13.7 * 1e-6 * y[507] * y[921])/(130e-6 + 1e-6 * y[507] * y[921])
    R581 = (13.7 * 1e-6 * y[507] * y[1424])/(130e-6 + 1e-6 * y[507] * y[1424])
    R582 = (13.7 * 1e-6 * y[507] * y[496])/(130e-6 + 1e-6 * y[507] * y[496])
    R1041 = (13.7 * 1e-6 * y[507] * y[153])/(130e-6 + 1e-6 * y[507] * y[153])
    R2218 = (13.7 * 1e-6 * y[507] * y[36] * y[1664])/(130e-6 + 1e-6 * y[507] * y[36] * y[1664])
    R2220 = (13.7 * 1e-6 * y[507] * y[61] * y[1231])/(130e-6 + 1e-6 * y[507] * y[61] * y[1231])
    return (R602 + R1118 + R1276 + R1428 + R2088 + R2126 + R2181) - (R255 + R581 + R582 + R1041 + R2218 + R2220)
 
def m_6hmhpt_c(t, y):
    R603 = (13.7 * 1e-6 * y[504])/(130e-6 + 1e-6 * y[504])
    R1391 = (13.7 * 1e-6 * y[508] * y[278])/(130e-6 + 1e-6 * y[508] * y[278])
    return (R603) - (R1391)
 
def m_gcald_c(t, y):
    R603 = (13.7 * 1e-6 * y[504])/(130e-6 + 1e-6 * y[504])
    R1022 = (13.7 * 1e-6 * y[655] * y[841] * y[335])/(130e-6 + 1e-6 * y[655] * y[841] * y[335])
    R1165 = (13.7 * 1e-6 * y[509] * y[173] * y[236])/(130e-6 + 1e-6 * y[509] * y[173] * y[236])
    return (R603 + R1022) - (R1165)
 
def m_orot_c(t, y):
    R604 = (13.7 * 1e-6 * y[1430] * y[444])/(130e-6 + 1e-6 * y[1430] * y[444])
    R608 = (13.7 * 1e-6 * y[1430] * y[441])/(130e-6 + 1e-6 * y[1430] * y[441])
    R1768 = (13.7 * 1e-6 * y[61] * y[982])/(130e-6 + 1e-6 * y[61] * y[982])
    R1776 = (13.7 * 1e-6 * y[1652] * y[73])/(130e-6 + 1e-6 * y[1652] * y[73])
    return (R604 + R608 + R1768 + R1776) - (0)
 
def m_dhpmp_c(t, y):
    R605 = (13.7 * 1e-6 * y[773] * y[173])/(130e-6 + 1e-6 * y[773] * y[173])
    R598 = (13.7 * 1e-6 * y[511] * y[173])/(130e-6 + 1e-6 * y[511] * y[173])
    return (R605) - (R598)
 
def m_3dhguln_c(t, y):
    R606 = (13.7 * 1e-6 * y[1431] * y[36] * y[113])/(130e-6 + 1e-6 * y[1431] * y[36] * y[113])
    R556 = (13.7 * 1e-6 * y[512] * y[278])/(130e-6 + 1e-6 * y[512] * y[278])
    return (R606) - (R556)
 
def m_dopa_p(t, y):
    R607 = (13.7 * 1e-6 * y[1432])/(130e-6 + 1e-6 * y[1432])
    R35 = (13.7 * 1e-6 * y[513] * y[406] * y[1004])/(130e-6 + 1e-6 * y[513] * y[406] * y[1004])
    return (R607) - (R35)
 
def m_3hdecACP_c(t, y):
    R610 = (13.7 * 1e-6 * y[14] * y[36] * y[201])/(130e-6 + 1e-6 * y[14] * y[36] * y[201])
    R402 = (13.7 * 1e-6 * y[514])/(130e-6 + 1e-6 * y[514])
    return (R610) - (R402)
 
def m_5apru_c(t, y):
    R612 = (13.7 * 1e-6 * y[774] * y[173] * y[36])/(130e-6 + 1e-6 * y[774] * y[173] * y[36])
    R287 = (13.7 * 1e-6 * y[515] * y[36] * y[201])/(130e-6 + 1e-6 * y[515] * y[36] * y[201])
    return (R612) - (R287)
 
def m_dhpt_c(t, y):
    R613 = (13.7 * 1e-6 * y[194] * y[815])/(130e-6 + 1e-6 * y[194] * y[815])
    R601 = (13.7 * 1e-6 * y[278] * y[516] * y[110])/(130e-6 + 1e-6 * y[278] * y[516] * y[110])
    return (R613) - (R601)
 
def m_pant__R_c(t, y):
    R615 = (13.7 * 1e-6 * y[1023] * y[36] * y[201])/(130e-6 + 1e-6 * y[1023] * y[36] * y[201])
    R1806 = (13.7 * 1e-6 * y[277] * y[278] * y[517])/(130e-6 + 1e-6 * y[277] * y[278] * y[517])
    return (R615) - (R1806)
 
def m_dsbaox_p(t, y):
    R617 = (13.7 * 1e-6 * y[1433] * y[444])/(130e-6 + 1e-6 * y[1433] * y[444])
    R618 = (13.7 * 1e-6 * y[1433] * y[441])/(130e-6 + 1e-6 * y[1433] * y[441])
    return (R617 + R618) - (0)
 
def m_dsbcrd_p(t, y):
    R619 = (13.7 * 1e-6 * y[1434] * y[771])/(130e-6 + 1e-6 * y[1434] * y[771])
    R2154 = (13.7 * 1e-6 * y[1434] * y[521])/(130e-6 + 1e-6 * y[1434] * y[521])
    return (R619 + R2154) - (0)
 
def m_gthox_p(t, y):
    R619 = (13.7 * 1e-6 * y[1434] * y[771])/(130e-6 + 1e-6 * y[1434] * y[771])
    R621 = (13.7 * 1e-6 * y[1435] * y[771])/(130e-6 + 1e-6 * y[1435] * y[771])
    R1295 = (13.7 * 1e-6 * y[1603])/(130e-6 + 1e-6 * y[1603])
    return (R619 + R621 + R1295) - (0)
 
def m_dsbdrd_c(t, y):
    R620 = (13.7 * 1e-6 * y[1199] * y[1240])/(130e-6 + 1e-6 * y[1199] * y[1240])
    R2154 = (13.7 * 1e-6 * y[1434] * y[521])/(130e-6 + 1e-6 * y[1434] * y[521])
    R2156 = (13.7 * 1e-6 * y[521] * y[1435])/(130e-6 + 1e-6 * y[521] * y[1435])
    return (R620) - (R2154 + R2156)
 
def m_trdox_c(t, y):
    R620 = (13.7 * 1e-6 * y[1199] * y[1240])/(130e-6 + 1e-6 * y[1199] * y[1240])
    R1661 = (13.7 * 1e-6 * y[925] * y[1240])/(130e-6 + 1e-6 * y[925] * y[1240])
    R1662 = (13.7 * 1e-6 * y[926] * y[1240])/(130e-6 + 1e-6 * y[926] * y[1240])
    R1842 = (13.7 * 1e-6 * y[152] * y[1240])/(130e-6 + 1e-6 * y[152] * y[1240])
    R2081 = (13.7 * 1e-6 * y[35] * y[1240])/(130e-6 + 1e-6 * y[35] * y[1240])
    R2083 = (13.7 * 1e-6 * y[157] * y[1240])/(130e-6 + 1e-6 * y[157] * y[1240])
    R2092 = (13.7 * 1e-6 * y[456] * y[1240])/(130e-6 + 1e-6 * y[456] * y[1240])
    R2094 = (13.7 * 1e-6 * y[1240] * y[114])/(130e-6 + 1e-6 * y[1240] * y[114])
    R2170 = (13.7 * 1e-6 * y[93] * y[1240])/(130e-6 + 1e-6 * y[93] * y[1240])
    R2245 = (13.7 * 1e-6 * y[36] * y[201] * y[522])/(130e-6 + 1e-6 * y[36] * y[201] * y[522])
    return (R620 + R1661 + R1662 + R1842 + R2081 + R2083 + R2092 + R2094 + R2170) - (R2245)
 
def m_dsbgrd_p(t, y):
    R621 = (13.7 * 1e-6 * y[1435] * y[771])/(130e-6 + 1e-6 * y[1435] * y[771])
    R2156 = (13.7 * 1e-6 * y[521] * y[1435])/(130e-6 + 1e-6 * y[521] * y[1435])
    return (R621 + R2156) - (0)
 
def m_2amsa_c(t, y):
    R622 = (13.7 * 1e-6 * y[6] * y[525])/(130e-6 + 1e-6 * y[6] * y[525])
    R1528 = (13.7 * 1e-6 * y[6] * y[500])/(130e-6 + 1e-6 * y[6] * y[500])
    return (R622 + R1528) - (0)
 
def m_ser__D_c(t, y):
    R623 = (13.7 * 1e-6 * y[61] * y[531])/(130e-6 + 1e-6 * y[61] * y[531])
    R622 = (13.7 * 1e-6 * y[6] * y[525])/(130e-6 + 1e-6 * y[6] * y[525])
    R2134 = (13.7 * 1e-6 * y[525])/(130e-6 + 1e-6 * y[525])
    return (R623) - (R622 + R2134)
 
def m_hmfurn_c(t, y):
    R624 = (13.7 * 1e-6 * y[1160])/(130e-6 + 1e-6 * y[1160])
    R596 = (13.7 * 1e-6 * y[526])/(130e-6 + 1e-6 * y[526])
    return (R624) - (R596)
 
def m_dhmptp_c(t, y):
    R625 = (13.7 * 1e-6 * y[773])/(130e-6 + 1e-6 * y[773])
    return (R625) - (0)
 
def m_3dhq_c(t, y):
    R626 = (13.7 * 1e-6 * y[478])/(130e-6 + 1e-6 * y[478])
    R627 = (13.7 * 1e-6 * y[528])/(130e-6 + 1e-6 * y[528])
    return (R626) - (R627)
 
def m_3dhsk_c(t, y):
    R627 = (13.7 * 1e-6 * y[528])/(130e-6 + 1e-6 * y[528])
    R2163 = (13.7 * 1e-6 * y[529] * y[36] * y[201])/(130e-6 + 1e-6 * y[529] * y[36] * y[201])
    return (R627) - (R2163)
 
def m_dimp_p(t, y):
    R628 = (13.7 * 1e-6 * y[1436])/(130e-6 + 1e-6 * y[1436])
    R1734 = (13.7 * 1e-6 * y[530] * y[406])/(130e-6 + 1e-6 * y[530] * y[406])
    return (R628) - (R1734)
 
def m_ser__D_p(t, y):
    R630 = (13.7 * 1e-6 * y[1437])/(130e-6 + 1e-6 * y[1437])
    R623 = (13.7 * 1e-6 * y[61] * y[531])/(130e-6 + 1e-6 * y[61] * y[531])
    return (R630) - (R623)
 
def m_dtmp_p(t, y):
    R632 = (13.7 * 1e-6 * y[1438])/(130e-6 + 1e-6 * y[1438])
    R1753 = (13.7 * 1e-6 * y[532] * y[406])/(130e-6 + 1e-6 * y[532] * y[406])
    return (R632) - (R1753)
 
def m_din_p(t, y):
    R633 = (13.7 * 1e-6 * y[1439])/(130e-6 + 1e-6 * y[1439])
    R1734 = (13.7 * 1e-6 * y[530] * y[406])/(130e-6 + 1e-6 * y[530] * y[406])
    R629 = (13.7 * 1e-6 * y[533] * y[61])/(130e-6 + 1e-6 * y[533] * y[61])
    return (R633 + R1734) - (R629)
 
def m_3hddecACP_c(t, y):
    R634 = (13.7 * 1e-6 * y[18] * y[36] * y[201])/(130e-6 + 1e-6 * y[18] * y[36] * y[201])
    R413 = (13.7 * 1e-6 * y[534])/(130e-6 + 1e-6 * y[534])
    return (R634) - (R413)
 
def m_dump_p(t, y):
    R635 = (13.7 * 1e-6 * y[1440])/(130e-6 + 1e-6 * y[1440])
    R1736 = (13.7 * 1e-6 * y[535] * y[406])/(130e-6 + 1e-6 * y[535] * y[406])
    return (R635) - (R1736)
 
def m_dump_c(t, y):
    R636 = (13.7 * 1e-6 * y[278] * y[469])/(130e-6 + 1e-6 * y[278] * y[469])
    R643 = (13.7 * 1e-6 * y[468] * y[173])/(130e-6 + 1e-6 * y[468] * y[173])
    R1723 = (13.7 * 1e-6 * y[536] * y[173])/(130e-6 + 1e-6 * y[536] * y[173])
    R2230 = (13.7 * 1e-6 * y[536] * y[717])/(130e-6 + 1e-6 * y[536] * y[717])
    R2291 = (13.7 * 1e-6 * y[278] * y[536])/(130e-6 + 1e-6 * y[278] * y[536])
    return (R636 + R643) - (R1723 + R2230 + R2291)
 
def m_2dr1p_c(t, y):
    R637 = (13.7 * 1e-6 * y[469] * y[37])/(130e-6 + 1e-6 * y[469] * y[37])
    R2089 = (13.7 * 1e-6 * y[464] * y[37])/(130e-6 + 1e-6 * y[464] * y[37])
    R2091 = (13.7 * 1e-6 * y[485] * y[37])/(130e-6 + 1e-6 * y[485] * y[37])
    R2099 = (13.7 * 1e-6 * y[458] * y[37])/(130e-6 + 1e-6 * y[458] * y[37])
    R2229 = (13.7 * 1e-6 * y[37] * y[975])/(130e-6 + 1e-6 * y[37] * y[975])
    R2005 = (13.7 * 1e-6 * y[537])/(130e-6 + 1e-6 * y[537])
    return (R637 + R2089 + R2091 + R2099 + R2229) - (R2005)
 
def m_butACP_c(t, y):
    R638 = (13.7 * 1e-6 * y[440] * y[36] * y[113])/(130e-6 + 1e-6 * y[440] * y[36] * y[113])
    R640 = (13.7 * 1e-6 * y[440] * y[36] * y[201])/(130e-6 + 1e-6 * y[440] * y[36] * y[201])
    R30 = (13.7 * 1e-6 * y[538] * y[36] * y[918])/(130e-6 + 1e-6 * y[538] * y[36] * y[918])
    return (R638 + R640) - (R30)
 
def m_3hcddec5eACP_c(t, y):
    R639 = (13.7 * 1e-6 * y[19] * y[36] * y[201])/(130e-6 + 1e-6 * y[19] * y[36] * y[201])
    R415 = (13.7 * 1e-6 * y[539])/(130e-6 + 1e-6 * y[539])
    return (R639) - (R415)
 
def m_duri_p(t, y):
    R642 = (13.7 * 1e-6 * y[1441])/(130e-6 + 1e-6 * y[1441])
    R1736 = (13.7 * 1e-6 * y[535] * y[406])/(130e-6 + 1e-6 * y[535] * y[406])
    R641 = (13.7 * 1e-6 * y[540] * y[61])/(130e-6 + 1e-6 * y[540] * y[61])
    return (R642 + R1736) - (R641)
 
def m_hexACP_c(t, y):
    R644 = (13.7 * 1e-6 * y[36] * y[113] * y[445])/(130e-6 + 1e-6 * y[36] * y[113] * y[445])
    R648 = (13.7 * 1e-6 * y[36] * y[201] * y[445])/(130e-6 + 1e-6 * y[36] * y[201] * y[445])
    R31 = (13.7 * 1e-6 * y[36] * y[541] * y[918])/(130e-6 + 1e-6 * y[36] * y[541] * y[918])
    return (R644 + R648) - (R31)
 
def m_2me4p_c(t, y):
    R645 = (13.7 * 1e-6 * y[544] * y[36] * y[201])/(130e-6 + 1e-6 * y[544] * y[36] * y[201])
    R1636 = (13.7 * 1e-6 * y[542] * y[404] * y[36])/(130e-6 + 1e-6 * y[542] * y[404] * y[36])
    return (R645) - (R1636)
 
def m_3hmrsACP_c(t, y):
    R646 = (13.7 * 1e-6 * y[20] * y[36] * y[201])/(130e-6 + 1e-6 * y[20] * y[36] * y[201])
    R433 = (13.7 * 1e-6 * y[543])/(130e-6 + 1e-6 * y[543])
    R2307 = (13.7 * 1e-6 * y[543] * y[1304])/(130e-6 + 1e-6 * y[543] * y[1304])
    R2321 = (13.7 * 1e-6 * y[543] * y[1288])/(130e-6 + 1e-6 * y[543] * y[1288])
    return (R646) - (R433 + R2307 + R2321)
 
def m_dxyl5p_c(t, y):
    R647 = (13.7 * 1e-6 * y[480] * y[36] * y[92])/(130e-6 + 1e-6 * y[480] * y[36] * y[92])
    R652 = (13.7 * 1e-6 * y[278] * y[1442])/(130e-6 + 1e-6 * y[278] * y[1442])
    R645 = (13.7 * 1e-6 * y[544] * y[36] * y[201])/(130e-6 + 1e-6 * y[544] * y[36] * y[201])
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    return (R647 + R652) - (R645 + R1849 + R2205)
 
def m_eca4colipa_e(t, y):
    R651 = (13.7 * 1e-6 * y[548])/(130e-6 + 1e-6 * y[548])
    R832 = (13.7 * 1e-6 * y[545])/(130e-6 + 1e-6 * y[545])
    return (R651) - (R832)
 
def m_lac__D_p(t, y):
    R654 = (13.7 * 1e-6 * y[1443])/(130e-6 + 1e-6 * y[1443])
    R653 = (13.7 * 1e-6 * y[61] * y[546])/(130e-6 + 1e-6 * y[61] * y[546])
    return (R654) - (R653)
 
def m_4per_c(t, y):
    R655 = (13.7 * 1e-6 * y[1237] * y[173] * y[236])/(130e-6 + 1e-6 * y[1237] * y[173] * y[236])
    R1877 = (13.7 * 1e-6 * y[547] * y[236])/(130e-6 + 1e-6 * y[547] * y[236])
    return (R655) - (R1877)
 
def m_eca4colipa_p(t, y):
    R656 = (13.7 * 1e-6 * y[409] * y[553])/(130e-6 + 1e-6 * y[409] * y[553])
    R651 = (13.7 * 1e-6 * y[548])/(130e-6 + 1e-6 * y[548])
    return (R656) - (R651)
 
def m_udcpdp_p(t, y):
    R656 = (13.7 * 1e-6 * y[409] * y[553])/(130e-6 + 1e-6 * y[409] * y[553])
    R657 = (13.7 * 1e-6 * y[554])/(130e-6 + 1e-6 * y[554])
    R663 = (13.7 * 1e-6 * y[550] * y[554])/(130e-6 + 1e-6 * y[550] * y[554])
    R664 = (13.7 * 1e-6 * y[552] * y[554])/(130e-6 + 1e-6 * y[552] * y[554])
    R1790 = (13.7 * 1e-6 * y[409] * y[992])/(130e-6 + 1e-6 * y[409] * y[992])
    R1791 = (13.7 * 1e-6 * y[994])/(130e-6 + 1e-6 * y[994])
    R1792 = (13.7 * 1e-6 * y[989] * y[994])/(130e-6 + 1e-6 * y[989] * y[994])
    R1797 = (13.7 * 1e-6 * y[990] * y[994])/(130e-6 + 1e-6 * y[990] * y[994])
    R2353 = (13.7 * 1e-6 * y[406] * y[549])/(130e-6 + 1e-6 * y[406] * y[549])
    return (R656 + R657 + R663 + R664 + R1790 + R1791 + R1792 + R1797) - (R2353)
 
def m_eca2und_p(t, y):
    R657 = (13.7 * 1e-6 * y[554])/(130e-6 + 1e-6 * y[554])
    R663 = (13.7 * 1e-6 * y[550] * y[554])/(130e-6 + 1e-6 * y[550] * y[554])
    return (R657) - (R663)
 
def m_3hcmrs7eACP_c(t, y):
    R659 = (13.7 * 1e-6 * y[23] * y[36] * y[201])/(130e-6 + 1e-6 * y[23] * y[36] * y[201])
    R443 = (13.7 * 1e-6 * y[551])/(130e-6 + 1e-6 * y[551])
    return (R659) - (R443)
 
def m_eca3und_p(t, y):
    R663 = (13.7 * 1e-6 * y[550] * y[554])/(130e-6 + 1e-6 * y[550] * y[554])
    R664 = (13.7 * 1e-6 * y[552] * y[554])/(130e-6 + 1e-6 * y[552] * y[554])
    return (R663) - (R664)
 
def m_eca4und_p(t, y):
    R664 = (13.7 * 1e-6 * y[552] * y[554])/(130e-6 + 1e-6 * y[552] * y[554])
    R656 = (13.7 * 1e-6 * y[409] * y[553])/(130e-6 + 1e-6 * y[409] * y[553])
    return (R664) - (R656)
 
def m_unagamuf_p(t, y):
    R665 = (13.7 * 1e-6 * y[101])/(130e-6 + 1e-6 * y[101])
    R657 = (13.7 * 1e-6 * y[554])/(130e-6 + 1e-6 * y[554])
    R663 = (13.7 * 1e-6 * y[550] * y[554])/(130e-6 + 1e-6 * y[550] * y[554])
    R664 = (13.7 * 1e-6 * y[552] * y[554])/(130e-6 + 1e-6 * y[552] * y[554])
    return (R665) - (R657 + R663 + R664)
 
def m_cddec5eACP_c(t, y):
    R668 = (13.7 * 1e-6 * y[36] * y[113] * y[374])/(130e-6 + 1e-6 * y[36] * y[113] * y[374])
    R669 = (13.7 * 1e-6 * y[36] * y[201] * y[374])/(130e-6 + 1e-6 * y[36] * y[201] * y[374])
    R21 = (13.7 * 1e-6 * y[555] * y[36] * y[918])/(130e-6 + 1e-6 * y[555] * y[36] * y[918])
    return (R668 + R669) - (R21)
 
def m_3hpalmACP_c(t, y):
    R672 = (13.7 * 1e-6 * y[28] * y[36] * y[201])/(130e-6 + 1e-6 * y[28] * y[36] * y[201])
    R458 = (13.7 * 1e-6 * y[556])/(130e-6 + 1e-6 * y[556])
    return (R672) - (R458)
 
def m_kdo2lipid4L_c(t, y):
    R687 = (13.7 * 1e-6 * y[86] * y[991])/(130e-6 + 1e-6 * y[86] * y[991])
    R688 = (13.7 * 1e-6 * y[557] * y[72])/(130e-6 + 1e-6 * y[557] * y[72])
    return (R687) - (R688)
 
def m_lipa_c(t, y):
    R688 = (13.7 * 1e-6 * y[557] * y[72])/(130e-6 + 1e-6 * y[557] * y[72])
    R1339 = (13.7 * 1e-6 * y[180] * y[558])/(130e-6 + 1e-6 * y[180] * y[558])
    R1487 = (13.7 * 1e-6 * y[278] * y[173] * y[558])/(130e-6 + 1e-6 * y[278] * y[173] * y[558])
    return (R688) - (R1339 + R1487)
 
def m_kdo2lipid4p_c(t, y):
    R689 = (13.7 * 1e-6 * y[81] * y[991])/(130e-6 + 1e-6 * y[81] * y[991])
    R695 = (13.7 * 1e-6 * y[559] * y[72])/(130e-6 + 1e-6 * y[559] * y[72])
    return (R689) - (R695)
 
def m_3hcpalm9eACP_c(t, y):
    R692 = (13.7 * 1e-6 * y[29] * y[36] * y[201])/(130e-6 + 1e-6 * y[29] * y[36] * y[201])
    R470 = (13.7 * 1e-6 * y[560])/(130e-6 + 1e-6 * y[560])
    return (R692) - (R470)
 
def m_lipa_cold_c(t, y):
    R695 = (13.7 * 1e-6 * y[559] * y[72])/(130e-6 + 1e-6 * y[559] * y[72])
    R1481 = (13.7 * 1e-6 * y[278] * y[173] * y[561])/(130e-6 + 1e-6 * y[278] * y[173] * y[561])
    return (R695) - (R1481)
 
def m_enlipa_e(t, y):
    R696 = (13.7 * 1e-6 * y[1045])/(130e-6 + 1e-6 * y[1045])
    R833 = (13.7 * 1e-6 * y[562])/(130e-6 + 1e-6 * y[562])
    return (R696) - (R833)
 
def m_pep_c(t, y):
    R697 = (13.7 * 1e-6 * y[756])/(130e-6 + 1e-6 * y[756])
    R1993 = (13.7 * 1e-6 * y[278] * y[298])/(130e-6 + 1e-6 * y[278] * y[298])
    R2021 = (13.7 * 1e-6 * y[278] * y[173] * y[92])/(130e-6 + 1e-6 * y[278] * y[173] * y[92])
    R81 = (13.7 * 1e-6 * y[0] * y[563])/(130e-6 + 1e-6 * y[0] * y[563])
    R99 = (13.7 * 1e-6 * y[123] * y[563])/(130e-6 + 1e-6 * y[123] * y[563])
    R107 = (13.7 * 1e-6 * y[125] * y[563])/(130e-6 + 1e-6 * y[125] * y[563])
    R340 = (13.7 * 1e-6 * y[320] * y[563])/(130e-6 + 1e-6 * y[320] * y[563])
    R558 = (13.7 * 1e-6 * y[1237] * y[173] * y[563])/(130e-6 + 1e-6 * y[1237] * y[173] * y[563])
    R578 = (13.7 * 1e-6 * y[497] * y[563])/(130e-6 + 1e-6 * y[497] * y[563])
    R1059 = (13.7 * 1e-6 * y[635] * y[563])/(130e-6 + 1e-6 * y[635] * y[563])
    R1060 = (13.7 * 1e-6 * y[635] * y[563])/(130e-6 + 1e-6 * y[635] * y[563])
    R1132 = (13.7 * 1e-6 * y[688] * y[563])/(130e-6 + 1e-6 * y[688] * y[563])
    R1152 = (13.7 * 1e-6 * y[698] * y[563])/(130e-6 + 1e-6 * y[698] * y[563])
    R1169 = (13.7 * 1e-6 * y[651] * y[563])/(130e-6 + 1e-6 * y[651] * y[563])
    R1485 = (13.7 * 1e-6 * y[70] * y[173] * y[563])/(130e-6 + 1e-6 * y[70] * y[173] * y[563])
    R1591 = (13.7 * 1e-6 * y[896] * y[563])/(130e-6 + 1e-6 * y[896] * y[563])
    R1618 = (13.7 * 1e-6 * y[910] * y[563])/(130e-6 + 1e-6 * y[910] * y[563])
    R1621 = (13.7 * 1e-6 * y[911] * y[563])/(130e-6 + 1e-6 * y[911] * y[563])
    R1737 = (13.7 * 1e-6 * y[973] * y[563])/(130e-6 + 1e-6 * y[973] * y[563])
    R1991 = (13.7 * 1e-6 * y[16] * y[173] * y[563])/(130e-6 + 1e-6 * y[16] * y[173] * y[563])
    R2027 = (13.7 * 1e-6 * y[563] * y[1205])/(130e-6 + 1e-6 * y[563] * y[1205])
    R2117 = (13.7 * 1e-6 * y[35] * y[36] * y[563])/(130e-6 + 1e-6 * y[35] * y[36] * y[563])
    R2121 = (13.7 * 1e-6 * y[563] * y[1182])/(130e-6 + 1e-6 * y[563] * y[1182])
    R2224 = (13.7 * 1e-6 * y[563] * y[1228])/(130e-6 + 1e-6 * y[563] * y[1228])
    R2254 = (13.7 * 1e-6 * y[563] * y[1245])/(130e-6 + 1e-6 * y[563] * y[1245])
    R2322 = (13.7 * 1e-6 * y[563] * y[1288])/(130e-6 + 1e-6 * y[563] * y[1288])
    return (R697 + R1993 + R2021) - (R81 + R99 + R107 + R340 + R558 + R578 + R1059 + R1060 + R1132 + R1152 + R1169 + R1485 + R1591 + R1618 + R1621 + R1737 + R1991 + R2027 + R2117 + R2121 + R2224 + R2254 + R2322)
 
def m_enter_c(t, y):
    R699 = (13.7 * 1e-6 * y[499] * y[1189])/(130e-6 + 1e-6 * y[499] * y[1189])
    R1047 = (13.7 * 1e-6 * y[136] * y[626])/(130e-6 + 1e-6 * y[136] * y[626])
    R1048 = (13.7 * 1e-6 * y[626] * y[655])/(130e-6 + 1e-6 * y[626] * y[655])
    R1049 = (13.7 * 1e-6 * y[626] * y[649])/(130e-6 + 1e-6 * y[626] * y[649])
    R700 = (13.7 * 1e-6 * y[564] * y[173])/(130e-6 + 1e-6 * y[564] * y[173])
    R1056 = (13.7 * 1e-6 * y[564] * y[61])/(130e-6 + 1e-6 * y[564] * y[61])
    return (R699 + R1047 + R1048 + R1049) - (R700 + R1056)
 
def m_23dhbzs_c(t, y):
    R700 = (13.7 * 1e-6 * y[564] * y[173])/(130e-6 + 1e-6 * y[564] * y[173])
    R701 = (13.7 * 1e-6 * y[626] * y[173])/(130e-6 + 1e-6 * y[626] * y[173])
    R999 = (13.7 * 1e-6 * y[602])/(130e-6 + 1e-6 * y[602])
    R589 = (13.7 * 1e-6 * y[565] * y[173])/(130e-6 + 1e-6 * y[565] * y[173])
    return (R700 + R701 + R999) - (R589)
 
def m_fe3_c(t, y):
    R701 = (13.7 * 1e-6 * y[626] * y[173])/(130e-6 + 1e-6 * y[626] * y[173])
    R991 = (13.7 * 1e-6 * y[278] * y[598] * y[173])/(130e-6 + 1e-6 * y[278] * y[598] * y[173])
    R999 = (13.7 * 1e-6 * y[602])/(130e-6 + 1e-6 * y[602])
    R1019 = (13.7 * 1e-6 * y[278] * y[615] * y[173])/(130e-6 + 1e-6 * y[278] * y[615] * y[173])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1018 = (13.7 * 1e-6 * y[136] * y[566])/(130e-6 + 1e-6 * y[136] * y[566])
    return (R701 + R991 + R999 + R1019) - (R926 + R1018)
 
def m_etha_c(t, y):
    R707 = (13.7 * 1e-6 * y[568] * y[61])/(130e-6 + 1e-6 * y[568] * y[61])
    R1268 = (13.7 * 1e-6 * y[673] * y[173])/(130e-6 + 1e-6 * y[673] * y[173])
    R705 = (13.7 * 1e-6 * y[567])/(130e-6 + 1e-6 * y[567])
    return (R707 + R1268) - (R705)
 
def m_etha_p(t, y):
    R709 = (13.7 * 1e-6 * y[1453])/(130e-6 + 1e-6 * y[1453])
    R1269 = (13.7 * 1e-6 * y[674] * y[406])/(130e-6 + 1e-6 * y[674] * y[406])
    R707 = (13.7 * 1e-6 * y[568] * y[61])/(130e-6 + 1e-6 * y[568] * y[61])
    return (R709 + R1269) - (R707)
 
def m_ethso3_c(t, y):
    R710 = (13.7 * 1e-6 * y[278] * y[570] * y[173])/(130e-6 + 1e-6 * y[278] * y[570] * y[173])
    R1030 = (13.7 * 1e-6 * y[569] * y[655] * y[335])/(130e-6 + 1e-6 * y[569] * y[655] * y[335])
    return (R710) - (R1030)
 
def m_ethso3_p(t, y):
    R715 = (13.7 * 1e-6 * y[1454])/(130e-6 + 1e-6 * y[1454])
    R710 = (13.7 * 1e-6 * y[278] * y[570] * y[173])/(130e-6 + 1e-6 * y[278] * y[570] * y[173])
    return (R715) - (R710)
 
def m_etoh_c(t, y):
    R716 = (13.7 * 1e-6 * y[572] * y[61])/(130e-6 + 1e-6 * y[572] * y[61])
    R240 = (13.7 * 1e-6 * y[571] * y[236])/(130e-6 + 1e-6 * y[571] * y[236])
    return (R716) - (R240)
 
def m_etoh_p(t, y):
    R717 = (13.7 * 1e-6 * y[1455])/(130e-6 + 1e-6 * y[1455])
    R716 = (13.7 * 1e-6 * y[572] * y[61])/(130e-6 + 1e-6 * y[572] * y[61])
    return (R717) - (R716)
 
def m_fru_c(t, y):
    R929 = (13.7 * 1e-6 * y[266] * y[173])/(130e-6 + 1e-6 * y[266] * y[173])
    R1078 = (13.7 * 1e-6 * y[173] * y[1229])/(130e-6 + 1e-6 * y[173] * y[1229])
    R2333 = (13.7 * 1e-6 * y[242])/(130e-6 + 1e-6 * y[242])
    R1353 = (13.7 * 1e-6 * y[278] * y[573])/(130e-6 + 1e-6 * y[278] * y[573])
    return (R929 + R1078 + R2333) - (R1353)
 
def m_f6p_p(t, y):
    R934 = (13.7 * 1e-6 * y[1492])/(130e-6 + 1e-6 * y[1492])
    R930 = (13.7 * 1e-6 * y[574] * y[37])/(130e-6 + 1e-6 * y[574] * y[37])
    return (R934) - (R930)
 
def m_dca_c(t, y):
    R935 = (13.7 * 1e-6 * y[88] * y[173])/(130e-6 + 1e-6 * y[88] * y[173])
    R946 = (13.7 * 1e-6 * y[585] * y[173])/(130e-6 + 1e-6 * y[585] * y[173])
    R78 = (13.7 * 1e-6 * y[15] * y[278] * y[575])/(130e-6 + 1e-6 * y[15] * y[278] * y[575])
    return (R935 + R946) - (R78)
 
def m_ddca_c(t, y):
    R937 = (13.7 * 1e-6 * y[86] * y[173])/(130e-6 + 1e-6 * y[86] * y[173])
    R953 = (13.7 * 1e-6 * y[586] * y[173])/(130e-6 + 1e-6 * y[586] * y[173])
    R1500 = (13.7 * 1e-6 * y[17] * y[173])/(130e-6 + 1e-6 * y[17] * y[173])
    R1515 = (13.7 * 1e-6 * y[169] * y[173])/(130e-6 + 1e-6 * y[169] * y[173])
    R1539 = (13.7 * 1e-6 * y[78] * y[173])/(130e-6 + 1e-6 * y[78] * y[173])
    R76 = (13.7 * 1e-6 * y[15] * y[278] * y[576])/(130e-6 + 1e-6 * y[15] * y[278] * y[576])
    R121 = (13.7 * 1e-6 * y[17] * y[278] * y[576])/(130e-6 + 1e-6 * y[17] * y[278] * y[576])
    R243 = (13.7 * 1e-6 * y[169] * y[278] * y[576])/(130e-6 + 1e-6 * y[169] * y[278] * y[576])
    return (R937 + R953 + R1500 + R1515 + R1539) - (R76 + R121 + R243)
 
def m_ttdca_c(t, y):
    R941 = (13.7 * 1e-6 * y[173] * y[72])/(130e-6 + 1e-6 * y[173] * y[72])
    R954 = (13.7 * 1e-6 * y[173] * y[587])/(130e-6 + 1e-6 * y[173] * y[587])
    R1502 = (13.7 * 1e-6 * y[25] * y[173])/(130e-6 + 1e-6 * y[25] * y[173])
    R1518 = (13.7 * 1e-6 * y[186] * y[173])/(130e-6 + 1e-6 * y[186] * y[173])
    R1541 = (13.7 * 1e-6 * y[2] * y[173])/(130e-6 + 1e-6 * y[2] * y[173])
    R63 = (13.7 * 1e-6 * y[15] * y[278] * y[577])/(130e-6 + 1e-6 * y[15] * y[278] * y[577])
    R134 = (13.7 * 1e-6 * y[25] * y[278] * y[577])/(130e-6 + 1e-6 * y[25] * y[278] * y[577])
    R251 = (13.7 * 1e-6 * y[186] * y[278] * y[577])/(130e-6 + 1e-6 * y[186] * y[278] * y[577])
    return (R941 + R954 + R1502 + R1518 + R1541) - (R63 + R134 + R251)
 
def m_ttdcea_c(t, y):
    R942 = (13.7 * 1e-6 * y[173] * y[74])/(130e-6 + 1e-6 * y[173] * y[74])
    R955 = (13.7 * 1e-6 * y[173] * y[588])/(130e-6 + 1e-6 * y[173] * y[588])
    R1504 = (13.7 * 1e-6 * y[80] * y[173])/(130e-6 + 1e-6 * y[80] * y[173])
    R1520 = (13.7 * 1e-6 * y[195] * y[173])/(130e-6 + 1e-6 * y[195] * y[173])
    R1542 = (13.7 * 1e-6 * y[3] * y[173])/(130e-6 + 1e-6 * y[3] * y[173])
    R64 = (13.7 * 1e-6 * y[15] * y[278] * y[578])/(130e-6 + 1e-6 * y[15] * y[278] * y[578])
    R139 = (13.7 * 1e-6 * y[80] * y[278] * y[578])/(130e-6 + 1e-6 * y[80] * y[278] * y[578])
    R269 = (13.7 * 1e-6 * y[195] * y[278] * y[578])/(130e-6 + 1e-6 * y[195] * y[278] * y[578])
    return (R942 + R955 + R1504 + R1520 + R1542) - (R64 + R139 + R269)
 
def m_hdca_c(t, y):
    R943 = (13.7 * 1e-6 * y[173] * y[79])/(130e-6 + 1e-6 * y[173] * y[79])
    R957 = (13.7 * 1e-6 * y[173] * y[589])/(130e-6 + 1e-6 * y[173] * y[589])
    R1507 = (13.7 * 1e-6 * y[87] * y[173])/(130e-6 + 1e-6 * y[87] * y[173])
    R1524 = (13.7 * 1e-6 * y[208] * y[173])/(130e-6 + 1e-6 * y[208] * y[173])
    R1543 = (13.7 * 1e-6 * y[4] * y[173])/(130e-6 + 1e-6 * y[4] * y[173])
    R69 = (13.7 * 1e-6 * y[15] * y[278] * y[579])/(130e-6 + 1e-6 * y[15] * y[278] * y[579])
    R141 = (13.7 * 1e-6 * y[87] * y[278] * y[579])/(130e-6 + 1e-6 * y[87] * y[278] * y[579])
    R274 = (13.7 * 1e-6 * y[208] * y[278] * y[579])/(130e-6 + 1e-6 * y[208] * y[278] * y[579])
    return (R943 + R957 + R1507 + R1524 + R1543) - (R69 + R141 + R274)
 
def m_hdcea_c(t, y):
    R944 = (13.7 * 1e-6 * y[173] * y[81])/(130e-6 + 1e-6 * y[173] * y[81])
    R962 = (13.7 * 1e-6 * y[173] * y[590])/(130e-6 + 1e-6 * y[173] * y[590])
    R1512 = (13.7 * 1e-6 * y[96] * y[173])/(130e-6 + 1e-6 * y[96] * y[173])
    R1525 = (13.7 * 1e-6 * y[217] * y[173])/(130e-6 + 1e-6 * y[217] * y[173])
    R1550 = (13.7 * 1e-6 * y[7] * y[173])/(130e-6 + 1e-6 * y[7] * y[173])
    R71 = (13.7 * 1e-6 * y[15] * y[278] * y[580])/(130e-6 + 1e-6 * y[15] * y[278] * y[580])
    R143 = (13.7 * 1e-6 * y[96] * y[278] * y[580])/(130e-6 + 1e-6 * y[96] * y[278] * y[580])
    R277 = (13.7 * 1e-6 * y[217] * y[278] * y[580])/(130e-6 + 1e-6 * y[217] * y[278] * y[580])
    return (R944 + R962 + R1512 + R1525 + R1550) - (R71 + R143 + R277)
 
def m_octa_c(t, y):
    R945 = (13.7 * 1e-6 * y[173] * y[89])/(130e-6 + 1e-6 * y[173] * y[89])
    R968 = (13.7 * 1e-6 * y[173] * y[597])/(130e-6 + 1e-6 * y[173] * y[597])
    R79 = (13.7 * 1e-6 * y[15] * y[278] * y[581])/(130e-6 + 1e-6 * y[15] * y[278] * y[581])
    return (R945 + R968) - (R79)
 
def m_ocdca_c(t, y):
    R963 = (13.7 * 1e-6 * y[173] * y[591])/(130e-6 + 1e-6 * y[173] * y[591])
    R1513 = (13.7 * 1e-6 * y[118] * y[173])/(130e-6 + 1e-6 * y[118] * y[173])
    R1526 = (13.7 * 1e-6 * y[228] * y[173])/(130e-6 + 1e-6 * y[228] * y[173])
    R1551 = (13.7 * 1e-6 * y[9] * y[173])/(130e-6 + 1e-6 * y[9] * y[173])
    R74 = (13.7 * 1e-6 * y[15] * y[278] * y[582])/(130e-6 + 1e-6 * y[15] * y[278] * y[582])
    R146 = (13.7 * 1e-6 * y[118] * y[278] * y[582])/(130e-6 + 1e-6 * y[118] * y[278] * y[582])
    R283 = (13.7 * 1e-6 * y[228] * y[278] * y[582])/(130e-6 + 1e-6 * y[228] * y[278] * y[582])
    return (R963 + R1513 + R1526 + R1551) - (R74 + R146 + R283)
 
def m_ocdcea_c(t, y):
    R964 = (13.7 * 1e-6 * y[173] * y[595])/(130e-6 + 1e-6 * y[173] * y[595])
    R1514 = (13.7 * 1e-6 * y[130] * y[173])/(130e-6 + 1e-6 * y[130] * y[173])
    R1527 = (13.7 * 1e-6 * y[237] * y[173])/(130e-6 + 1e-6 * y[237] * y[173])
    R1552 = (13.7 * 1e-6 * y[11] * y[173])/(130e-6 + 1e-6 * y[11] * y[173])
    R72 = (13.7 * 1e-6 * y[15] * y[278] * y[583])/(130e-6 + 1e-6 * y[15] * y[278] * y[583])
    R147 = (13.7 * 1e-6 * y[130] * y[278] * y[583])/(130e-6 + 1e-6 * y[130] * y[278] * y[583])
    R301 = (13.7 * 1e-6 * y[237] * y[278] * y[583])/(130e-6 + 1e-6 * y[237] * y[278] * y[583])
    return (R964 + R1514 + R1527 + R1552) - (R72 + R147 + R301)
 
def m_hxa_c(t, y):
    R966 = (13.7 * 1e-6 * y[173] * y[596])/(130e-6 + 1e-6 * y[173] * y[596])
    R1354 = (13.7 * 1e-6 * y[61] * y[831])/(130e-6 + 1e-6 * y[61] * y[831])
    R1418 = (13.7 * 1e-6 * y[127] * y[584])/(130e-6 + 1e-6 * y[127] * y[584])
    return (R966 + R1354) - (R1418)
 
def m_dcacoa_c(t, y):
    R969 = (13.7 * 1e-6 * y[278] * y[99] * y[466] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[466] * y[61])
    R1471 = (13.7 * 1e-6 * y[768] * y[99])/(130e-6 + 1e-6 * y[768] * y[99])
    R127 = (13.7 * 1e-6 * y[585] * y[282])/(130e-6 + 1e-6 * y[585] * y[282])
    R946 = (13.7 * 1e-6 * y[585] * y[173])/(130e-6 + 1e-6 * y[585] * y[173])
    return (R969 + R1471) - (R127 + R946)
 
def m_ddcacoa_c(t, y):
    R973 = (13.7 * 1e-6 * y[278] * y[99] * y[474] * y[61])/(130e-6 + 1e-6 * y[278] * y[99] * y[474] * y[61])
    R1473 = (13.7 * 1e-6 * y[769] * y[99])/(130e-6 + 1e-6 * y[769] * y[99])
    R128 = (13.7 * 1e-6 * y[586] * y[282])/(130e-6 + 1e-6 * y[586] * y[282])
    R953 = (13.7 * 1e-6 * y[586] * y[173])/(130e-6 + 1e-6 * y[586] * y[173])
    return (R973 + R1473) - (R128 + R953)
 
def m_tdcoa_c(t, y):
    R974 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[869])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[869])
    R1474 = (13.7 * 1e-6 * y[770] * y[99])/(130e-6 + 1e-6 * y[770] * y[99])
    R129 = (13.7 * 1e-6 * y[282] * y[587])/(130e-6 + 1e-6 * y[282] * y[587])
    R954 = (13.7 * 1e-6 * y[173] * y[587])/(130e-6 + 1e-6 * y[173] * y[587])
    return (R974 + R1474) - (R129 + R954)
 
def m_tdecoa_c(t, y):
    R976 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[870])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[870])
    R955 = (13.7 * 1e-6 * y[173] * y[588])/(130e-6 + 1e-6 * y[173] * y[588])
    R2260 = (13.7 * 1e-6 * y[588])/(130e-6 + 1e-6 * y[588])
    return (R976) - (R955 + R2260)
 
def m_pmtcoa_c(t, y):
    R978 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[785])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[785])
    R1475 = (13.7 * 1e-6 * y[772] * y[99])/(130e-6 + 1e-6 * y[772] * y[99])
    R130 = (13.7 * 1e-6 * y[282] * y[589])/(130e-6 + 1e-6 * y[282] * y[589])
    R957 = (13.7 * 1e-6 * y[173] * y[589])/(130e-6 + 1e-6 * y[173] * y[589])
    return (R978 + R1475) - (R130 + R957)
 
def m_hdcoa_c(t, y):
    R979 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[786])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[786])
    R962 = (13.7 * 1e-6 * y[173] * y[590])/(130e-6 + 1e-6 * y[173] * y[590])
    R1331 = (13.7 * 1e-6 * y[590])/(130e-6 + 1e-6 * y[590])
    return (R979) - (R962 + R1331)
 
def m_stcoa_c(t, y):
    R980 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[871])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[871])
    R131 = (13.7 * 1e-6 * y[282] * y[591])/(130e-6 + 1e-6 * y[282] * y[591])
    R963 = (13.7 * 1e-6 * y[173] * y[591])/(130e-6 + 1e-6 * y[173] * y[591])
    return (R980) - (R131 + R963)
 
def m_btal_c(t, y):
    R981 = (13.7 * 1e-6 * y[328] * y[655] * y[335])/(130e-6 + 1e-6 * y[328] * y[655] * y[335])
    R259 = (13.7 * 1e-6 * y[592] * y[173] * y[236])/(130e-6 + 1e-6 * y[592] * y[173] * y[236])
    return (R981) - (R259)
 
def m_glx_c(t, y):
    R982 = (13.7 * 1e-6 * y[655] * y[335] * y[1230])/(130e-6 + 1e-6 * y[655] * y[335] * y[1230])
    R1274 = (13.7 * 1e-6 * y[702] * y[444])/(130e-6 + 1e-6 * y[702] * y[444])
    R1275 = (13.7 * 1e-6 * y[702] * y[441])/(130e-6 + 1e-6 * y[702] * y[441])
    R1276 = (13.7 * 1e-6 * y[495] * y[702])/(130e-6 + 1e-6 * y[495] * y[702])
    R1376 = (13.7 * 1e-6 * y[174])/(130e-6 + 1e-6 * y[174])
    R2368 = (13.7 * 1e-6 * y[173] * y[36] * y[257])/(130e-6 + 1e-6 * y[173] * y[36] * y[257])
    R1224 = (13.7 * 1e-6 * y[593] * y[36])/(130e-6 + 1e-6 * y[593] * y[36])
    R1261 = (13.7 * 1e-6 * y[593] * y[36] * y[113])/(130e-6 + 1e-6 * y[593] * y[36] * y[113])
    R1263 = (13.7 * 1e-6 * y[593] * y[36] * y[201])/(130e-6 + 1e-6 * y[593] * y[36] * y[201])
    R1568 = (13.7 * 1e-6 * y[127] * y[593] * y[173])/(130e-6 + 1e-6 * y[127] * y[593] * y[173])
    return (R982 + R1274 + R1275 + R1276 + R1376 + R2368) - (R1224 + R1261 + R1263 + R1568)
 
def m_fe2_p(t, y):
    R985 = (13.7 * 1e-6 * y[283] * y[61])/(130e-6 + 1e-6 * y[283] * y[61])
    R986 = (13.7 * 1e-6 * y[1498])/(130e-6 + 1e-6 * y[1498])
    R983 = (13.7 * 1e-6 * y[278] * y[594] * y[173])/(130e-6 + 1e-6 * y[278] * y[594] * y[173])
    R984 = (13.7 * 1e-6 * y[594] * y[61])/(130e-6 + 1e-6 * y[594] * y[61])
    R987 = (13.7 * 1e-6 * y[594])/(130e-6 + 1e-6 * y[594])
    R1077 = (13.7 * 1e-6 * y[594] * y[61] * y[1004])/(130e-6 + 1e-6 * y[594] * y[61] * y[1004])
    return (R985 + R986) - (R983 + R984 + R987 + R1077)
 
def m_odecoa_c(t, y):
    R988 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[872])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[872])
    R964 = (13.7 * 1e-6 * y[173] * y[595])/(130e-6 + 1e-6 * y[173] * y[595])
    R1830 = (13.7 * 1e-6 * y[595])/(130e-6 + 1e-6 * y[595])
    return (R988) - (R964 + R1830)
 
def m_hxcoa_c(t, y):
    R989 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[831])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[831])
    R1418 = (13.7 * 1e-6 * y[127] * y[584])/(130e-6 + 1e-6 * y[127] * y[584])
    R1465 = (13.7 * 1e-6 * y[800] * y[99])/(130e-6 + 1e-6 * y[800] * y[99])
    R119 = (13.7 * 1e-6 * y[282] * y[596])/(130e-6 + 1e-6 * y[282] * y[596])
    R966 = (13.7 * 1e-6 * y[173] * y[596])/(130e-6 + 1e-6 * y[173] * y[596])
    return (R989 + R1418 + R1465) - (R119 + R966)
 
def m_occoa_c(t, y):
    R990 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[1011])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[1011])
    R1466 = (13.7 * 1e-6 * y[801] * y[99])/(130e-6 + 1e-6 * y[801] * y[99])
    R126 = (13.7 * 1e-6 * y[282] * y[597])/(130e-6 + 1e-6 * y[282] * y[597])
    R968 = (13.7 * 1e-6 * y[173] * y[597])/(130e-6 + 1e-6 * y[173] * y[597])
    return (R990 + R1466) - (R126 + R968)
 
def m_fe3dcit_p(t, y):
    R992 = (13.7 * 1e-6 * y[1503] * y[61])/(130e-6 + 1e-6 * y[1503] * y[61])
    R991 = (13.7 * 1e-6 * y[278] * y[598] * y[173])/(130e-6 + 1e-6 * y[278] * y[598] * y[173])
    return (R992) - (R991)
 
def m_Sfglutth_c(t, y):
    R996 = (13.7 * 1e-6 * y[605] * y[236])/(130e-6 + 1e-6 * y[605] * y[236])
    R2149 = (13.7 * 1e-6 * y[599] * y[173])/(130e-6 + 1e-6 * y[599] * y[173])
    return (R996) - (R2149)
 
def m_fald_p(t, y):
    R997 = (13.7 * 1e-6 * y[1493])/(130e-6 + 1e-6 * y[1493])
    R998 = (13.7 * 1e-6 * y[600])/(130e-6 + 1e-6 * y[600])
    return (R997) - (R998)
 
def m_fald_c(t, y):
    R998 = (13.7 * 1e-6 * y[600])/(130e-6 + 1e-6 * y[600])
    R1023 = (13.7 * 1e-6 * y[655] * y[1053] * y[335])/(130e-6 + 1e-6 * y[655] * y[1053] * y[335])
    R1976 = (13.7 * 1e-6 * y[1656] * y[173] * y[335])/(130e-6 + 1e-6 * y[1656] * y[173] * y[335])
    R2114 = (13.7 * 1e-6 * y[173] * y[335] * y[1658])/(130e-6 + 1e-6 * y[173] * y[335] * y[1658])
    R1004 = (13.7 * 1e-6 * y[601] * y[763])/(130e-6 + 1e-6 * y[601] * y[763])
    return (R998 + R1023 + R1976 + R2114) - (R1004)
 
def m_fe3dhbzs_c(t, y):
    R1000 = (13.7 * 1e-6 * y[278] * y[603] * y[173])/(130e-6 + 1e-6 * y[278] * y[603] * y[173])
    R999 = (13.7 * 1e-6 * y[602])/(130e-6 + 1e-6 * y[602])
    return (R1000) - (R999)
 
def m_fe3dhbzs_p(t, y):
    R1001 = (13.7 * 1e-6 * y[1504] * y[61])/(130e-6 + 1e-6 * y[1504] * y[61])
    R1000 = (13.7 * 1e-6 * y[278] * y[603] * y[173])/(130e-6 + 1e-6 * y[278] * y[603] * y[173])
    return (R1001) - (R1000)
 
def m_fe3hox_un_c(t, y):
    R1002 = (13.7 * 1e-6 * y[136] * y[612])/(130e-6 + 1e-6 * y[136] * y[612])
    R1003 = (13.7 * 1e-6 * y[612] * y[655])/(130e-6 + 1e-6 * y[612] * y[655])
    R1012 = (13.7 * 1e-6 * y[612] * y[649])/(130e-6 + 1e-6 * y[612] * y[649])
    R1013 = (13.7 * 1e-6 * y[604] * y[61])/(130e-6 + 1e-6 * y[604] * y[61])
    return (R1002 + R1003 + R1012) - (R1013)
 
def m_hmgth_c(t, y):
    R1004 = (13.7 * 1e-6 * y[601] * y[763])/(130e-6 + 1e-6 * y[601] * y[763])
    R996 = (13.7 * 1e-6 * y[605] * y[236])/(130e-6 + 1e-6 * y[605] * y[236])
    return (R1004) - (R996)
 
def m_fcl__L_c(t, y):
    R1008 = (13.7 * 1e-6 * y[642])/(130e-6 + 1e-6 * y[642])
    R1009 = (13.7 * 1e-6 * y[278] * y[606])/(130e-6 + 1e-6 * y[278] * y[606])
    return (R1008) - (R1009)
 
def m_fc1p_c(t, y):
    R1009 = (13.7 * 1e-6 * y[278] * y[606])/(130e-6 + 1e-6 * y[278] * y[606])
    R1010 = (13.7 * 1e-6 * y[607])/(130e-6 + 1e-6 * y[607])
    return (R1009) - (R1010)
 
def m_lald__L_c(t, y):
    R1010 = (13.7 * 1e-6 * y[607])/(130e-6 + 1e-6 * y[607])
    R2080 = (13.7 * 1e-6 * y[1164])/(130e-6 + 1e-6 * y[1164])
    R1451 = (13.7 * 1e-6 * y[173] * y[608] * y[236])/(130e-6 + 1e-6 * y[173] * y[608] * y[236])
    R1453 = (13.7 * 1e-6 * y[36] * y[608] * y[113])/(130e-6 + 1e-6 * y[36] * y[608] * y[113])
    return (R1010 + R2080) - (R1451 + R1453)
 
def m_pheme_c(t, y):
    R1011 = (13.7 * 1e-6 * y[283] * y[1131])/(130e-6 + 1e-6 * y[283] * y[1131])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1332 = (13.7 * 1e-6 * y[761] * y[173] * y[609])/(130e-6 + 1e-6 * y[761] * y[173] * y[609])
    R1940 = (13.7 * 1e-6 * y[278] * y[173] * y[609])/(130e-6 + 1e-6 * y[278] * y[173] * y[609])
    return (R1011) - (R926 + R1332 + R1940)
 
def m_fe3hox_un_p(t, y):
    R1013 = (13.7 * 1e-6 * y[604] * y[61])/(130e-6 + 1e-6 * y[604] * y[61])
    R1014 = (13.7 * 1e-6 * y[610] * y[61])/(130e-6 + 1e-6 * y[610] * y[61])
    return (R1013) - (R1014)
 
def m_fe3hox_un_e(t, y):
    R1014 = (13.7 * 1e-6 * y[610] * y[61])/(130e-6 + 1e-6 * y[610] * y[61])
    R863 = (13.7 * 1e-6 * y[611])/(130e-6 + 1e-6 * y[611])
    R1016 = (13.7 * 1e-6 * y[1365] * y[611])/(130e-6 + 1e-6 * y[1365] * y[611])
    return (R1014) - (R863 + R1016)
 
def m_fe3hox_c(t, y):
    R1015 = (13.7 * 1e-6 * y[278] * y[614] * y[173])/(130e-6 + 1e-6 * y[278] * y[614] * y[173])
    R1002 = (13.7 * 1e-6 * y[136] * y[612])/(130e-6 + 1e-6 * y[136] * y[612])
    R1003 = (13.7 * 1e-6 * y[612] * y[655])/(130e-6 + 1e-6 * y[612] * y[655])
    R1012 = (13.7 * 1e-6 * y[612] * y[649])/(130e-6 + 1e-6 * y[612] * y[649])
    return (R1015) - (R1002 + R1003 + R1012)
 
def m_fe3hox_e(t, y):
    R1016 = (13.7 * 1e-6 * y[1365] * y[611])/(130e-6 + 1e-6 * y[1365] * y[611])
    R862 = (13.7 * 1e-6 * y[613])/(130e-6 + 1e-6 * y[613])
    R1017 = (13.7 * 1e-6 * y[613] * y[61])/(130e-6 + 1e-6 * y[613] * y[61])
    return (R1016) - (R862 + R1017)
 
def m_fe3hox_p(t, y):
    R1017 = (13.7 * 1e-6 * y[613] * y[61])/(130e-6 + 1e-6 * y[613] * y[61])
    R1015 = (13.7 * 1e-6 * y[278] * y[614] * y[173])/(130e-6 + 1e-6 * y[278] * y[614] * y[173])
    return (R1017) - (R1015)
 
def m_fe3_p(t, y):
    R1024 = (13.7 * 1e-6 * y[1365])/(130e-6 + 1e-6 * y[1365])
    R1077 = (13.7 * 1e-6 * y[594] * y[61] * y[1004])/(130e-6 + 1e-6 * y[594] * y[61] * y[1004])
    R1019 = (13.7 * 1e-6 * y[278] * y[615] * y[173])/(130e-6 + 1e-6 * y[278] * y[615] * y[173])
    return (R1024 + R1077) - (R1019)
 
def m_fecrm_un_c(t, y):
    R1026 = (13.7 * 1e-6 * y[136] * y[619])/(130e-6 + 1e-6 * y[136] * y[619])
    R1027 = (13.7 * 1e-6 * y[619] * y[655])/(130e-6 + 1e-6 * y[619] * y[655])
    R1028 = (13.7 * 1e-6 * y[619] * y[649])/(130e-6 + 1e-6 * y[619] * y[649])
    R1031 = (13.7 * 1e-6 * y[616] * y[61])/(130e-6 + 1e-6 * y[616] * y[61])
    return (R1026 + R1027 + R1028) - (R1031)
 
def m_fecrm_un_e(t, y):
    R1029 = (13.7 * 1e-6 * y[618] * y[61])/(130e-6 + 1e-6 * y[618] * y[61])
    R870 = (13.7 * 1e-6 * y[617])/(130e-6 + 1e-6 * y[617])
    R1037 = (13.7 * 1e-6 * y[1365] * y[617])/(130e-6 + 1e-6 * y[1365] * y[617])
    return (R1029) - (R870 + R1037)
 
def m_fecrm_un_p(t, y):
    R1031 = (13.7 * 1e-6 * y[616] * y[61])/(130e-6 + 1e-6 * y[616] * y[61])
    R1029 = (13.7 * 1e-6 * y[618] * y[61])/(130e-6 + 1e-6 * y[618] * y[61])
    return (R1031) - (R1029)
 
def m_fecrm_c(t, y):
    R1033 = (13.7 * 1e-6 * y[278] * y[622] * y[173])/(130e-6 + 1e-6 * y[278] * y[622] * y[173])
    R1026 = (13.7 * 1e-6 * y[136] * y[619])/(130e-6 + 1e-6 * y[136] * y[619])
    R1027 = (13.7 * 1e-6 * y[619] * y[655])/(130e-6 + 1e-6 * y[619] * y[655])
    R1028 = (13.7 * 1e-6 * y[619] * y[649])/(130e-6 + 1e-6 * y[619] * y[649])
    return (R1033) - (R1026 + R1027 + R1028)
 
def m_for_p(t, y):
    R1035 = (13.7 * 1e-6 * y[1452])/(130e-6 + 1e-6 * y[1452])
    R1036 = (13.7 * 1e-6 * y[252])/(130e-6 + 1e-6 * y[252])
    R1020 = (13.7 * 1e-6 * y[620] * y[36] * y[444])/(130e-6 + 1e-6 * y[620] * y[36] * y[444])
    R1021 = (13.7 * 1e-6 * y[620] * y[36] * y[441])/(130e-6 + 1e-6 * y[620] * y[36] * y[441])
    R1034 = (13.7 * 1e-6 * y[620] * y[61])/(130e-6 + 1e-6 * y[620] * y[61])
    return (R1035 + R1036) - (R1020 + R1021 + R1034)
 
def m_fecrm_e(t, y):
    R1037 = (13.7 * 1e-6 * y[1365] * y[617])/(130e-6 + 1e-6 * y[1365] * y[617])
    R865 = (13.7 * 1e-6 * y[621])/(130e-6 + 1e-6 * y[621])
    R1038 = (13.7 * 1e-6 * y[621] * y[61])/(130e-6 + 1e-6 * y[621] * y[61])
    return (R1037) - (R865 + R1038)
 
def m_fecrm_p(t, y):
    R1038 = (13.7 * 1e-6 * y[621] * y[61])/(130e-6 + 1e-6 * y[621] * y[61])
    R1033 = (13.7 * 1e-6 * y[278] * y[622] * y[173])/(130e-6 + 1e-6 * y[278] * y[622] * y[173])
    return (R1038) - (R1033)
 
def m_fdp_c(t, y):
    R1042 = (13.7 * 1e-6 * y[278] * y[634])/(130e-6 + 1e-6 * y[278] * y[634])
    R1881 = (13.7 * 1e-6 * y[278] * y[266])/(130e-6 + 1e-6 * y[278] * y[266])
    R1006 = (13.7 * 1e-6 * y[623])/(130e-6 + 1e-6 * y[623])
    R1007 = (13.7 * 1e-6 * y[623] * y[173])/(130e-6 + 1e-6 * y[623] * y[173])
    return (R1042 + R1881) - (R1006 + R1007)
 
def m_frulys_c(t, y):
    R1044 = (13.7 * 1e-6 * y[1135])/(130e-6 + 1e-6 * y[1135])
    R1046 = (13.7 * 1e-6 * y[630] * y[61])/(130e-6 + 1e-6 * y[630] * y[61])
    R1045 = (13.7 * 1e-6 * y[278] * y[624])/(130e-6 + 1e-6 * y[278] * y[624])
    return (R1044 + R1046) - (R1045)
 
def m_frulysp_c(t, y):
    R1045 = (13.7 * 1e-6 * y[278] * y[624])/(130e-6 + 1e-6 * y[278] * y[624])
    R1043 = (13.7 * 1e-6 * y[625] * y[173])/(130e-6 + 1e-6 * y[625] * y[173])
    return (R1045) - (R1043)
 
def m_feenter_c(t, y):
    R1050 = (13.7 * 1e-6 * y[278] * y[629] * y[173])/(130e-6 + 1e-6 * y[278] * y[629] * y[173])
    R701 = (13.7 * 1e-6 * y[626] * y[173])/(130e-6 + 1e-6 * y[626] * y[173])
    R1047 = (13.7 * 1e-6 * y[136] * y[626])/(130e-6 + 1e-6 * y[136] * y[626])
    R1048 = (13.7 * 1e-6 * y[626] * y[655])/(130e-6 + 1e-6 * y[626] * y[655])
    R1049 = (13.7 * 1e-6 * y[626] * y[649])/(130e-6 + 1e-6 * y[626] * y[649])
    return (R1050) - (R701 + R1047 + R1048 + R1049)
 
def m_feenter_e(t, y):
    R1051 = (13.7 * 1e-6 * y[628] * y[1365])/(130e-6 + 1e-6 * y[628] * y[1365])
    R871 = (13.7 * 1e-6 * y[627])/(130e-6 + 1e-6 * y[627])
    R1053 = (13.7 * 1e-6 * y[627] * y[61])/(130e-6 + 1e-6 * y[627] * y[61])
    return (R1051) - (R871 + R1053)
 
def m_enter_e(t, y):
    R1052 = (13.7 * 1e-6 * y[632] * y[61])/(130e-6 + 1e-6 * y[632] * y[61])
    R840 = (13.7 * 1e-6 * y[628])/(130e-6 + 1e-6 * y[628])
    R1051 = (13.7 * 1e-6 * y[628] * y[1365])/(130e-6 + 1e-6 * y[628] * y[1365])
    return (R1052) - (R840 + R1051)
 
def m_feenter_p(t, y):
    R1053 = (13.7 * 1e-6 * y[627] * y[61])/(130e-6 + 1e-6 * y[627] * y[61])
    R1050 = (13.7 * 1e-6 * y[278] * y[629] * y[173])/(130e-6 + 1e-6 * y[278] * y[629] * y[173])
    return (R1053) - (R1050)
 
def m_frulys_p(t, y):
    R1054 = (13.7 * 1e-6 * y[1457])/(130e-6 + 1e-6 * y[1457])
    R1046 = (13.7 * 1e-6 * y[630] * y[61])/(130e-6 + 1e-6 * y[630] * y[61])
    return (R1054) - (R1046)
 
def m_fruur_c(t, y):
    R1055 = (13.7 * 1e-6 * y[633] * y[61])/(130e-6 + 1e-6 * y[633] * y[61])
    R1328 = (13.7 * 1e-6 * y[738])/(130e-6 + 1e-6 * y[738])
    R1617 = (13.7 * 1e-6 * y[1648] * y[236])/(130e-6 + 1e-6 * y[1648] * y[236])
    return (R1055 + R1328 + R1617) - (0)
 
def m_enter_p(t, y):
    R1056 = (13.7 * 1e-6 * y[564] * y[61])/(130e-6 + 1e-6 * y[564] * y[61])
    R1052 = (13.7 * 1e-6 * y[632] * y[61])/(130e-6 + 1e-6 * y[632] * y[61])
    return (R1056) - (R1052)
 
def m_fruur_p(t, y):
    R1057 = (13.7 * 1e-6 * y[1458])/(130e-6 + 1e-6 * y[1458])
    R1055 = (13.7 * 1e-6 * y[633] * y[61])/(130e-6 + 1e-6 * y[633] * y[61])
    return (R1057) - (R1055)
 
def m_f1p_c(t, y):
    R1060 = (13.7 * 1e-6 * y[635] * y[563])/(130e-6 + 1e-6 * y[635] * y[563])
    R1042 = (13.7 * 1e-6 * y[278] * y[634])/(130e-6 + 1e-6 * y[278] * y[634])
    return (R1060) - (R1042)
 
def m_fru_p(t, y):
    R1061 = (13.7 * 1e-6 * y[1456])/(130e-6 + 1e-6 * y[1456])
    R1059 = (13.7 * 1e-6 * y[635] * y[563])/(130e-6 + 1e-6 * y[635] * y[563])
    R1060 = (13.7 * 1e-6 * y[635] * y[563])/(130e-6 + 1e-6 * y[635] * y[563])
    return (R1061) - (R1059 + R1060)
 
def m_feoxam_un_c(t, y):
    R1062 = (13.7 * 1e-6 * y[136] * y[640])/(130e-6 + 1e-6 * y[136] * y[640])
    R1063 = (13.7 * 1e-6 * y[640] * y[655])/(130e-6 + 1e-6 * y[640] * y[655])
    R1064 = (13.7 * 1e-6 * y[640] * y[649])/(130e-6 + 1e-6 * y[640] * y[649])
    R1066 = (13.7 * 1e-6 * y[636] * y[61])/(130e-6 + 1e-6 * y[636] * y[61])
    return (R1062 + R1063 + R1064) - (R1066)
 
def m_feoxam_un_e(t, y):
    R1065 = (13.7 * 1e-6 * y[638] * y[61])/(130e-6 + 1e-6 * y[638] * y[61])
    R698 = (13.7 * 1e-6 * y[637])/(130e-6 + 1e-6 * y[637])
    R1071 = (13.7 * 1e-6 * y[1365] * y[637])/(130e-6 + 1e-6 * y[1365] * y[637])
    return (R1065) - (R698 + R1071)
 
def m_feoxam_un_p(t, y):
    R1066 = (13.7 * 1e-6 * y[636] * y[61])/(130e-6 + 1e-6 * y[636] * y[61])
    R1065 = (13.7 * 1e-6 * y[638] * y[61])/(130e-6 + 1e-6 * y[638] * y[61])
    return (R1066) - (R1065)
 
def m_fuc__L_p(t, y):
    R1068 = (13.7 * 1e-6 * y[1459])/(130e-6 + 1e-6 * y[1459])
    R1072 = (13.7 * 1e-6 * y[639] * y[61])/(130e-6 + 1e-6 * y[639] * y[61])
    return (R1068) - (R1072)
 
def m_feoxam_c(t, y):
    R1069 = (13.7 * 1e-6 * y[278] * y[644] * y[173])/(130e-6 + 1e-6 * y[278] * y[644] * y[173])
    R1062 = (13.7 * 1e-6 * y[136] * y[640])/(130e-6 + 1e-6 * y[136] * y[640])
    R1063 = (13.7 * 1e-6 * y[640] * y[655])/(130e-6 + 1e-6 * y[640] * y[655])
    R1064 = (13.7 * 1e-6 * y[640] * y[649])/(130e-6 + 1e-6 * y[640] * y[649])
    return (R1069) - (R1062 + R1063 + R1064)
 
def m_feoxam_e(t, y):
    R1071 = (13.7 * 1e-6 * y[1365] * y[637])/(130e-6 + 1e-6 * y[1365] * y[637])
    R872 = (13.7 * 1e-6 * y[641])/(130e-6 + 1e-6 * y[641])
    R1076 = (13.7 * 1e-6 * y[641] * y[61])/(130e-6 + 1e-6 * y[641] * y[61])
    return (R1071) - (R872 + R1076)
 
def m_fuc__L_c(t, y):
    R1072 = (13.7 * 1e-6 * y[639] * y[61])/(130e-6 + 1e-6 * y[639] * y[61])
    R1008 = (13.7 * 1e-6 * y[642])/(130e-6 + 1e-6 * y[642])
    return (R1072) - (R1008)
 
def m_mal__L_c(t, y):
    R1073 = (13.7 * 1e-6 * y[153] * y[173])/(130e-6 + 1e-6 * y[153] * y[173])
    R1568 = (13.7 * 1e-6 * y[127] * y[593] * y[173])/(130e-6 + 1e-6 * y[127] * y[593] * y[173])
    R1593 = (13.7 * 1e-6 * y[61] * y[905])/(130e-6 + 1e-6 * y[61] * y[905])
    R1594 = (13.7 * 1e-6 * y[61] * y[905])/(130e-6 + 1e-6 * y[61] * y[905])
    R1614 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1615 = (13.7 * 1e-6 * y[643] * y[444])/(130e-6 + 1e-6 * y[643] * y[444])
    R1616 = (13.7 * 1e-6 * y[643] * y[441])/(130e-6 + 1e-6 * y[643] * y[441])
    R1626 = (13.7 * 1e-6 * y[643] * y[236])/(130e-6 + 1e-6 * y[643] * y[236])
    R1627 = (13.7 * 1e-6 * y[643] * y[6])/(130e-6 + 1e-6 * y[643] * y[6])
    return (R1073 + R1568 + R1593 + R1594) - (R1614 + R1615 + R1616 + R1626 + R1627)
 
def m_feoxam_p(t, y):
    R1076 = (13.7 * 1e-6 * y[641] * y[61])/(130e-6 + 1e-6 * y[641] * y[61])
    R1069 = (13.7 * 1e-6 * y[278] * y[644] * y[173])/(130e-6 + 1e-6 * y[278] * y[644] * y[173])
    return (R1076) - (R1069)
 
def m_h2_c(t, y):
    R1079 = (13.7 * 1e-6 * y[252] * y[36])/(130e-6 + 1e-6 * y[252] * y[36])
    R1352 = (13.7 * 1e-6 * y[798])/(130e-6 + 1e-6 * y[798])
    R1424 = (13.7 * 1e-6 * y[645] * y[36] * y[444])/(130e-6 + 1e-6 * y[645] * y[36] * y[444])
    R1425 = (13.7 * 1e-6 * y[645] * y[36] * y[441])/(130e-6 + 1e-6 * y[645] * y[36] * y[441])
    R1428 = (13.7 * 1e-6 * y[495] * y[645] * y[36])/(130e-6 + 1e-6 * y[495] * y[645] * y[36])
    return (R1079 + R1352) - (R1424 + R1425 + R1428)
 
def m_fldrd_c(t, y):
    R1080 = (13.7 * 1e-6 * y[1174] * y[36] * y[201])/(130e-6 + 1e-6 * y[1174] * y[36] * y[201])
    R2096 = (13.7 * 1e-6 * y[278] * y[646])/(130e-6 + 1e-6 * y[278] * y[646])
    R2097 = (13.7 * 1e-6 * y[646] * y[928])/(130e-6 + 1e-6 * y[646] * y[928])
    R2103 = (13.7 * 1e-6 * y[404] * y[646])/(130e-6 + 1e-6 * y[404] * y[646])
    R2104 = (13.7 * 1e-6 * y[646] * y[929])/(130e-6 + 1e-6 * y[646] * y[929])
    return (R1080) - (R2096 + R2097 + R2103 + R2104)
 
def m_fum_p(t, y):
    R1081 = (13.7 * 1e-6 * y[1462])/(130e-6 + 1e-6 * y[1462])
    R1074 = (13.7 * 1e-6 * y[647] * y[61])/(130e-6 + 1e-6 * y[647] * y[61])
    R1075 = (13.7 * 1e-6 * y[647] * y[61])/(130e-6 + 1e-6 * y[647] * y[61])
    R2219 = (13.7 * 1e-6 * y[647] * y[290])/(130e-6 + 1e-6 * y[647] * y[290])
    return (R1081) - (R1074 + R1075 + R2219)
 
def m_acgam1p_c(t, y):
    R1082 = (13.7 * 1e-6 * y[127] * y[1594])/(130e-6 + 1e-6 * y[127] * y[1594])
    R2346 = (13.7 * 1e-6 * y[648] * y[36] * y[929])/(130e-6 + 1e-6 * y[648] * y[36] * y[929])
    return (R1082) - (R2346)
 
def m_rbflvrd_c(t, y):
    R1083 = (13.7 * 1e-6 * y[36] * y[201] * y[285])/(130e-6 + 1e-6 * y[36] * y[201] * y[285])
    R1085 = (13.7 * 1e-6 * y[36] * y[113] * y[285])/(130e-6 + 1e-6 * y[36] * y[113] * y[285])
    R291 = (13.7 * 1e-6 * y[291] * y[649])/(130e-6 + 1e-6 * y[291] * y[649])
    R465 = (13.7 * 1e-6 * y[422] * y[649])/(130e-6 + 1e-6 * y[422] * y[649])
    R1012 = (13.7 * 1e-6 * y[612] * y[649])/(130e-6 + 1e-6 * y[612] * y[649])
    R1028 = (13.7 * 1e-6 * y[619] * y[649])/(130e-6 + 1e-6 * y[619] * y[649])
    R1049 = (13.7 * 1e-6 * y[626] * y[649])/(130e-6 + 1e-6 * y[626] * y[649])
    R1064 = (13.7 * 1e-6 * y[640] * y[649])/(130e-6 + 1e-6 * y[640] * y[649])
    return (R1083 + R1085) - (R291 + R465 + R1012 + R1028 + R1049 + R1064)
 
def m_fmettrna_c(t, y):
    R1086 = (13.7 * 1e-6 * y[1057] * y[937])/(130e-6 + 1e-6 * y[1057] * y[937])
    return (R1086) - (0)
 
def m_glc__D_p(t, y):
    R1087 = (13.7 * 1e-6 * y[653] * y[406])/(130e-6 + 1e-6 * y[653] * y[406])
    R1171 = (13.7 * 1e-6 * y[1585])/(130e-6 + 1e-6 * y[1585])
    R1172 = (13.7 * 1e-6 * y[1585])/(130e-6 + 1e-6 * y[1585])
    R1443 = (13.7 * 1e-6 * y[406] * y[850])/(130e-6 + 1e-6 * y[406] * y[850])
    R2252 = (13.7 * 1e-6 * y[406] * y[1245])/(130e-6 + 1e-6 * y[406] * y[1245])
    R1164 = (13.7 * 1e-6 * y[278] * y[651] * y[173])/(130e-6 + 1e-6 * y[278] * y[651] * y[173])
    R1169 = (13.7 * 1e-6 * y[651] * y[563])/(130e-6 + 1e-6 * y[651] * y[563])
    R1170 = (13.7 * 1e-6 * y[651] * y[61])/(130e-6 + 1e-6 * y[651] * y[61])
    R1198 = (13.7 * 1e-6 * y[651] * y[406] * y[444])/(130e-6 + 1e-6 * y[651] * y[406] * y[444])
    return (R1087 + R1171 + R1172 + R1443 + R2252) - (R1164 + R1169 + R1170 + R1198)
 
def m_dtdpglu_c(t, y):
    R1088 = (13.7 * 1e-6 * y[932] * y[723] * y[36])/(130e-6 + 1e-6 * y[932] * y[723] * y[36])
    R2271 = (13.7 * 1e-6 * y[652])/(130e-6 + 1e-6 * y[652])
    return (R1088) - (R2271)
 
def m_g1p_p(t, y):
    R1089 = (13.7 * 1e-6 * y[1463])/(130e-6 + 1e-6 * y[1463])
    R2363 = (13.7 * 1e-6 * y[406] * y[1301])/(130e-6 + 1e-6 * y[406] * y[1301])
    R1087 = (13.7 * 1e-6 * y[653] * y[406])/(130e-6 + 1e-6 * y[653] * y[406])
    return (R1089 + R2363) - (R1087)
 
def m_5aop_c(t, y):
    R1090 = (13.7 * 1e-6 * y[726])/(130e-6 + 1e-6 * y[726])
    R1990 = (13.7 * 1e-6 * y[654])/(130e-6 + 1e-6 * y[654])
    return (R1090) - (R1990)
 
def m_fmnh2_c(t, y):
    R1093 = (13.7 * 1e-6 * y[284] * y[36] * y[113])/(130e-6 + 1e-6 * y[284] * y[36] * y[113])
    R1094 = (13.7 * 1e-6 * y[284] * y[36] * y[201])/(130e-6 + 1e-6 * y[284] * y[36] * y[201])
    R290 = (13.7 * 1e-6 * y[291] * y[655])/(130e-6 + 1e-6 * y[291] * y[655])
    R464 = (13.7 * 1e-6 * y[422] * y[655])/(130e-6 + 1e-6 * y[422] * y[655])
    R981 = (13.7 * 1e-6 * y[328] * y[655] * y[335])/(130e-6 + 1e-6 * y[328] * y[655] * y[335])
    R982 = (13.7 * 1e-6 * y[655] * y[335] * y[1230])/(130e-6 + 1e-6 * y[655] * y[335] * y[1230])
    R1003 = (13.7 * 1e-6 * y[612] * y[655])/(130e-6 + 1e-6 * y[612] * y[655])
    R1022 = (13.7 * 1e-6 * y[655] * y[841] * y[335])/(130e-6 + 1e-6 * y[655] * y[841] * y[335])
    R1023 = (13.7 * 1e-6 * y[655] * y[1053] * y[335])/(130e-6 + 1e-6 * y[655] * y[1053] * y[335])
    R1027 = (13.7 * 1e-6 * y[619] * y[655])/(130e-6 + 1e-6 * y[619] * y[655])
    R1030 = (13.7 * 1e-6 * y[569] * y[655] * y[335])/(130e-6 + 1e-6 * y[569] * y[655] * y[335])
    R1048 = (13.7 * 1e-6 * y[626] * y[655])/(130e-6 + 1e-6 * y[626] * y[655])
    R1063 = (13.7 * 1e-6 * y[640] * y[655])/(130e-6 + 1e-6 * y[640] * y[655])
    return (R1093 + R1094) - (R290 + R464 + R981 + R982 + R1003 + R1022 + R1023 + R1027 + R1030 + R1048 + R1063)
 
def m_1ddecg3p_c(t, y):
    R1095 = (13.7 * 1e-6 * y[86] * y[743])/(130e-6 + 1e-6 * y[86] * y[743])
    R173 = (13.7 * 1e-6 * y[656] * y[86])/(130e-6 + 1e-6 * y[656] * y[86])
    return (R1095) - (R173)
 
def m_1tdecg3p_c(t, y):
    R1097 = (13.7 * 1e-6 * y[743] * y[72])/(130e-6 + 1e-6 * y[743] * y[72])
    R174 = (13.7 * 1e-6 * y[657] * y[72])/(130e-6 + 1e-6 * y[657] * y[72])
    return (R1097) - (R174)
 
def m_1tdec7eg3p_c(t, y):
    R1098 = (13.7 * 1e-6 * y[743] * y[74])/(130e-6 + 1e-6 * y[743] * y[74])
    R179 = (13.7 * 1e-6 * y[658] * y[74])/(130e-6 + 1e-6 * y[658] * y[74])
    return (R1098) - (R179)
 
def m_1hdecg3p_c(t, y):
    R1100 = (13.7 * 1e-6 * y[743] * y[79])/(130e-6 + 1e-6 * y[743] * y[79])
    R180 = (13.7 * 1e-6 * y[659] * y[79])/(130e-6 + 1e-6 * y[659] * y[79])
    return (R1100) - (R180)
 
def m_1hdec9eg3p_c(t, y):
    R1101 = (13.7 * 1e-6 * y[743] * y[81])/(130e-6 + 1e-6 * y[743] * y[81])
    R185 = (13.7 * 1e-6 * y[660] * y[81])/(130e-6 + 1e-6 * y[660] * y[81])
    return (R1101) - (R185)
 
def m_gal1p_p(t, y):
    R1102 = (13.7 * 1e-6 * y[1491])/(130e-6 + 1e-6 * y[1491])
    R2358 = (13.7 * 1e-6 * y[406] * y[1297])/(130e-6 + 1e-6 * y[406] * y[1297])
    R1154 = (13.7 * 1e-6 * y[661] * y[406])/(130e-6 + 1e-6 * y[661] * y[406])
    return (R1102 + R2358) - (R1154)
 
def m_gal_bD_p(t, y):
    R1103 = (13.7 * 1e-6 * y[1511])/(130e-6 + 1e-6 * y[1511])
    R1126 = (13.7 * 1e-6 * y[662])/(130e-6 + 1e-6 * y[662])
    return (R1103) - (R1126)
 
def m_1odecg3p_c(t, y):
    R1104 = (13.7 * 1e-6 * y[743] * y[84])/(130e-6 + 1e-6 * y[743] * y[84])
    R186 = (13.7 * 1e-6 * y[663] * y[84])/(130e-6 + 1e-6 * y[663] * y[84])
    return (R1104) - (R186)
 
def m_1odec11eg3p_c(t, y):
    R1105 = (13.7 * 1e-6 * y[743] * y[82])/(130e-6 + 1e-6 * y[743] * y[82])
    R187 = (13.7 * 1e-6 * y[664] * y[82])/(130e-6 + 1e-6 * y[664] * y[82])
    return (R1105) - (R187)
 
def m_g3pc_c(t, y):
    R1106 = (13.7 * 1e-6 * y[278] * y[670] * y[173])/(130e-6 + 1e-6 * y[278] * y[670] * y[173])
    R1260 = (13.7 * 1e-6 * y[665] * y[173])/(130e-6 + 1e-6 * y[665] * y[173])
    return (R1106) - (R1260)
 
def m_5dh4dglc_c(t, y):
    R1107 = (13.7 * 1e-6 * y[677])/(130e-6 + 1e-6 * y[677])
    R1210 = (13.7 * 1e-6 * y[729])/(130e-6 + 1e-6 * y[729])
    R1209 = (13.7 * 1e-6 * y[666])/(130e-6 + 1e-6 * y[666])
    return (R1107 + R1210) - (R1209)
 
def m_tagur_c(t, y):
    R1108 = (13.7 * 1e-6 * y[669] * y[236])/(130e-6 + 1e-6 * y[669] * y[236])
    R1329 = (13.7 * 1e-6 * y[689])/(130e-6 + 1e-6 * y[689])
    R2240 = (13.7 * 1e-6 * y[1354] * y[236])/(130e-6 + 1e-6 * y[1354] * y[236])
    return (R1108 + R1329 + R2240) - (0)
 
def m_2dh3dgal_c(t, y):
    R1109 = (13.7 * 1e-6 * y[672])/(130e-6 + 1e-6 * y[672])
    R551 = (13.7 * 1e-6 * y[668] * y[278])/(130e-6 + 1e-6 * y[668] * y[278])
    return (R1109) - (R551)
 
def m_galctn__L_c(t, y):
    R1110 = (13.7 * 1e-6 * y[671] * y[61])/(130e-6 + 1e-6 * y[671] * y[61])
    R1108 = (13.7 * 1e-6 * y[669] * y[236])/(130e-6 + 1e-6 * y[669] * y[236])
    return (R1110) - (R1108)
 
def m_g3pc_p(t, y):
    R1111 = (13.7 * 1e-6 * y[1464])/(130e-6 + 1e-6 * y[1464])
    R1106 = (13.7 * 1e-6 * y[278] * y[670] * y[173])/(130e-6 + 1e-6 * y[278] * y[670] * y[173])
    R1267 = (13.7 * 1e-6 * y[670] * y[406])/(130e-6 + 1e-6 * y[670] * y[406])
    return (R1111) - (R1106 + R1267)
 
def m_galctn__L_p(t, y):
    R1114 = (13.7 * 1e-6 * y[1529])/(130e-6 + 1e-6 * y[1529])
    R1110 = (13.7 * 1e-6 * y[671] * y[61])/(130e-6 + 1e-6 * y[671] * y[61])
    return (R1114) - (R1110)
 
def m_galctn__D_c(t, y):
    R1115 = (13.7 * 1e-6 * y[676] * y[61])/(130e-6 + 1e-6 * y[676] * y[61])
    R1109 = (13.7 * 1e-6 * y[672])/(130e-6 + 1e-6 * y[672])
    return (R1115) - (R1109)
 
def m_g3pe_c(t, y):
    R1119 = (13.7 * 1e-6 * y[278] * y[674] * y[173])/(130e-6 + 1e-6 * y[278] * y[674] * y[173])
    R1500 = (13.7 * 1e-6 * y[17] * y[173])/(130e-6 + 1e-6 * y[17] * y[173])
    R1502 = (13.7 * 1e-6 * y[25] * y[173])/(130e-6 + 1e-6 * y[25] * y[173])
    R1504 = (13.7 * 1e-6 * y[80] * y[173])/(130e-6 + 1e-6 * y[80] * y[173])
    R1507 = (13.7 * 1e-6 * y[87] * y[173])/(130e-6 + 1e-6 * y[87] * y[173])
    R1512 = (13.7 * 1e-6 * y[96] * y[173])/(130e-6 + 1e-6 * y[96] * y[173])
    R1513 = (13.7 * 1e-6 * y[118] * y[173])/(130e-6 + 1e-6 * y[118] * y[173])
    R1514 = (13.7 * 1e-6 * y[130] * y[173])/(130e-6 + 1e-6 * y[130] * y[173])
    R1558 = (13.7 * 1e-6 * y[17] * y[241])/(130e-6 + 1e-6 * y[17] * y[241])
    R1559 = (13.7 * 1e-6 * y[25] * y[247])/(130e-6 + 1e-6 * y[25] * y[247])
    R1560 = (13.7 * 1e-6 * y[80] * y[265])/(130e-6 + 1e-6 * y[80] * y[265])
    R1561 = (13.7 * 1e-6 * y[87] * y[268])/(130e-6 + 1e-6 * y[87] * y[268])
    R1562 = (13.7 * 1e-6 * y[96] * y[271])/(130e-6 + 1e-6 * y[96] * y[271])
    R1563 = (13.7 * 1e-6 * y[118] * y[276])/(130e-6 + 1e-6 * y[118] * y[276])
    R1569 = (13.7 * 1e-6 * y[130] * y[294])/(130e-6 + 1e-6 * y[130] * y[294])
    R1268 = (13.7 * 1e-6 * y[673] * y[173])/(130e-6 + 1e-6 * y[673] * y[173])
    return (R1119 + R1500 + R1502 + R1504 + R1507 + R1512 + R1513 + R1514 + R1558 + R1559 + R1560 + R1561 + R1562 + R1563 + R1569) - (R1268)
 
def m_g3pe_p(t, y):
    R1120 = (13.7 * 1e-6 * y[1465])/(130e-6 + 1e-6 * y[1465])
    R1508 = (13.7 * 1e-6 * y[1071] * y[406])/(130e-6 + 1e-6 * y[1071] * y[406])
    R1510 = (13.7 * 1e-6 * y[1072] * y[406])/(130e-6 + 1e-6 * y[1072] * y[406])
    R1511 = (13.7 * 1e-6 * y[1073] * y[406])/(130e-6 + 1e-6 * y[1073] * y[406])
    R1516 = (13.7 * 1e-6 * y[1074] * y[406])/(130e-6 + 1e-6 * y[1074] * y[406])
    R1517 = (13.7 * 1e-6 * y[1077] * y[406])/(130e-6 + 1e-6 * y[1077] * y[406])
    R1519 = (13.7 * 1e-6 * y[1079] * y[406])/(130e-6 + 1e-6 * y[1079] * y[406])
    R1521 = (13.7 * 1e-6 * y[1080] * y[406])/(130e-6 + 1e-6 * y[1080] * y[406])
    R1119 = (13.7 * 1e-6 * y[278] * y[674] * y[173])/(130e-6 + 1e-6 * y[278] * y[674] * y[173])
    R1269 = (13.7 * 1e-6 * y[674] * y[406])/(130e-6 + 1e-6 * y[674] * y[406])
    return (R1120 + R1508 + R1510 + R1511 + R1516 + R1517 + R1519 + R1521) - (R1119 + R1269)
 
def m_g3pg_c(t, y):
    R1121 = (13.7 * 1e-6 * y[278] * y[682] * y[173])/(130e-6 + 1e-6 * y[278] * y[682] * y[173])
    R1515 = (13.7 * 1e-6 * y[169] * y[173])/(130e-6 + 1e-6 * y[169] * y[173])
    R1518 = (13.7 * 1e-6 * y[186] * y[173])/(130e-6 + 1e-6 * y[186] * y[173])
    R1520 = (13.7 * 1e-6 * y[195] * y[173])/(130e-6 + 1e-6 * y[195] * y[173])
    R1524 = (13.7 * 1e-6 * y[208] * y[173])/(130e-6 + 1e-6 * y[208] * y[173])
    R1525 = (13.7 * 1e-6 * y[217] * y[173])/(130e-6 + 1e-6 * y[217] * y[173])
    R1526 = (13.7 * 1e-6 * y[228] * y[173])/(130e-6 + 1e-6 * y[228] * y[173])
    R1527 = (13.7 * 1e-6 * y[237] * y[173])/(130e-6 + 1e-6 * y[237] * y[173])
    R1570 = (13.7 * 1e-6 * y[169] * y[241])/(130e-6 + 1e-6 * y[169] * y[241])
    R1572 = (13.7 * 1e-6 * y[186] * y[247])/(130e-6 + 1e-6 * y[186] * y[247])
    R1574 = (13.7 * 1e-6 * y[195] * y[265])/(130e-6 + 1e-6 * y[195] * y[265])
    R1576 = (13.7 * 1e-6 * y[208] * y[268])/(130e-6 + 1e-6 * y[208] * y[268])
    R1577 = (13.7 * 1e-6 * y[217] * y[271])/(130e-6 + 1e-6 * y[217] * y[271])
    R1578 = (13.7 * 1e-6 * y[228] * y[276])/(130e-6 + 1e-6 * y[228] * y[276])
    R1584 = (13.7 * 1e-6 * y[237] * y[294])/(130e-6 + 1e-6 * y[237] * y[294])
    R1272 = (13.7 * 1e-6 * y[675] * y[173])/(130e-6 + 1e-6 * y[675] * y[173])
    return (R1121 + R1515 + R1518 + R1520 + R1524 + R1525 + R1526 + R1527 + R1570 + R1572 + R1574 + R1576 + R1577 + R1578 + R1584) - (R1272)
 
def m_galctn__D_p(t, y):
    R1122 = (13.7 * 1e-6 * y[1521])/(130e-6 + 1e-6 * y[1521])
    R1115 = (13.7 * 1e-6 * y[676] * y[61])/(130e-6 + 1e-6 * y[676] * y[61])
    return (R1122) - (R1115)
 
def m_galct__D_c(t, y):
    R1123 = (13.7 * 1e-6 * y[678] * y[61])/(130e-6 + 1e-6 * y[678] * y[61])
    R1107 = (13.7 * 1e-6 * y[677])/(130e-6 + 1e-6 * y[677])
    return (R1123) - (R1107)
 
def m_galct__D_p(t, y):
    R1124 = (13.7 * 1e-6 * y[1517])/(130e-6 + 1e-6 * y[1517])
    R1123 = (13.7 * 1e-6 * y[678] * y[61])/(130e-6 + 1e-6 * y[678] * y[61])
    return (R1124) - (R1123)
 
def m_gal1p_c(t, y):
    R1125 = (13.7 * 1e-6 * y[278] * y[681])/(130e-6 + 1e-6 * y[278] * y[681])
    R2367 = (13.7 * 1e-6 * y[679] * y[694])/(130e-6 + 1e-6 * y[679] * y[694])
    return (R1125) - (R2367)
 
def m_gal_p(t, y):
    R1126 = (13.7 * 1e-6 * y[662])/(130e-6 + 1e-6 * y[662])
    R1149 = (13.7 * 1e-6 * y[1501])/(130e-6 + 1e-6 * y[1501])
    R1154 = (13.7 * 1e-6 * y[661] * y[406])/(130e-6 + 1e-6 * y[661] * y[406])
    R1443 = (13.7 * 1e-6 * y[406] * y[850])/(130e-6 + 1e-6 * y[406] * y[850])
    R1143 = (13.7 * 1e-6 * y[278] * y[680] * y[173])/(130e-6 + 1e-6 * y[278] * y[680] * y[173])
    R1144 = (13.7 * 1e-6 * y[680] * y[61])/(130e-6 + 1e-6 * y[680] * y[61])
    return (R1126 + R1149 + R1154 + R1443) - (R1143 + R1144)
 
def m_gal_c(t, y):
    R1127 = (13.7 * 1e-6 * y[173] * y[916])/(130e-6 + 1e-6 * y[173] * y[916])
    R1143 = (13.7 * 1e-6 * y[278] * y[680] * y[173])/(130e-6 + 1e-6 * y[278] * y[680] * y[173])
    R1144 = (13.7 * 1e-6 * y[680] * y[61])/(130e-6 + 1e-6 * y[680] * y[61])
    R1438 = (13.7 * 1e-6 * y[173] * y[851])/(130e-6 + 1e-6 * y[173] * y[851])
    R1125 = (13.7 * 1e-6 * y[278] * y[681])/(130e-6 + 1e-6 * y[278] * y[681])
    return (R1127 + R1143 + R1144 + R1438) - (R1125)
 
def m_g3pg_p(t, y):
    R1128 = (13.7 * 1e-6 * y[1467])/(130e-6 + 1e-6 * y[1467])
    R1523 = (13.7 * 1e-6 * y[1081] * y[406])/(130e-6 + 1e-6 * y[1081] * y[406])
    R1530 = (13.7 * 1e-6 * y[1086] * y[406])/(130e-6 + 1e-6 * y[1086] * y[406])
    R1531 = (13.7 * 1e-6 * y[1087] * y[406])/(130e-6 + 1e-6 * y[1087] * y[406])
    R1532 = (13.7 * 1e-6 * y[1088] * y[406])/(130e-6 + 1e-6 * y[1088] * y[406])
    R1533 = (13.7 * 1e-6 * y[1089] * y[406])/(130e-6 + 1e-6 * y[1089] * y[406])
    R1534 = (13.7 * 1e-6 * y[1090] * y[406])/(130e-6 + 1e-6 * y[1090] * y[406])
    R1535 = (13.7 * 1e-6 * y[1093] * y[406])/(130e-6 + 1e-6 * y[1093] * y[406])
    R1121 = (13.7 * 1e-6 * y[278] * y[682] * y[173])/(130e-6 + 1e-6 * y[278] * y[682] * y[173])
    R1273 = (13.7 * 1e-6 * y[682] * y[406])/(130e-6 + 1e-6 * y[682] * y[406])
    return (R1128 + R1523 + R1530 + R1531 + R1532 + R1533 + R1534 + R1535) - (R1121 + R1273)
 
def m_g3pi_c(t, y):
    R1129 = (13.7 * 1e-6 * y[278] * y[684] * y[173])/(130e-6 + 1e-6 * y[278] * y[684] * y[173])
    R1277 = (13.7 * 1e-6 * y[683] * y[173])/(130e-6 + 1e-6 * y[683] * y[173])
    return (R1129) - (R1277)
 
def m_g3pi_p(t, y):
    R1130 = (13.7 * 1e-6 * y[1472])/(130e-6 + 1e-6 * y[1472])
    R1129 = (13.7 * 1e-6 * y[278] * y[684] * y[173])/(130e-6 + 1e-6 * y[278] * y[684] * y[173])
    R1278 = (13.7 * 1e-6 * y[684] * y[406])/(130e-6 + 1e-6 * y[684] * y[406])
    return (R1130) - (R1129 + R1278)
 
def m_gagicolipa_c(t, y):
    R1131 = (13.7 * 1e-6 * y[732] * y[694])/(130e-6 + 1e-6 * y[732] * y[694])
    R1218 = (13.7 * 1e-6 * y[685] * y[694])/(130e-6 + 1e-6 * y[685] * y[694])
    return (R1131) - (R1218)
 
def m_galt1p_c(t, y):
    R1132 = (13.7 * 1e-6 * y[688] * y[563])/(130e-6 + 1e-6 * y[688] * y[563])
    R1182 = (13.7 * 1e-6 * y[686] * y[236])/(130e-6 + 1e-6 * y[686] * y[236])
    return (R1132) - (R1182)
 
def m_g3ps_c(t, y):
    R1133 = (13.7 * 1e-6 * y[278] * y[691] * y[173])/(130e-6 + 1e-6 * y[278] * y[691] * y[173])
    R1270 = (13.7 * 1e-6 * y[687] * y[173])/(130e-6 + 1e-6 * y[687] * y[173])
    return (R1133) - (R1270)
 
def m_galt_p(t, y):
    R1134 = (13.7 * 1e-6 * y[1536])/(130e-6 + 1e-6 * y[1536])
    R1132 = (13.7 * 1e-6 * y[688] * y[563])/(130e-6 + 1e-6 * y[688] * y[563])
    return (R1134) - (R1132)
 
def m_galur_c(t, y):
    R1135 = (13.7 * 1e-6 * y[690] * y[61])/(130e-6 + 1e-6 * y[690] * y[61])
    R1329 = (13.7 * 1e-6 * y[689])/(130e-6 + 1e-6 * y[689])
    return (R1135) - (R1329)
 
def m_galur_p(t, y):
    R1136 = (13.7 * 1e-6 * y[1553])/(130e-6 + 1e-6 * y[1553])
    R1135 = (13.7 * 1e-6 * y[690] * y[61])/(130e-6 + 1e-6 * y[690] * y[61])
    return (R1136) - (R1135)
 
def m_g3ps_p(t, y):
    R1137 = (13.7 * 1e-6 * y[1476])/(130e-6 + 1e-6 * y[1476])
    R1133 = (13.7 * 1e-6 * y[278] * y[691] * y[173])/(130e-6 + 1e-6 * y[278] * y[691] * y[173])
    R1271 = (13.7 * 1e-6 * y[691] * y[406])/(130e-6 + 1e-6 * y[691] * y[406])
    return (R1137) - (R1133 + R1271)
 
def m_1pyr5c_c(t, y):
    R1139 = (13.7 * 1e-6 * y[693])/(130e-6 + 1e-6 * y[693])
    R2044 = (13.7 * 1e-6 * y[282] * y[262])/(130e-6 + 1e-6 * y[282] * y[262])
    R1783 = (13.7 * 1e-6 * y[692] * y[173] * y[236])/(130e-6 + 1e-6 * y[692] * y[173] * y[236])
    R1784 = (13.7 * 1e-6 * y[692] * y[36] * y[201])/(130e-6 + 1e-6 * y[692] * y[36] * y[201])
    return (R1139 + R2044) - (R1783 + R1784)
 
def m_glu5sa_c(t, y):
    R1140 = (13.7 * 1e-6 * y[718] * y[36] * y[201])/(130e-6 + 1e-6 * y[718] * y[36] * y[201])
    R2006 = (13.7 * 1e-6 * y[175] * y[173])/(130e-6 + 1e-6 * y[175] * y[173])
    R1139 = (13.7 * 1e-6 * y[693])/(130e-6 + 1e-6 * y[693])
    return (R1140 + R2006) - (R1139)
 
def m_udpg_c(t, y):
    R1142 = (13.7 * 1e-6 * y[723] * y[36] * y[929])/(130e-6 + 1e-6 * y[723] * y[36] * y[929])
    R1131 = (13.7 * 1e-6 * y[732] * y[694])/(130e-6 + 1e-6 * y[732] * y[694])
    R1217 = (13.7 * 1e-6 * y[1157] * y[694])/(130e-6 + 1e-6 * y[1157] * y[694])
    R1218 = (13.7 * 1e-6 * y[685] * y[694])/(130e-6 + 1e-6 * y[685] * y[694])
    R1222 = (13.7 * 1e-6 * y[733] * y[694])/(130e-6 + 1e-6 * y[733] * y[694])
    R1803 = (13.7 * 1e-6 * y[993] * y[694])/(130e-6 + 1e-6 * y[993] * y[694])
    R1805 = (13.7 * 1e-6 * y[995] * y[694])/(130e-6 + 1e-6 * y[995] * y[694])
    R2248 = (13.7 * 1e-6 * y[108] * y[694])/(130e-6 + 1e-6 * y[108] * y[694])
    R2356 = (13.7 * 1e-6 * y[694])/(130e-6 + 1e-6 * y[694])
    R2360 = (13.7 * 1e-6 * y[173] * y[236] * y[694])/(130e-6 + 1e-6 * y[173] * y[236] * y[694])
    R2367 = (13.7 * 1e-6 * y[679] * y[694])/(130e-6 + 1e-6 * y[679] * y[694])
    return (R1142) - (R1131 + R1217 + R1218 + R1222 + R1803 + R1805 + R2248 + R2356 + R2360 + R2367)
 
def m_6pgl_c(t, y):
    R1145 = (13.7 * 1e-6 * y[108] * y[6])/(130e-6 + 1e-6 * y[108] * y[6])
    R1869 = (13.7 * 1e-6 * y[695] * y[173])/(130e-6 + 1e-6 * y[695] * y[173])
    return (R1145) - (R1869)
 
def m_gam6p_p(t, y):
    R1151 = (13.7 * 1e-6 * y[1561])/(130e-6 + 1e-6 * y[1561])
    R1150 = (13.7 * 1e-6 * y[696] * y[37])/(130e-6 + 1e-6 * y[696] * y[37])
    return (R1151) - (R1150)
 
def m_g6p_p(t, y):
    R1153 = (13.7 * 1e-6 * y[1480])/(130e-6 + 1e-6 * y[1480])
    R1148 = (13.7 * 1e-6 * y[697] * y[37])/(130e-6 + 1e-6 * y[697] * y[37])
    return (R1153) - (R1148)
 
def m_gam_p(t, y):
    R1156 = (13.7 * 1e-6 * y[1567])/(130e-6 + 1e-6 * y[1567])
    R1152 = (13.7 * 1e-6 * y[698] * y[563])/(130e-6 + 1e-6 * y[698] * y[563])
    return (R1156) - (R1152)
 
def m_13dpg_c(t, y):
    R1157 = (13.7 * 1e-6 * y[480] * y[236] * y[37])/(130e-6 + 1e-6 * y[480] * y[236] * y[37])
    R1868 = (13.7 * 1e-6 * y[752] * y[278])/(130e-6 + 1e-6 * y[752] * y[278])
    return (R1157 + R1868) - (0)
 
def m_fgam_c(t, y):
    R1159 = (13.7 * 1e-6 * y[1057] * y[1140])/(130e-6 + 1e-6 * y[1057] * y[1140])
    R1160 = (13.7 * 1e-6 * y[278] * y[252] * y[1140])/(130e-6 + 1e-6 * y[278] * y[252] * y[1140])
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    return (R1159 + R1160) - (R2042)
 
def m_glcur_p(t, y):
    R1163 = (13.7 * 1e-6 * y[1589])/(130e-6 + 1e-6 * y[1589])
    R1334 = (13.7 * 1e-6 * y[735] * y[406])/(130e-6 + 1e-6 * y[735] * y[406])
    R1229 = (13.7 * 1e-6 * y[701] * y[61])/(130e-6 + 1e-6 * y[701] * y[61])
    return (R1163 + R1334) - (R1229)
 
def m_glyclt_c(t, y):
    R1165 = (13.7 * 1e-6 * y[509] * y[173] * y[236])/(130e-6 + 1e-6 * y[509] * y[173] * y[236])
    R1261 = (13.7 * 1e-6 * y[593] * y[36] * y[113])/(130e-6 + 1e-6 * y[593] * y[36] * y[113])
    R1263 = (13.7 * 1e-6 * y[593] * y[36] * y[201])/(130e-6 + 1e-6 * y[593] * y[36] * y[201])
    R1264 = (13.7 * 1e-6 * y[757] * y[61])/(130e-6 + 1e-6 * y[757] * y[61])
    R1265 = (13.7 * 1e-6 * y[757] * y[927])/(130e-6 + 1e-6 * y[757] * y[927])
    R1872 = (13.7 * 1e-6 * y[1654] * y[173])/(130e-6 + 1e-6 * y[1654] * y[173])
    R1274 = (13.7 * 1e-6 * y[702] * y[444])/(130e-6 + 1e-6 * y[702] * y[444])
    R1275 = (13.7 * 1e-6 * y[702] * y[441])/(130e-6 + 1e-6 * y[702] * y[441])
    R1276 = (13.7 * 1e-6 * y[495] * y[702])/(130e-6 + 1e-6 * y[495] * y[702])
    return (R1165 + R1261 + R1263 + R1264 + R1265 + R1872) - (R1274 + R1275 + R1276)
 
def m_gdpofuc_c(t, y):
    R1166 = (13.7 * 1e-6 * y[740])/(130e-6 + 1e-6 * y[740])
    R1256 = (13.7 * 1e-6 * y[703] * y[36] * y[201])/(130e-6 + 1e-6 * y[703] * y[36] * y[201])
    return (R1166) - (R1256)
 
def m_ppgpp_c(t, y):
    R1167 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R1309 = (13.7 * 1e-6 * y[775] * y[173])/(130e-6 + 1e-6 * y[775] * y[173])
    R2000 = (13.7 * 1e-6 * y[173] * y[704])/(130e-6 + 1e-6 * y[173] * y[704])
    return (R1167 + R1309) - (R2000)
 
def m_man_c(t, y):
    R1168 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1727 = (13.7 * 1e-6 * y[173] * y[797])/(130e-6 + 1e-6 * y[173] * y[797])
    R1349 = (13.7 * 1e-6 * y[278] * y[705])/(130e-6 + 1e-6 * y[278] * y[705])
    return (R1168 + R1727) - (R1349)
 
def m_glycogen_c(t, y):
    R1173 = (13.7 * 1e-6 * y[720])/(130e-6 + 1e-6 * y[720])
    R1216 = (13.7 * 1e-6 * y[709])/(130e-6 + 1e-6 * y[709])
    R1196 = (13.7 * 1e-6 * y[706])/(130e-6 + 1e-6 * y[706])
    R1201 = (13.7 * 1e-6 * y[706] * y[37])/(130e-6 + 1e-6 * y[706] * y[37])
    return (R1173 + R1216) - (R1196 + R1201)
 
def m_man1p_c(t, y):
    R1174 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1606 = (13.7 * 1e-6 * y[157] * y[36] * y[707])/(130e-6 + 1e-6 * y[157] * y[36] * y[707])
    R1956 = (13.7 * 1e-6 * y[707])/(130e-6 + 1e-6 * y[707])
    return (R1174) - (R1606 + R1956)
 
def m_gdp_p(t, y):
    R1175 = (13.7 * 1e-6 * y[1581])/(130e-6 + 1e-6 * y[1581])
    R1748 = (13.7 * 1e-6 * y[779] * y[406])/(130e-6 + 1e-6 * y[779] * y[406])
    return (R1175 + R1748) - (0)
 
def m_adpglc_c(t, y):
    R1176 = (13.7 * 1e-6 * y[278] * y[723] * y[36])/(130e-6 + 1e-6 * y[278] * y[723] * y[36])
    R1216 = (13.7 * 1e-6 * y[709])/(130e-6 + 1e-6 * y[709])
    return (R1176) - (R1216)
 
def m_gln__L_c(t, y):
    R1178 = (13.7 * 1e-6 * y[278] * y[110] * y[95])/(130e-6 + 1e-6 * y[278] * y[110] * y[95])
    R1180 = (13.7 * 1e-6 * y[278] * y[712] * y[173])/(130e-6 + 1e-6 * y[278] * y[712] * y[173])
    R183 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R276 = (13.7 * 1e-6 * y[351] * y[710])/(130e-6 + 1e-6 * y[351] * y[710])
    R349 = (13.7 * 1e-6 * y[300] * y[278] * y[710] * y[173])/(130e-6 + 1e-6 * y[300] * y[278] * y[710] * y[173])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1179 = (13.7 * 1e-6 * y[278] * y[710] * y[1604])/(130e-6 + 1e-6 * y[278] * y[710] * y[1604])
    R1183 = (13.7 * 1e-6 * y[266] * y[710])/(130e-6 + 1e-6 * y[266] * y[710])
    R1202 = (13.7 * 1e-6 * y[710] * y[173])/(130e-6 + 1e-6 * y[710] * y[173])
    R1204 = (13.7 * 1e-6 * y[710] * y[173] * y[983])/(130e-6 + 1e-6 * y[710] * y[173] * y[983])
    R1206 = (13.7 * 1e-6 * y[213] * y[710] * y[36] * y[201])/(130e-6 + 1e-6 * y[213] * y[710] * y[36] * y[201])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1387 = (13.7 * 1e-6 * y[710] * y[1147])/(130e-6 + 1e-6 * y[710] * y[1147])
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    return (R1178 + R1180) - (R183 + R276 + R349 + R393 + R449 + R926 + R1179 + R1183 + R1202 + R1204 + R1206 + R1246 + R1387 + R2042)
 
def m_glntrna_c(t, y):
    R1179 = (13.7 * 1e-6 * y[278] * y[710] * y[1604])/(130e-6 + 1e-6 * y[278] * y[710] * y[1604])
    return (R1179) - (0)
 
def m_gln__L_p(t, y):
    R1181 = (13.7 * 1e-6 * y[1590])/(130e-6 + 1e-6 * y[1590])
    R1180 = (13.7 * 1e-6 * y[278] * y[712] * y[173])/(130e-6 + 1e-6 * y[278] * y[712] * y[173])
    R1203 = (13.7 * 1e-6 * y[712] * y[406])/(130e-6 + 1e-6 * y[712] * y[406])
    return (R1181) - (R1180 + R1203)
 
def m_tag6p__D_c(t, y):
    R1182 = (13.7 * 1e-6 * y[686] * y[236])/(130e-6 + 1e-6 * y[686] * y[236])
    R1886 = (13.7 * 1e-6 * y[278] * y[713])/(130e-6 + 1e-6 * y[278] * y[713])
    return (R1182) - (R1886)
 
def m_gg4abut_c(t, y):
    R1184 = (13.7 * 1e-6 * y[715] * y[173] * y[6])/(130e-6 + 1e-6 * y[715] * y[173] * y[6])
    R1185 = (13.7 * 1e-6 * y[714] * y[173])/(130e-6 + 1e-6 * y[714] * y[173])
    return (R1184) - (R1185)
 
def m_ggbutal_c(t, y):
    R1186 = (13.7 * 1e-6 * y[716] * y[173] * y[335])/(130e-6 + 1e-6 * y[716] * y[173] * y[335])
    R1184 = (13.7 * 1e-6 * y[715] * y[173] * y[6])/(130e-6 + 1e-6 * y[715] * y[173] * y[6])
    return (R1186) - (R1184)
 
def m_ggptrc_c(t, y):
    R1187 = (13.7 * 1e-6 * y[278] * y[110] * y[183])/(130e-6 + 1e-6 * y[278] * y[110] * y[183])
    R1186 = (13.7 * 1e-6 * y[716] * y[173] * y[335])/(130e-6 + 1e-6 * y[716] * y[173] * y[335])
    return (R1187) - (R1186)
 
def m_mlthf_c(t, y):
    R1188 = (13.7 * 1e-6 * y[500] * y[206])/(130e-6 + 1e-6 * y[500] * y[206])
    R1259 = (13.7 * 1e-6 * y[261] * y[236] * y[206])/(130e-6 + 1e-6 * y[261] * y[236] * y[206])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1843 = (13.7 * 1e-6 * y[490] * y[173] * y[717])/(130e-6 + 1e-6 * y[490] * y[173] * y[717])
    R1926 = (13.7 * 1e-6 * y[717] * y[6])/(130e-6 + 1e-6 * y[717] * y[6])
    R1936 = (13.7 * 1e-6 * y[36] * y[717] * y[113])/(130e-6 + 1e-6 * y[36] * y[717] * y[113])
    R2230 = (13.7 * 1e-6 * y[536] * y[717])/(130e-6 + 1e-6 * y[536] * y[717])
    return (R1188 + R1259) - (R926 + R1843 + R1926 + R1936 + R2230)
 
def m_glu5p_c(t, y):
    R1189 = (13.7 * 1e-6 * y[278] * y[110])/(130e-6 + 1e-6 * y[278] * y[110])
    R1140 = (13.7 * 1e-6 * y[718] * y[36] * y[201])/(130e-6 + 1e-6 * y[718] * y[36] * y[201])
    return (R1189) - (R1140)
 
def m_glucys_c(t, y):
    R1192 = (13.7 * 1e-6 * y[278] * y[260] * y[110])/(130e-6 + 1e-6 * y[278] * y[260] * y[110])
    R1304 = (13.7 * 1e-6 * y[278] * y[719] * y[261])/(130e-6 + 1e-6 * y[278] * y[719] * y[261])
    return (R1192) - (R1304)
 
def m_bglycogen_c(t, y):
    R1196 = (13.7 * 1e-6 * y[706])/(130e-6 + 1e-6 * y[706])
    R1173 = (13.7 * 1e-6 * y[720])/(130e-6 + 1e-6 * y[720])
    R1208 = (13.7 * 1e-6 * y[720] * y[37])/(130e-6 + 1e-6 * y[720] * y[37])
    return (R1196) - (R1173 + R1208)
 
def m_acglc__D_c(t, y):
    R1197 = (13.7 * 1e-6 * y[127] * y[242])/(130e-6 + 1e-6 * y[127] * y[242])
    return (R1197) - (0)
 
def m_glcn_p(t, y):
    R1198 = (13.7 * 1e-6 * y[651] * y[406] * y[444])/(130e-6 + 1e-6 * y[651] * y[406] * y[444])
    R1200 = (13.7 * 1e-6 * y[1586])/(130e-6 + 1e-6 * y[1586])
    R1199 = (13.7 * 1e-6 * y[722] * y[61])/(130e-6 + 1e-6 * y[722] * y[61])
    return (R1198 + R1200) - (R1199)
 
def m_g1p_c(t, y):
    R1201 = (13.7 * 1e-6 * y[706] * y[37])/(130e-6 + 1e-6 * y[706] * y[37])
    R1208 = (13.7 * 1e-6 * y[720] * y[37])/(130e-6 + 1e-6 * y[720] * y[37])
    R1588 = (13.7 * 1e-6 * y[244] * y[37])/(130e-6 + 1e-6 * y[244] * y[37])
    R1612 = (13.7 * 1e-6 * y[102] * y[37])/(130e-6 + 1e-6 * y[102] * y[37])
    R1634 = (13.7 * 1e-6 * y[246] * y[37])/(130e-6 + 1e-6 * y[246] * y[37])
    R2367 = (13.7 * 1e-6 * y[679] * y[694])/(130e-6 + 1e-6 * y[679] * y[694])
    R1088 = (13.7 * 1e-6 * y[932] * y[723] * y[36])/(130e-6 + 1e-6 * y[932] * y[723] * y[36])
    R1142 = (13.7 * 1e-6 * y[723] * y[36] * y[929])/(130e-6 + 1e-6 * y[723] * y[36] * y[929])
    R1176 = (13.7 * 1e-6 * y[278] * y[723] * y[36])/(130e-6 + 1e-6 * y[278] * y[723] * y[36])
    R1875 = (13.7 * 1e-6 * y[723])/(130e-6 + 1e-6 * y[723])
    return (R1201 + R1208 + R1588 + R1612 + R1634 + R2367) - (R1088 + R1142 + R1176 + R1875)
 
def m_glu__L_p(t, y):
    R1203 = (13.7 * 1e-6 * y[712] * y[406])/(130e-6 + 1e-6 * y[712] * y[406])
    R1221 = (13.7 * 1e-6 * y[1591])/(130e-6 + 1e-6 * y[1591])
    R1297 = (13.7 * 1e-6 * y[771] * y[406])/(130e-6 + 1e-6 * y[771] * y[406])
    R1190 = (13.7 * 1e-6 * y[112] * y[724])/(130e-6 + 1e-6 * y[112] * y[724])
    R1213 = (13.7 * 1e-6 * y[278] * y[724] * y[173])/(130e-6 + 1e-6 * y[278] * y[724] * y[173])
    R1219 = (13.7 * 1e-6 * y[724] * y[61])/(130e-6 + 1e-6 * y[724] * y[61])
    R1220 = (13.7 * 1e-6 * y[724] * y[927])/(130e-6 + 1e-6 * y[724] * y[927])
    return (R1203 + R1221 + R1297) - (R1190 + R1213 + R1219 + R1220)
 
def m_pram_c(t, y):
    R1204 = (13.7 * 1e-6 * y[710] * y[173] * y[983])/(130e-6 + 1e-6 * y[710] * y[173] * y[983])
    R2032 = (13.7 * 1e-6 * y[278] * y[261] * y[725])/(130e-6 + 1e-6 * y[278] * y[261] * y[725])
    return (R1204) - (R2032)
 
def m_glu1sa_c(t, y):
    R1207 = (13.7 * 1e-6 * y[730] * y[36] * y[201])/(130e-6 + 1e-6 * y[730] * y[36] * y[201])
    R1090 = (13.7 * 1e-6 * y[726])/(130e-6 + 1e-6 * y[726])
    return (R1207) - (R1090)
 
def m_trnaglu_c(t, y):
    R1207 = (13.7 * 1e-6 * y[730] * y[36] * y[201])/(130e-6 + 1e-6 * y[730] * y[36] * y[201])
    R1212 = (13.7 * 1e-6 * y[278] * y[110] * y[727])/(130e-6 + 1e-6 * y[278] * y[110] * y[727])
    return (R1207) - (R1212)
 
def m_2h3oppan_c(t, y):
    R1209 = (13.7 * 1e-6 * y[666])/(130e-6 + 1e-6 * y[666])
    R1224 = (13.7 * 1e-6 * y[593] * y[36])/(130e-6 + 1e-6 * y[593] * y[36])
    R1399 = (13.7 * 1e-6 * y[1631])/(130e-6 + 1e-6 * y[1631])
    R2274 = (13.7 * 1e-6 * y[728] * y[36] * y[113])/(130e-6 + 1e-6 * y[728] * y[36] * y[113])
    return (R1209 + R1224 + R1399) - (R2274)
 
def m_glcr_c(t, y):
    R1211 = (13.7 * 1e-6 * y[731] * y[61])/(130e-6 + 1e-6 * y[731] * y[61])
    R1210 = (13.7 * 1e-6 * y[729])/(130e-6 + 1e-6 * y[729])
    return (R1211) - (R1210)
 
def m_glutrna_c(t, y):
    R1212 = (13.7 * 1e-6 * y[278] * y[110] * y[727])/(130e-6 + 1e-6 * y[278] * y[110] * y[727])
    R1207 = (13.7 * 1e-6 * y[730] * y[36] * y[201])/(130e-6 + 1e-6 * y[730] * y[36] * y[201])
    return (R1212) - (R1207)
 
def m_glcr_p(t, y):
    R1214 = (13.7 * 1e-6 * y[1587])/(130e-6 + 1e-6 * y[1587])
    R1211 = (13.7 * 1e-6 * y[731] * y[61])/(130e-6 + 1e-6 * y[731] * y[61])
    return (R1214) - (R1211)
 
def m_gicolipa_c(t, y):
    R1217 = (13.7 * 1e-6 * y[1157] * y[694])/(130e-6 + 1e-6 * y[1157] * y[694])
    R1131 = (13.7 * 1e-6 * y[732] * y[694])/(130e-6 + 1e-6 * y[732] * y[694])
    return (R1217) - (R1131)
 
def m_ggagicolipa_c(t, y):
    R1218 = (13.7 * 1e-6 * y[685] * y[694])/(130e-6 + 1e-6 * y[685] * y[694])
    R1222 = (13.7 * 1e-6 * y[733] * y[694])/(130e-6 + 1e-6 * y[733] * y[694])
    return (R1218) - (R1222)
 
def m_gggagicolipa_c(t, y):
    R1222 = (13.7 * 1e-6 * y[733] * y[694])/(130e-6 + 1e-6 * y[733] * y[694])
    R1343 = (13.7 * 1e-6 * y[180] * y[734])/(130e-6 + 1e-6 * y[180] * y[734])
    return (R1222) - (R1343)
 
def m_glcur1p_p(t, y):
    R1223 = (13.7 * 1e-6 * y[1588])/(130e-6 + 1e-6 * y[1588])
    R2366 = (13.7 * 1e-6 * y[406] * y[1300])/(130e-6 + 1e-6 * y[406] * y[1300])
    R1334 = (13.7 * 1e-6 * y[735] * y[406])/(130e-6 + 1e-6 * y[735] * y[406])
    return (R1223 + R2366) - (R1334)
 
def m_glyald_p(t, y):
    R1226 = (13.7 * 1e-6 * y[1593])/(130e-6 + 1e-6 * y[1593])
    R1227 = (13.7 * 1e-6 * y[736])/(130e-6 + 1e-6 * y[736])
    return (R1226) - (R1227)
 
def m_glyald_c(t, y):
    R1227 = (13.7 * 1e-6 * y[736])/(130e-6 + 1e-6 * y[736])
    R239 = (13.7 * 1e-6 * y[737] * y[36] * y[113])/(130e-6 + 1e-6 * y[737] * y[36] * y[113])
    return (R1227) - (R239)
 
def m_glcur_c(t, y):
    R1229 = (13.7 * 1e-6 * y[701] * y[61])/(130e-6 + 1e-6 * y[701] * y[61])
    R1328 = (13.7 * 1e-6 * y[738])/(130e-6 + 1e-6 * y[738])
    return (R1229) - (R1328)
 
def m_gly_p(t, y):
    R1233 = (13.7 * 1e-6 * y[1592])/(130e-6 + 1e-6 * y[1592])
    R1231 = (13.7 * 1e-6 * y[739] * y[61])/(130e-6 + 1e-6 * y[739] * y[61])
    R1232 = (13.7 * 1e-6 * y[739] * y[927])/(130e-6 + 1e-6 * y[739] * y[927])
    return (R1233) - (R1231 + R1232)
 
def m_gdpddman_c(t, y):
    R1234 = (13.7 * 1e-6 * y[906])/(130e-6 + 1e-6 * y[906])
    R1166 = (13.7 * 1e-6 * y[740])/(130e-6 + 1e-6 * y[740])
    return (R1234) - (R1166)
 
def m_glyb_p(t, y):
    R1237 = (13.7 * 1e-6 * y[1595])/(130e-6 + 1e-6 * y[1595])
    R1235 = (13.7 * 1e-6 * y[278] * y[741] * y[173])/(130e-6 + 1e-6 * y[278] * y[741] * y[173])
    R1236 = (13.7 * 1e-6 * y[741] * y[61])/(130e-6 + 1e-6 * y[741] * y[61])
    return (R1237) - (R1235 + R1236)
 
def m_glyc2p_p(t, y):
    R1238 = (13.7 * 1e-6 * y[1596])/(130e-6 + 1e-6 * y[1596])
    R1091 = (13.7 * 1e-6 * y[742] * y[406])/(130e-6 + 1e-6 * y[742] * y[406])
    return (R1238) - (R1091)
 
def m_glyc3p_c(t, y):
    R1239 = (13.7 * 1e-6 * y[278] * y[749] * y[173])/(130e-6 + 1e-6 * y[278] * y[749] * y[173])
    R1242 = (13.7 * 1e-6 * y[749] * y[37])/(130e-6 + 1e-6 * y[749] * y[37])
    R1260 = (13.7 * 1e-6 * y[665] * y[173])/(130e-6 + 1e-6 * y[665] * y[173])
    R1268 = (13.7 * 1e-6 * y[673] * y[173])/(130e-6 + 1e-6 * y[673] * y[173])
    R1270 = (13.7 * 1e-6 * y[687] * y[173])/(130e-6 + 1e-6 * y[687] * y[173])
    R1272 = (13.7 * 1e-6 * y[675] * y[173])/(130e-6 + 1e-6 * y[675] * y[173])
    R1277 = (13.7 * 1e-6 * y[683] * y[173])/(130e-6 + 1e-6 * y[683] * y[173])
    R1282 = (13.7 * 1e-6 * y[278] * y[240])/(130e-6 + 1e-6 * y[278] * y[240])
    R1539 = (13.7 * 1e-6 * y[78] * y[173])/(130e-6 + 1e-6 * y[78] * y[173])
    R1541 = (13.7 * 1e-6 * y[2] * y[173])/(130e-6 + 1e-6 * y[2] * y[173])
    R1542 = (13.7 * 1e-6 * y[3] * y[173])/(130e-6 + 1e-6 * y[3] * y[173])
    R1543 = (13.7 * 1e-6 * y[4] * y[173])/(130e-6 + 1e-6 * y[4] * y[173])
    R1550 = (13.7 * 1e-6 * y[7] * y[173])/(130e-6 + 1e-6 * y[7] * y[173])
    R1551 = (13.7 * 1e-6 * y[9] * y[173])/(130e-6 + 1e-6 * y[9] * y[173])
    R1552 = (13.7 * 1e-6 * y[11] * y[173])/(130e-6 + 1e-6 * y[11] * y[173])
    R1095 = (13.7 * 1e-6 * y[86] * y[743])/(130e-6 + 1e-6 * y[86] * y[743])
    R1097 = (13.7 * 1e-6 * y[743] * y[72])/(130e-6 + 1e-6 * y[743] * y[72])
    R1098 = (13.7 * 1e-6 * y[743] * y[74])/(130e-6 + 1e-6 * y[743] * y[74])
    R1100 = (13.7 * 1e-6 * y[743] * y[79])/(130e-6 + 1e-6 * y[743] * y[79])
    R1101 = (13.7 * 1e-6 * y[743] * y[81])/(130e-6 + 1e-6 * y[743] * y[81])
    R1104 = (13.7 * 1e-6 * y[743] * y[84])/(130e-6 + 1e-6 * y[743] * y[84])
    R1105 = (13.7 * 1e-6 * y[743] * y[82])/(130e-6 + 1e-6 * y[743] * y[82])
    R1112 = (13.7 * 1e-6 * y[743] * y[6])/(130e-6 + 1e-6 * y[743] * y[6])
    R1113 = (13.7 * 1e-6 * y[743] * y[444])/(130e-6 + 1e-6 * y[743] * y[444])
    R1116 = (13.7 * 1e-6 * y[743] * y[441])/(130e-6 + 1e-6 * y[743] * y[441])
    R1118 = (13.7 * 1e-6 * y[495] * y[743])/(130e-6 + 1e-6 * y[495] * y[743])
    R1138 = (13.7 * 1e-6 * y[743] * y[173])/(130e-6 + 1e-6 * y[743] * y[173])
    R1922 = (13.7 * 1e-6 * y[447] * y[743])/(130e-6 + 1e-6 * y[447] * y[743])
    R1923 = (13.7 * 1e-6 * y[448] * y[743])/(130e-6 + 1e-6 * y[448] * y[743])
    R1925 = (13.7 * 1e-6 * y[449] * y[743])/(130e-6 + 1e-6 * y[449] * y[743])
    R1927 = (13.7 * 1e-6 * y[450] * y[743])/(130e-6 + 1e-6 * y[450] * y[743])
    R1928 = (13.7 * 1e-6 * y[451] * y[743])/(130e-6 + 1e-6 * y[451] * y[743])
    R1933 = (13.7 * 1e-6 * y[452] * y[743])/(130e-6 + 1e-6 * y[452] * y[743])
    R1934 = (13.7 * 1e-6 * y[453] * y[743])/(130e-6 + 1e-6 * y[453] * y[743])
    return (R1239 + R1242 + R1260 + R1268 + R1270 + R1272 + R1277 + R1282 + R1539 + R1541 + R1542 + R1543 + R1550 + R1551 + R1552) - (R1095 + R1097 + R1098 + R1100 + R1101 + R1104 + R1105 + R1112 + R1113 + R1116 + R1118 + R1138 + R1922 + R1923 + R1925 + R1927 + R1928 + R1933 + R1934)
 
def m_adphep_DD_c(t, y):
    R1240 = (13.7 * 1e-6 * y[278] * y[746] * y[36])/(130e-6 + 1e-6 * y[278] * y[746] * y[36])
    R164 = (13.7 * 1e-6 * y[744])/(130e-6 + 1e-6 * y[744])
    return (R1240) - (R164)
 
def m_gmhep17bp_c(t, y):
    R1241 = (13.7 * 1e-6 * y[278] * y[1176])/(130e-6 + 1e-6 * y[278] * y[1176])
    R1243 = (13.7 * 1e-6 * y[745] * y[173])/(130e-6 + 1e-6 * y[745] * y[173])
    return (R1241) - (R1243)
 
def m_gmhep1p_c(t, y):
    R1243 = (13.7 * 1e-6 * y[745] * y[173])/(130e-6 + 1e-6 * y[745] * y[173])
    R1240 = (13.7 * 1e-6 * y[278] * y[746] * y[36])/(130e-6 + 1e-6 * y[278] * y[746] * y[36])
    return (R1243) - (R1240)
 
def m_imp_c(t, y):
    R1245 = (13.7 * 1e-6 * y[222] * y[36] * y[201])/(130e-6 + 1e-6 * y[222] * y[36] * y[201])
    R1421 = (13.7 * 1e-6 * y[278] * y[191])/(130e-6 + 1e-6 * y[278] * y[191])
    R1423 = (13.7 * 1e-6 * y[197] * y[983])/(130e-6 + 1e-6 * y[197] * y[983])
    R1772 = (13.7 * 1e-6 * y[173] * y[313])/(130e-6 + 1e-6 * y[173] * y[313])
    R140 = (13.7 * 1e-6 * y[300] * y[928] * y[747])/(130e-6 + 1e-6 * y[300] * y[928] * y[747])
    R1407 = (13.7 * 1e-6 * y[173] * y[747])/(130e-6 + 1e-6 * y[173] * y[747])
    R1408 = (13.7 * 1e-6 * y[173] * y[747] * y[236])/(130e-6 + 1e-6 * y[173] * y[747] * y[236])
    R1728 = (13.7 * 1e-6 * y[173] * y[747])/(130e-6 + 1e-6 * y[173] * y[747])
    return (R1245 + R1421 + R1423 + R1772) - (R140 + R1407 + R1408 + R1728)
 
def m_gmp_p(t, y):
    R1247 = (13.7 * 1e-6 * y[1601])/(130e-6 + 1e-6 * y[1601])
    R1735 = (13.7 * 1e-6 * y[748] * y[406])/(130e-6 + 1e-6 * y[748] * y[406])
    return (R1247) - (R1735)
 
def m_glyc3p_p(t, y):
    R1248 = (13.7 * 1e-6 * y[1597])/(130e-6 + 1e-6 * y[1597])
    R1267 = (13.7 * 1e-6 * y[670] * y[406])/(130e-6 + 1e-6 * y[670] * y[406])
    R1269 = (13.7 * 1e-6 * y[674] * y[406])/(130e-6 + 1e-6 * y[674] * y[406])
    R1271 = (13.7 * 1e-6 * y[691] * y[406])/(130e-6 + 1e-6 * y[691] * y[406])
    R1273 = (13.7 * 1e-6 * y[682] * y[406])/(130e-6 + 1e-6 * y[682] * y[406])
    R1278 = (13.7 * 1e-6 * y[684] * y[406])/(130e-6 + 1e-6 * y[684] * y[406])
    R1496 = (13.7 * 1e-6 * y[1058] * y[406])/(130e-6 + 1e-6 * y[1058] * y[406])
    R1497 = (13.7 * 1e-6 * y[1059] * y[406])/(130e-6 + 1e-6 * y[1059] * y[406])
    R1498 = (13.7 * 1e-6 * y[1060] * y[406])/(130e-6 + 1e-6 * y[1060] * y[406])
    R1499 = (13.7 * 1e-6 * y[1061] * y[406])/(130e-6 + 1e-6 * y[1061] * y[406])
    R1501 = (13.7 * 1e-6 * y[1062] * y[406])/(130e-6 + 1e-6 * y[1062] * y[406])
    R1505 = (13.7 * 1e-6 * y[1063] * y[406])/(130e-6 + 1e-6 * y[1063] * y[406])
    R1506 = (13.7 * 1e-6 * y[1066] * y[406])/(130e-6 + 1e-6 * y[1066] * y[406])
    R1239 = (13.7 * 1e-6 * y[278] * y[749] * y[173])/(130e-6 + 1e-6 * y[278] * y[749] * y[173])
    R1242 = (13.7 * 1e-6 * y[749] * y[37])/(130e-6 + 1e-6 * y[749] * y[37])
    return (R1248 + R1267 + R1269 + R1271 + R1273 + R1278 + R1496 + R1497 + R1498 + R1499 + R1501 + R1505 + R1506) - (R1239 + R1242)
 
def m_glyc__R_c(t, y):
    R1249 = (13.7 * 1e-6 * y[751] * y[61])/(130e-6 + 1e-6 * y[751] * y[61])
    R1400 = (13.7 * 1e-6 * y[36] * y[1631] * y[113])/(130e-6 + 1e-6 * y[36] * y[1631] * y[113])
    R1401 = (13.7 * 1e-6 * y[36] * y[1631] * y[201])/(130e-6 + 1e-6 * y[36] * y[1631] * y[201])
    R1620 = (13.7 * 1e-6 * y[173] * y[909])/(130e-6 + 1e-6 * y[173] * y[909])
    R2274 = (13.7 * 1e-6 * y[728] * y[36] * y[113])/(130e-6 + 1e-6 * y[728] * y[36] * y[113])
    R1252 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R1258 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    return (R1249 + R1400 + R1401 + R1620 + R2274) - (R1252 + R1258)
 
def m_glyc__R_p(t, y):
    R1250 = (13.7 * 1e-6 * y[1599])/(130e-6 + 1e-6 * y[1599])
    R1249 = (13.7 * 1e-6 * y[751] * y[61])/(130e-6 + 1e-6 * y[751] * y[61])
    return (R1250) - (R1249)
 
def m_3pg_c(t, y):
    R1252 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R1874 = (13.7 * 1e-6 * y[756])/(130e-6 + 1e-6 * y[756])
    R1866 = (13.7 * 1e-6 * y[752] * y[236])/(130e-6 + 1e-6 * y[752] * y[236])
    R1868 = (13.7 * 1e-6 * y[752] * y[278])/(130e-6 + 1e-6 * y[752] * y[278])
    return (R1252 + R1874) - (R1866 + R1868)
 
def m_ru5p__D_c(t, y):
    R1253 = (13.7 * 1e-6 * y[754] * y[6])/(130e-6 + 1e-6 * y[754] * y[6])
    R2106 = (13.7 * 1e-6 * y[227])/(130e-6 + 1e-6 * y[227])
    R62 = (13.7 * 1e-6 * y[753])/(130e-6 + 1e-6 * y[753])
    R530 = (13.7 * 1e-6 * y[753])/(130e-6 + 1e-6 * y[753])
    R2105 = (13.7 * 1e-6 * y[753])/(130e-6 + 1e-6 * y[753])
    return (R1253 + R2106) - (R62 + R530 + R2105)
 
def m_6pgc_c(t, y):
    R1254 = (13.7 * 1e-6 * y[278] * y[65])/(130e-6 + 1e-6 * y[278] * y[65])
    R1869 = (13.7 * 1e-6 * y[695] * y[173])/(130e-6 + 1e-6 * y[695] * y[173])
    R686 = (13.7 * 1e-6 * y[754])/(130e-6 + 1e-6 * y[754])
    R1253 = (13.7 * 1e-6 * y[754] * y[6])/(130e-6 + 1e-6 * y[754] * y[6])
    return (R1254 + R1869) - (R686 + R1253)
 
def m_gdpfuc_c(t, y):
    R1256 = (13.7 * 1e-6 * y[703] * y[36] * y[201])/(130e-6 + 1e-6 * y[703] * y[36] * y[201])
    return (R1256) - (0)
 
def m_2pg_c(t, y):
    R1258 = (13.7 * 1e-6 * y[278] * y[750])/(130e-6 + 1e-6 * y[278] * y[750])
    R697 = (13.7 * 1e-6 * y[756])/(130e-6 + 1e-6 * y[756])
    R1874 = (13.7 * 1e-6 * y[756])/(130e-6 + 1e-6 * y[756])
    return (R1258) - (R697 + R1874)
 
def m_glyclt_p(t, y):
    R1266 = (13.7 * 1e-6 * y[1600])/(130e-6 + 1e-6 * y[1600])
    R1264 = (13.7 * 1e-6 * y[757] * y[61])/(130e-6 + 1e-6 * y[757] * y[61])
    R1265 = (13.7 * 1e-6 * y[757] * y[927])/(130e-6 + 1e-6 * y[757] * y[927])
    return (R1266) - (R1264 + R1265)
 
def m_ser__L_p(t, y):
    R1271 = (13.7 * 1e-6 * y[691] * y[406])/(130e-6 + 1e-6 * y[691] * y[406])
    R2050 = (13.7 * 1e-6 * y[406] * y[1150])/(130e-6 + 1e-6 * y[406] * y[1150])
    R2148 = (13.7 * 1e-6 * y[1557])/(130e-6 + 1e-6 * y[1557])
    R2145 = (13.7 * 1e-6 * y[61] * y[758])/(130e-6 + 1e-6 * y[61] * y[758])
    R2147 = (13.7 * 1e-6 * y[927] * y[758])/(130e-6 + 1e-6 * y[927] * y[758])
    return (R1271 + R2050 + R2148) - (R2145 + R2147)
 
def m_inost_c(t, y):
    R1277 = (13.7 * 1e-6 * y[683] * y[173])/(130e-6 + 1e-6 * y[683] * y[173])
    R1417 = (13.7 * 1e-6 * y[760] * y[927])/(130e-6 + 1e-6 * y[760] * y[927])
    R1678 = (13.7 * 1e-6 * y[173] * y[1650])/(130e-6 + 1e-6 * y[173] * y[1650])
    return (R1277 + R1417 + R1678) - (0)
 
def m_inost_p(t, y):
    R1278 = (13.7 * 1e-6 * y[684] * y[406])/(130e-6 + 1e-6 * y[684] * y[406])
    R1422 = (13.7 * 1e-6 * y[1632])/(130e-6 + 1e-6 * y[1632])
    R1951 = (13.7 * 1e-6 * y[406] * y[949])/(130e-6 + 1e-6 * y[406] * y[949])
    R1417 = (13.7 * 1e-6 * y[760] * y[927])/(130e-6 + 1e-6 * y[760] * y[927])
    return (R1278 + R1422 + R1951) - (R1417)
 
def m_frdp_c(t, y):
    R1283 = (13.7 * 1e-6 * y[486] * y[834])/(130e-6 + 1e-6 * y[486] * y[834])
    R1332 = (13.7 * 1e-6 * y[761] * y[173] * y[609])/(130e-6 + 1e-6 * y[761] * y[173] * y[609])
    R1826 = (13.7 * 1e-6 * y[761] * y[834])/(130e-6 + 1e-6 * y[761] * y[834])
    R2352 = (13.7 * 1e-6 * y[761] * y[834])/(130e-6 + 1e-6 * y[761] * y[834])
    return (R1283) - (R1332 + R1826 + R2352)
 
def m_grxrd_c(t, y):
    R1284 = (13.7 * 1e-6 * y[1024] * y[763])/(130e-6 + 1e-6 * y[1024] * y[763])
    R1844 = (13.7 * 1e-6 * y[762] * y[152])/(130e-6 + 1e-6 * y[762] * y[152])
    R2082 = (13.7 * 1e-6 * y[35] * y[762])/(130e-6 + 1e-6 * y[35] * y[762])
    R2086 = (13.7 * 1e-6 * y[157] * y[762])/(130e-6 + 1e-6 * y[157] * y[762])
    R2093 = (13.7 * 1e-6 * y[456] * y[762])/(130e-6 + 1e-6 * y[456] * y[762])
    R2095 = (13.7 * 1e-6 * y[762] * y[114])/(130e-6 + 1e-6 * y[762] * y[114])
    return (R1284) - (R1844 + R2082 + R2086 + R2093 + R2095)
 
def m_gthrd_c(t, y):
    R1286 = (13.7 * 1e-6 * y[173] * y[856])/(130e-6 + 1e-6 * y[173] * y[856])
    R1292 = (13.7 * 1e-6 * y[767] * y[173])/(130e-6 + 1e-6 * y[767] * y[173])
    R1296 = (13.7 * 1e-6 * y[310] * y[36] * y[201])/(130e-6 + 1e-6 * y[310] * y[36] * y[201])
    R1302 = (13.7 * 1e-6 * y[278] * y[771] * y[173])/(130e-6 + 1e-6 * y[278] * y[771] * y[173])
    R1304 = (13.7 * 1e-6 * y[278] * y[719] * y[261])/(130e-6 + 1e-6 * y[278] * y[719] * y[261])
    R2149 = (13.7 * 1e-6 * y[599] * y[173])/(130e-6 + 1e-6 * y[599] * y[173])
    R326 = (13.7 * 1e-6 * y[1371] * y[763])/(130e-6 + 1e-6 * y[1371] * y[763])
    R1004 = (13.7 * 1e-6 * y[601] * y[763])/(130e-6 + 1e-6 * y[601] * y[763])
    R1284 = (13.7 * 1e-6 * y[1024] * y[763])/(130e-6 + 1e-6 * y[1024] * y[763])
    R1293 = (13.7 * 1e-6 * y[278] * y[763] * y[766])/(130e-6 + 1e-6 * y[278] * y[763] * y[766])
    R1301 = (13.7 * 1e-6 * y[278] * y[763] * y[173])/(130e-6 + 1e-6 * y[278] * y[763] * y[173])
    R1480 = (13.7 * 1e-6 * y[763] * y[94])/(130e-6 + 1e-6 * y[763] * y[94])
    return (R1286 + R1292 + R1296 + R1302 + R1304 + R2149) - (R326 + R1004 + R1284 + R1293 + R1301 + R1480)
 
def m_gsn_c(t, y):
    R1287 = (13.7 * 1e-6 * y[503] * y[61])/(130e-6 + 1e-6 * y[503] * y[61])
    R1733 = (13.7 * 1e-6 * y[222] * y[173])/(130e-6 + 1e-6 * y[222] * y[173])
    R1775 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1285 = (13.7 * 1e-6 * y[278] * y[764])/(130e-6 + 1e-6 * y[278] * y[764])
    R2090 = (13.7 * 1e-6 * y[764] * y[37])/(130e-6 + 1e-6 * y[764] * y[37])
    return (R1287 + R1733 + R1775) - (R1285 + R2090)
 
def m_glytrna_c(t, y):
    R1290 = (13.7 * 1e-6 * y[278] * y[261] * y[1613])/(130e-6 + 1e-6 * y[278] * y[261] * y[1613])
    return (R1290) - (0)
 
def m_spmd_c(t, y):
    R1292 = (13.7 * 1e-6 * y[767] * y[173])/(130e-6 + 1e-6 * y[767] * y[173])
    R2189 = (13.7 * 1e-6 * y[278] * y[173] * y[1219])/(130e-6 + 1e-6 * y[278] * y[173] * y[1219])
    R2193 = (13.7 * 1e-6 * y[209] * y[183])/(130e-6 + 1e-6 * y[209] * y[183])
    R1293 = (13.7 * 1e-6 * y[278] * y[763] * y[766])/(130e-6 + 1e-6 * y[278] * y[763] * y[766])
    R2183 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    R2188 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    return (R1292 + R2189 + R2193) - (R1293 + R2183 + R2188)
 
def m_gtspmd_c(t, y):
    R1293 = (13.7 * 1e-6 * y[278] * y[763] * y[766])/(130e-6 + 1e-6 * y[278] * y[763] * y[766])
    R1292 = (13.7 * 1e-6 * y[767] * y[173])/(130e-6 + 1e-6 * y[767] * y[173])
    return (R1293) - (R1292)
 
def m_3oddcoa_c(t, y):
    R1298 = (13.7 * 1e-6 * y[1448] * y[236])/(130e-6 + 1e-6 * y[1448] * y[236])
    R1471 = (13.7 * 1e-6 * y[768] * y[99])/(130e-6 + 1e-6 * y[768] * y[99])
    return (R1298) - (R1471)
 
def m_3otdcoa_c(t, y):
    R1299 = (13.7 * 1e-6 * y[1449] * y[236])/(130e-6 + 1e-6 * y[1449] * y[236])
    R1473 = (13.7 * 1e-6 * y[769] * y[99])/(130e-6 + 1e-6 * y[769] * y[99])
    return (R1299) - (R1473)
 
def m_3ohdcoa_c(t, y):
    R1300 = (13.7 * 1e-6 * y[1450] * y[236])/(130e-6 + 1e-6 * y[1450] * y[236])
    R1474 = (13.7 * 1e-6 * y[770] * y[99])/(130e-6 + 1e-6 * y[770] * y[99])
    return (R1300) - (R1474)
 
def m_gthrd_p(t, y):
    R1301 = (13.7 * 1e-6 * y[278] * y[763] * y[173])/(130e-6 + 1e-6 * y[278] * y[763] * y[173])
    R1303 = (13.7 * 1e-6 * y[1605])/(130e-6 + 1e-6 * y[1605])
    R619 = (13.7 * 1e-6 * y[1434] * y[771])/(130e-6 + 1e-6 * y[1434] * y[771])
    R621 = (13.7 * 1e-6 * y[1435] * y[771])/(130e-6 + 1e-6 * y[1435] * y[771])
    R1297 = (13.7 * 1e-6 * y[771] * y[406])/(130e-6 + 1e-6 * y[771] * y[406])
    R1302 = (13.7 * 1e-6 * y[278] * y[771] * y[173])/(130e-6 + 1e-6 * y[278] * y[771] * y[173])
    return (R1301 + R1303) - (R619 + R621 + R1297 + R1302)
 
def m_3ohodcoa_c(t, y):
    R1305 = (13.7 * 1e-6 * y[1451] * y[236])/(130e-6 + 1e-6 * y[1451] * y[236])
    R1475 = (13.7 * 1e-6 * y[772] * y[99])/(130e-6 + 1e-6 * y[772] * y[99])
    return (R1305) - (R1475)
 
def m_ahdt_c(t, y):
    R1306 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R605 = (13.7 * 1e-6 * y[773] * y[173])/(130e-6 + 1e-6 * y[773] * y[173])
    R625 = (13.7 * 1e-6 * y[773])/(130e-6 + 1e-6 * y[773])
    return (R1306) - (R605 + R625)
 
def m_25drapp_c(t, y):
    R1308 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R612 = (13.7 * 1e-6 * y[774] * y[173] * y[36])/(130e-6 + 1e-6 * y[774] * y[173] * y[36])
    return (R1308) - (R612)
 
def m_gdptp_c(t, y):
    R1310 = (13.7 * 1e-6 * y[278] * y[928])/(130e-6 + 1e-6 * y[278] * y[928])
    R1309 = (13.7 * 1e-6 * y[775] * y[173])/(130e-6 + 1e-6 * y[775] * y[173])
    return (R1310) - (R1309)
 
def m_3ophb_c(t, y):
    R1311 = (13.7 * 1e-6 * y[355] * y[1012])/(130e-6 + 1e-6 * y[355] * y[1012])
    R1854 = (13.7 * 1e-6 * y[776] * y[36])/(130e-6 + 1e-6 * y[776] * y[36])
    return (R1311) - (R1854)
 
def m_3hcinnm_c(t, y):
    R1312 = (13.7 * 1e-6 * y[781] * y[61])/(130e-6 + 1e-6 * y[781] * y[61])
    R543 = (13.7 * 1e-6 * y[777] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[777] * y[36] * y[113] * y[335])
    return (R1312) - (R543)
 
def m_xtp_c(t, y):
    R1313 = (13.7 * 1e-6 * y[928] * y[173] * y[36])/(130e-6 + 1e-6 * y[928] * y[173] * y[36])
    R1746 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    R1756 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    return (R1313) - (R1746 + R1756)
 
def m_gtp_p(t, y):
    R1315 = (13.7 * 1e-6 * y[1607])/(130e-6 + 1e-6 * y[1607])
    R1748 = (13.7 * 1e-6 * y[779] * y[406])/(130e-6 + 1e-6 * y[779] * y[406])
    return (R1315) - (R1748)
 
def m_xan_c(t, y):
    R1316 = (13.7 * 1e-6 * y[783] * y[173] * y[36])/(130e-6 + 1e-6 * y[783] * y[173] * y[36])
    R1415 = (13.7 * 1e-6 * y[173] * y[197] * y[236])/(130e-6 + 1e-6 * y[173] * y[197] * y[236])
    R2100 = (13.7 * 1e-6 * y[37] * y[969])/(130e-6 + 1e-6 * y[37] * y[969])
    R2324 = (13.7 * 1e-6 * y[61] * y[1280])/(130e-6 + 1e-6 * y[61] * y[1280])
    R2326 = (13.7 * 1e-6 * y[1280])/(130e-6 + 1e-6 * y[1280])
    R2329 = (13.7 * 1e-6 * y[173] * y[969])/(130e-6 + 1e-6 * y[173] * y[969])
    R2323 = (13.7 * 1e-6 * y[173] * y[236] * y[780])/(130e-6 + 1e-6 * y[173] * y[236] * y[780])
    R2328 = (13.7 * 1e-6 * y[983] * y[780])/(130e-6 + 1e-6 * y[983] * y[780])
    return (R1316 + R1415 + R2100 + R2324 + R2326 + R2329) - (R2323 + R2328)
 
def m_3hcinnm_p(t, y):
    R1318 = (13.7 * 1e-6 * y[1460])/(130e-6 + 1e-6 * y[1460])
    R1312 = (13.7 * 1e-6 * y[781] * y[61])/(130e-6 + 1e-6 * y[781] * y[61])
    return (R1318) - (R1312)
 
def m_hco3_c(t, y):
    R1319 = (13.7 * 1e-6 * y[16] * y[173])/(130e-6 + 1e-6 * y[16] * y[173])
    R120 = (13.7 * 1e-6 * y[127] * y[278] * y[782])/(130e-6 + 1e-6 * y[127] * y[278] * y[782])
    R201 = (13.7 * 1e-6 * y[1141] * y[278] * y[782])/(130e-6 + 1e-6 * y[1141] * y[278] * y[782])
    R393 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[782])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[782])
    R474 = (13.7 * 1e-6 * y[425] * y[36] * y[782])/(130e-6 + 1e-6 * y[425] * y[36] * y[782])
    return (R1319) - (R120 + R201 + R393 + R474)
 
def m_gua_c(t, y):
    R1323 = (13.7 * 1e-6 * y[784] * y[61])/(130e-6 + 1e-6 * y[784] * y[61])
    R1326 = (13.7 * 1e-6 * y[784])/(130e-6 + 1e-6 * y[784])
    R2090 = (13.7 * 1e-6 * y[764] * y[37])/(130e-6 + 1e-6 * y[764] * y[37])
    R2091 = (13.7 * 1e-6 * y[485] * y[37])/(130e-6 + 1e-6 * y[485] * y[37])
    R1316 = (13.7 * 1e-6 * y[783] * y[173] * y[36])/(130e-6 + 1e-6 * y[783] * y[173] * y[36])
    R1317 = (13.7 * 1e-6 * y[783] * y[983])/(130e-6 + 1e-6 * y[783] * y[983])
    return (R1323 + R1326 + R2090 + R2091) - (R1316 + R1317)
 
def m_gua_p(t, y):
    R1324 = (13.7 * 1e-6 * y[1608])/(130e-6 + 1e-6 * y[1608])
    R1323 = (13.7 * 1e-6 * y[784] * y[61])/(130e-6 + 1e-6 * y[784] * y[61])
    R1326 = (13.7 * 1e-6 * y[784])/(130e-6 + 1e-6 * y[784])
    return (R1324) - (R1323 + R1326)
 
def m_hdca_p(t, y):
    R1325 = (13.7 * 1e-6 * y[1614])/(130e-6 + 1e-6 * y[1614])
    R1499 = (13.7 * 1e-6 * y[1061] * y[406])/(130e-6 + 1e-6 * y[1061] * y[406])
    R1516 = (13.7 * 1e-6 * y[1074] * y[406])/(130e-6 + 1e-6 * y[1074] * y[406])
    R1532 = (13.7 * 1e-6 * y[1088] * y[406])/(130e-6 + 1e-6 * y[1088] * y[406])
    R1919 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1932 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R1946 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R1966 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1983 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R1995 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R978 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[785])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[785])
    return (R1325 + R1499 + R1516 + R1532 + R1919 + R1932 + R1946 + R1966 + R1983 + R1995) - (R978)
 
def m_hdcea_p(t, y):
    R1330 = (13.7 * 1e-6 * y[1615])/(130e-6 + 1e-6 * y[1615])
    R1501 = (13.7 * 1e-6 * y[1062] * y[406])/(130e-6 + 1e-6 * y[1062] * y[406])
    R1517 = (13.7 * 1e-6 * y[1077] * y[406])/(130e-6 + 1e-6 * y[1077] * y[406])
    R1533 = (13.7 * 1e-6 * y[1089] * y[406])/(130e-6 + 1e-6 * y[1089] * y[406])
    R1920 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1935 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R1947 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R1967 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1984 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R1996 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R979 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[786])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[786])
    return (R1330 + R1501 + R1517 + R1533 + R1920 + R1935 + R1947 + R1967 + R1984 + R1996) - (R979)
 
def m_hemeO_c(t, y):
    R1332 = (13.7 * 1e-6 * y[761] * y[173] * y[609])/(130e-6 + 1e-6 * y[761] * y[173] * y[609])
    return (R1332) - (0)
 
def m_phhlipa_c(t, y):
    R1333 = (13.7 * 1e-6 * y[278] * y[791])/(130e-6 + 1e-6 * y[278] * y[791])
    R1342 = (13.7 * 1e-6 * y[180] * y[788])/(130e-6 + 1e-6 * y[180] * y[788])
    return (R1333) - (R1342)
 
def m_phphhlipa_c(t, y):
    R1337 = (13.7 * 1e-6 * y[278] * y[792])/(130e-6 + 1e-6 * y[278] * y[792])
    R1807 = (13.7 * 1e-6 * y[854] * y[789])/(130e-6 + 1e-6 * y[854] * y[789])
    return (R1337) - (R1807)
 
def m_hlipa_c(t, y):
    R1339 = (13.7 * 1e-6 * y[180] * y[558])/(130e-6 + 1e-6 * y[180] * y[558])
    R1341 = (13.7 * 1e-6 * y[180] * y[790])/(130e-6 + 1e-6 * y[180] * y[790])
    return (R1339) - (R1341)
 
def m_hhlipa_c(t, y):
    R1341 = (13.7 * 1e-6 * y[180] * y[790])/(130e-6 + 1e-6 * y[180] * y[790])
    R1333 = (13.7 * 1e-6 * y[278] * y[791])/(130e-6 + 1e-6 * y[278] * y[791])
    return (R1341) - (R1333)
 
def m_hphhlipa_c(t, y):
    R1342 = (13.7 * 1e-6 * y[180] * y[788])/(130e-6 + 1e-6 * y[180] * y[788])
    R1337 = (13.7 * 1e-6 * y[278] * y[792])/(130e-6 + 1e-6 * y[278] * y[792])
    return (R1342) - (R1337)
 
def m_colipa_c(t, y):
    R1343 = (13.7 * 1e-6 * y[180] * y[734])/(130e-6 + 1e-6 * y[180] * y[734])
    R455 = (13.7 * 1e-6 * y[278] * y[793] * y[173])/(130e-6 + 1e-6 * y[278] * y[793] * y[173])
    return (R1343) - (R455)
 
def m_so4_c(t, y):
    R1344 = (13.7 * 1e-6 * y[430] * y[335])/(130e-6 + 1e-6 * y[430] * y[335])
    R2238 = (13.7 * 1e-6 * y[278] * y[173] * y[1211])/(130e-6 + 1e-6 * y[278] * y[173] * y[1211])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2113 = (13.7 * 1e-6 * y[278] * y[928] * y[173] * y[794])/(130e-6 + 1e-6 * y[278] * y[928] * y[173] * y[794])
    return (R1344 + R2238) - (R926 + R2113)
 
def m_h2s_p(t, y):
    R1345 = (13.7 * 1e-6 * y[430])/(130e-6 + 1e-6 * y[430])
    R1350 = (13.7 * 1e-6 * y[1612])/(130e-6 + 1e-6 * y[1612])
    return (R1345 + R1350) - (0)
 
def m_4mpetz_c(t, y):
    R1346 = (13.7 * 1e-6 * y[1619] * y[278])/(130e-6 + 1e-6 * y[1619] * y[278])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R2233 = (13.7 * 1e-6 * y[1099] * y[796] * y[36])/(130e-6 + 1e-6 * y[1099] * y[796] * y[36])
    return (R1346 + R2205) - (R2233)
 
def m_man6p_c(t, y):
    R1349 = (13.7 * 1e-6 * y[278] * y[705])/(130e-6 + 1e-6 * y[278] * y[705])
    R1608 = (13.7 * 1e-6 * y[907] * y[37])/(130e-6 + 1e-6 * y[907] * y[37])
    R1620 = (13.7 * 1e-6 * y[173] * y[909])/(130e-6 + 1e-6 * y[173] * y[909])
    R1621 = (13.7 * 1e-6 * y[911] * y[563])/(130e-6 + 1e-6 * y[911] * y[563])
    R1956 = (13.7 * 1e-6 * y[707])/(130e-6 + 1e-6 * y[707])
    R1607 = (13.7 * 1e-6 * y[797])/(130e-6 + 1e-6 * y[797])
    R1727 = (13.7 * 1e-6 * y[173] * y[797])/(130e-6 + 1e-6 * y[173] * y[797])
    return (R1349 + R1608 + R1620 + R1621 + R1956) - (R1607 + R1727)
 
def m_h2_p(t, y):
    R1351 = (13.7 * 1e-6 * y[1609])/(130e-6 + 1e-6 * y[1609])
    R2025 = (13.7 * 1e-6 * y[406] * y[1137])/(130e-6 + 1e-6 * y[406] * y[1137])
    R1352 = (13.7 * 1e-6 * y[798])/(130e-6 + 1e-6 * y[798])
    return (R1351 + R2025) - (R1352)
 
def m_3ohcoa_c(t, y):
    R1357 = (13.7 * 1e-6 * y[1445] * y[236])/(130e-6 + 1e-6 * y[1445] * y[236])
    R1464 = (13.7 * 1e-6 * y[799] * y[99])/(130e-6 + 1e-6 * y[799] * y[99])
    return (R1357) - (R1464)
 
def m_3oocoa_c(t, y):
    R1358 = (13.7 * 1e-6 * y[1446] * y[236])/(130e-6 + 1e-6 * y[1446] * y[236])
    R1465 = (13.7 * 1e-6 * y[800] * y[99])/(130e-6 + 1e-6 * y[800] * y[99])
    return (R1358) - (R1465)
 
def m_3odcoa_c(t, y):
    R1359 = (13.7 * 1e-6 * y[1447] * y[236])/(130e-6 + 1e-6 * y[1447] * y[236])
    R1466 = (13.7 * 1e-6 * y[801] * y[99])/(130e-6 + 1e-6 * y[801] * y[99])
    return (R1359) - (R1466)
 
def m_hg2_p(t, y):
    R1360 = (13.7 * 1e-6 * y[278] * y[173] * y[1622])/(130e-6 + 1e-6 * y[278] * y[173] * y[1622])
    R1361 = (13.7 * 1e-6 * y[61] * y[1622])/(130e-6 + 1e-6 * y[61] * y[1622])
    R1362 = (13.7 * 1e-6 * y[1616])/(130e-6 + 1e-6 * y[1616])
    return (R1360 + R1361 + R1362) - (0)
 
def m_his__L_c(t, y):
    R1363 = (13.7 * 1e-6 * y[173] * y[804] * y[236])/(130e-6 + 1e-6 * y[173] * y[804] * y[236])
    R1367 = (13.7 * 1e-6 * y[278] * y[173] * y[807])/(130e-6 + 1e-6 * y[278] * y[173] * y[807])
    R1368 = (13.7 * 1e-6 * y[61] * y[807])/(130e-6 + 1e-6 * y[61] * y[807])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1366 = (13.7 * 1e-6 * y[278] * y[803] * y[1624])/(130e-6 + 1e-6 * y[278] * y[803] * y[1624])
    return (R1363 + R1367 + R1368) - (R926 + R1366)
 
def m_histd_c(t, y):
    R1365 = (13.7 * 1e-6 * y[173] * y[830])/(130e-6 + 1e-6 * y[173] * y[830])
    R1363 = (13.7 * 1e-6 * y[173] * y[804] * y[236])/(130e-6 + 1e-6 * y[173] * y[804] * y[236])
    return (R1365) - (R1363)
 
def m_histrna_c(t, y):
    R1366 = (13.7 * 1e-6 * y[278] * y[803] * y[1624])/(130e-6 + 1e-6 * y[278] * y[803] * y[1624])
    return (R1366) - (0)
 
def m_ichor_c(t, y):
    R1371 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    R1372 = (13.7 * 1e-6 * y[351])/(130e-6 + 1e-6 * y[351])
    R1375 = (13.7 * 1e-6 * y[173] * y[806])/(130e-6 + 1e-6 * y[173] * y[806])
    R2158 = (13.7 * 1e-6 * y[806] * y[985])/(130e-6 + 1e-6 * y[806] * y[985])
    return (R1371 + R1372) - (R1375 + R2158)
 
def m_his__L_p(t, y):
    R1373 = (13.7 * 1e-6 * y[1617])/(130e-6 + 1e-6 * y[1617])
    R1367 = (13.7 * 1e-6 * y[278] * y[173] * y[807])/(130e-6 + 1e-6 * y[278] * y[173] * y[807])
    R1368 = (13.7 * 1e-6 * y[61] * y[807])/(130e-6 + 1e-6 * y[61] * y[807])
    return (R1373) - (R1367 + R1368)
 
def m_op4en_c(t, y):
    R1374 = (13.7 * 1e-6 * y[173] * y[817])/(130e-6 + 1e-6 * y[173] * y[817])
    R1377 = (13.7 * 1e-6 * y[173] * y[501])/(130e-6 + 1e-6 * y[173] * y[501])
    R1853 = (13.7 * 1e-6 * y[173] * y[808])/(130e-6 + 1e-6 * y[173] * y[808])
    return (R1374 + R1377) - (R1853)
 
def m_23ddhb_c(t, y):
    R1375 = (13.7 * 1e-6 * y[173] * y[806])/(130e-6 + 1e-6 * y[173] * y[806])
    R587 = (13.7 * 1e-6 * y[809] * y[236])/(130e-6 + 1e-6 * y[809] * y[236])
    return (R1375) - (R587)
 
def m_hmbil_c(t, y):
    R1379 = (13.7 * 1e-6 * y[173] * y[1119])/(130e-6 + 1e-6 * y[173] * y[1119])
    R2382 = (13.7 * 1e-6 * y[810])/(130e-6 + 1e-6 * y[810])
    return (R1379) - (R2382)
 
def m_hom__L_p(t, y):
    R1384 = (13.7 * 1e-6 * y[61] * y[1627])/(130e-6 + 1e-6 * y[61] * y[1627])
    R1389 = (13.7 * 1e-6 * y[1618])/(130e-6 + 1e-6 * y[1618])
    return (R1384 + R1389) - (0)
 
def m_idon__L_p(t, y):
    R1385 = (13.7 * 1e-6 * y[1623])/(130e-6 + 1e-6 * y[1623])
    R1383 = (13.7 * 1e-6 * y[61] * y[812])/(130e-6 + 1e-6 * y[61] * y[812])
    return (R1385) - (R1383)
 
def m_eig3p_c(t, y):
    R1387 = (13.7 * 1e-6 * y[710] * y[1147])/(130e-6 + 1e-6 * y[710] * y[1147])
    R1388 = (13.7 * 1e-6 * y[813])/(130e-6 + 1e-6 * y[813])
    return (R1387) - (R1388)
 
def m_imacp_c(t, y):
    R1388 = (13.7 * 1e-6 * y[813])/(130e-6 + 1e-6 * y[813])
    R1414 = (13.7 * 1e-6 * y[110] * y[814])/(130e-6 + 1e-6 * y[110] * y[814])
    return (R1388) - (R1414)
 
def m_6hmhptpp_c(t, y):
    R1391 = (13.7 * 1e-6 * y[508] * y[278])/(130e-6 + 1e-6 * y[508] * y[278])
    R613 = (13.7 * 1e-6 * y[194] * y[815])/(130e-6 + 1e-6 * y[194] * y[815])
    return (R1391) - (R613)
 
def m_3ig3p_c(t, y):
    R1392 = (13.7 * 1e-6 * y[1142] * y[36])/(130e-6 + 1e-6 * y[1142] * y[36])
    R2257 = (13.7 * 1e-6 * y[816] * y[500])/(130e-6 + 1e-6 * y[816] * y[500])
    R2267 = (13.7 * 1e-6 * y[816])/(130e-6 + 1e-6 * y[816])
    return (R1392) - (R2257 + R2267)
 
def m_hkndd_c(t, y):
    R1394 = (13.7 * 1e-6 * y[473] * y[335])/(130e-6 + 1e-6 * y[473] * y[335])
    R1374 = (13.7 * 1e-6 * y[173] * y[817])/(130e-6 + 1e-6 * y[173] * y[817])
    return (R1394) - (R1374)
 
def m_iletrna_c(t, y):
    R1395 = (13.7 * 1e-6 * y[278] * y[823] * y[1629])/(130e-6 + 1e-6 * y[278] * y[823] * y[1629])
    return (R1395) - (0)
 
def m_3hpppn_c(t, y):
    R1396 = (13.7 * 1e-6 * y[820] * y[61])/(130e-6 + 1e-6 * y[820] * y[61])
    R549 = (13.7 * 1e-6 * y[819] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[819] * y[36] * y[113] * y[335])
    return (R1396) - (R549)
 
def m_3hpppn_p(t, y):
    R1398 = (13.7 * 1e-6 * y[1461])/(130e-6 + 1e-6 * y[1461])
    R1396 = (13.7 * 1e-6 * y[820] * y[61])/(130e-6 + 1e-6 * y[820] * y[61])
    return (R1398) - (R1396)
 
def m_aspsa_c(t, y):
    R1402 = (13.7 * 1e-6 * y[1627] * y[6])/(130e-6 + 1e-6 * y[1627] * y[6])
    R336 = (13.7 * 1e-6 * y[821] * y[6] * y[37])/(130e-6 + 1e-6 * y[821] * y[6] * y[37])
    R599 = (13.7 * 1e-6 * y[821] * y[92])/(130e-6 + 1e-6 * y[821] * y[92])
    return (R1402) - (R336 + R599)
 
def m_phom_c(t, y):
    R1403 = (13.7 * 1e-6 * y[278] * y[1627])/(130e-6 + 1e-6 * y[278] * y[1627])
    R2187 = (13.7 * 1e-6 * y[173] * y[822])/(130e-6 + 1e-6 * y[173] * y[822])
    return (R1403) - (R2187)
 
def m_ile__L_c(t, y):
    R1404 = (13.7 * 1e-6 * y[278] * y[173] * y[824])/(130e-6 + 1e-6 * y[278] * y[173] * y[824])
    R1405 = (13.7 * 1e-6 * y[61] * y[824])/(130e-6 + 1e-6 * y[61] * y[824])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1393 = (13.7 * 1e-6 * y[213] * y[823])/(130e-6 + 1e-6 * y[213] * y[823])
    R1395 = (13.7 * 1e-6 * y[278] * y[823] * y[1629])/(130e-6 + 1e-6 * y[278] * y[823] * y[1629])
    return (R1404 + R1405) - (R926 + R1393 + R1395)
 
def m_ile__L_p(t, y):
    R1406 = (13.7 * 1e-6 * y[1625])/(130e-6 + 1e-6 * y[1625])
    R1404 = (13.7 * 1e-6 * y[278] * y[173] * y[824])/(130e-6 + 1e-6 * y[278] * y[173] * y[824])
    R1405 = (13.7 * 1e-6 * y[61] * y[824])/(130e-6 + 1e-6 * y[61] * y[824])
    return (R1406) - (R1404 + R1405)
 
def m_xmp_c(t, y):
    R1408 = (13.7 * 1e-6 * y[173] * y[747] * y[236])/(130e-6 + 1e-6 * y[173] * y[747] * y[236])
    R1756 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    R2328 = (13.7 * 1e-6 * y[983] * y[780])/(130e-6 + 1e-6 * y[983] * y[780])
    R1246 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[825])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[825])
    R1724 = (13.7 * 1e-6 * y[173] * y[825])/(130e-6 + 1e-6 * y[173] * y[825])
    return (R1408 + R1756 + R2328) - (R1246 + R1724)
 
def m_imp_p(t, y):
    R1409 = (13.7 * 1e-6 * y[1628])/(130e-6 + 1e-6 * y[1628])
    R1729 = (13.7 * 1e-6 * y[406] * y[826])/(130e-6 + 1e-6 * y[406] * y[826])
    return (R1409) - (R1729)
 
def m_indole_p(t, y):
    R1410 = (13.7 * 1e-6 * y[36] * y[828])/(130e-6 + 1e-6 * y[36] * y[828])
    R1412 = (13.7 * 1e-6 * y[1630])/(130e-6 + 1e-6 * y[1630])
    R1411 = (13.7 * 1e-6 * y[61] * y[827])/(130e-6 + 1e-6 * y[61] * y[827])
    return (R1410 + R1412) - (R1411)
 
def m_indole_c(t, y):
    R1411 = (13.7 * 1e-6 * y[61] * y[827])/(130e-6 + 1e-6 * y[61] * y[827])
    R2256 = (13.7 * 1e-6 * y[173] * y[1108])/(130e-6 + 1e-6 * y[173] * y[1108])
    R2267 = (13.7 * 1e-6 * y[816])/(130e-6 + 1e-6 * y[816])
    R1410 = (13.7 * 1e-6 * y[36] * y[828])/(130e-6 + 1e-6 * y[36] * y[828])
    R2266 = (13.7 * 1e-6 * y[828] * y[500])/(130e-6 + 1e-6 * y[828] * y[500])
    return (R1411 + R2256 + R2267) - (R1410 + R2266)
 
def m_suchms_c(t, y):
    R1413 = (13.7 * 1e-6 * y[1627] * y[212])/(130e-6 + 1e-6 * y[1627] * y[212])
    R2166 = (13.7 * 1e-6 * y[260] * y[829])/(130e-6 + 1e-6 * y[260] * y[829])
    return (R1413) - (R2166)
 
def m_hisp_c(t, y):
    R1414 = (13.7 * 1e-6 * y[110] * y[814])/(130e-6 + 1e-6 * y[110] * y[814])
    R1365 = (13.7 * 1e-6 * y[173] * y[830])/(130e-6 + 1e-6 * y[173] * y[830])
    return (R1414) - (R1365)
 
def m_hxa_p(t, y):
    R1416 = (13.7 * 1e-6 * y[1620])/(130e-6 + 1e-6 * y[1620])
    R989 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[831])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[831])
    R1354 = (13.7 * 1e-6 * y[61] * y[831])/(130e-6 + 1e-6 * y[61] * y[831])
    return (R1416) - (R989 + R1354)
 
def m_pydam_c(t, y):
    R1429 = (13.7 * 1e-6 * y[173] * y[226])/(130e-6 + 1e-6 * y[173] * y[226])
    R2102 = (13.7 * 1e-6 * y[278] * y[832])/(130e-6 + 1e-6 * y[278] * y[832])
    return (R1429) - (R2102)
 
def m_ins_p(t, y):
    R1430 = (13.7 * 1e-6 * y[1633])/(130e-6 + 1e-6 * y[1633])
    R1729 = (13.7 * 1e-6 * y[406] * y[826])/(130e-6 + 1e-6 * y[406] * y[826])
    R1426 = (13.7 * 1e-6 * y[61] * y[833])/(130e-6 + 1e-6 * y[61] * y[833])
    R1427 = (13.7 * 1e-6 * y[61] * y[833])/(130e-6 + 1e-6 * y[61] * y[833])
    return (R1430 + R1729) - (R1426 + R1427)
 
def m_ipdp_c(t, y):
    R1432 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R569 = (13.7 * 1e-6 * y[487] * y[834])/(130e-6 + 1e-6 * y[487] * y[834])
    R1283 = (13.7 * 1e-6 * y[486] * y[834])/(130e-6 + 1e-6 * y[486] * y[834])
    R1431 = (13.7 * 1e-6 * y[834])/(130e-6 + 1e-6 * y[834])
    R1826 = (13.7 * 1e-6 * y[761] * y[834])/(130e-6 + 1e-6 * y[761] * y[834])
    R2352 = (13.7 * 1e-6 * y[761] * y[834])/(130e-6 + 1e-6 * y[761] * y[834])
    return (R1432) - (R569 + R1283 + R1431 + R1826 + R2352)
 
def m_3c4mop_c(t, y):
    R1433 = (13.7 * 1e-6 * y[1634] * y[236])/(130e-6 + 1e-6 * y[1634] * y[236])
    R1835 = (13.7 * 1e-6 * y[835] * y[36])/(130e-6 + 1e-6 * y[835] * y[36])
    return (R1433) - (R1835)
 
def m_hxan_p(t, y):
    R1434 = (13.7 * 1e-6 * y[1621])/(130e-6 + 1e-6 * y[1621])
    R1435 = (13.7 * 1e-6 * y[836])/(130e-6 + 1e-6 * y[836])
    return (R1434) - (R1435)
 
def m_acolipa_p(t, y):
    R1437 = (13.7 * 1e-6 * y[409] * y[1306])/(130e-6 + 1e-6 * y[409] * y[1306])
    R151 = (13.7 * 1e-6 * y[837])/(130e-6 + 1e-6 * y[837])
    return (R1437) - (R151)
 
def m_udcpp_p(t, y):
    R1437 = (13.7 * 1e-6 * y[409] * y[1306])/(130e-6 + 1e-6 * y[409] * y[1306])
    R2353 = (13.7 * 1e-6 * y[406] * y[549])/(130e-6 + 1e-6 * y[406] * y[549])
    R2354 = (13.7 * 1e-6 * y[838])/(130e-6 + 1e-6 * y[838])
    return (R1437 + R2353) - (R2354)
 
def m_2ippm_c(t, y):
    R1439 = (13.7 * 1e-6 * y[1634])/(130e-6 + 1e-6 * y[1634])
    R1440 = (13.7 * 1e-6 * y[839] * y[173])/(130e-6 + 1e-6 * y[839] * y[173])
    return (R1439) - (R1440)
 
def m_3c3hmp_c(t, y):
    R1440 = (13.7 * 1e-6 * y[839] * y[173])/(130e-6 + 1e-6 * y[839] * y[173])
    R1441 = (13.7 * 1e-6 * y[490] * y[127] * y[173])/(130e-6 + 1e-6 * y[490] * y[127] * y[173])
    return (R1440 + R1441) - (0)
 
def m_isetac_c(t, y):
    R1442 = (13.7 * 1e-6 * y[278] * y[173] * y[843])/(130e-6 + 1e-6 * y[278] * y[173] * y[843])
    R1022 = (13.7 * 1e-6 * y[655] * y[841] * y[335])/(130e-6 + 1e-6 * y[655] * y[841] * y[335])
    return (R1442) - (R1022)
 
def m_LalaDglu_c(t, y):
    R1445 = (13.7 * 1e-6 * y[34] * y[173])/(130e-6 + 1e-6 * y[34] * y[173])
    R219 = (13.7 * 1e-6 * y[842])/(130e-6 + 1e-6 * y[842])
    return (R1445) - (R219)
 
def m_isetac_p(t, y):
    R1446 = (13.7 * 1e-6 * y[1635])/(130e-6 + 1e-6 * y[1635])
    R1442 = (13.7 * 1e-6 * y[278] * y[173] * y[843])/(130e-6 + 1e-6 * y[278] * y[173] * y[843])
    return (R1446) - (R1442)
 
def m_kdo2lipid4_p(t, y):
    R1447 = (13.7 * 1e-6 * y[278] * y[173] * y[991])/(130e-6 + 1e-6 * y[278] * y[173] * y[991])
    R1454 = (13.7 * 1e-6 * y[844])/(130e-6 + 1e-6 * y[844])
    return (R1447) - (R1454)
 
def m_lald__D_c(t, y):
    R1448 = (13.7 * 1e-6 * y[36] * y[94] * y[113])/(130e-6 + 1e-6 * y[36] * y[94] * y[113])
    R1452 = (13.7 * 1e-6 * y[36] * y[845] * y[113])/(130e-6 + 1e-6 * y[36] * y[845] * y[113])
    return (R1448) - (R1452)
 
def m_lac__L_c(t, y):
    R1451 = (13.7 * 1e-6 * y[173] * y[608] * y[236])/(130e-6 + 1e-6 * y[173] * y[608] * y[236])
    R1555 = (13.7 * 1e-6 * y[61] * y[879])/(130e-6 + 1e-6 * y[61] * y[879])
    R1549 = (13.7 * 1e-6 * y[846] * y[444])/(130e-6 + 1e-6 * y[846] * y[444])
    R1553 = (13.7 * 1e-6 * y[846] * y[441])/(130e-6 + 1e-6 * y[846] * y[441])
    return (R1451 + R1555) - (R1549 + R1553)
 
def m_kdo2lipid4_e(t, y):
    R1454 = (13.7 * 1e-6 * y[844])/(130e-6 + 1e-6 * y[844])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1456 = (13.7 * 1e-6 * y[847])/(130e-6 + 1e-6 * y[847])
    return (R1454) - (R926 + R1456)
 
def m_23dhmp_c(t, y):
    R1457 = (13.7 * 1e-6 * y[103] * y[36] * y[201])/(130e-6 + 1e-6 * y[103] * y[36] * y[201])
    R576 = (13.7 * 1e-6 * y[848])/(130e-6 + 1e-6 * y[848])
    return (R1457) - (R576)
 
def m_actACP_c(t, y):
    R1458 = (13.7 * 1e-6 * y[149] * y[36] * y[918])/(130e-6 + 1e-6 * y[149] * y[36] * y[918])
    R1461 = (13.7 * 1e-6 * y[127] * y[36] * y[918])/(130e-6 + 1e-6 * y[127] * y[36] * y[918])
    R10 = (13.7 * 1e-6 * y[849] * y[36] * y[201])/(130e-6 + 1e-6 * y[849] * y[36] * y[201])
    return (R1458 + R1461) - (R10)
 
def m_lcts_p(t, y):
    R1459 = (13.7 * 1e-6 * y[61] * y[851])/(130e-6 + 1e-6 * y[61] * y[851])
    R1460 = (13.7 * 1e-6 * y[1637])/(130e-6 + 1e-6 * y[1637])
    R1443 = (13.7 * 1e-6 * y[406] * y[850])/(130e-6 + 1e-6 * y[406] * y[850])
    R1462 = (13.7 * 1e-6 * y[61] * y[850])/(130e-6 + 1e-6 * y[61] * y[850])
    return (R1459 + R1460) - (R1443 + R1462)
 
def m_lcts_c(t, y):
    R1462 = (13.7 * 1e-6 * y[61] * y[850])/(130e-6 + 1e-6 * y[61] * y[850])
    R1438 = (13.7 * 1e-6 * y[173] * y[851])/(130e-6 + 1e-6 * y[173] * y[851])
    R1459 = (13.7 * 1e-6 * y[61] * y[851])/(130e-6 + 1e-6 * y[61] * y[851])
    return (R1462) - (R1438 + R1459)
 
def m_leu__L_c(t, y):
    R1469 = (13.7 * 1e-6 * y[1018] * y[110])/(130e-6 + 1e-6 * y[1018] * y[110])
    R1477 = (13.7 * 1e-6 * y[278] * y[173] * y[855])/(130e-6 + 1e-6 * y[278] * y[173] * y[855])
    R1478 = (13.7 * 1e-6 * y[61] * y[855])/(130e-6 + 1e-6 * y[61] * y[855])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1470 = (13.7 * 1e-6 * y[278] * y[852] * y[1638])/(130e-6 + 1e-6 * y[278] * y[852] * y[1638])
    return (R1469 + R1477 + R1478) - (R926 + R1470)
 
def m_leutrna_c(t, y):
    R1470 = (13.7 * 1e-6 * y[278] * y[852] * y[1638])/(130e-6 + 1e-6 * y[278] * y[852] * y[1638])
    return (R1470) - (0)
 
def m_ckdo_c(t, y):
    R1476 = (13.7 * 1e-6 * y[404] * y[861])/(130e-6 + 1e-6 * y[404] * y[861])
    R1780 = (13.7 * 1e-6 * y[854] * y[1198])/(130e-6 + 1e-6 * y[854] * y[1198])
    R1794 = (13.7 * 1e-6 * y[854] * y[986])/(130e-6 + 1e-6 * y[854] * y[986])
    R1807 = (13.7 * 1e-6 * y[854] * y[789])/(130e-6 + 1e-6 * y[854] * y[789])
    return (R1476) - (R1780 + R1794 + R1807)
 
def m_leu__L_p(t, y):
    R1479 = (13.7 * 1e-6 * y[1639])/(130e-6 + 1e-6 * y[1639])
    R1477 = (13.7 * 1e-6 * y[278] * y[173] * y[855])/(130e-6 + 1e-6 * y[278] * y[173] * y[855])
    R1478 = (13.7 * 1e-6 * y[61] * y[855])/(130e-6 + 1e-6 * y[61] * y[855])
    return (R1479) - (R1477 + R1478)
 
def m_lgt__S_c(t, y):
    R1480 = (13.7 * 1e-6 * y[763] * y[94])/(130e-6 + 1e-6 * y[763] * y[94])
    R1286 = (13.7 * 1e-6 * y[173] * y[856])/(130e-6 + 1e-6 * y[173] * y[856])
    return (R1480) - (R1286)
 
def m_lipa_cold_p(t, y):
    R1481 = (13.7 * 1e-6 * y[278] * y[173] * y[561])/(130e-6 + 1e-6 * y[278] * y[173] * y[561])
    R407 = (13.7 * 1e-6 * y[857])/(130e-6 + 1e-6 * y[857])
    return (R1481) - (R407)
 
def m_h2o_e(t, y):
    R1482 = (13.7 * 1e-6 * y[413] * y[1344] * y[1614])/(130e-6 + 1e-6 * y[413] * y[1344] * y[1614])
    R1483 = (13.7 * 1e-6 * y[1344] * y[1614] * y[865])/(130e-6 + 1e-6 * y[1344] * y[1614] * y[865])
    R1255 = (13.7 * 999999.0 * y[858])/(130e-6 + 999999.0 * y[858])
    R1336 = (13.7 * 1e-6 * y[858])/(130e-6 + 1e-6 * y[858])
    return (R1482 + R1483) - (R1255 + R1336)
 
def m_hacolipa_e(t, y):
    R1482 = (13.7 * 1e-6 * y[413] * y[1344] * y[1614])/(130e-6 + 1e-6 * y[413] * y[1344] * y[1614])
    R1291 = (13.7 * 1e-6 * y[859])/(130e-6 + 1e-6 * y[859])
    return (R1482) - (R1291)
 
def m_halipa_e(t, y):
    R1483 = (13.7 * 1e-6 * y[1344] * y[1614] * y[865])/(130e-6 + 1e-6 * y[1344] * y[1614] * y[865])
    R1294 = (13.7 * 1e-6 * y[860])/(130e-6 + 1e-6 * y[860])
    return (R1483) - (R1294)
 
def m_kdo_c(t, y):
    R1484 = (13.7 * 1e-6 * y[173] * y[862])/(130e-6 + 1e-6 * y[173] * y[862])
    R1476 = (13.7 * 1e-6 * y[404] * y[861])/(130e-6 + 1e-6 * y[404] * y[861])
    return (R1484) - (R1476)
 
def m_kdo8p_c(t, y):
    R1485 = (13.7 * 1e-6 * y[70] * y[173] * y[563])/(130e-6 + 1e-6 * y[70] * y[173] * y[563])
    R1484 = (13.7 * 1e-6 * y[173] * y[862])/(130e-6 + 1e-6 * y[173] * y[862])
    return (R1485) - (R1484)
 
def m_xu5p__L_c(t, y):
    R1486 = (13.7 * 1e-6 * y[317] * y[36])/(130e-6 + 1e-6 * y[317] * y[36])
    R2335 = (13.7 * 1e-6 * y[278] * y[876])/(130e-6 + 1e-6 * y[278] * y[876])
    R2320 = (13.7 * 1e-6 * y[863])/(130e-6 + 1e-6 * y[863])
    return (R1486 + R2335) - (R2320)
 
def m_lipa_p(t, y):
    R1487 = (13.7 * 1e-6 * y[278] * y[173] * y[558])/(130e-6 + 1e-6 * y[278] * y[173] * y[558])
    R1489 = (13.7 * 1e-6 * y[864])/(130e-6 + 1e-6 * y[864])
    R1878 = (13.7 * 1e-6 * y[864] * y[1038])/(130e-6 + 1e-6 * y[864] * y[1038])
    R1880 = (13.7 * 1e-6 * y[864] * y[1041])/(130e-6 + 1e-6 * y[864] * y[1041])
    return (R1487) - (R1489 + R1878 + R1880)
 
def m_lipa_e(t, y):
    R1489 = (13.7 * 1e-6 * y[864])/(130e-6 + 1e-6 * y[864])
    R1483 = (13.7 * 1e-6 * y[1344] * y[1614] * y[865])/(130e-6 + 1e-6 * y[1344] * y[1614] * y[865])
    R1509 = (13.7 * 1e-6 * y[865])/(130e-6 + 1e-6 * y[865])
    return (R1489) - (R1483 + R1509)
 
def m_k_c(t, y):
    R1490 = (13.7 * 1e-6 * y[278] * y[173] * y[867])/(130e-6 + 1e-6 * y[278] * y[173] * y[867])
    R1491 = (13.7 * 1e-6 * y[61] * y[867])/(130e-6 + 1e-6 * y[61] * y[867])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1492 = (13.7 * 1e-6 * y[61] * y[866])/(130e-6 + 1e-6 * y[61] * y[866])
    return (R1490 + R1491) - (R926 + R1492)
 
def m_k_p(t, y):
    R1492 = (13.7 * 1e-6 * y[61] * y[866])/(130e-6 + 1e-6 * y[61] * y[866])
    R1493 = (13.7 * 1e-6 * y[1636])/(130e-6 + 1e-6 * y[1636])
    R1490 = (13.7 * 1e-6 * y[278] * y[173] * y[867])/(130e-6 + 1e-6 * y[278] * y[173] * y[867])
    R1491 = (13.7 * 1e-6 * y[61] * y[867])/(130e-6 + 1e-6 * y[61] * y[867])
    return (R1492 + R1493) - (R1490 + R1491)
 
def m_lipidAds_c(t, y):
    R1494 = (13.7 * 1e-6 * y[1267] * y[1268])/(130e-6 + 1e-6 * y[1267] * y[1268])
    R2153 = (13.7 * 1e-6 * y[278] * y[868])/(130e-6 + 1e-6 * y[278] * y[868])
    return (R1494) - (R2153)
 
def m_ttdca_p(t, y):
    R1497 = (13.7 * 1e-6 * y[1059] * y[406])/(130e-6 + 1e-6 * y[1059] * y[406])
    R1510 = (13.7 * 1e-6 * y[1072] * y[406])/(130e-6 + 1e-6 * y[1072] * y[406])
    R1530 = (13.7 * 1e-6 * y[1086] * y[406])/(130e-6 + 1e-6 * y[1086] * y[406])
    R1917 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1930 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R1944 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R1960 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1981 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R1988 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R2283 = (13.7 * 1e-6 * y[1583])/(130e-6 + 1e-6 * y[1583])
    R974 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[869])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[869])
    return (R1497 + R1510 + R1530 + R1917 + R1930 + R1944 + R1960 + R1981 + R1988 + R2283) - (R974)
 
def m_ttdcea_p(t, y):
    R1498 = (13.7 * 1e-6 * y[1060] * y[406])/(130e-6 + 1e-6 * y[1060] * y[406])
    R1511 = (13.7 * 1e-6 * y[1073] * y[406])/(130e-6 + 1e-6 * y[1073] * y[406])
    R1531 = (13.7 * 1e-6 * y[1087] * y[406])/(130e-6 + 1e-6 * y[1087] * y[406])
    R1918 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1931 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R1945 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R1961 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1982 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R1989 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R2284 = (13.7 * 1e-6 * y[1584])/(130e-6 + 1e-6 * y[1584])
    R976 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[870])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[870])
    return (R1498 + R1511 + R1531 + R1918 + R1931 + R1945 + R1961 + R1982 + R1989 + R2284) - (R976)
 
def m_ocdca_p(t, y):
    R1505 = (13.7 * 1e-6 * y[1063] * y[406])/(130e-6 + 1e-6 * y[1063] * y[406])
    R1519 = (13.7 * 1e-6 * y[1079] * y[406])/(130e-6 + 1e-6 * y[1079] * y[406])
    R1534 = (13.7 * 1e-6 * y[1090] * y[406])/(130e-6 + 1e-6 * y[1090] * y[406])
    R1823 = (13.7 * 1e-6 * y[1507])/(130e-6 + 1e-6 * y[1507])
    R1921 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1937 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R1948 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R1971 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1985 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R1998 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R980 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[871])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[871])
    return (R1505 + R1519 + R1534 + R1823 + R1921 + R1937 + R1948 + R1971 + R1985 + R1998) - (R980)
 
def m_ocdcea_p(t, y):
    R1506 = (13.7 * 1e-6 * y[1066] * y[406])/(130e-6 + 1e-6 * y[1066] * y[406])
    R1521 = (13.7 * 1e-6 * y[1080] * y[406])/(130e-6 + 1e-6 * y[1080] * y[406])
    R1535 = (13.7 * 1e-6 * y[1093] * y[406])/(130e-6 + 1e-6 * y[1093] * y[406])
    R1824 = (13.7 * 1e-6 * y[1508])/(130e-6 + 1e-6 * y[1508])
    R1924 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1938 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R1955 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R1972 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1986 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R1999 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R988 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[872])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[872])
    return (R1506 + R1521 + R1535 + R1824 + R1924 + R1938 + R1955 + R1972 + R1986 + R1999) - (R988)
 
def m_15dap_c(t, y):
    R1529 = (13.7 * 1e-6 * y[36] * y[334])/(130e-6 + 1e-6 * y[36] * y[334])
    R368 = (13.7 * 1e-6 * y[873] * y[61] * y[875])/(130e-6 + 1e-6 * y[873] * y[61] * y[875])
    return (R1529) - (R368)
 
def m_lystrna_c(t, y):
    R1536 = (13.7 * 1e-6 * y[278] * y[334] * y[1641])/(130e-6 + 1e-6 * y[278] * y[334] * y[1641])
    return (R1536) - (0)
 
def m_lys__L_p(t, y):
    R1544 = (13.7 * 1e-6 * y[61] * y[334])/(130e-6 + 1e-6 * y[61] * y[334])
    R1545 = (13.7 * 1e-6 * y[1642])/(130e-6 + 1e-6 * y[1642])
    R368 = (13.7 * 1e-6 * y[873] * y[61] * y[875])/(130e-6 + 1e-6 * y[873] * y[61] * y[875])
    R1537 = (13.7 * 1e-6 * y[278] * y[173] * y[875])/(130e-6 + 1e-6 * y[278] * y[173] * y[875])
    R1538 = (13.7 * 1e-6 * y[61] * y[875])/(130e-6 + 1e-6 * y[61] * y[875])
    return (R1544 + R1545) - (R368 + R1537 + R1538)
 
def m_xylu__L_c(t, y):
    R1546 = (13.7 * 1e-6 * y[877])/(130e-6 + 1e-6 * y[877])
    R2336 = (13.7 * 1e-6 * y[61] * y[1283])/(130e-6 + 1e-6 * y[61] * y[1283])
    R2335 = (13.7 * 1e-6 * y[278] * y[876])/(130e-6 + 1e-6 * y[278] * y[876])
    return (R1546 + R2336) - (R2335)
 
def m_lyx__L_c(t, y):
    R1547 = (13.7 * 1e-6 * y[61] * y[878])/(130e-6 + 1e-6 * y[61] * y[878])
    R1546 = (13.7 * 1e-6 * y[877])/(130e-6 + 1e-6 * y[877])
    return (R1547) - (R1546)
 
def m_lyx__L_p(t, y):
    R1548 = (13.7 * 1e-6 * y[1643])/(130e-6 + 1e-6 * y[1643])
    R1547 = (13.7 * 1e-6 * y[61] * y[878])/(130e-6 + 1e-6 * y[61] * y[878])
    return (R1548) - (R1547)
 
def m_lac__L_p(t, y):
    R1556 = (13.7 * 1e-6 * y[1640])/(130e-6 + 1e-6 * y[1640])
    R1555 = (13.7 * 1e-6 * y[61] * y[879])/(130e-6 + 1e-6 * y[61] * y[879])
    return (R1556) - (R1555)
 
def m_apg120_c(t, y):
    R1558 = (13.7 * 1e-6 * y[17] * y[241])/(130e-6 + 1e-6 * y[17] * y[241])
    R1570 = (13.7 * 1e-6 * y[169] * y[241])/(130e-6 + 1e-6 * y[169] * y[241])
    return (R1558 + R1570) - (0)
 
def m_apg140_c(t, y):
    R1559 = (13.7 * 1e-6 * y[25] * y[247])/(130e-6 + 1e-6 * y[25] * y[247])
    R1572 = (13.7 * 1e-6 * y[186] * y[247])/(130e-6 + 1e-6 * y[186] * y[247])
    return (R1559 + R1572) - (0)
 
def m_apg141_c(t, y):
    R1560 = (13.7 * 1e-6 * y[80] * y[265])/(130e-6 + 1e-6 * y[80] * y[265])
    R1574 = (13.7 * 1e-6 * y[195] * y[265])/(130e-6 + 1e-6 * y[195] * y[265])
    return (R1560 + R1574) - (0)
 
def m_apg160_c(t, y):
    R1561 = (13.7 * 1e-6 * y[87] * y[268])/(130e-6 + 1e-6 * y[87] * y[268])
    R1576 = (13.7 * 1e-6 * y[208] * y[268])/(130e-6 + 1e-6 * y[208] * y[268])
    return (R1561 + R1576) - (0)
 
def m_apg161_c(t, y):
    R1562 = (13.7 * 1e-6 * y[96] * y[271])/(130e-6 + 1e-6 * y[96] * y[271])
    R1577 = (13.7 * 1e-6 * y[217] * y[271])/(130e-6 + 1e-6 * y[217] * y[271])
    return (R1562 + R1577) - (0)
 
def m_apg180_c(t, y):
    R1563 = (13.7 * 1e-6 * y[118] * y[276])/(130e-6 + 1e-6 * y[118] * y[276])
    R1578 = (13.7 * 1e-6 * y[228] * y[276])/(130e-6 + 1e-6 * y[228] * y[276])
    return (R1563 + R1578) - (0)
 
def m_mal__D_c(t, y):
    R1566 = (13.7 * 1e-6 * y[61] * y[887])/(130e-6 + 1e-6 * y[61] * y[887])
    R1565 = (13.7 * 1e-6 * y[886] * y[236])/(130e-6 + 1e-6 * y[886] * y[236])
    return (R1566) - (R1565)
 
def m_mal__D_p(t, y):
    R1567 = (13.7 * 1e-6 * y[1644])/(130e-6 + 1e-6 * y[1644])
    R1566 = (13.7 * 1e-6 * y[61] * y[887])/(130e-6 + 1e-6 * y[61] * y[887])
    return (R1567) - (R1566)
 
def m_apg181_c(t, y):
    R1569 = (13.7 * 1e-6 * y[130] * y[294])/(130e-6 + 1e-6 * y[130] * y[294])
    R1584 = (13.7 * 1e-6 * y[237] * y[294])/(130e-6 + 1e-6 * y[237] * y[294])
    return (R1569 + R1584) - (0)
 
def m_acmalt_c(t, y):
    R1571 = (13.7 * 1e-6 * y[127] * y[894])/(130e-6 + 1e-6 * y[127] * y[894])
    return (R1571) - (0)
 
def m_maltpt_p(t, y):
    R1581 = (13.7 * 1e-6 * y[1468])/(130e-6 + 1e-6 * y[1468])
    R1580 = (13.7 * 1e-6 * y[278] * y[173] * y[890])/(130e-6 + 1e-6 * y[278] * y[173] * y[890])
    return (R1581) - (R1580)
 
def m_malttr_c(t, y):
    R1582 = (13.7 * 1e-6 * y[278] * y[173] * y[892])/(130e-6 + 1e-6 * y[278] * y[173] * y[892])
    R1702 = (13.7 * 1e-6 * y[173] * y[243])/(130e-6 + 1e-6 * y[173] * y[243])
    R244 = (13.7 * 1e-6 * y[894] * y[891])/(130e-6 + 1e-6 * y[894] * y[891])
    R1701 = (13.7 * 1e-6 * y[173] * y[891])/(130e-6 + 1e-6 * y[173] * y[891])
    return (R1582 + R1702) - (R244 + R1701)
 
def m_malttr_p(t, y):
    R1583 = (13.7 * 1e-6 * y[1469])/(130e-6 + 1e-6 * y[1469])
    R1582 = (13.7 * 1e-6 * y[278] * y[173] * y[892])/(130e-6 + 1e-6 * y[278] * y[173] * y[892])
    return (R1583) - (R1582)
 
def m_maltttr_p(t, y):
    R1589 = (13.7 * 1e-6 * y[1470])/(130e-6 + 1e-6 * y[1470])
    R1587 = (13.7 * 1e-6 * y[278] * y[173] * y[893])/(130e-6 + 1e-6 * y[278] * y[173] * y[893])
    return (R1589) - (R1587)
 
def m_malt_c(t, y):
    R1590 = (13.7 * 1e-6 * y[278] * y[173] * y[896])/(130e-6 + 1e-6 * y[278] * y[173] * y[896])
    R1701 = (13.7 * 1e-6 * y[173] * y[891])/(130e-6 + 1e-6 * y[173] * y[891])
    R244 = (13.7 * 1e-6 * y[894] * y[891])/(130e-6 + 1e-6 * y[894] * y[891])
    R245 = (13.7 * 1e-6 * y[894] * y[243])/(130e-6 + 1e-6 * y[894] * y[243])
    R248 = (13.7 * 1e-6 * y[894] * y[244])/(130e-6 + 1e-6 * y[894] * y[244])
    R250 = (13.7 * 1e-6 * y[894] * y[102])/(130e-6 + 1e-6 * y[894] * y[102])
    R1571 = (13.7 * 1e-6 * y[127] * y[894])/(130e-6 + 1e-6 * y[127] * y[894])
    return (R1590 + R1701) - (R244 + R245 + R248 + R250 + R1571)
 
def m_malt6p_c(t, y):
    R1591 = (13.7 * 1e-6 * y[896] * y[563])/(130e-6 + 1e-6 * y[896] * y[563])
    return (R1591) - (0)
 
def m_malt_p(t, y):
    R1592 = (13.7 * 1e-6 * y[1646])/(130e-6 + 1e-6 * y[1646])
    R1590 = (13.7 * 1e-6 * y[278] * y[173] * y[896])/(130e-6 + 1e-6 * y[278] * y[173] * y[896])
    R1591 = (13.7 * 1e-6 * y[896] * y[563])/(130e-6 + 1e-6 * y[896] * y[563])
    return (R1592) - (R1590 + R1591)
 
def m_murein5px4p_p(t, y):
    R1596 = (13.7 * 1e-6 * y[1035])/(130e-6 + 1e-6 * y[1035])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1599 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1611 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1686 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    return (R1596) - (R926 + R1599 + R1611 + R1686)
 
def m_murein5px3p_p(t, y):
    R1597 = (13.7 * 1e-6 * y[1035])/(130e-6 + 1e-6 * y[1035])
    R1694 = (13.7 * 1e-6 * y[406] * y[898])/(130e-6 + 1e-6 * y[406] * y[898])
    R1700 = (13.7 * 1e-6 * y[406] * y[898])/(130e-6 + 1e-6 * y[406] * y[898])
    return (R1597) - (R1694 + R1700)
 
def m_murein5px4px4p_p(t, y):
    R1598 = (13.7 * 1e-6 * y[1042])/(130e-6 + 1e-6 * y[1042])
    R1600 = (13.7 * 1e-6 * y[406] * y[899])/(130e-6 + 1e-6 * y[406] * y[899])
    return (R1598) - (R1600)
 
def m_murein4px4p_p(t, y):
    R1599 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1719 = (13.7 * 1e-6 * y[908])/(130e-6 + 1e-6 * y[908])
    R1604 = (13.7 * 1e-6 * y[406] * y[900])/(130e-6 + 1e-6 * y[406] * y[900])
    return (R1599 + R1719) - (R1604)
 
def m_murein4px4px4p_p(t, y):
    R1600 = (13.7 * 1e-6 * y[406] * y[899])/(130e-6 + 1e-6 * y[406] * y[899])
    R1613 = (13.7 * 1e-6 * y[406] * y[901])/(130e-6 + 1e-6 * y[406] * y[901])
    return (R1600) - (R1613)
 
def m_murein5p4p_p(t, y):
    R1601 = (13.7 * 1e-6 * y[406] * y[1035])/(130e-6 + 1e-6 * y[406] * y[1035])
    R1611 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1602 = (13.7 * 1e-6 * y[406] * y[902])/(130e-6 + 1e-6 * y[406] * y[902])
    return (R1601 + R1611) - (R1602)
 
def m_murein4p4p_p(t, y):
    R1602 = (13.7 * 1e-6 * y[406] * y[902])/(130e-6 + 1e-6 * y[406] * y[902])
    R1604 = (13.7 * 1e-6 * y[406] * y[900])/(130e-6 + 1e-6 * y[406] * y[900])
    R1687 = (13.7 * 1e-6 * y[406] * y[903])/(130e-6 + 1e-6 * y[406] * y[903])
    R1712 = (13.7 * 1e-6 * y[903])/(130e-6 + 1e-6 * y[903])
    return (R1602 + R1604) - (R1687 + R1712)
 
def m_murein4p3p_p(t, y):
    R1603 = (13.7 * 1e-6 * y[406] * y[951])/(130e-6 + 1e-6 * y[406] * y[951])
    R1610 = (13.7 * 1e-6 * y[406] * y[950])/(130e-6 + 1e-6 * y[406] * y[950])
    R1687 = (13.7 * 1e-6 * y[406] * y[903])/(130e-6 + 1e-6 * y[406] * y[903])
    R1693 = (13.7 * 1e-6 * y[406] * y[904])/(130e-6 + 1e-6 * y[406] * y[904])
    R1714 = (13.7 * 1e-6 * y[904])/(130e-6 + 1e-6 * y[904])
    return (R1603 + R1610 + R1687) - (R1693 + R1714)
 
def m_mal__L_p(t, y):
    R1605 = (13.7 * 1e-6 * y[1645])/(130e-6 + 1e-6 * y[1645])
    R1593 = (13.7 * 1e-6 * y[61] * y[905])/(130e-6 + 1e-6 * y[61] * y[905])
    R1594 = (13.7 * 1e-6 * y[61] * y[905])/(130e-6 + 1e-6 * y[61] * y[905])
    return (R1605) - (R1593 + R1594)
 
def m_gdpmann_c(t, y):
    R1606 = (13.7 * 1e-6 * y[157] * y[36] * y[707])/(130e-6 + 1e-6 * y[157] * y[36] * y[707])
    R1168 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1174 = (13.7 * 1e-6 * y[906] * y[173])/(130e-6 + 1e-6 * y[906] * y[173])
    R1234 = (13.7 * 1e-6 * y[906])/(130e-6 + 1e-6 * y[906])
    return (R1606) - (R1168 + R1174 + R1234)
 
def m_man6p_p(t, y):
    R1609 = (13.7 * 1e-6 * y[1471])/(130e-6 + 1e-6 * y[1471])
    R1608 = (13.7 * 1e-6 * y[907] * y[37])/(130e-6 + 1e-6 * y[907] * y[37])
    return (R1609) - (R1608)
 
def m_murein4px4p4p_p(t, y):
    R1613 = (13.7 * 1e-6 * y[406] * y[901])/(130e-6 + 1e-6 * y[406] * y[901])
    R1719 = (13.7 * 1e-6 * y[908])/(130e-6 + 1e-6 * y[908])
    return (R1613) - (R1719)
 
def m_man6pglyc_c(t, y):
    R1618 = (13.7 * 1e-6 * y[910] * y[563])/(130e-6 + 1e-6 * y[910] * y[563])
    R1620 = (13.7 * 1e-6 * y[173] * y[909])/(130e-6 + 1e-6 * y[173] * y[909])
    return (R1618) - (R1620)
 
def m_manglyc_p(t, y):
    R1619 = (13.7 * 1e-6 * y[1474])/(130e-6 + 1e-6 * y[1474])
    R1618 = (13.7 * 1e-6 * y[910] * y[563])/(130e-6 + 1e-6 * y[910] * y[563])
    return (R1619) - (R1618)
 
def m_man_p(t, y):
    R1622 = (13.7 * 1e-6 * y[1473])/(130e-6 + 1e-6 * y[1473])
    R1621 = (13.7 * 1e-6 * y[911] * y[563])/(130e-6 + 1e-6 * y[911] * y[563])
    return (R1622) - (R1621)
 
def m_2mcacn_c(t, y):
    R1623 = (13.7 * 1e-6 * y[917])/(130e-6 + 1e-6 * y[917])
    R1684 = (13.7 * 1e-6 * y[912] * y[173])/(130e-6 + 1e-6 * y[912] * y[173])
    return (R1623) - (R1684)
 
def m_dkmpp_c(t, y):
    R1625 = (13.7 * 1e-6 * y[1096])/(130e-6 + 1e-6 * y[1096])
    R563 = (13.7 * 1e-6 * y[913] * y[173] * y[335])/(130e-6 + 1e-6 * y[913] * y[173] * y[335])
    R565 = (13.7 * 1e-6 * y[913] * y[173] * y[236])/(130e-6 + 1e-6 * y[913] * y[173] * y[236])
    return (R1625) - (R563 + R565)
 
def m_h2mb4p_c(t, y):
    R1628 = (13.7 * 1e-6 * y[915] * y[113])/(130e-6 + 1e-6 * y[915] * y[113])
    R571 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    R1432 = (13.7 * 1e-6 * y[914] * y[36] * y[113])/(130e-6 + 1e-6 * y[914] * y[36] * y[113])
    return (R1628) - (R571 + R1432)
 
def m_2mecdp_c(t, y):
    R1629 = (13.7 * 1e-6 * y[336])/(130e-6 + 1e-6 * y[336])
    R1628 = (13.7 * 1e-6 * y[915] * y[113])/(130e-6 + 1e-6 * y[915] * y[113])
    return (R1629) - (R1628)
 
def m_melib_c(t, y):
    R1630 = (13.7 * 1e-6 * y[61] * y[919])/(130e-6 + 1e-6 * y[61] * y[919])
    R1127 = (13.7 * 1e-6 * y[173] * y[916])/(130e-6 + 1e-6 * y[173] * y[916])
    R1633 = (13.7 * 1e-6 * y[61] * y[916])/(130e-6 + 1e-6 * y[61] * y[916])
    return (R1630) - (R1127 + R1633)
 
def m_2mcit_c(t, y):
    R1631 = (13.7 * 1e-6 * y[173] * y[298] * y[140])/(130e-6 + 1e-6 * y[173] * y[298] * y[140])
    R1623 = (13.7 * 1e-6 * y[917])/(130e-6 + 1e-6 * y[917])
    return (R1631) - (R1623)
 
def m_malACP_c(t, y):
    R1632 = (13.7 * 1e-6 * y[15] * y[138])/(130e-6 + 1e-6 * y[15] * y[138])
    R14 = (13.7 * 1e-6 * y[36] * y[918] * y[89])/(130e-6 + 1e-6 * y[36] * y[918] * y[89])
    R16 = (13.7 * 1e-6 * y[88] * y[36] * y[918])/(130e-6 + 1e-6 * y[88] * y[36] * y[918])
    R17 = (13.7 * 1e-6 * y[1236] * y[36] * y[918])/(130e-6 + 1e-6 * y[1236] * y[36] * y[918])
    R18 = (13.7 * 1e-6 * y[86] * y[36] * y[918])/(130e-6 + 1e-6 * y[86] * y[36] * y[918])
    R21 = (13.7 * 1e-6 * y[555] * y[36] * y[918])/(130e-6 + 1e-6 * y[555] * y[36] * y[918])
    R26 = (13.7 * 1e-6 * y[36] * y[918] * y[72])/(130e-6 + 1e-6 * y[36] * y[918] * y[72])
    R27 = (13.7 * 1e-6 * y[36] * y[918] * y[74])/(130e-6 + 1e-6 * y[36] * y[918] * y[74])
    R28 = (13.7 * 1e-6 * y[36] * y[918] * y[79])/(130e-6 + 1e-6 * y[36] * y[918] * y[79])
    R29 = (13.7 * 1e-6 * y[36] * y[81] * y[918])/(130e-6 + 1e-6 * y[36] * y[81] * y[918])
    R30 = (13.7 * 1e-6 * y[538] * y[36] * y[918])/(130e-6 + 1e-6 * y[538] * y[36] * y[918])
    R31 = (13.7 * 1e-6 * y[36] * y[541] * y[918])/(130e-6 + 1e-6 * y[36] * y[541] * y[918])
    R1458 = (13.7 * 1e-6 * y[149] * y[36] * y[918])/(130e-6 + 1e-6 * y[149] * y[36] * y[918])
    R1461 = (13.7 * 1e-6 * y[127] * y[36] * y[918])/(130e-6 + 1e-6 * y[127] * y[36] * y[918])
    R1564 = (13.7 * 1e-6 * y[36] * y[918])/(130e-6 + 1e-6 * y[36] * y[918])
    return (R1632) - (R14 + R16 + R17 + R18 + R21 + R26 + R27 + R28 + R29 + R30 + R31 + R1458 + R1461 + R1564)
 
def m_melib_p(t, y):
    R1633 = (13.7 * 1e-6 * y[61] * y[916])/(130e-6 + 1e-6 * y[61] * y[916])
    R1635 = (13.7 * 1e-6 * y[1475])/(130e-6 + 1e-6 * y[1475])
    R1630 = (13.7 * 1e-6 * y[61] * y[919])/(130e-6 + 1e-6 * y[61] * y[919])
    return (R1633 + R1635) - (R1630)
 
def m_4c2me_c(t, y):
    R1636 = (13.7 * 1e-6 * y[542] * y[404] * y[36])/(130e-6 + 1e-6 * y[542] * y[404] * y[36])
    R370 = (13.7 * 1e-6 * y[920] * y[278])/(130e-6 + 1e-6 * y[920] * y[278])
    return (R1636) - (R370)
 
def m_amet_c(t, y):
    R1637 = (13.7 * 1e-6 * y[278] * y[173] * y[326])/(130e-6 + 1e-6 * y[278] * y[173] * y[326])
    R154 = (13.7 * 1e-6 * y[1339] * y[921])/(130e-6 + 1e-6 * y[1339] * y[921])
    R198 = (13.7 * 1e-6 * y[921] * y[36])/(130e-6 + 1e-6 * y[921] * y[36])
    R254 = (13.7 * 1e-6 * y[273] * y[921])/(130e-6 + 1e-6 * y[273] * y[921])
    R255 = (13.7 * 1e-6 * y[507] * y[921])/(130e-6 + 1e-6 * y[507] * y[921])
    R353 = (13.7 * 1e-6 * y[921] * y[461] * y[1379])/(130e-6 + 1e-6 * y[921] * y[461] * y[1379])
    R372 = (13.7 * 1e-6 * y[921] * y[160])/(130e-6 + 1e-6 * y[921] * y[160])
    R375 = (13.7 * 1e-6 * y[921] * y[271])/(130e-6 + 1e-6 * y[921] * y[271])
    R377 = (13.7 * 1e-6 * y[921] * y[164])/(130e-6 + 1e-6 * y[921] * y[164])
    R378 = (13.7 * 1e-6 * y[921] * y[294])/(130e-6 + 1e-6 * y[921] * y[294])
    R481 = (13.7 * 1e-6 * y[921] * y[1252])/(130e-6 + 1e-6 * y[921] * y[1252])
    R572 = (13.7 * 1e-6 * y[1022] * y[921])/(130e-6 + 1e-6 * y[1022] * y[921])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1321 = (13.7 * 1e-6 * y[921] * y[436])/(130e-6 + 1e-6 * y[921] * y[436])
    R1833 = (13.7 * 1e-6 * y[1030] * y[921])/(130e-6 + 1e-6 * y[1030] * y[921])
    R1834 = (13.7 * 1e-6 * y[1027] * y[921])/(130e-6 + 1e-6 * y[1027] * y[921])
    R2381 = (13.7 * 1e-6 * y[921] * y[1311])/(130e-6 + 1e-6 * y[921] * y[1311])
    return (R1637) - (R154 + R198 + R254 + R255 + R353 + R372 + R375 + R377 + R378 + R481 + R572 + R926 + R1321 + R1833 + R1834 + R2381)
 
def m_met__D_c(t, y):
    R1638 = (13.7 * 1e-6 * y[278] * y[173] * y[923])/(130e-6 + 1e-6 * y[278] * y[173] * y[923])
    return (R1638) - (0)
 
def m_met__D_p(t, y):
    R1640 = (13.7 * 1e-6 * y[1477])/(130e-6 + 1e-6 * y[1477])
    R1638 = (13.7 * 1e-6 * y[278] * y[173] * y[923])/(130e-6 + 1e-6 * y[278] * y[173] * y[923])
    return (R1640) - (R1638)
 
def m_mmcoa__S_c(t, y):
    R1641 = (13.7 * 1e-6 * y[958])/(130e-6 + 1e-6 * y[958])
    R1639 = (13.7 * 1e-6 * y[36] * y[924])/(130e-6 + 1e-6 * y[36] * y[924])
    return (R1641) - (R1639)
 
def m_metsox_S__L_c(t, y):
    R1642 = (13.7 * 1e-6 * y[93] * y[326])/(130e-6 + 1e-6 * y[93] * y[326])
    R1648 = (13.7 * 1e-6 * y[278] * y[173] * y[931])/(130e-6 + 1e-6 * y[278] * y[173] * y[931])
    R1661 = (13.7 * 1e-6 * y[925] * y[1240])/(130e-6 + 1e-6 * y[925] * y[1240])
    return (R1642 + R1648) - (R1661)
 
def m_metsox_R__L_c(t, y):
    R1643 = (13.7 * 1e-6 * y[93] * y[326])/(130e-6 + 1e-6 * y[93] * y[326])
    R1651 = (13.7 * 1e-6 * y[278] * y[173] * y[936])/(130e-6 + 1e-6 * y[278] * y[173] * y[936])
    R1662 = (13.7 * 1e-6 * y[926] * y[1240])/(130e-6 + 1e-6 * y[926] * y[1240])
    return (R1643 + R1651) - (R1662)
 
def m_na1_p(t, y):
    R1644 = (13.7 * 1e-6 * y[1490])/(130e-6 + 1e-6 * y[1490])
    R2272 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2280 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R2289 = (13.7 * 1e-6 * y[61] * y[189])/(130e-6 + 1e-6 * y[61] * y[189])
    R176 = (13.7 * 1e-6 * y[190] * y[927])/(130e-6 + 1e-6 * y[190] * y[927])
    R233 = (13.7 * 1e-6 * y[239] * y[927])/(130e-6 + 1e-6 * y[239] * y[927])
    R373 = (13.7 * 1e-6 * y[1382] * y[927])/(130e-6 + 1e-6 * y[1382] * y[927])
    R1220 = (13.7 * 1e-6 * y[724] * y[927])/(130e-6 + 1e-6 * y[724] * y[927])
    R1232 = (13.7 * 1e-6 * y[739] * y[927])/(130e-6 + 1e-6 * y[739] * y[927])
    R1265 = (13.7 * 1e-6 * y[757] * y[927])/(130e-6 + 1e-6 * y[757] * y[927])
    R1417 = (13.7 * 1e-6 * y[760] * y[927])/(130e-6 + 1e-6 * y[760] * y[927])
    R1964 = (13.7 * 1e-6 * y[927] * y[1101])/(130e-6 + 1e-6 * y[927] * y[1101])
    R1979 = (13.7 * 1e-6 * y[927] * y[1110])/(130e-6 + 1e-6 * y[927] * y[1110])
    R2014 = (13.7 * 1e-6 * y[927] * y[1130])/(130e-6 + 1e-6 * y[927] * y[1130])
    R2147 = (13.7 * 1e-6 * y[927] * y[758])/(130e-6 + 1e-6 * y[927] * y[758])
    R2201 = (13.7 * 1e-6 * y[927] * y[1167])/(130e-6 + 1e-6 * y[927] * y[1167])
    return (R1644 + R2272 + R2280 + R2289) - (R176 + R233 + R373 + R1220 + R1232 + R1265 + R1417 + R1964 + R1979 + R2014 + R2147 + R2201)
 
def m_gtp_c(t, y):
    R1645 = (13.7 * 1e-6 * y[278] * y[157])/(130e-6 + 1e-6 * y[278] * y[157])
    R117 = (13.7 * 1e-6 * y[220] * y[928] * y[36])/(130e-6 + 1e-6 * y[220] * y[928] * y[36])
    R140 = (13.7 * 1e-6 * y[300] * y[928] * y[747])/(130e-6 + 1e-6 * y[300] * y[928] * y[747])
    R193 = (13.7 * 1e-6 * y[71] * y[928])/(130e-6 + 1e-6 * y[71] * y[928])
    R521 = (13.7 * 1e-6 * y[454] * y[928])/(130e-6 + 1e-6 * y[454] * y[928])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1306 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1308 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1310 = (13.7 * 1e-6 * y[278] * y[928])/(130e-6 + 1e-6 * y[278] * y[928])
    R1313 = (13.7 * 1e-6 * y[928] * y[173] * y[36])/(130e-6 + 1e-6 * y[928] * y[173] * y[36])
    R1747 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1760 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R1775 = (13.7 * 1e-6 * y[928] * y[173])/(130e-6 + 1e-6 * y[928] * y[173])
    R2097 = (13.7 * 1e-6 * y[646] * y[928])/(130e-6 + 1e-6 * y[646] * y[928])
    R2113 = (13.7 * 1e-6 * y[278] * y[928] * y[173] * y[794])/(130e-6 + 1e-6 * y[278] * y[928] * y[173] * y[794])
    R2300 = (13.7 * 1e-6 * y[928] * y[446])/(130e-6 + 1e-6 * y[928] * y[446])
    return (R1645) - (R117 + R140 + R193 + R521 + R926 + R1306 + R1308 + R1310 + R1313 + R1747 + R1760 + R1775 + R2097 + R2113 + R2300)
 
def m_utp_c(t, y):
    R1647 = (13.7 * 1e-6 * y[278] * y[114])/(130e-6 + 1e-6 * y[278] * y[114])
    R449 = (13.7 * 1e-6 * y[278] * y[710] * y[173] * y[929])/(130e-6 + 1e-6 * y[278] * y[710] * y[173] * y[929])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1142 = (13.7 * 1e-6 * y[723] * y[36] * y[929])/(130e-6 + 1e-6 * y[723] * y[36] * y[929])
    R1770 = (13.7 * 1e-6 * y[173] * y[929])/(130e-6 + 1e-6 * y[173] * y[929])
    R2104 = (13.7 * 1e-6 * y[646] * y[929])/(130e-6 + 1e-6 * y[646] * y[929])
    R2346 = (13.7 * 1e-6 * y[648] * y[36] * y[929])/(130e-6 + 1e-6 * y[648] * y[36] * y[929])
    return (R1647) - (R449 + R926 + R1142 + R1770 + R2104 + R2346)
 
def m_mmet_c(t, y):
    R1649 = (13.7 * 1e-6 * y[61] * y[944])/(130e-6 + 1e-6 * y[61] * y[944])
    R1322 = (13.7 * 1e-6 * y[436] * y[930])/(130e-6 + 1e-6 * y[436] * y[930])
    return (R1649) - (R1322)
 
def m_metsox_S__L_p(t, y):
    R1650 = (13.7 * 1e-6 * y[1481])/(130e-6 + 1e-6 * y[1481])
    R1648 = (13.7 * 1e-6 * y[278] * y[173] * y[931])/(130e-6 + 1e-6 * y[278] * y[173] * y[931])
    return (R1650) - (R1648)
 
def m_dttp_c(t, y):
    R1653 = (13.7 * 1e-6 * y[278] * y[100])/(130e-6 + 1e-6 * y[278] * y[100])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1088 = (13.7 * 1e-6 * y[932] * y[723] * y[36])/(130e-6 + 1e-6 * y[932] * y[723] * y[36])
    R1769 = (13.7 * 1e-6 * y[932] * y[173])/(130e-6 + 1e-6 * y[932] * y[173])
    return (R1653) - (R926 + R1088 + R1769)
 
def m_dgtp_c(t, y):
    R1654 = (13.7 * 1e-6 * y[278] * y[483])/(130e-6 + 1e-6 * y[278] * y[483])
    R2097 = (13.7 * 1e-6 * y[646] * y[928])/(130e-6 + 1e-6 * y[646] * y[928])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1754 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    R1774 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    return (R1654 + R2097) - (R926 + R1754 + R1774)
 
def m_dctp_c(t, y):
    R1656 = (13.7 * 1e-6 * y[278] * y[457])/(130e-6 + 1e-6 * y[278] * y[457])
    R2103 = (13.7 * 1e-6 * y[404] * y[646])/(130e-6 + 1e-6 * y[404] * y[646])
    R540 = (13.7 * 1e-6 * y[934] * y[173] * y[36])/(130e-6 + 1e-6 * y[934] * y[173] * y[36])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1761 = (13.7 * 1e-6 * y[934] * y[173])/(130e-6 + 1e-6 * y[934] * y[173])
    return (R1656 + R2103) - (R540 + R926 + R1761)
 
def m_datp_c(t, y):
    R1657 = (13.7 * 1e-6 * y[278] * y[462])/(130e-6 + 1e-6 * y[278] * y[462])
    R2096 = (13.7 * 1e-6 * y[278] * y[646])/(130e-6 + 1e-6 * y[278] * y[646])
    R529 = (13.7 * 1e-6 * y[935] * y[173] * y[36])/(130e-6 + 1e-6 * y[935] * y[173] * y[36])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1764 = (13.7 * 1e-6 * y[935] * y[173])/(130e-6 + 1e-6 * y[935] * y[173])
    return (R1657 + R2096) - (R529 + R926 + R1764)
 
def m_metsox_R__L_p(t, y):
    R1660 = (13.7 * 1e-6 * y[1479])/(130e-6 + 1e-6 * y[1479])
    R1651 = (13.7 * 1e-6 * y[278] * y[173] * y[936])/(130e-6 + 1e-6 * y[278] * y[173] * y[936])
    return (R1660) - (R1651)
 
def m_mettrna_c(t, y):
    R1663 = (13.7 * 1e-6 * y[278] * y[326] * y[1649])/(130e-6 + 1e-6 * y[278] * y[326] * y[1649])
    R1086 = (13.7 * 1e-6 * y[1057] * y[937])/(130e-6 + 1e-6 * y[1057] * y[937])
    return (R1663) - (R1086)
 
def m_met__L_p(t, y):
    R1665 = (13.7 * 1e-6 * y[1478])/(130e-6 + 1e-6 * y[1478])
    R1664 = (13.7 * 1e-6 * y[278] * y[173] * y[938])/(130e-6 + 1e-6 * y[278] * y[173] * y[938])
    return (R1665) - (R1664)
 
def m_n2o_c(t, y):
    R1666 = (13.7 * 1e-6 * y[36] * y[113] * y[966])/(130e-6 + 1e-6 * y[36] * y[113] * y[966])
    R2003 = (13.7 * 1e-6 * y[1122])/(130e-6 + 1e-6 * y[1122])
    return (R1666 + R2003) - (0)
 
def m_ni2_p(t, y):
    R1667 = (13.7 * 1e-6 * y[278] * y[173] * y[943])/(130e-6 + 1e-6 * y[278] * y[173] * y[943])
    R1668 = (13.7 * 1e-6 * y[61] * y[943])/(130e-6 + 1e-6 * y[61] * y[943])
    R1669 = (13.7 * 1e-6 * y[1496])/(130e-6 + 1e-6 * y[1496])
    R1672 = (13.7 * 1e-6 * y[940])/(130e-6 + 1e-6 * y[940])
    R1673 = (13.7 * 1e-6 * y[278] * y[173] * y[940])/(130e-6 + 1e-6 * y[278] * y[173] * y[940])
    return (R1667 + R1668 + R1669) - (R1672 + R1673)
 
def m_mg2_c(t, y):
    R1670 = (13.7 * 1e-6 * y[36] * y[942])/(130e-6 + 1e-6 * y[36] * y[942])
    R1674 = (13.7 * 1e-6 * y[942])/(130e-6 + 1e-6 * y[942])
    R1676 = (13.7 * 1e-6 * y[278] * y[173] * y[942])/(130e-6 + 1e-6 * y[278] * y[173] * y[942])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (R1670 + R1674 + R1676) - (R926)
 
def m_mg2_p(t, y):
    R1671 = (13.7 * 1e-6 * y[1482])/(130e-6 + 1e-6 * y[1482])
    R1670 = (13.7 * 1e-6 * y[36] * y[942])/(130e-6 + 1e-6 * y[36] * y[942])
    R1674 = (13.7 * 1e-6 * y[942])/(130e-6 + 1e-6 * y[942])
    R1676 = (13.7 * 1e-6 * y[278] * y[173] * y[942])/(130e-6 + 1e-6 * y[278] * y[173] * y[942])
    return (R1671) - (R1670 + R1674 + R1676)
 
def m_ni2_c(t, y):
    R1672 = (13.7 * 1e-6 * y[940])/(130e-6 + 1e-6 * y[940])
    R1673 = (13.7 * 1e-6 * y[278] * y[173] * y[940])/(130e-6 + 1e-6 * y[278] * y[173] * y[940])
    R1667 = (13.7 * 1e-6 * y[278] * y[173] * y[943])/(130e-6 + 1e-6 * y[278] * y[173] * y[943])
    R1668 = (13.7 * 1e-6 * y[61] * y[943])/(130e-6 + 1e-6 * y[61] * y[943])
    return (R1672 + R1673) - (R1667 + R1668)
 
def m_mmet_p(t, y):
    R1675 = (13.7 * 1e-6 * y[1484])/(130e-6 + 1e-6 * y[1484])
    R1649 = (13.7 * 1e-6 * y[61] * y[944])/(130e-6 + 1e-6 * y[61] * y[944])
    return (R1675) - (R1649)
 
def m_nicrnt_c(t, y):
    R1680 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    R1696 = (13.7 * 1e-6 * y[36] * y[983] * y[1185])/(130e-6 + 1e-6 * y[36] * y[983] * y[1185])
    R2253 = (13.7 * 1e-6 * y[278] * y[173] * y[953] * y[983])/(130e-6 + 1e-6 * y[278] * y[173] * y[953] * y[983])
    R1691 = (13.7 * 1e-6 * y[278] * y[36] * y[945])/(130e-6 + 1e-6 * y[278] * y[36] * y[945])
    R1692 = (13.7 * 1e-6 * y[1651] * y[945])/(130e-6 + 1e-6 * y[1651] * y[945])
    return (R1680 + R1696 + R2253) - (R1691 + R1692)
 
def m_ncam_c(t, y):
    R1681 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    R1683 = (13.7 * 1e-6 * y[173] * y[952])/(130e-6 + 1e-6 * y[173] * y[952])
    R2150 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R1690 = (13.7 * 1e-6 * y[173] * y[946])/(130e-6 + 1e-6 * y[173] * y[946])
    return (R1681 + R1683 + R2150) - (R1690)
 
def m_nmn_c(t, y):
    R1682 = (13.7 * 1e-6 * y[952])/(130e-6 + 1e-6 * y[952])
    R2051 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R1679 = (13.7 * 1e-6 * y[278] * y[36] * y[947])/(130e-6 + 1e-6 * y[278] * y[36] * y[947])
    R1680 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    R1681 = (13.7 * 1e-6 * y[173] * y[947])/(130e-6 + 1e-6 * y[173] * y[947])
    return (R1682 + R2051) - (R1679 + R1680 + R1681)
 
def m_micit_c(t, y):
    R1684 = (13.7 * 1e-6 * y[912] * y[173])/(130e-6 + 1e-6 * y[912] * y[173])
    R1624 = (13.7 * 1e-6 * y[948])/(130e-6 + 1e-6 * y[948])
    return (R1684) - (R1624)
 
def m_minohp_p(t, y):
    R1685 = (13.7 * 1e-6 * y[1483])/(130e-6 + 1e-6 * y[1483])
    R1951 = (13.7 * 1e-6 * y[406] * y[949])/(130e-6 + 1e-6 * y[406] * y[949])
    return (R1685) - (R1951)
 
def m_murein3px4p_p(t, y):
    R1686 = (13.7 * 1e-6 * y[406] * y[897])/(130e-6 + 1e-6 * y[406] * y[897])
    R1610 = (13.7 * 1e-6 * y[406] * y[950])/(130e-6 + 1e-6 * y[406] * y[950])
    return (R1686) - (R1610)
 
def m_murein5p3p_p(t, y):
    R1688 = (13.7 * 1e-6 * y[406] * y[1035])/(130e-6 + 1e-6 * y[406] * y[1035])
    R1700 = (13.7 * 1e-6 * y[406] * y[898])/(130e-6 + 1e-6 * y[406] * y[898])
    R1603 = (13.7 * 1e-6 * y[406] * y[951])/(130e-6 + 1e-6 * y[406] * y[951])
    return (R1688 + R1700) - (R1603)
 
def m_nmn_p(t, y):
    R1689 = (13.7 * 1e-6 * y[1497])/(130e-6 + 1e-6 * y[1497])
    R1682 = (13.7 * 1e-6 * y[952])/(130e-6 + 1e-6 * y[952])
    R1683 = (13.7 * 1e-6 * y[173] * y[952])/(130e-6 + 1e-6 * y[173] * y[952])
    return (R1689) - (R1682 + R1683)
 
def m_nac_c(t, y):
    R1690 = (13.7 * 1e-6 * y[173] * y[946])/(130e-6 + 1e-6 * y[173] * y[946])
    R1692 = (13.7 * 1e-6 * y[1651] * y[945])/(130e-6 + 1e-6 * y[1651] * y[945])
    R2036 = (13.7 * 1e-6 * y[1139])/(130e-6 + 1e-6 * y[1139])
    R2253 = (13.7 * 1e-6 * y[278] * y[173] * y[953] * y[983])/(130e-6 + 1e-6 * y[278] * y[173] * y[953] * y[983])
    return (R1690 + R1692 + R2036) - (R2253)
 
def m_dnad_c(t, y):
    R1691 = (13.7 * 1e-6 * y[278] * y[36] * y[945])/(130e-6 + 1e-6 * y[278] * y[36] * y[945])
    R2212 = (13.7 * 1e-6 * y[278] * y[954] * y[95])/(130e-6 + 1e-6 * y[278] * y[954] * y[95])
    return (R1691) - (R2212)
 
def m_5prdmbz_c(t, y):
    R1692 = (13.7 * 1e-6 * y[1651] * y[945])/(130e-6 + 1e-6 * y[1651] * y[945])
    R2107 = (13.7 * 1e-6 * y[955] * y[173])/(130e-6 + 1e-6 * y[955] * y[173])
    return (R1692) - (R2107)
 
def m_murein3p3p_p(t, y):
    R1693 = (13.7 * 1e-6 * y[406] * y[904])/(130e-6 + 1e-6 * y[406] * y[904])
    R1695 = (13.7 * 1e-6 * y[406] * y[957])/(130e-6 + 1e-6 * y[406] * y[957])
    R1718 = (13.7 * 1e-6 * y[956])/(130e-6 + 1e-6 * y[956])
    return (R1693 + R1695) - (R1718)
 
def m_murein3px3p_p(t, y):
    R1694 = (13.7 * 1e-6 * y[406] * y[898])/(130e-6 + 1e-6 * y[406] * y[898])
    R1695 = (13.7 * 1e-6 * y[406] * y[957])/(130e-6 + 1e-6 * y[406] * y[957])
    return (R1694) - (R1695)
 
def m_mmcoa__R_c(t, y):
    R1697 = (13.7 * 1e-6 * y[212])/(130e-6 + 1e-6 * y[212])
    R1641 = (13.7 * 1e-6 * y[958])/(130e-6 + 1e-6 * y[958])
    return (R1697) - (R1641)
 
def m_no2_c(t, y):
    R1698 = (13.7 * 1e-6 * y[61] * y[960])/(130e-6 + 1e-6 * y[61] * y[960])
    R1706 = (13.7 * 1e-6 * y[36] * y[962] * y[289])/(130e-6 + 1e-6 * y[36] * y[962] * y[289])
    R1708 = (13.7 * 1e-6 * y[36] * y[250] * y[962])/(130e-6 + 1e-6 * y[36] * y[250] * y[962])
    R1709 = (13.7 * 1e-6 * y[959] * y[964])/(130e-6 + 1e-6 * y[959] * y[964])
    R1779 = (13.7 * 1e-6 * y[36] * y[113] * y[959])/(130e-6 + 1e-6 * y[36] * y[113] * y[959])
    return (R1698 + R1706 + R1708) - (R1709 + R1779)
 
def m_no2_p(t, y):
    R1699 = (13.7 * 1e-6 * y[1499])/(130e-6 + 1e-6 * y[1499])
    R1704 = (13.7 * 1e-6 * y[964] * y[289])/(130e-6 + 1e-6 * y[964] * y[289])
    R1707 = (13.7 * 1e-6 * y[250] * y[964])/(130e-6 + 1e-6 * y[250] * y[964])
    R1709 = (13.7 * 1e-6 * y[959] * y[964])/(130e-6 + 1e-6 * y[959] * y[964])
    R1698 = (13.7 * 1e-6 * y[61] * y[960])/(130e-6 + 1e-6 * y[61] * y[960])
    R1781 = (13.7 * 1e-6 * y[61] * y[960] * y[289])/(130e-6 + 1e-6 * y[61] * y[960] * y[289])
    R1782 = (13.7 * 1e-6 * y[61] * y[250] * y[960])/(130e-6 + 1e-6 * y[61] * y[250] * y[960])
    return (R1699 + R1704 + R1707 + R1709) - (R1698 + R1781 + R1782)
 
def m_mn2_p(t, y):
    R1705 = (13.7 * 1e-6 * y[61] * y[967])/(130e-6 + 1e-6 * y[61] * y[967])
    R1773 = (13.7 * 1e-6 * y[1485])/(130e-6 + 1e-6 * y[1485])
    R1721 = (13.7 * 1e-6 * y[961])/(130e-6 + 1e-6 * y[961])
    R1762 = (13.7 * 1e-6 * y[61] * y[961])/(130e-6 + 1e-6 * y[61] * y[961])
    return (R1705 + R1773) - (R1721 + R1762)
 
def m_no3_c(t, y):
    R1709 = (13.7 * 1e-6 * y[959] * y[964])/(130e-6 + 1e-6 * y[959] * y[964])
    R1715 = (13.7 * 1e-6 * y[113] * y[966] * y[335])/(130e-6 + 1e-6 * y[113] * y[966] * y[335])
    R1716 = (13.7 * 1e-6 * y[201] * y[966] * y[335])/(130e-6 + 1e-6 * y[201] * y[966] * y[335])
    R1706 = (13.7 * 1e-6 * y[36] * y[962] * y[289])/(130e-6 + 1e-6 * y[36] * y[962] * y[289])
    R1708 = (13.7 * 1e-6 * y[36] * y[250] * y[962])/(130e-6 + 1e-6 * y[36] * y[250] * y[962])
    return (R1709 + R1715 + R1716) - (R1706 + R1708)
 
def m_anhgm4p_p(t, y):
    R1712 = (13.7 * 1e-6 * y[903])/(130e-6 + 1e-6 * y[903])
    R1714 = (13.7 * 1e-6 * y[904])/(130e-6 + 1e-6 * y[904])
    R1719 = (13.7 * 1e-6 * y[908])/(130e-6 + 1e-6 * y[908])
    R158 = (13.7 * 1e-6 * y[963] * y[406])/(130e-6 + 1e-6 * y[963] * y[406])
    R160 = (13.7 * 1e-6 * y[963] * y[406])/(130e-6 + 1e-6 * y[963] * y[406])
    R162 = (13.7 * 1e-6 * y[963] * y[61])/(130e-6 + 1e-6 * y[963] * y[61])
    return (R1712 + R1714 + R1719) - (R158 + R160 + R162)
 
def m_no3_p(t, y):
    R1713 = (13.7 * 1e-6 * y[1500])/(130e-6 + 1e-6 * y[1500])
    R1704 = (13.7 * 1e-6 * y[964] * y[289])/(130e-6 + 1e-6 * y[964] * y[289])
    R1707 = (13.7 * 1e-6 * y[250] * y[964])/(130e-6 + 1e-6 * y[250] * y[964])
    R1709 = (13.7 * 1e-6 * y[959] * y[964])/(130e-6 + 1e-6 * y[959] * y[964])
    return (R1713) - (R1704 + R1707 + R1709)
 
def m_no_p(t, y):
    R1717 = (13.7 * 1e-6 * y[1502])/(130e-6 + 1e-6 * y[1502])
    R1720 = (13.7 * 1e-6 * y[965])/(130e-6 + 1e-6 * y[965])
    return (R1717) - (R1720)
 
def m_no_c(t, y):
    R1720 = (13.7 * 1e-6 * y[965])/(130e-6 + 1e-6 * y[965])
    R1666 = (13.7 * 1e-6 * y[36] * y[113] * y[966])/(130e-6 + 1e-6 * y[36] * y[113] * y[966])
    R1715 = (13.7 * 1e-6 * y[113] * y[966] * y[335])/(130e-6 + 1e-6 * y[113] * y[966] * y[335])
    R1716 = (13.7 * 1e-6 * y[201] * y[966] * y[335])/(130e-6 + 1e-6 * y[201] * y[966] * y[335])
    return (R1720) - (R1666 + R1715 + R1716)
 
def m_mn2_c(t, y):
    R1721 = (13.7 * 1e-6 * y[961])/(130e-6 + 1e-6 * y[961])
    R1762 = (13.7 * 1e-6 * y[61] * y[961])/(130e-6 + 1e-6 * y[61] * y[961])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1705 = (13.7 * 1e-6 * y[61] * y[967])/(130e-6 + 1e-6 * y[61] * y[967])
    return (R1721 + R1762) - (R926 + R1705)
 
def m_dhna_c(t, y):
    R1722 = (13.7 * 1e-6 * y[1223])/(130e-6 + 1e-6 * y[1223])
    R602 = (13.7 * 1e-6 * y[968] * y[36] * y[1012])/(130e-6 + 1e-6 * y[968] * y[36] * y[1012])
    return (R1722) - (R602)
 
def m_xtsn_c(t, y):
    R1724 = (13.7 * 1e-6 * y[173] * y[825])/(130e-6 + 1e-6 * y[173] * y[825])
    R2330 = (13.7 * 1e-6 * y[61] * y[970])/(130e-6 + 1e-6 * y[61] * y[970])
    R2100 = (13.7 * 1e-6 * y[37] * y[969])/(130e-6 + 1e-6 * y[37] * y[969])
    R2329 = (13.7 * 1e-6 * y[173] * y[969])/(130e-6 + 1e-6 * y[173] * y[969])
    return (R1724 + R2330) - (R2100 + R2329)
 
def m_xtsn_p(t, y):
    R1726 = (13.7 * 1e-6 * y[406] * y[1281])/(130e-6 + 1e-6 * y[406] * y[1281])
    R2331 = (13.7 * 1e-6 * y[1552])/(130e-6 + 1e-6 * y[1552])
    R2330 = (13.7 * 1e-6 * y[61] * y[970])/(130e-6 + 1e-6 * y[61] * y[970])
    return (R1726 + R2331) - (R2330)
 
def m_mnl1p_c(t, y):
    R1737 = (13.7 * 1e-6 * y[973] * y[563])/(130e-6 + 1e-6 * y[973] * y[563])
    R1557 = (13.7 * 1e-6 * y[971] * y[236])/(130e-6 + 1e-6 * y[971] * y[236])
    return (R1737) - (R1557)
 
def m_didp_c(t, y):
    R1741 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    return (R1741) - (0)
 
def m_mnl_p(t, y):
    R1743 = (13.7 * 1e-6 * y[1486])/(130e-6 + 1e-6 * y[1486])
    R1737 = (13.7 * 1e-6 * y[973] * y[563])/(130e-6 + 1e-6 * y[973] * y[563])
    return (R1743) - (R1737)
 
def m_xdp_c(t, y):
    R1746 = (13.7 * 1e-6 * y[173] * y[778])/(130e-6 + 1e-6 * y[173] * y[778])
    return (R1746) - (0)
 
def m_thymd_c(t, y):
    R1752 = (13.7 * 1e-6 * y[981] * y[173])/(130e-6 + 1e-6 * y[981] * y[173])
    R2171 = (13.7 * 1e-6 * y[61] * y[976])/(130e-6 + 1e-6 * y[61] * y[976])
    R2172 = (13.7 * 1e-6 * y[61] * y[976])/(130e-6 + 1e-6 * y[61] * y[976])
    R2228 = (13.7 * 1e-6 * y[278] * y[975])/(130e-6 + 1e-6 * y[278] * y[975])
    R2229 = (13.7 * 1e-6 * y[37] * y[975])/(130e-6 + 1e-6 * y[37] * y[975])
    return (R1752 + R2171 + R2172) - (R2228 + R2229)
 
def m_thymd_p(t, y):
    R1753 = (13.7 * 1e-6 * y[532] * y[406])/(130e-6 + 1e-6 * y[532] * y[406])
    R2173 = (13.7 * 1e-6 * y[1575])/(130e-6 + 1e-6 * y[1575])
    R2171 = (13.7 * 1e-6 * y[61] * y[976])/(130e-6 + 1e-6 * y[61] * y[976])
    R2172 = (13.7 * 1e-6 * y[61] * y[976])/(130e-6 + 1e-6 * y[61] * y[976])
    return (R1753 + R2173) - (R2171 + R2172)
 
def m_dgmp_c(t, y):
    R1754 = (13.7 * 1e-6 * y[933] * y[173])/(130e-6 + 1e-6 * y[933] * y[173])
    R566 = (13.7 * 1e-6 * y[278] * y[977])/(130e-6 + 1e-6 * y[278] * y[977])
    R1731 = (13.7 * 1e-6 * y[977] * y[173])/(130e-6 + 1e-6 * y[977] * y[173])
    return (R1754) - (R566 + R1731)
 
def m_dimp_c(t, y):
    R1755 = (13.7 * 1e-6 * y[459] * y[173])/(130e-6 + 1e-6 * y[459] * y[173])
    R1730 = (13.7 * 1e-6 * y[978] * y[173])/(130e-6 + 1e-6 * y[978] * y[173])
    return (R1755) - (R1730)
 
def m_dcmp_c(t, y):
    R1761 = (13.7 * 1e-6 * y[934] * y[173])/(130e-6 + 1e-6 * y[934] * y[173])
    R526 = (13.7 * 1e-6 * y[278] * y[979])/(130e-6 + 1e-6 * y[278] * y[979])
    R1744 = (13.7 * 1e-6 * y[979] * y[173])/(130e-6 + 1e-6 * y[979] * y[173])
    return (R1761) - (R526 + R1744)
 
def m_damp_c(t, y):
    R1764 = (13.7 * 1e-6 * y[935] * y[173])/(130e-6 + 1e-6 * y[935] * y[173])
    R532 = (13.7 * 1e-6 * y[278] * y[980])/(130e-6 + 1e-6 * y[278] * y[980])
    R1757 = (13.7 * 1e-6 * y[980] * y[173])/(130e-6 + 1e-6 * y[980] * y[173])
    return (R1764) - (R532 + R1757)
 
def m_dtmp_c(t, y):
    R1769 = (13.7 * 1e-6 * y[932] * y[173])/(130e-6 + 1e-6 * y[932] * y[173])
    R2228 = (13.7 * 1e-6 * y[278] * y[975])/(130e-6 + 1e-6 * y[278] * y[975])
    R2230 = (13.7 * 1e-6 * y[536] * y[717])/(130e-6 + 1e-6 * y[536] * y[717])
    R631 = (13.7 * 1e-6 * y[278] * y[981])/(130e-6 + 1e-6 * y[278] * y[981])
    R1752 = (13.7 * 1e-6 * y[981] * y[173])/(130e-6 + 1e-6 * y[981] * y[173])
    return (R1769 + R2228 + R2230) - (R631 + R1752)
 
def m_orot_p(t, y):
    R1771 = (13.7 * 1e-6 * y[1512])/(130e-6 + 1e-6 * y[1512])
    R1768 = (13.7 * 1e-6 * y[61] * y[982])/(130e-6 + 1e-6 * y[61] * y[982])
    return (R1771) - (R1768)
 
def m_prpp_c(t, y):
    R1776 = (13.7 * 1e-6 * y[1652] * y[73])/(130e-6 + 1e-6 * y[1652] * y[73])
    R2022 = (13.7 * 1e-6 * y[278] * y[227])/(130e-6 + 1e-6 * y[278] * y[227])
    R2128 = (13.7 * 1e-6 * y[278] * y[1191])/(130e-6 + 1e-6 * y[278] * y[1191])
    R132 = (13.7 * 1e-6 * y[69] * y[983])/(130e-6 + 1e-6 * y[69] * y[983])
    R275 = (13.7 * 1e-6 * y[270] * y[983])/(130e-6 + 1e-6 * y[270] * y[983])
    R331 = (13.7 * 1e-6 * y[278] * y[983])/(130e-6 + 1e-6 * y[278] * y[983])
    R1204 = (13.7 * 1e-6 * y[710] * y[173] * y[983])/(130e-6 + 1e-6 * y[710] * y[173] * y[983])
    R1317 = (13.7 * 1e-6 * y[783] * y[983])/(130e-6 + 1e-6 * y[783] * y[983])
    R1423 = (13.7 * 1e-6 * y[197] * y[983])/(130e-6 + 1e-6 * y[197] * y[983])
    R1696 = (13.7 * 1e-6 * y[36] * y[983] * y[1185])/(130e-6 + 1e-6 * y[36] * y[983] * y[1185])
    R2253 = (13.7 * 1e-6 * y[278] * y[173] * y[953] * y[983])/(130e-6 + 1e-6 * y[278] * y[173] * y[953] * y[983])
    R2276 = (13.7 * 1e-6 * y[983] * y[396])/(130e-6 + 1e-6 * y[983] * y[396])
    R2328 = (13.7 * 1e-6 * y[983] * y[780])/(130e-6 + 1e-6 * y[983] * y[780])
    return (R1776 + R2022 + R2128) - (R132 + R275 + R331 + R1204 + R1317 + R1423 + R1696 + R2253 + R2276 + R2328)
 
def m_oxam_c(t, y):
    R1777 = (13.7 * 1e-6 * y[1258] * y[37])/(130e-6 + 1e-6 * y[1258] * y[37])
    R597 = (13.7 * 1e-6 * y[984])/(130e-6 + 1e-6 * y[984])
    return (R1777) - (R597)
 
def m_ssaltpp_c(t, y):
    R1778 = (13.7 * 1e-6 * y[213] * y[36] * y[1201])/(130e-6 + 1e-6 * y[213] * y[36] * y[1201])
    R2158 = (13.7 * 1e-6 * y[806] * y[985])/(130e-6 + 1e-6 * y[806] * y[985])
    return (R1778) - (R2158)
 
def m_kdolipid4_c(t, y):
    R1780 = (13.7 * 1e-6 * y[854] * y[1198])/(130e-6 + 1e-6 * y[854] * y[1198])
    R1794 = (13.7 * 1e-6 * y[854] * y[986])/(130e-6 + 1e-6 * y[854] * y[986])
    return (R1780) - (R1794)
 
def m_o16a4colipa_e(t, y):
    R1789 = (13.7 * 1e-6 * y[988])/(130e-6 + 1e-6 * y[988])
    R859 = (13.7 * 1e-6 * y[987])/(130e-6 + 1e-6 * y[987])
    return (R1789) - (R859)
 
def m_o16a4colipa_p(t, y):
    R1790 = (13.7 * 1e-6 * y[409] * y[992])/(130e-6 + 1e-6 * y[409] * y[992])
    R1789 = (13.7 * 1e-6 * y[988])/(130e-6 + 1e-6 * y[988])
    return (R1790) - (R1789)
 
def m_o16a2und_p(t, y):
    R1791 = (13.7 * 1e-6 * y[994])/(130e-6 + 1e-6 * y[994])
    R1792 = (13.7 * 1e-6 * y[989] * y[994])/(130e-6 + 1e-6 * y[989] * y[994])
    return (R1791) - (R1792)
 
def m_o16a3und_p(t, y):
    R1792 = (13.7 * 1e-6 * y[989] * y[994])/(130e-6 + 1e-6 * y[989] * y[994])
    R1797 = (13.7 * 1e-6 * y[990] * y[994])/(130e-6 + 1e-6 * y[990] * y[994])
    return (R1792) - (R1797)
 
def m_kdo2lipid4_c(t, y):
    R1794 = (13.7 * 1e-6 * y[854] * y[986])/(130e-6 + 1e-6 * y[854] * y[986])
    R687 = (13.7 * 1e-6 * y[86] * y[991])/(130e-6 + 1e-6 * y[86] * y[991])
    R689 = (13.7 * 1e-6 * y[81] * y[991])/(130e-6 + 1e-6 * y[81] * y[991])
    R1447 = (13.7 * 1e-6 * y[278] * y[173] * y[991])/(130e-6 + 1e-6 * y[278] * y[173] * y[991])
    return (R1794) - (R687 + R689 + R1447)
 
def m_o16a4und_p(t, y):
    R1797 = (13.7 * 1e-6 * y[990] * y[994])/(130e-6 + 1e-6 * y[990] * y[994])
    R1790 = (13.7 * 1e-6 * y[409] * y[992])/(130e-6 + 1e-6 * y[409] * y[992])
    return (R1797) - (R1790)
 
def m_aragund_c(t, y):
    R1798 = (13.7 * 1e-6 * y[127] * y[1653])/(130e-6 + 1e-6 * y[127] * y[1653])
    R1803 = (13.7 * 1e-6 * y[993] * y[694])/(130e-6 + 1e-6 * y[993] * y[694])
    return (R1798) - (R1803)
 
def m_o16aund_p(t, y):
    R1799 = (13.7 * 1e-6 * y[1000])/(130e-6 + 1e-6 * y[1000])
    R1791 = (13.7 * 1e-6 * y[994])/(130e-6 + 1e-6 * y[994])
    R1792 = (13.7 * 1e-6 * y[989] * y[994])/(130e-6 + 1e-6 * y[989] * y[994])
    R1797 = (13.7 * 1e-6 * y[990] * y[994])/(130e-6 + 1e-6 * y[990] * y[994])
    return (R1799) - (R1791 + R1792 + R1797)
 
def m_gfgaragund_c(t, y):
    R1800 = (13.7 * 1e-6 * y[998] * y[1296])/(130e-6 + 1e-6 * y[998] * y[1296])
    R1805 = (13.7 * 1e-6 * y[995] * y[694])/(130e-6 + 1e-6 * y[995] * y[694])
    return (R1800) - (R1805)
 
def m_pacald_c(t, y):
    R1801 = (13.7 * 1e-6 * y[61] * y[997])/(130e-6 + 1e-6 * y[61] * y[997])
    R246 = (13.7 * 1e-6 * y[173] * y[236] * y[996])/(130e-6 + 1e-6 * y[173] * y[236] * y[996])
    return (R1801) - (R246)
 
def m_pacald_p(t, y):
    R1802 = (13.7 * 1e-6 * y[1513])/(130e-6 + 1e-6 * y[1513])
    R1871 = (13.7 * 1e-6 * y[406] * y[1004] * y[1043])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1043])
    R1801 = (13.7 * 1e-6 * y[61] * y[997])/(130e-6 + 1e-6 * y[61] * y[997])
    return (R1802 + R1871) - (R1801)
 
def m_garagund_c(t, y):
    R1803 = (13.7 * 1e-6 * y[993] * y[694])/(130e-6 + 1e-6 * y[993] * y[694])
    R1800 = (13.7 * 1e-6 * y[998] * y[1296])/(130e-6 + 1e-6 * y[998] * y[1296])
    return (R1803) - (R1800)
 
def m_phaccoa_c(t, y):
    R1804 = (13.7 * 1e-6 * y[278] * y[99] * y[245])/(130e-6 + 1e-6 * y[278] * y[99] * y[245])
    return (R1804) - (0)
 
def m_o16aund_c(t, y):
    R1805 = (13.7 * 1e-6 * y[995] * y[694])/(130e-6 + 1e-6 * y[995] * y[694])
    R1799 = (13.7 * 1e-6 * y[1000])/(130e-6 + 1e-6 * y[1000])
    return (R1805) - (R1799)
 
def m_pnto__R_c(t, y):
    R1806 = (13.7 * 1e-6 * y[277] * y[278] * y[517])/(130e-6 + 1e-6 * y[277] * y[278] * y[517])
    R1964 = (13.7 * 1e-6 * y[927] * y[1101])/(130e-6 + 1e-6 * y[927] * y[1101])
    R1963 = (13.7 * 1e-6 * y[278] * y[1001])/(130e-6 + 1e-6 * y[278] * y[1001])
    return (R1806 + R1964) - (R1963)
 
def m_kphphhlipa_c(t, y):
    R1807 = (13.7 * 1e-6 * y[854] * y[789])/(130e-6 + 1e-6 * y[854] * y[789])
    R2060 = (13.7 * 1e-6 * y[1250] * y[1002])/(130e-6 + 1e-6 * y[1250] * y[1002])
    return (R1807) - (R2060)
 
def m_o2s_p(t, y):
    R1809 = (13.7 * 1e-6 * y[1506])/(130e-6 + 1e-6 * y[1506])
    R2198 = (13.7 * 1e-6 * y[61] * y[1003])/(130e-6 + 1e-6 * y[61] * y[1003])
    return (R1809) - (R2198)
 
def m_o2_p(t, y):
    R1810 = (13.7 * 1e-6 * y[1505])/(130e-6 + 1e-6 * y[1505])
    R2198 = (13.7 * 1e-6 * y[61] * y[1003])/(130e-6 + 1e-6 * y[61] * y[1003])
    R35 = (13.7 * 1e-6 * y[513] * y[406] * y[1004])/(130e-6 + 1e-6 * y[513] * y[406] * y[1004])
    R450 = (13.7 * 1e-6 * y[407] * y[61] * y[1004])/(130e-6 + 1e-6 * y[407] * y[61] * y[1004])
    R1077 = (13.7 * 1e-6 * y[594] * y[61] * y[1004])/(130e-6 + 1e-6 * y[594] * y[61] * y[1004])
    R1811 = (13.7 * 1e-6 * y[1004])/(130e-6 + 1e-6 * y[1004])
    R1871 = (13.7 * 1e-6 * y[406] * y[1004] * y[1043])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1043])
    R2293 = (13.7 * 1e-6 * y[406] * y[1004] * y[1262])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1262])
    return (R1810 + R2198) - (R35 + R450 + R1077 + R1811 + R1871 + R2293)
 
def m_12dgr120_p(t, y):
    R1812 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R19 = (13.7 * 1e-6 * y[1005])/(130e-6 + 1e-6 * y[1005])
    return (R1812) - (R19)
 
def m_mobd_c(t, y):
    R1814 = (13.7 * 1e-6 * y[278] * y[173] * y[1014])/(130e-6 + 1e-6 * y[278] * y[173] * y[1014])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (R1814) - (R926)
 
def m_12dgr140_p(t, y):
    R1815 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R20 = (13.7 * 1e-6 * y[1007])/(130e-6 + 1e-6 * y[1007])
    return (R1815) - (R20)
 
def m_12dgr141_p(t, y):
    R1817 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R22 = (13.7 * 1e-6 * y[1008])/(130e-6 + 1e-6 * y[1008])
    return (R1817) - (R22)
 
def m_12dgr160_p(t, y):
    R1819 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R24 = (13.7 * 1e-6 * y[1009])/(130e-6 + 1e-6 * y[1009])
    return (R1819) - (R24)
 
def m_citr__L_c(t, y):
    R1822 = (13.7 * 1e-6 * y[353] * y[151])/(130e-6 + 1e-6 * y[353] * y[151])
    R323 = (13.7 * 1e-6 * y[300] * y[278] * y[1010])/(130e-6 + 1e-6 * y[300] * y[278] * y[1010])
    return (R1822) - (R323)
 
def m_octa_p(t, y):
    R1825 = (13.7 * 1e-6 * y[1509])/(130e-6 + 1e-6 * y[1509])
    R990 = (13.7 * 1e-6 * y[278] * y[99] * y[61] * y[1011])/(130e-6 + 1e-6 * y[278] * y[99] * y[61] * y[1011])
    return (R1825) - (R990)
 
def m_octdp_c(t, y):
    R1826 = (13.7 * 1e-6 * y[761] * y[834])/(130e-6 + 1e-6 * y[761] * y[834])
    R602 = (13.7 * 1e-6 * y[968] * y[36] * y[1012])/(130e-6 + 1e-6 * y[968] * y[36] * y[1012])
    R1311 = (13.7 * 1e-6 * y[355] * y[1012])/(130e-6 + 1e-6 * y[355] * y[1012])
    return (R1826) - (R602 + R1311)
 
def m_12dgr161_p(t, y):
    R1828 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1878 = (13.7 * 1e-6 * y[864] * y[1038])/(130e-6 + 1e-6 * y[864] * y[1038])
    R25 = (13.7 * 1e-6 * y[1013])/(130e-6 + 1e-6 * y[1013])
    return (R1828 + R1878) - (R25)
 
def m_mobd_p(t, y):
    R1831 = (13.7 * 1e-6 * y[1487])/(130e-6 + 1e-6 * y[1487])
    R1814 = (13.7 * 1e-6 * y[278] * y[173] * y[1014])/(130e-6 + 1e-6 * y[278] * y[173] * y[1014])
    return (R1831) - (R1814)
 
def m_phthr_c(t, y):
    R1832 = (13.7 * 1e-6 * y[110] * y[1044])/(130e-6 + 1e-6 * y[110] * y[1044])
    R37 = (13.7 * 1e-6 * y[173] * y[1015])/(130e-6 + 1e-6 * y[173] * y[1015])
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    return (R1832) - (R37 + R1849)
 
def m_2omph_c(t, y):
    R1833 = (13.7 * 1e-6 * y[1030] * y[921])/(130e-6 + 1e-6 * y[1030] * y[921])
    R1851 = (13.7 * 1e-6 * y[1016] * y[335])/(130e-6 + 1e-6 * y[1016] * y[335])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    return (R1833) - (R1851 + R1852)
 
def m_2ommbl_c(t, y):
    R1834 = (13.7 * 1e-6 * y[1027] * y[921])/(130e-6 + 1e-6 * y[1027] * y[921])
    R1840 = (13.7 * 1e-6 * y[1017] * y[335])/(130e-6 + 1e-6 * y[1017] * y[335])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    return (R1834) - (R1840 + R1841)
 
def m_4mop_c(t, y):
    R1835 = (13.7 * 1e-6 * y[835] * y[36])/(130e-6 + 1e-6 * y[835] * y[36])
    R1469 = (13.7 * 1e-6 * y[1018] * y[110])/(130e-6 + 1e-6 * y[1018] * y[110])
    return (R1835) - (R1469)
 
def m_12dgr180_p(t, y):
    R1836 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R40 = (13.7 * 1e-6 * y[1019])/(130e-6 + 1e-6 * y[1019])
    return (R1836) - (R40)
 
def m_12dgr181_p(t, y):
    R1838 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1880 = (13.7 * 1e-6 * y[864] * y[1041])/(130e-6 + 1e-6 * y[864] * y[1041])
    R41 = (13.7 * 1e-6 * y[1020])/(130e-6 + 1e-6 * y[1020])
    return (R1838 + R1880) - (R41)
 
def m_uagmda_c(t, y):
    R1839 = (13.7 * 1e-6 * y[1293] * y[1303])/(130e-6 + 1e-6 * y[1293] * y[1303])
    R2347 = (13.7 * 1e-6 * y[1288] * y[1021])/(130e-6 + 1e-6 * y[1288] * y[1021])
    return (R1839) - (R2347)
 
def m_2omhmbl_c(t, y):
    R1840 = (13.7 * 1e-6 * y[1017] * y[335])/(130e-6 + 1e-6 * y[1017] * y[335])
    R1841 = (13.7 * 1e-6 * y[1017] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1017] * y[278] * y[173] * y[236])
    R572 = (13.7 * 1e-6 * y[1022] * y[921])/(130e-6 + 1e-6 * y[1022] * y[921])
    return (R1840 + R1841) - (R572)
 
def m_2dhp_c(t, y):
    R1843 = (13.7 * 1e-6 * y[490] * y[173] * y[717])/(130e-6 + 1e-6 * y[490] * y[173] * y[717])
    R615 = (13.7 * 1e-6 * y[1023] * y[36] * y[201])/(130e-6 + 1e-6 * y[1023] * y[36] * y[201])
    return (R1843) - (R615)
 
def m_grxox_c(t, y):
    R1844 = (13.7 * 1e-6 * y[762] * y[152])/(130e-6 + 1e-6 * y[762] * y[152])
    R2082 = (13.7 * 1e-6 * y[35] * y[762])/(130e-6 + 1e-6 * y[35] * y[762])
    R2086 = (13.7 * 1e-6 * y[157] * y[762])/(130e-6 + 1e-6 * y[157] * y[762])
    R2093 = (13.7 * 1e-6 * y[456] * y[762])/(130e-6 + 1e-6 * y[456] * y[762])
    R2095 = (13.7 * 1e-6 * y[762] * y[114])/(130e-6 + 1e-6 * y[762] * y[114])
    R1284 = (13.7 * 1e-6 * y[1024] * y[763])/(130e-6 + 1e-6 * y[1024] * y[763])
    return (R1844 + R2082 + R2086 + R2093 + R2095) - (R1284)
 
def m_pydx5p_c(t, y):
    R1847 = (13.7 * 1e-6 * y[236] * y[1026])/(130e-6 + 1e-6 * y[236] * y[1026])
    R1848 = (13.7 * 1e-6 * y[335] * y[1026])/(130e-6 + 1e-6 * y[335] * y[1026])
    R2101 = (13.7 * 1e-6 * y[173] * y[335] * y[226])/(130e-6 + 1e-6 * y[173] * y[335] * y[226])
    R2108 = (13.7 * 1e-6 * y[278] * y[1179])/(130e-6 + 1e-6 * y[278] * y[1179])
    R221 = (13.7 * 1e-6 * y[45] * y[1025])/(130e-6 + 1e-6 * y[45] * y[1025])
    R223 = (13.7 * 1e-6 * y[235] * y[1025])/(130e-6 + 1e-6 * y[235] * y[1025])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2116 = (13.7 * 1e-6 * y[173] * y[1025])/(130e-6 + 1e-6 * y[173] * y[1025])
    return (R1847 + R1848 + R2101 + R2108) - (R221 + R223 + R926 + R2116)
 
def m_pdx5p_c(t, y):
    R1849 = (13.7 * 1e-6 * y[544] * y[236] * y[1015])/(130e-6 + 1e-6 * y[544] * y[236] * y[1015])
    R2109 = (13.7 * 1e-6 * y[278] * y[1031])/(130e-6 + 1e-6 * y[278] * y[1031])
    R1847 = (13.7 * 1e-6 * y[236] * y[1026])/(130e-6 + 1e-6 * y[236] * y[1026])
    R1848 = (13.7 * 1e-6 * y[335] * y[1026])/(130e-6 + 1e-6 * y[335] * y[1026])
    R1858 = (13.7 * 1e-6 * y[173] * y[1026])/(130e-6 + 1e-6 * y[173] * y[1026])
    return (R1849 + R2109) - (R1847 + R1848 + R1858)
 
def m_2ombzl_c(t, y):
    R1851 = (13.7 * 1e-6 * y[1016] * y[335])/(130e-6 + 1e-6 * y[1016] * y[335])
    R1852 = (13.7 * 1e-6 * y[1016] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1016] * y[278] * y[173] * y[236])
    R1834 = (13.7 * 1e-6 * y[1027] * y[921])/(130e-6 + 1e-6 * y[1027] * y[921])
    return (R1851 + R1852) - (R1834)
 
def m_4h2opntn_c(t, y):
    R1853 = (13.7 * 1e-6 * y[173] * y[808])/(130e-6 + 1e-6 * y[173] * y[808])
    R1390 = (13.7 * 1e-6 * y[1028])/(130e-6 + 1e-6 * y[1028])
    return (R1853) - (R1390)
 
def m_2oph_c(t, y):
    R1854 = (13.7 * 1e-6 * y[776] * y[36])/(130e-6 + 1e-6 * y[776] * y[36])
    R1855 = (13.7 * 1e-6 * y[1029] * y[335])/(130e-6 + 1e-6 * y[1029] * y[335])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    return (R1854) - (R1855 + R1856)
 
def m_2ohph_c(t, y):
    R1855 = (13.7 * 1e-6 * y[1029] * y[335])/(130e-6 + 1e-6 * y[1029] * y[335])
    R1856 = (13.7 * 1e-6 * y[1029] * y[278] * y[173] * y[236])/(130e-6 + 1e-6 * y[1029] * y[278] * y[173] * y[236])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1833 = (13.7 * 1e-6 * y[1030] * y[921])/(130e-6 + 1e-6 * y[1030] * y[921])
    return (R1855 + R1856) - (R926 + R1833)
 
def m_pydxn_c(t, y):
    R1858 = (13.7 * 1e-6 * y[173] * y[1026])/(130e-6 + 1e-6 * y[173] * y[1026])
    R2109 = (13.7 * 1e-6 * y[278] * y[1031])/(130e-6 + 1e-6 * y[278] * y[1031])
    return (R1858) - (R2109)
 
def m_pe120_p(t, y):
    R1859 = (13.7 * 1e-6 * y[278] * y[173] * y[139])/(130e-6 + 1e-6 * y[278] * y[173] * y[139])
    R1929 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R1974 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    return (R1859) - (R1929 + R1974)
 
def m_pe140_p(t, y):
    R1860 = (13.7 * 1e-6 * y[278] * y[173] * y[150])/(130e-6 + 1e-6 * y[278] * y[173] * y[150])
    R1930 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R1981 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    return (R1860) - (R1930 + R1981)
 
def m_pe141_p(t, y):
    R1861 = (13.7 * 1e-6 * y[278] * y[173] * y[155])/(130e-6 + 1e-6 * y[278] * y[173] * y[155])
    R1931 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R1982 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    return (R1861) - (R1931 + R1982)
 
def m_murein5p5p_p(t, y):
    R1862 = (13.7 * 1e-6 * y[1289])/(130e-6 + 1e-6 * y[1289])
    R1596 = (13.7 * 1e-6 * y[1035])/(130e-6 + 1e-6 * y[1035])
    R1597 = (13.7 * 1e-6 * y[1035])/(130e-6 + 1e-6 * y[1035])
    R1601 = (13.7 * 1e-6 * y[406] * y[1035])/(130e-6 + 1e-6 * y[406] * y[1035])
    R1688 = (13.7 * 1e-6 * y[406] * y[1035])/(130e-6 + 1e-6 * y[406] * y[1035])
    R1873 = (13.7 * 1e-6 * y[1035] * y[1289])/(130e-6 + 1e-6 * y[1035] * y[1289])
    return (R1862) - (R1596 + R1597 + R1601 + R1688 + R1873)
 
def m_udcpdp_c(t, y):
    R1862 = (13.7 * 1e-6 * y[1289])/(130e-6 + 1e-6 * y[1289])
    R1873 = (13.7 * 1e-6 * y[1035] * y[1289])/(130e-6 + 1e-6 * y[1035] * y[1289])
    R2352 = (13.7 * 1e-6 * y[761] * y[834])/(130e-6 + 1e-6 * y[761] * y[834])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2351 = (13.7 * 1e-6 * y[173] * y[1036])/(130e-6 + 1e-6 * y[173] * y[1036])
    return (R1862 + R1873 + R2352) - (R926 + R2351)
 
def m_pe160_p(t, y):
    R1863 = (13.7 * 1e-6 * y[278] * y[173] * y[158])/(130e-6 + 1e-6 * y[278] * y[173] * y[158])
    R227 = (13.7 * 1e-6 * y[1352] * y[1037])/(130e-6 + 1e-6 * y[1352] * y[1037])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1932 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R1983 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    return (R1863) - (R227 + R926 + R1932 + R1983)
 
def m_pe161_p(t, y):
    R1864 = (13.7 * 1e-6 * y[278] * y[173] * y[160])/(130e-6 + 1e-6 * y[278] * y[173] * y[160])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1878 = (13.7 * 1e-6 * y[864] * y[1038])/(130e-6 + 1e-6 * y[864] * y[1038])
    R1935 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R1984 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    return (R1864) - (R926 + R1878 + R1935 + R1984)
 
def m_pe180_p(t, y):
    R1865 = (13.7 * 1e-6 * y[278] * y[173] * y[163])/(130e-6 + 1e-6 * y[278] * y[173] * y[163])
    R1937 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R1985 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    return (R1865) - (R1937 + R1985)
 
def m_3php_c(t, y):
    R1866 = (13.7 * 1e-6 * y[752] * y[236])/(130e-6 + 1e-6 * y[752] * y[236])
    R2047 = (13.7 * 1e-6 * y[1040] * y[110])/(130e-6 + 1e-6 * y[1040] * y[110])
    return (R1866) - (R2047)
 
def m_pe181_p(t, y):
    R1870 = (13.7 * 1e-6 * y[278] * y[173] * y[164])/(130e-6 + 1e-6 * y[278] * y[173] * y[164])
    R1880 = (13.7 * 1e-6 * y[864] * y[1041])/(130e-6 + 1e-6 * y[864] * y[1041])
    R1938 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R1986 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    return (R1870) - (R1880 + R1938 + R1986)
 
def m_murein5p5p5p_p(t, y):
    R1873 = (13.7 * 1e-6 * y[1035] * y[1289])/(130e-6 + 1e-6 * y[1035] * y[1289])
    R1598 = (13.7 * 1e-6 * y[1042])/(130e-6 + 1e-6 * y[1042])
    return (R1873) - (R1598)
 
def m_peamn_p(t, y):
    R1876 = (13.7 * 1e-6 * y[1514])/(130e-6 + 1e-6 * y[1514])
    R1871 = (13.7 * 1e-6 * y[406] * y[1004] * y[1043])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1043])
    return (R1876) - (R1871)
 
def m_ohpb_c(t, y):
    R1877 = (13.7 * 1e-6 * y[547] * y[236])/(130e-6 + 1e-6 * y[547] * y[236])
    R1832 = (13.7 * 1e-6 * y[110] * y[1044])/(130e-6 + 1e-6 * y[110] * y[1044])
    return (R1877) - (R1832)
 
def m_enlipa_p(t, y):
    R1878 = (13.7 * 1e-6 * y[864] * y[1038])/(130e-6 + 1e-6 * y[864] * y[1038])
    R1880 = (13.7 * 1e-6 * y[864] * y[1041])/(130e-6 + 1e-6 * y[864] * y[1041])
    R696 = (13.7 * 1e-6 * y[1045])/(130e-6 + 1e-6 * y[1045])
    return (R1878 + R1880) - (R696)
 
def m_pgp120_p(t, y):
    R1879 = (13.7 * 1e-6 * y[278] * y[173] * y[1064])/(130e-6 + 1e-6 * y[278] * y[173] * y[1064])
    R1897 = (13.7 * 1e-6 * y[406] * y[1046])/(130e-6 + 1e-6 * y[406] * y[1046])
    return (R1879) - (R1897)
 
def m_pgp140_p(t, y):
    R1882 = (13.7 * 1e-6 * y[278] * y[173] * y[1065])/(130e-6 + 1e-6 * y[278] * y[173] * y[1065])
    R1900 = (13.7 * 1e-6 * y[406] * y[1047])/(130e-6 + 1e-6 * y[406] * y[1047])
    return (R1882) - (R1900)
 
def m_pgp141_p(t, y):
    R1883 = (13.7 * 1e-6 * y[278] * y[173] * y[1067])/(130e-6 + 1e-6 * y[278] * y[173] * y[1067])
    R1905 = (13.7 * 1e-6 * y[406] * y[1048])/(130e-6 + 1e-6 * y[406] * y[1048])
    return (R1883) - (R1905)
 
def m_pgp160_p(t, y):
    R1884 = (13.7 * 1e-6 * y[278] * y[173] * y[1069])/(130e-6 + 1e-6 * y[278] * y[173] * y[1069])
    R1908 = (13.7 * 1e-6 * y[406] * y[1049])/(130e-6 + 1e-6 * y[406] * y[1049])
    return (R1884) - (R1908)
 
def m_pgp161_p(t, y):
    R1885 = (13.7 * 1e-6 * y[278] * y[173] * y[1070])/(130e-6 + 1e-6 * y[278] * y[173] * y[1070])
    R1911 = (13.7 * 1e-6 * y[406] * y[1050])/(130e-6 + 1e-6 * y[406] * y[1050])
    return (R1885) - (R1911)
 
def m_tagdp__D_c(t, y):
    R1886 = (13.7 * 1e-6 * y[278] * y[713])/(130e-6 + 1e-6 * y[278] * y[713])
    R2157 = (13.7 * 1e-6 * y[1051])/(130e-6 + 1e-6 * y[1051])
    return (R1886) - (R2157)
 
def m_pgp180_p(t, y):
    R1889 = (13.7 * 1e-6 * y[278] * y[173] * y[1075])/(130e-6 + 1e-6 * y[278] * y[173] * y[1075])
    R1913 = (13.7 * 1e-6 * y[406] * y[1052])/(130e-6 + 1e-6 * y[406] * y[1052])
    return (R1889) - (R1913)
 
def m_mso3_c(t, y):
    R1890 = (13.7 * 1e-6 * y[278] * y[173] * y[1055])/(130e-6 + 1e-6 * y[278] * y[173] * y[1055])
    R1023 = (13.7 * 1e-6 * y[655] * y[1053] * y[335])/(130e-6 + 1e-6 * y[655] * y[1053] * y[335])
    return (R1890) - (R1023)
 
def m_pgp181_p(t, y):
    R1891 = (13.7 * 1e-6 * y[278] * y[173] * y[1076])/(130e-6 + 1e-6 * y[278] * y[173] * y[1076])
    R1915 = (13.7 * 1e-6 * y[406] * y[1054])/(130e-6 + 1e-6 * y[406] * y[1054])
    return (R1891) - (R1915)
 
def m_mso3_p(t, y):
    R1901 = (13.7 * 1e-6 * y[1488])/(130e-6 + 1e-6 * y[1488])
    R1890 = (13.7 * 1e-6 * y[278] * y[173] * y[1055])/(130e-6 + 1e-6 * y[278] * y[173] * y[1055])
    return (R1901) - (R1890)
 
def m_5mtr_c(t, y):
    R1906 = (13.7 * 1e-6 * y[1220] * y[173])/(130e-6 + 1e-6 * y[1220] * y[173])
    R1969 = (13.7 * 1e-6 * y[1056] * y[278])/(130e-6 + 1e-6 * y[1056] * y[278])
    return (R1906) - (R1969)
 
def m_10fthf_c(t, y):
    R1909 = (13.7 * 1e-6 * y[173] * y[1068])/(130e-6 + 1e-6 * y[173] * y[1068])
    R195 = (13.7 * 1e-6 * y[1057] * y[154])/(130e-6 + 1e-6 * y[1057] * y[154])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1067 = (13.7 * 1e-6 * y[1057] * y[173])/(130e-6 + 1e-6 * y[1057] * y[173])
    R1086 = (13.7 * 1e-6 * y[1057] * y[937])/(130e-6 + 1e-6 * y[1057] * y[937])
    R1159 = (13.7 * 1e-6 * y[1057] * y[1140])/(130e-6 + 1e-6 * y[1057] * y[1140])
    R2371 = (13.7 * 1e-6 * y[1057] * y[1302])/(130e-6 + 1e-6 * y[1057] * y[1302])
    return (R1909) - (R195 + R926 + R1067 + R1086 + R1159 + R2371)
 
def m_1ddecg3p_p(t, y):
    R1916 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R1496 = (13.7 * 1e-6 * y[1058] * y[406])/(130e-6 + 1e-6 * y[1058] * y[406])
    return (R1916) - (R1496)
 
def m_1tdecg3p_p(t, y):
    R1917 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R1497 = (13.7 * 1e-6 * y[1059] * y[406])/(130e-6 + 1e-6 * y[1059] * y[406])
    return (R1917) - (R1497)
 
def m_1tdec7eg3p_p(t, y):
    R1918 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R1498 = (13.7 * 1e-6 * y[1060] * y[406])/(130e-6 + 1e-6 * y[1060] * y[406])
    return (R1918) - (R1498)
 
def m_1hdecg3p_p(t, y):
    R1919 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R1499 = (13.7 * 1e-6 * y[1061] * y[406])/(130e-6 + 1e-6 * y[1061] * y[406])
    return (R1919) - (R1499)
 
def m_1hdec9eg3p_p(t, y):
    R1920 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R1501 = (13.7 * 1e-6 * y[1062] * y[406])/(130e-6 + 1e-6 * y[1062] * y[406])
    return (R1920) - (R1501)
 
def m_1odecg3p_p(t, y):
    R1921 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R1505 = (13.7 * 1e-6 * y[1063] * y[406])/(130e-6 + 1e-6 * y[1063] * y[406])
    return (R1921) - (R1505)
 
def m_pgp120_c(t, y):
    R1922 = (13.7 * 1e-6 * y[447] * y[743])/(130e-6 + 1e-6 * y[447] * y[743])
    R1879 = (13.7 * 1e-6 * y[278] * y[173] * y[1064])/(130e-6 + 1e-6 * y[278] * y[173] * y[1064])
    R1892 = (13.7 * 1e-6 * y[173] * y[1064])/(130e-6 + 1e-6 * y[173] * y[1064])
    return (R1922) - (R1879 + R1892)
 
def m_pgp140_c(t, y):
    R1923 = (13.7 * 1e-6 * y[448] * y[743])/(130e-6 + 1e-6 * y[448] * y[743])
    R1882 = (13.7 * 1e-6 * y[278] * y[173] * y[1065])/(130e-6 + 1e-6 * y[278] * y[173] * y[1065])
    R1898 = (13.7 * 1e-6 * y[173] * y[1065])/(130e-6 + 1e-6 * y[173] * y[1065])
    return (R1923) - (R1882 + R1898)
 
def m_1odec11eg3p_p(t, y):
    R1924 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R1506 = (13.7 * 1e-6 * y[1066] * y[406])/(130e-6 + 1e-6 * y[1066] * y[406])
    return (R1924) - (R1506)
 
def m_pgp141_c(t, y):
    R1925 = (13.7 * 1e-6 * y[449] * y[743])/(130e-6 + 1e-6 * y[449] * y[743])
    R1883 = (13.7 * 1e-6 * y[278] * y[173] * y[1067])/(130e-6 + 1e-6 * y[278] * y[173] * y[1067])
    R1902 = (13.7 * 1e-6 * y[173] * y[1067])/(130e-6 + 1e-6 * y[173] * y[1067])
    return (R1925) - (R1883 + R1902)
 
def m_methf_c(t, y):
    R1926 = (13.7 * 1e-6 * y[717] * y[6])/(130e-6 + 1e-6 * y[717] * y[6])
    R1909 = (13.7 * 1e-6 * y[173] * y[1068])/(130e-6 + 1e-6 * y[173] * y[1068])
    return (R1926) - (R1909)
 
def m_pgp160_c(t, y):
    R1927 = (13.7 * 1e-6 * y[450] * y[743])/(130e-6 + 1e-6 * y[450] * y[743])
    R1884 = (13.7 * 1e-6 * y[278] * y[173] * y[1069])/(130e-6 + 1e-6 * y[278] * y[173] * y[1069])
    R1907 = (13.7 * 1e-6 * y[173] * y[1069])/(130e-6 + 1e-6 * y[173] * y[1069])
    return (R1927) - (R1884 + R1907)
 
def m_pgp161_c(t, y):
    R1928 = (13.7 * 1e-6 * y[451] * y[743])/(130e-6 + 1e-6 * y[451] * y[743])
    R1885 = (13.7 * 1e-6 * y[278] * y[173] * y[1070])/(130e-6 + 1e-6 * y[278] * y[173] * y[1070])
    R1910 = (13.7 * 1e-6 * y[173] * y[1070])/(130e-6 + 1e-6 * y[173] * y[1070])
    return (R1928) - (R1885 + R1910)
 
def m_1agpe120_p(t, y):
    R1929 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R1508 = (13.7 * 1e-6 * y[1071] * y[406])/(130e-6 + 1e-6 * y[1071] * y[406])
    return (R1929) - (R1508)
 
def m_1agpe140_p(t, y):
    R1930 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R1510 = (13.7 * 1e-6 * y[1072] * y[406])/(130e-6 + 1e-6 * y[1072] * y[406])
    return (R1930) - (R1510)
 
def m_1agpe141_p(t, y):
    R1931 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R1511 = (13.7 * 1e-6 * y[1073] * y[406])/(130e-6 + 1e-6 * y[1073] * y[406])
    return (R1931) - (R1511)
 
def m_1agpe160_p(t, y):
    R1932 = (13.7 * 1e-6 * y[406] * y[1037])/(130e-6 + 1e-6 * y[406] * y[1037])
    R1516 = (13.7 * 1e-6 * y[1074] * y[406])/(130e-6 + 1e-6 * y[1074] * y[406])
    return (R1932) - (R1516)
 
def m_pgp180_c(t, y):
    R1933 = (13.7 * 1e-6 * y[452] * y[743])/(130e-6 + 1e-6 * y[452] * y[743])
    R1889 = (13.7 * 1e-6 * y[278] * y[173] * y[1075])/(130e-6 + 1e-6 * y[278] * y[173] * y[1075])
    R1912 = (13.7 * 1e-6 * y[173] * y[1075])/(130e-6 + 1e-6 * y[173] * y[1075])
    return (R1933) - (R1889 + R1912)
 
def m_pgp181_c(t, y):
    R1934 = (13.7 * 1e-6 * y[453] * y[743])/(130e-6 + 1e-6 * y[453] * y[743])
    R1891 = (13.7 * 1e-6 * y[278] * y[173] * y[1076])/(130e-6 + 1e-6 * y[278] * y[173] * y[1076])
    R1914 = (13.7 * 1e-6 * y[173] * y[1076])/(130e-6 + 1e-6 * y[173] * y[1076])
    return (R1934) - (R1891 + R1914)
 
def m_1agpe161_p(t, y):
    R1935 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R1517 = (13.7 * 1e-6 * y[1077] * y[406])/(130e-6 + 1e-6 * y[1077] * y[406])
    return (R1935) - (R1517)
 
def m_5mthf_c(t, y):
    R1936 = (13.7 * 1e-6 * y[36] * y[717] * y[113])/(130e-6 + 1e-6 * y[36] * y[717] * y[113])
    R1646 = (13.7 * 1e-6 * y[1078] * y[436])/(130e-6 + 1e-6 * y[1078] * y[436])
    return (R1936) - (R1646)
 
def m_1agpe180_p(t, y):
    R1937 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R1519 = (13.7 * 1e-6 * y[1079] * y[406])/(130e-6 + 1e-6 * y[1079] * y[406])
    return (R1937) - (R1519)
 
def m_1agpe181_p(t, y):
    R1938 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R1521 = (13.7 * 1e-6 * y[1080] * y[406])/(130e-6 + 1e-6 * y[1080] * y[406])
    return (R1938) - (R1521)
 
def m_1agpg120_p(t, y):
    R1939 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R1523 = (13.7 * 1e-6 * y[1081] * y[406])/(130e-6 + 1e-6 * y[1081] * y[406])
    return (R1939) - (R1523)
 
def m_pheme_p(t, y):
    R1940 = (13.7 * 1e-6 * y[278] * y[173] * y[609])/(130e-6 + 1e-6 * y[278] * y[173] * y[609])
    R1941 = (13.7 * 1e-6 * y[1082])/(130e-6 + 1e-6 * y[1082])
    return (R1940) - (R1941)
 
def m_pheme_e(t, y):
    R1941 = (13.7 * 1e-6 * y[1082])/(130e-6 + 1e-6 * y[1082])
    R882 = (13.7 * 1e-6 * y[1083])/(130e-6 + 1e-6 * y[1083])
    return (R1941) - (R882)
 
def m_phpyr_c(t, y):
    R1942 = (13.7 * 1e-6 * y[213] * y[1091])/(130e-6 + 1e-6 * y[213] * y[1091])
    R2009 = (13.7 * 1e-6 * y[36] * y[350])/(130e-6 + 1e-6 * y[36] * y[350])
    return (R1942 + R2009) - (0)
 
def m_phetrna_c(t, y):
    R1943 = (13.7 * 1e-6 * y[278] * y[1091] * y[1655])/(130e-6 + 1e-6 * y[278] * y[1091] * y[1655])
    return (R1943) - (0)
 
def m_1agpg140_p(t, y):
    R1944 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R1530 = (13.7 * 1e-6 * y[1086] * y[406])/(130e-6 + 1e-6 * y[1086] * y[406])
    return (R1944) - (R1530)
 
def m_1agpg141_p(t, y):
    R1945 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R1531 = (13.7 * 1e-6 * y[1087] * y[406])/(130e-6 + 1e-6 * y[1087] * y[406])
    return (R1945) - (R1531)
 
def m_1agpg160_p(t, y):
    R1946 = (13.7 * 1e-6 * y[406] * y[370])/(130e-6 + 1e-6 * y[406] * y[370])
    R1532 = (13.7 * 1e-6 * y[1088] * y[406])/(130e-6 + 1e-6 * y[1088] * y[406])
    return (R1946) - (R1532)
 
def m_1agpg161_p(t, y):
    R1947 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R1533 = (13.7 * 1e-6 * y[1089] * y[406])/(130e-6 + 1e-6 * y[1089] * y[406])
    return (R1947) - (R1533)
 
def m_1agpg180_p(t, y):
    R1948 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R1534 = (13.7 * 1e-6 * y[1090] * y[406])/(130e-6 + 1e-6 * y[1090] * y[406])
    return (R1948) - (R1534)
 
def m_phe__L_c(t, y):
    R1949 = (13.7 * 1e-6 * y[61] * y[1092])/(130e-6 + 1e-6 * y[61] * y[1092])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1942 = (13.7 * 1e-6 * y[213] * y[1091])/(130e-6 + 1e-6 * y[213] * y[1091])
    R1943 = (13.7 * 1e-6 * y[278] * y[1091] * y[1655])/(130e-6 + 1e-6 * y[278] * y[1091] * y[1655])
    return (R1949) - (R926 + R1942 + R1943)
 
def m_phe__L_p(t, y):
    R1950 = (13.7 * 1e-6 * y[1515])/(130e-6 + 1e-6 * y[1515])
    R1949 = (13.7 * 1e-6 * y[61] * y[1092])/(130e-6 + 1e-6 * y[61] * y[1092])
    return (R1950) - (R1949)
 
def m_1agpg181_p(t, y):
    R1955 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R1535 = (13.7 * 1e-6 * y[1093] * y[406])/(130e-6 + 1e-6 * y[1093] * y[406])
    return (R1955) - (R1535)
 
def m_4r5au_c(t, y):
    R1957 = (13.7 * 1e-6 * y[279] * y[173])/(130e-6 + 1e-6 * y[279] * y[173])
    R2142 = (13.7 * 1e-6 * y[1193])/(130e-6 + 1e-6 * y[1193])
    R2141 = (13.7 * 1e-6 * y[1094] * y[460])/(130e-6 + 1e-6 * y[1094] * y[460])
    return (R1957 + R2142) - (R2141)
 
def m_2ddecg3p_p(t, y):
    R1958 = (13.7 * 1e-6 * y[406] * y[363])/(130e-6 + 1e-6 * y[406] * y[363])
    R68 = (13.7 * 1e-6 * y[1095])/(130e-6 + 1e-6 * y[1095])
    return (R1958) - (R68)
 
def m_5mdru1p_c(t, y):
    R1959 = (13.7 * 1e-6 * y[1104])/(130e-6 + 1e-6 * y[1104])
    R1625 = (13.7 * 1e-6 * y[1096])/(130e-6 + 1e-6 * y[1096])
    return (R1959) - (R1625)
 
def m_2tdecg3p_p(t, y):
    R1960 = (13.7 * 1e-6 * y[406] * y[365])/(130e-6 + 1e-6 * y[406] * y[365])
    R2 = (13.7 * 1e-6 * y[1097])/(130e-6 + 1e-6 * y[1097])
    return (R1960) - (R2)
 
def m_2tdec7eg3p_p(t, y):
    R1961 = (13.7 * 1e-6 * y[406] * y[367])/(130e-6 + 1e-6 * y[406] * y[367])
    R4 = (13.7 * 1e-6 * y[1098])/(130e-6 + 1e-6 * y[1098])
    return (R1961) - (R4)
 
def m_2mahmp_c(t, y):
    R1962 = (13.7 * 1e-6 * y[251] * y[278])/(130e-6 + 1e-6 * y[251] * y[278])
    R361 = (13.7 * 1e-6 * y[1099] * y[173])/(130e-6 + 1e-6 * y[1099] * y[173])
    R2233 = (13.7 * 1e-6 * y[1099] * y[796] * y[36])/(130e-6 + 1e-6 * y[1099] * y[796] * y[36])
    return (R1962) - (R361 + R2233)
 
def m_4ppan_c(t, y):
    R1963 = (13.7 * 1e-6 * y[278] * y[1001])/(130e-6 + 1e-6 * y[278] * y[1001])
    R2007 = (13.7 * 1e-6 * y[1100] * y[404] * y[260])/(130e-6 + 1e-6 * y[1100] * y[404] * y[260])
    return (R1963) - (R2007)
 
def m_pnto__R_p(t, y):
    R1965 = (13.7 * 1e-6 * y[1523])/(130e-6 + 1e-6 * y[1523])
    R1964 = (13.7 * 1e-6 * y[927] * y[1101])/(130e-6 + 1e-6 * y[927] * y[1101])
    return (R1965) - (R1964)
 
def m_2hdecg3p_p(t, y):
    R1966 = (13.7 * 1e-6 * y[406] * y[369])/(130e-6 + 1e-6 * y[406] * y[369])
    R5 = (13.7 * 1e-6 * y[1102])/(130e-6 + 1e-6 * y[1102])
    return (R1966) - (R5)
 
def m_2hdec9eg3p_p(t, y):
    R1967 = (13.7 * 1e-6 * y[406] * y[372])/(130e-6 + 1e-6 * y[406] * y[372])
    R7 = (13.7 * 1e-6 * y[1103])/(130e-6 + 1e-6 * y[1103])
    return (R1967) - (R7)
 
def m_5mdr1p_c(t, y):
    R1969 = (13.7 * 1e-6 * y[1056] * y[278])/(130e-6 + 1e-6 * y[1056] * y[278])
    R1959 = (13.7 * 1e-6 * y[1104])/(130e-6 + 1e-6 * y[1104])
    return (R1969) - (R1959)
 
def m_2odecg3p_p(t, y):
    R1971 = (13.7 * 1e-6 * y[406] * y[375])/(130e-6 + 1e-6 * y[406] * y[375])
    R9 = (13.7 * 1e-6 * y[1105])/(130e-6 + 1e-6 * y[1105])
    return (R1971) - (R9)
 
def m_2odec11eg3p_p(t, y):
    R1972 = (13.7 * 1e-6 * y[406] * y[377])/(130e-6 + 1e-6 * y[406] * y[377])
    R11 = (13.7 * 1e-6 * y[1106])/(130e-6 + 1e-6 * y[1106])
    return (R1972) - (R11)
 
def m_2agpe120_p(t, y):
    R1974 = (13.7 * 1e-6 * y[406] * y[1032])/(130e-6 + 1e-6 * y[406] * y[1032])
    R15 = (13.7 * 1e-6 * y[1107])/(130e-6 + 1e-6 * y[1107])
    return (R1974) - (R15)
 
def m_trp__L_c(t, y):
    R1976 = (13.7 * 1e-6 * y[1656] * y[173] * y[335])/(130e-6 + 1e-6 * y[1656] * y[173] * y[335])
    R2257 = (13.7 * 1e-6 * y[816] * y[500])/(130e-6 + 1e-6 * y[816] * y[500])
    R2266 = (13.7 * 1e-6 * y[828] * y[500])/(130e-6 + 1e-6 * y[828] * y[500])
    R2269 = (13.7 * 1e-6 * y[61] * y[1254])/(130e-6 + 1e-6 * y[61] * y[1254])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2256 = (13.7 * 1e-6 * y[173] * y[1108])/(130e-6 + 1e-6 * y[173] * y[1108])
    R2268 = (13.7 * 1e-6 * y[278] * y[1665] * y[1108])/(130e-6 + 1e-6 * y[278] * y[1665] * y[1108])
    return (R1976 + R2257 + R2266 + R2269) - (R926 + R2256 + R2268)
 
def m_ppal_p(t, y):
    R1977 = (13.7 * 1e-6 * y[1525])/(130e-6 + 1e-6 * y[1525])
    R1978 = (13.7 * 1e-6 * y[1356])/(130e-6 + 1e-6 * y[1356])
    return (R1977 + R1978) - (0)
 
def m_ppa_p(t, y):
    R1980 = (13.7 * 1e-6 * y[1524])/(130e-6 + 1e-6 * y[1524])
    R1979 = (13.7 * 1e-6 * y[927] * y[1110])/(130e-6 + 1e-6 * y[927] * y[1110])
    return (R1980) - (R1979)
 
def m_2agpe140_p(t, y):
    R1981 = (13.7 * 1e-6 * y[406] * y[1033])/(130e-6 + 1e-6 * y[406] * y[1033])
    R23 = (13.7 * 1e-6 * y[1111])/(130e-6 + 1e-6 * y[1111])
    return (R1981) - (R23)
 
def m_2agpe141_p(t, y):
    R1982 = (13.7 * 1e-6 * y[406] * y[1034])/(130e-6 + 1e-6 * y[406] * y[1034])
    R70 = (13.7 * 1e-6 * y[1112])/(130e-6 + 1e-6 * y[1112])
    return (R1982) - (R70)
 
def m_2agpe161_p(t, y):
    R1984 = (13.7 * 1e-6 * y[406] * y[1038])/(130e-6 + 1e-6 * y[406] * y[1038])
    R84 = (13.7 * 1e-6 * y[1113])/(130e-6 + 1e-6 * y[1113])
    return (R1984) - (R84)
 
def m_2agpe180_p(t, y):
    R1985 = (13.7 * 1e-6 * y[406] * y[1039])/(130e-6 + 1e-6 * y[406] * y[1039])
    R101 = (13.7 * 1e-6 * y[1114])/(130e-6 + 1e-6 * y[1114])
    return (R1985) - (R101)
 
def m_2agpe181_p(t, y):
    R1986 = (13.7 * 1e-6 * y[406] * y[1041])/(130e-6 + 1e-6 * y[406] * y[1041])
    R113 = (13.7 * 1e-6 * y[1115])/(130e-6 + 1e-6 * y[1115])
    return (R1986) - (R113)
 
def m_2agpg120_p(t, y):
    R1987 = (13.7 * 1e-6 * y[406] * y[364])/(130e-6 + 1e-6 * y[406] * y[364])
    R152 = (13.7 * 1e-6 * y[1116])/(130e-6 + 1e-6 * y[1116])
    return (R1987) - (R152)
 
def m_2agpg140_p(t, y):
    R1988 = (13.7 * 1e-6 * y[406] * y[366])/(130e-6 + 1e-6 * y[406] * y[366])
    R172 = (13.7 * 1e-6 * y[1117])/(130e-6 + 1e-6 * y[1117])
    return (R1988) - (R172)
 
def m_2agpg141_p(t, y):
    R1989 = (13.7 * 1e-6 * y[406] * y[368])/(130e-6 + 1e-6 * y[406] * y[368])
    R182 = (13.7 * 1e-6 * y[1118])/(130e-6 + 1e-6 * y[1118])
    return (R1989) - (R182)
 
def m_ppbng_c(t, y):
    R1990 = (13.7 * 1e-6 * y[654])/(130e-6 + 1e-6 * y[654])
    R1379 = (13.7 * 1e-6 * y[173] * y[1119])/(130e-6 + 1e-6 * y[173] * y[1119])
    return (R1990) - (R1379)
 
def m_pan4p_c(t, y):
    R1992 = (13.7 * 1e-6 * y[1126] * y[36])/(130e-6 + 1e-6 * y[1126] * y[36])
    R2075 = (13.7 * 1e-6 * y[278] * y[36] * y[1120])/(130e-6 + 1e-6 * y[278] * y[36] * y[1120])
    return (R1992) - (R2075)
 
def m_2agpg161_p(t, y):
    R1996 = (13.7 * 1e-6 * y[406] * y[373])/(130e-6 + 1e-6 * y[406] * y[373])
    R210 = (13.7 * 1e-6 * y[1121])/(130e-6 + 1e-6 * y[1121])
    return (R1996) - (R210)
 
def m_n2o_p(t, y):
    R1997 = (13.7 * 1e-6 * y[1489])/(130e-6 + 1e-6 * y[1489])
    R2003 = (13.7 * 1e-6 * y[1122])/(130e-6 + 1e-6 * y[1122])
    return (R1997) - (R2003)
 
def m_2agpg180_p(t, y):
    R1998 = (13.7 * 1e-6 * y[406] * y[376])/(130e-6 + 1e-6 * y[406] * y[376])
    R225 = (13.7 * 1e-6 * y[1123])/(130e-6 + 1e-6 * y[1123])
    return (R1998) - (R225)
 
def m_2agpg181_p(t, y):
    R1999 = (13.7 * 1e-6 * y[406] * y[378])/(130e-6 + 1e-6 * y[406] * y[378])
    R235 = (13.7 * 1e-6 * y[1124])/(130e-6 + 1e-6 * y[1124])
    return (R1999) - (R235)
 
def m_2dr5p_c(t, y):
    R2005 = (13.7 * 1e-6 * y[537])/(130e-6 + 1e-6 * y[537])
    R616 = (13.7 * 1e-6 * y[1125])/(130e-6 + 1e-6 * y[1125])
    return (R2005) - (R616)
 
def m_4ppcys_c(t, y):
    R2007 = (13.7 * 1e-6 * y[1100] * y[404] * y[260])/(130e-6 + 1e-6 * y[1100] * y[404] * y[260])
    R1992 = (13.7 * 1e-6 * y[1126] * y[36])/(130e-6 + 1e-6 * y[1126] * y[36])
    return (R2007) - (R1992)
 
def m_34hpp_c(t, y):
    R2008 = (13.7 * 1e-6 * y[236] * y[350])/(130e-6 + 1e-6 * y[236] * y[350])
    R2296 = (13.7 * 1e-6 * y[213] * y[1266])/(130e-6 + 1e-6 * y[213] * y[1266])
    return (R2008 + R2296) - (0)
 
def m_progly_p(t, y):
    R2010 = (13.7 * 1e-6 * y[1535])/(130e-6 + 1e-6 * y[1535])
    R2045 = (13.7 * 1e-6 * y[278] * y[173] * y[1128])/(130e-6 + 1e-6 * y[278] * y[173] * y[1128])
    return (R2010) - (R2045)
 
def m_protrna_c(t, y):
    R2011 = (13.7 * 1e-6 * y[278] * y[262] * y[1657])/(130e-6 + 1e-6 * y[278] * y[262] * y[1657])
    return (R2011) - (0)
 
def m_pro__L_p(t, y):
    R2015 = (13.7 * 1e-6 * y[1531])/(130e-6 + 1e-6 * y[1531])
    R2012 = (13.7 * 1e-6 * y[278] * y[173] * y[1130])/(130e-6 + 1e-6 * y[278] * y[173] * y[1130])
    R2013 = (13.7 * 1e-6 * y[61] * y[1130])/(130e-6 + 1e-6 * y[61] * y[1130])
    R2014 = (13.7 * 1e-6 * y[927] * y[1130])/(130e-6 + 1e-6 * y[927] * y[1130])
    return (R2015) - (R2012 + R2013 + R2014)
 
def m_ppp9_c(t, y):
    R2016 = (13.7 * 1e-6 * y[335] * y[427])/(130e-6 + 1e-6 * y[335] * y[427])
    R2017 = (13.7 * 1e-6 * y[153] * y[427])/(130e-6 + 1e-6 * y[153] * y[427])
    R1011 = (13.7 * 1e-6 * y[283] * y[1131])/(130e-6 + 1e-6 * y[283] * y[1131])
    return (R2016 + R2017) - (R1011)
 
def m_cechddd_c(t, y):
    R2018 = (13.7 * 1e-6 * y[36] * y[113] * y[335] * y[1133])/(130e-6 + 1e-6 * y[36] * y[113] * y[335] * y[1133])
    R611 = (13.7 * 1e-6 * y[1132] * y[236])/(130e-6 + 1e-6 * y[1132] * y[236])
    return (R2018) - (R611)
 
def m_pppn_c(t, y):
    R2019 = (13.7 * 1e-6 * y[61] * y[1134])/(130e-6 + 1e-6 * y[61] * y[1134])
    R2018 = (13.7 * 1e-6 * y[36] * y[113] * y[335] * y[1133])/(130e-6 + 1e-6 * y[36] * y[113] * y[335] * y[1133])
    return (R2019) - (R2018)
 
def m_pppn_p(t, y):
    R2020 = (13.7 * 1e-6 * y[1528])/(130e-6 + 1e-6 * y[1528])
    R2019 = (13.7 * 1e-6 * y[61] * y[1134])/(130e-6 + 1e-6 * y[61] * y[1134])
    return (R2020) - (R2019)
 
def m_psclys_c(t, y):
    R2023 = (13.7 * 1e-6 * y[61] * y[1136])/(130e-6 + 1e-6 * y[61] * y[1136])
    R1044 = (13.7 * 1e-6 * y[1135])/(130e-6 + 1e-6 * y[1135])
    return (R2023) - (R1044)
 
def m_psclys_p(t, y):
    R2024 = (13.7 * 1e-6 * y[1537])/(130e-6 + 1e-6 * y[1537])
    R2023 = (13.7 * 1e-6 * y[61] * y[1136])/(130e-6 + 1e-6 * y[61] * y[1136])
    return (R2024) - (R2023)
 
def m_ppt_p(t, y):
    R2026 = (13.7 * 1e-6 * y[1530])/(130e-6 + 1e-6 * y[1530])
    R2025 = (13.7 * 1e-6 * y[406] * y[1137])/(130e-6 + 1e-6 * y[406] * y[1137])
    return (R2026) - (R2025)
 
def m_3psme_c(t, y):
    R2027 = (13.7 * 1e-6 * y[563] * y[1205])/(130e-6 + 1e-6 * y[563] * y[1205])
    R389 = (13.7 * 1e-6 * y[1138])/(130e-6 + 1e-6 * y[1138])
    return (R2027) - (R389)
 
def m_nac_p(t, y):
    R2028 = (13.7 * 1e-6 * y[1494])/(130e-6 + 1e-6 * y[1494])
    R2036 = (13.7 * 1e-6 * y[1139])/(130e-6 + 1e-6 * y[1139])
    return (R2028) - (R2036)
 
def m_gar_c(t, y):
    R2032 = (13.7 * 1e-6 * y[278] * y[261] * y[725])/(130e-6 + 1e-6 * y[278] * y[261] * y[725])
    R1159 = (13.7 * 1e-6 * y[1057] * y[1140])/(130e-6 + 1e-6 * y[1057] * y[1140])
    R1160 = (13.7 * 1e-6 * y[278] * y[252] * y[1140])/(130e-6 + 1e-6 * y[278] * y[252] * y[1140])
    return (R2032) - (R1159 + R1160)
 
def m_air_c(t, y):
    R2033 = (13.7 * 1e-6 * y[278] * y[1146])/(130e-6 + 1e-6 * y[278] * y[1146])
    R201 = (13.7 * 1e-6 * y[1141] * y[278] * y[782])/(130e-6 + 1e-6 * y[1141] * y[278] * y[782])
    R256 = (13.7 * 1e-6 * y[1141] * y[173] * y[236])/(130e-6 + 1e-6 * y[1141] * y[173] * y[236])
    return (R2033) - (R201 + R256)
 
def m_2cpr5p_c(t, y):
    R2034 = (13.7 * 1e-6 * y[269])/(130e-6 + 1e-6 * y[269])
    R1392 = (13.7 * 1e-6 * y[1142] * y[36])/(130e-6 + 1e-6 * y[1142] * y[36])
    return (R2034) - (R1392)
 
def m_prfp_c(t, y):
    R2035 = (13.7 * 1e-6 * y[173] * y[1145])/(130e-6 + 1e-6 * y[173] * y[1145])
    R2043 = (13.7 * 1e-6 * y[1143])/(130e-6 + 1e-6 * y[1143])
    return (R2035) - (R2043)
 
def m_25aics_c(t, y):
    R2037 = (13.7 * 1e-6 * y[1346] * y[300] * y[278])/(130e-6 + 1e-6 * y[1346] * y[300] * y[278])
    R138 = (13.7 * 1e-6 * y[1144])/(130e-6 + 1e-6 * y[1144])
    return (R2037) - (R138)
 
def m_prbamp_c(t, y):
    R2038 = (13.7 * 1e-6 * y[173] * y[314])/(130e-6 + 1e-6 * y[173] * y[314])
    R2035 = (13.7 * 1e-6 * y[173] * y[1145])/(130e-6 + 1e-6 * y[173] * y[1145])
    return (R2038) - (R2035)
 
def m_fpram_c(t, y):
    R2042 = (13.7 * 1e-6 * y[278] * y[700] * y[710] * y[173])/(130e-6 + 1e-6 * y[278] * y[700] * y[710] * y[173])
    R2033 = (13.7 * 1e-6 * y[278] * y[1146])/(130e-6 + 1e-6 * y[278] * y[1146])
    return (R2042) - (R2033)
 
def m_prlp_c(t, y):
    R2043 = (13.7 * 1e-6 * y[1143])/(130e-6 + 1e-6 * y[1143])
    R1387 = (13.7 * 1e-6 * y[710] * y[1147])/(130e-6 + 1e-6 * y[710] * y[1147])
    return (R2043) - (R1387)
 
def m_progly_c(t, y):
    R2045 = (13.7 * 1e-6 * y[278] * y[173] * y[1128])/(130e-6 + 1e-6 * y[278] * y[173] * y[1128])
    R266 = (13.7 * 1e-6 * y[173] * y[1148])/(130e-6 + 1e-6 * y[173] * y[1148])
    return (R2045) - (R266)
 
def m_pser__L_c(t, y):
    R2047 = (13.7 * 1e-6 * y[1040] * y[110])/(130e-6 + 1e-6 * y[1040] * y[110])
    R2049 = (13.7 * 1e-6 * y[173] * y[1149])/(130e-6 + 1e-6 * y[173] * y[1149])
    return (R2047) - (R2049)
 
def m_pser__L_p(t, y):
    R2048 = (13.7 * 1e-6 * y[1538])/(130e-6 + 1e-6 * y[1538])
    R2050 = (13.7 * 1e-6 * y[406] * y[1150])/(130e-6 + 1e-6 * y[406] * y[1150])
    return (R2048) - (R2050)
 
def m_ps120_c(t, y):
    R2052 = (13.7 * 1e-6 * y[447] * y[500])/(130e-6 + 1e-6 * y[447] * y[500])
    R2029 = (13.7 * 1e-6 * y[36] * y[1151])/(130e-6 + 1e-6 * y[36] * y[1151])
    return (R2052) - (R2029)
 
def m_ps140_c(t, y):
    R2053 = (13.7 * 1e-6 * y[448] * y[500])/(130e-6 + 1e-6 * y[448] * y[500])
    R2030 = (13.7 * 1e-6 * y[36] * y[1152])/(130e-6 + 1e-6 * y[36] * y[1152])
    return (R2053) - (R2030)
 
def m_ru5p__L_c(t, y):
    R2056 = (13.7 * 1e-6 * y[278] * y[280])/(130e-6 + 1e-6 * y[278] * y[280])
    R2320 = (13.7 * 1e-6 * y[863])/(130e-6 + 1e-6 * y[863])
    R2059 = (13.7 * 1e-6 * y[1153])/(130e-6 + 1e-6 * y[1153])
    return (R2056 + R2320) - (R2059)
 
def m_ps141_c(t, y):
    R2057 = (13.7 * 1e-6 * y[449] * y[500])/(130e-6 + 1e-6 * y[449] * y[500])
    R2031 = (13.7 * 1e-6 * y[36] * y[1154])/(130e-6 + 1e-6 * y[36] * y[1154])
    return (R2057) - (R2031)
 
def m_ps160_c(t, y):
    R2058 = (13.7 * 1e-6 * y[450] * y[500])/(130e-6 + 1e-6 * y[450] * y[500])
    R2039 = (13.7 * 1e-6 * y[36] * y[1155])/(130e-6 + 1e-6 * y[36] * y[1155])
    return (R2058) - (R2039)
 
def m_xu5p__D_c(t, y):
    R2059 = (13.7 * 1e-6 * y[1153])/(130e-6 + 1e-6 * y[1153])
    R2105 = (13.7 * 1e-6 * y[753])/(130e-6 + 1e-6 * y[753])
    R2334 = (13.7 * 1e-6 * y[278] * y[1282])/(130e-6 + 1e-6 * y[278] * y[1282])
    R2209 = (13.7 * 1e-6 * y[227] * y[1156])/(130e-6 + 1e-6 * y[227] * y[1156])
    R2210 = (13.7 * 1e-6 * y[1237] * y[1156])/(130e-6 + 1e-6 * y[1237] * y[1156])
    return (R2059 + R2105 + R2334) - (R2209 + R2210)
 
def m_icolipa_c(t, y):
    R2060 = (13.7 * 1e-6 * y[1250] * y[1002])/(130e-6 + 1e-6 * y[1250] * y[1002])
    R1217 = (13.7 * 1e-6 * y[1157] * y[694])/(130e-6 + 1e-6 * y[1157] * y[694])
    return (R2060) - (R1217)
 
def m_ps161_c(t, y):
    R2061 = (13.7 * 1e-6 * y[451] * y[500])/(130e-6 + 1e-6 * y[451] * y[500])
    R2040 = (13.7 * 1e-6 * y[36] * y[1158])/(130e-6 + 1e-6 * y[36] * y[1158])
    return (R2061) - (R2040)
 
def m_ps180_c(t, y):
    R2063 = (13.7 * 1e-6 * y[452] * y[500])/(130e-6 + 1e-6 * y[452] * y[500])
    R2041 = (13.7 * 1e-6 * y[36] * y[1159])/(130e-6 + 1e-6 * y[36] * y[1159])
    return (R2063) - (R2041)
 
def m_dhptd_c(t, y):
    R2064 = (13.7 * 1e-6 * y[204])/(130e-6 + 1e-6 * y[204])
    R624 = (13.7 * 1e-6 * y[1160])/(130e-6 + 1e-6 * y[1160])
    return (R2064) - (R624)
 
def m_rib__D_p(t, y):
    R2066 = (13.7 * 1e-6 * y[1548])/(130e-6 + 1e-6 * y[1548])
    R2138 = (13.7 * 1e-6 * y[406] * y[1192])/(130e-6 + 1e-6 * y[406] * y[1192])
    R2065 = (13.7 * 1e-6 * y[278] * y[173] * y[1161])/(130e-6 + 1e-6 * y[278] * y[173] * y[1161])
    return (R2066 + R2138) - (R2065)
 
def m_ps181_c(t, y):
    R2067 = (13.7 * 1e-6 * y[453] * y[500])/(130e-6 + 1e-6 * y[453] * y[500])
    R2046 = (13.7 * 1e-6 * y[36] * y[1162])/(130e-6 + 1e-6 * y[36] * y[1162])
    return (R2067) - (R2046)
 
def m_rml_c(t, y):
    R2068 = (13.7 * 1e-6 * y[1170])/(130e-6 + 1e-6 * y[1170])
    R2070 = (13.7 * 1e-6 * y[278] * y[1163])/(130e-6 + 1e-6 * y[278] * y[1163])
    return (R2068) - (R2070)
 
def m_rml1p_c(t, y):
    R2070 = (13.7 * 1e-6 * y[278] * y[1163])/(130e-6 + 1e-6 * y[278] * y[1163])
    R2080 = (13.7 * 1e-6 * y[1164])/(130e-6 + 1e-6 * y[1164])
    return (R2070) - (R2080)
 
def m_rmn_p(t, y):
    R2071 = (13.7 * 1e-6 * y[1549])/(130e-6 + 1e-6 * y[1549])
    R2079 = (13.7 * 1e-6 * y[61] * y[1165])/(130e-6 + 1e-6 * y[61] * y[1165])
    return (R2071) - (R2079)
 
def m_ppap_c(t, y):
    R2072 = (13.7 * 1e-6 * y[37] * y[140])/(130e-6 + 1e-6 * y[37] * y[140])
    R1975 = (13.7 * 1e-6 * y[35] * y[1166])/(130e-6 + 1e-6 * y[35] * y[1166])
    return (R2072) - (R1975)
 
def m_thr__L_p(t, y):
    R2074 = (13.7 * 1e-6 * y[406] * y[1215])/(130e-6 + 1e-6 * y[406] * y[1215])
    R2195 = (13.7 * 1e-6 * y[61] * y[1216])/(130e-6 + 1e-6 * y[61] * y[1216])
    R2202 = (13.7 * 1e-6 * y[1572])/(130e-6 + 1e-6 * y[1572])
    R2194 = (13.7 * 1e-6 * y[278] * y[173] * y[1167])/(130e-6 + 1e-6 * y[278] * y[173] * y[1167])
    R2196 = (13.7 * 1e-6 * y[61] * y[1167])/(130e-6 + 1e-6 * y[61] * y[1167])
    R2201 = (13.7 * 1e-6 * y[927] * y[1167])/(130e-6 + 1e-6 * y[927] * y[1167])
    return (R2074 + R2195 + R2202) - (R2194 + R2196 + R2201)
 
def m_dpcoa_c(t, y):
    R2075 = (13.7 * 1e-6 * y[278] * y[36] * y[1120])/(130e-6 + 1e-6 * y[278] * y[36] * y[1120])
    R614 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    R2235 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    return (R2075) - (R614 + R2235)
 
def m_4abutn_c(t, y):
    R2077 = (13.7 * 1e-6 * y[213] * y[183])/(130e-6 + 1e-6 * y[213] * y[183])
    R96 = (13.7 * 1e-6 * y[1169] * y[173] * y[236])/(130e-6 + 1e-6 * y[1169] * y[173] * y[236])
    return (R2077) - (R96)
 
def m_rmn_c(t, y):
    R2079 = (13.7 * 1e-6 * y[61] * y[1165])/(130e-6 + 1e-6 * y[61] * y[1165])
    R2068 = (13.7 * 1e-6 * y[1170])/(130e-6 + 1e-6 * y[1170])
    return (R2079) - (R2068)
 
def m_ptrc_p(t, y):
    R2085 = (13.7 * 1e-6 * y[1545])/(130e-6 + 1e-6 * y[1545])
    R2076 = (13.7 * 1e-6 * y[151] * y[1171])/(130e-6 + 1e-6 * y[151] * y[1171])
    R2078 = (13.7 * 1e-6 * y[278] * y[173] * y[1171])/(130e-6 + 1e-6 * y[278] * y[173] * y[1171])
    R2084 = (13.7 * 1e-6 * y[61] * y[1171])/(130e-6 + 1e-6 * y[61] * y[1171])
    return (R2085) - (R2076 + R2078 + R2084)
 
def m_r1p_c(t, y):
    R2087 = (13.7 * 1e-6 * y[216] * y[37])/(130e-6 + 1e-6 * y[216] * y[37])
    R2090 = (13.7 * 1e-6 * y[764] * y[37])/(130e-6 + 1e-6 * y[764] * y[37])
    R2098 = (13.7 * 1e-6 * y[191] * y[37])/(130e-6 + 1e-6 * y[191] * y[37])
    R2100 = (13.7 * 1e-6 * y[37] * y[969])/(130e-6 + 1e-6 * y[37] * y[969])
    R2118 = (13.7 * 1e-6 * y[37] * y[446])/(130e-6 + 1e-6 * y[37] * y[446])
    R2004 = (13.7 * 1e-6 * y[1172])/(130e-6 + 1e-6 * y[1172])
    R2136 = (13.7 * 1e-6 * y[278] * y[1172])/(130e-6 + 1e-6 * y[278] * y[1172])
    return (R2087 + R2090 + R2098 + R2100 + R2118) - (R2004 + R2136)
 
def m_dudp_c(t, y):
    R2094 = (13.7 * 1e-6 * y[1240] * y[114])/(130e-6 + 1e-6 * y[1240] * y[114])
    R2095 = (13.7 * 1e-6 * y[762] * y[114])/(130e-6 + 1e-6 * y[762] * y[114])
    R2291 = (13.7 * 1e-6 * y[278] * y[536])/(130e-6 + 1e-6 * y[278] * y[536])
    R1655 = (13.7 * 1e-6 * y[278] * y[1173])/(130e-6 + 1e-6 * y[278] * y[1173])
    return (R2094 + R2095 + R2291) - (R1655)
 
def m_fldox_c(t, y):
    R2096 = (13.7 * 1e-6 * y[278] * y[646])/(130e-6 + 1e-6 * y[278] * y[646])
    R2097 = (13.7 * 1e-6 * y[646] * y[928])/(130e-6 + 1e-6 * y[646] * y[928])
    R2103 = (13.7 * 1e-6 * y[404] * y[646])/(130e-6 + 1e-6 * y[404] * y[646])
    R2104 = (13.7 * 1e-6 * y[646] * y[929])/(130e-6 + 1e-6 * y[646] * y[929])
    R1080 = (13.7 * 1e-6 * y[1174] * y[36] * y[201])/(130e-6 + 1e-6 * y[1174] * y[36] * y[201])
    return (R2096 + R2097 + R2103 + R2104) - (R1080)
 
def m_rdmbzi_c(t, y):
    R2107 = (13.7 * 1e-6 * y[955] * y[173])/(130e-6 + 1e-6 * y[955] * y[173])
    R215 = (13.7 * 1e-6 * y[134] * y[1175])/(130e-6 + 1e-6 * y[134] * y[1175])
    return (R2107) - (R215)
 
def m_gmhep7p_c(t, y):
    R2110 = (13.7 * 1e-6 * y[1225])/(130e-6 + 1e-6 * y[1225])
    R1241 = (13.7 * 1e-6 * y[278] * y[1176])/(130e-6 + 1e-6 * y[278] * y[1176])
    return (R2110) - (R1241)
 
def m_sucorn_c(t, y):
    R2112 = (13.7 * 1e-6 * y[173] * y[36] * y[311])/(130e-6 + 1e-6 * y[173] * y[36] * y[311])
    R2182 = (13.7 * 1e-6 * y[213] * y[1177])/(130e-6 + 1e-6 * y[213] * y[1177])
    return (R2112) - (R2182)
 
def m_aps_c(t, y):
    R2113 = (13.7 * 1e-6 * y[278] * y[928] * y[173] * y[794])/(130e-6 + 1e-6 * y[278] * y[928] * y[173] * y[794])
    R136 = (13.7 * 1e-6 * y[1178] * y[278])/(130e-6 + 1e-6 * y[1178] * y[278])
    return (R2113) - (R136)
 
def m_pydx_c(t, y):
    R2116 = (13.7 * 1e-6 * y[173] * y[1025])/(130e-6 + 1e-6 * y[173] * y[1025])
    R2108 = (13.7 * 1e-6 * y[278] * y[1179])/(130e-6 + 1e-6 * y[278] * y[1179])
    return (R2116) - (R2108)
 
def m_pyr_p(t, y):
    R2120 = (13.7 * 1e-6 * y[1546])/(130e-6 + 1e-6 * y[1546])
    R2119 = (13.7 * 1e-6 * y[61] * y[1180])/(130e-6 + 1e-6 * y[61] * y[1180])
    return (R2120) - (R2119)
 
def m_sbt6p_c(t, y):
    R2121 = (13.7 * 1e-6 * y[563] * y[1182])/(130e-6 + 1e-6 * y[563] * y[1182])
    R2115 = (13.7 * 1e-6 * y[236] * y[1181])/(130e-6 + 1e-6 * y[236] * y[1181])
    return (R2121) - (R2115)
 
def m_sbt__D_p(t, y):
    R2122 = (13.7 * 1e-6 * y[1550])/(130e-6 + 1e-6 * y[1550])
    R2121 = (13.7 * 1e-6 * y[563] * y[1182])/(130e-6 + 1e-6 * y[563] * y[1182])
    return (R2122) - (R2121)
 
def m_o2s_c(t, y):
    R2123 = (13.7 * 1e-6 * y[335] * y[289])/(130e-6 + 1e-6 * y[335] * y[289])
    R2125 = (13.7 * 1e-6 * y[250] * y[335])/(130e-6 + 1e-6 * y[250] * y[335])
    R2197 = (13.7 * 1e-6 * y[36] * y[1183])/(130e-6 + 1e-6 * y[36] * y[1183])
    return (R2123 + R2125) - (R2197)
 
def m_26dap_LL_c(t, y):
    R2124 = (13.7 * 1e-6 * y[173] * y[1659])/(130e-6 + 1e-6 * y[173] * y[1659])
    R506 = (13.7 * 1e-6 * y[1184])/(130e-6 + 1e-6 * y[1184])
    return (R2124) - (R506)
 
def m_quln_c(t, y):
    R2127 = (13.7 * 1e-6 * y[492] * y[288])/(130e-6 + 1e-6 * y[492] * y[288])
    R1696 = (13.7 * 1e-6 * y[36] * y[983] * y[1185])/(130e-6 + 1e-6 * y[36] * y[983] * y[1185])
    return (R2127) - (R1696)
 
def m_sl2a6o_c(t, y):
    R2129 = (13.7 * 1e-6 * y[213] * y[1659])/(130e-6 + 1e-6 * y[213] * y[1659])
    R2162 = (13.7 * 1e-6 * y[173] * y[212] * y[502])/(130e-6 + 1e-6 * y[173] * y[212] * y[502])
    return (R2129 + R2162) - (0)
 
def m_sectrna_c(t, y):
    R2130 = (13.7 * 1e-6 * y[1188] * y[1195])/(130e-6 + 1e-6 * y[1188] * y[1195])
    return (R2130) - (0)
 
def m_selnp_c(t, y):
    R2131 = (13.7 * 1e-6 * y[278] * y[173] * y[1660])/(130e-6 + 1e-6 * y[278] * y[173] * y[1660])
    R2130 = (13.7 * 1e-6 * y[1188] * y[1195])/(130e-6 + 1e-6 * y[1188] * y[1195])
    return (R2131) - (R2130)
 
def m_seramp_c(t, y):
    R2132 = (13.7 * 1e-6 * y[278] * y[36] * y[500])/(130e-6 + 1e-6 * y[278] * y[36] * y[500])
    R699 = (13.7 * 1e-6 * y[499] * y[1189])/(130e-6 + 1e-6 * y[499] * y[1189])
    return (R2132) - (R699)
 
def m_acser_c(t, y):
    R2133 = (13.7 * 1e-6 * y[127] * y[500])/(130e-6 + 1e-6 * y[127] * y[500])
    R170 = (13.7 * 1e-6 * y[1190])/(130e-6 + 1e-6 * y[1190])
    R489 = (13.7 * 1e-6 * y[1190] * y[430])/(130e-6 + 1e-6 * y[1190] * y[430])
    return (R2133) - (R170 + R489)
 
def m_r15bp_c(t, y):
    R2136 = (13.7 * 1e-6 * y[278] * y[1172])/(130e-6 + 1e-6 * y[278] * y[1172])
    R2128 = (13.7 * 1e-6 * y[278] * y[1191])/(130e-6 + 1e-6 * y[278] * y[1191])
    return (R2136) - (R2128)
 
def m_r5p_p(t, y):
    R2139 = (13.7 * 1e-6 * y[1547])/(130e-6 + 1e-6 * y[1547])
    R2138 = (13.7 * 1e-6 * y[406] * y[1192])/(130e-6 + 1e-6 * y[406] * y[1192])
    return (R2139) - (R2138)
 
def m_dmlz_c(t, y):
    R2141 = (13.7 * 1e-6 * y[1094] * y[460])/(130e-6 + 1e-6 * y[1094] * y[460])
    R2142 = (13.7 * 1e-6 * y[1193])/(130e-6 + 1e-6 * y[1193])
    return (R2141) - (R2142)
 
def m_sertrna_c(t, y):
    R2143 = (13.7 * 1e-6 * y[278] * y[500] * y[1661])/(130e-6 + 1e-6 * y[278] * y[500] * y[1661])
    return (R2143) - (0)
 
def m_sertrna_sec_c(t, y):
    R2144 = (13.7 * 1e-6 * y[278] * y[500] * y[1662])/(130e-6 + 1e-6 * y[278] * y[500] * y[1662])
    R2130 = (13.7 * 1e-6 * y[1188] * y[1195])/(130e-6 + 1e-6 * y[1188] * y[1195])
    return (R2144) - (R2130)
 
def m_adprib_c(t, y):
    R2150 = (13.7 * 1e-6 * y[173] * y[236])/(130e-6 + 1e-6 * y[173] * y[236])
    R224 = (13.7 * 1e-6 * y[1196] * y[173])/(130e-6 + 1e-6 * y[1196] * y[173])
    return (R2150) - (R224)
 
def m_sucglu_c(t, y):
    R2152 = (13.7 * 1e-6 * y[173] * y[236] * y[1212])/(130e-6 + 1e-6 * y[173] * y[236] * y[1212])
    R2151 = (13.7 * 1e-6 * y[173] * y[1197])/(130e-6 + 1e-6 * y[173] * y[1197])
    return (R2152) - (R2151)
 
def m_lipidA_c(t, y):
    R2153 = (13.7 * 1e-6 * y[278] * y[868])/(130e-6 + 1e-6 * y[278] * y[868])
    R1780 = (13.7 * 1e-6 * y[854] * y[1198])/(130e-6 + 1e-6 * y[854] * y[1198])
    return (R2153) - (R1780)
 
def m_dsbdox_c(t, y):
    R2154 = (13.7 * 1e-6 * y[1434] * y[521])/(130e-6 + 1e-6 * y[1434] * y[521])
    R2156 = (13.7 * 1e-6 * y[521] * y[1435])/(130e-6 + 1e-6 * y[521] * y[1435])
    R620 = (13.7 * 1e-6 * y[1199] * y[1240])/(130e-6 + 1e-6 * y[1199] * y[1240])
    return (R2154 + R2156) - (R620)
 
def m_2shchc_c(t, y):
    R2158 = (13.7 * 1e-6 * y[806] * y[985])/(130e-6 + 1e-6 * y[806] * y[985])
    R2207 = (13.7 * 1e-6 * y[1200])/(130e-6 + 1e-6 * y[1200])
    return (R2158) - (R2207)
 
def m_thmpp_c(t, y):
    R2158 = (13.7 * 1e-6 * y[806] * y[985])/(130e-6 + 1e-6 * y[806] * y[985])
    R2232 = (13.7 * 1e-6 * y[278] * y[1233])/(130e-6 + 1e-6 * y[278] * y[1233])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R1778 = (13.7 * 1e-6 * y[213] * y[36] * y[1201])/(130e-6 + 1e-6 * y[213] * y[36] * y[1201])
    R2261 = (13.7 * 1e-6 * y[173] * y[1201])/(130e-6 + 1e-6 * y[173] * y[1201])
    return (R2158 + R2232) - (R926 + R1778 + R2261)
 
def m_scl_c(t, y):
    R2159 = (13.7 * 1e-6 * y[1310] * y[236])/(130e-6 + 1e-6 * y[1310] * y[236])
    R2160 = (13.7 * 1e-6 * y[283] * y[1202])/(130e-6 + 1e-6 * y[283] * y[1202])
    return (R2159) - (R2160)
 
def m_sheme_c(t, y):
    R2160 = (13.7 * 1e-6 * y[283] * y[1202])/(130e-6 + 1e-6 * y[283] * y[1202])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (R2160) - (R926)
 
def m_skm_c(t, y):
    R2163 = (13.7 * 1e-6 * y[529] * y[36] * y[201])/(130e-6 + 1e-6 * y[529] * y[36] * y[201])
    R2167 = (13.7 * 1e-6 * y[61] * y[1207])/(130e-6 + 1e-6 * y[61] * y[1207])
    R2165 = (13.7 * 1e-6 * y[278] * y[1204])/(130e-6 + 1e-6 * y[278] * y[1204])
    return (R2163 + R2167) - (R2165)
 
def m_skm5p_c(t, y):
    R2165 = (13.7 * 1e-6 * y[278] * y[1204])/(130e-6 + 1e-6 * y[278] * y[1204])
    R2027 = (13.7 * 1e-6 * y[563] * y[1205])/(130e-6 + 1e-6 * y[563] * y[1205])
    return (R2165) - (R2027)
 
def m_cyst__L_c(t, y):
    R2166 = (13.7 * 1e-6 * y[260] * y[829])/(130e-6 + 1e-6 * y[260] * y[829])
    R491 = (13.7 * 1e-6 * y[1206] * y[173])/(130e-6 + 1e-6 * y[1206] * y[173])
    return (R2166) - (R491)
 
def m_skm_p(t, y):
    R2168 = (13.7 * 1e-6 * y[1558])/(130e-6 + 1e-6 * y[1558])
    R2167 = (13.7 * 1e-6 * y[61] * y[1207])/(130e-6 + 1e-6 * y[61] * y[1207])
    return (R2168) - (R2167)
 
def m_so2_p(t, y):
    R2169 = (13.7 * 1e-6 * y[1559])/(130e-6 + 1e-6 * y[1559])
    R2177 = (13.7 * 1e-6 * y[1208])/(130e-6 + 1e-6 * y[1208])
    return (R2169) - (R2177)
 
def m_thm_c(t, y):
    R2174 = (13.7 * 1e-6 * y[278] * y[173] * y[1210])/(130e-6 + 1e-6 * y[278] * y[173] * y[1210])
    R2231 = (13.7 * 1e-6 * y[278] * y[1209])/(130e-6 + 1e-6 * y[278] * y[1209])
    return (R2174) - (R2231)
 
def m_thm_p(t, y):
    R2175 = (13.7 * 1e-6 * y[1571])/(130e-6 + 1e-6 * y[1571])
    R2174 = (13.7 * 1e-6 * y[278] * y[173] * y[1210])/(130e-6 + 1e-6 * y[278] * y[173] * y[1210])
    return (R2175) - (R2174)
 
def m_so4_p(t, y):
    R2180 = (13.7 * 1e-6 * y[1562])/(130e-6 + 1e-6 * y[1562])
    R2238 = (13.7 * 1e-6 * y[278] * y[173] * y[1211])/(130e-6 + 1e-6 * y[278] * y[173] * y[1211])
    return (R2180) - (R2238)
 
def m_sucgsa_c(t, y):
    R2182 = (13.7 * 1e-6 * y[213] * y[1177])/(130e-6 + 1e-6 * y[213] * y[1177])
    R2152 = (13.7 * 1e-6 * y[173] * y[236] * y[1212])/(130e-6 + 1e-6 * y[173] * y[236] * y[1212])
    return (R2182) - (R2152)
 
def m_N1aspmd_c(t, y):
    R2183 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    return (R2183) - (0)
 
def m_2obut_c(t, y):
    R2185 = (13.7 * 1e-6 * y[1216])/(130e-6 + 1e-6 * y[1216])
    R89 = (13.7 * 1e-6 * y[1214] * y[36] * y[92])/(130e-6 + 1e-6 * y[1214] * y[36] * y[92])
    R1821 = (13.7 * 1e-6 * y[1214] * y[99])/(130e-6 + 1e-6 * y[1214] * y[99])
    return (R2185) - (R89 + R1821)
 
def m_thrp_p(t, y):
    R2186 = (13.7 * 1e-6 * y[1573])/(130e-6 + 1e-6 * y[1573])
    R2074 = (13.7 * 1e-6 * y[406] * y[1215])/(130e-6 + 1e-6 * y[406] * y[1215])
    return (R2186) - (R2074)
 
def m_thr__L_c(t, y):
    R2187 = (13.7 * 1e-6 * y[173] * y[822])/(130e-6 + 1e-6 * y[173] * y[822])
    R2194 = (13.7 * 1e-6 * y[278] * y[173] * y[1167])/(130e-6 + 1e-6 * y[278] * y[173] * y[1167])
    R2196 = (13.7 * 1e-6 * y[61] * y[1167])/(130e-6 + 1e-6 * y[61] * y[1167])
    R2201 = (13.7 * 1e-6 * y[927] * y[1167])/(130e-6 + 1e-6 * y[927] * y[1167])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2179 = (13.7 * 1e-6 * y[1216])/(130e-6 + 1e-6 * y[1216])
    R2184 = (13.7 * 1e-6 * y[236] * y[1216])/(130e-6 + 1e-6 * y[236] * y[1216])
    R2185 = (13.7 * 1e-6 * y[1216])/(130e-6 + 1e-6 * y[1216])
    R2190 = (13.7 * 1e-6 * y[278] * y[1216] * y[1663])/(130e-6 + 1e-6 * y[278] * y[1216] * y[1663])
    R2195 = (13.7 * 1e-6 * y[61] * y[1216])/(130e-6 + 1e-6 * y[61] * y[1216])
    return (R2187 + R2194 + R2196 + R2201) - (R926 + R2179 + R2184 + R2185 + R2190 + R2195)
 
def m_n8aspmd_c(t, y):
    R2188 = (13.7 * 1e-6 * y[127] * y[766])/(130e-6 + 1e-6 * y[127] * y[766])
    return (R2188) - (0)
 
def m_thrtrna_c(t, y):
    R2190 = (13.7 * 1e-6 * y[278] * y[1216] * y[1663])/(130e-6 + 1e-6 * y[278] * y[1216] * y[1663])
    return (R2190) - (0)
 
def m_spmd_p(t, y):
    R2191 = (13.7 * 1e-6 * y[1563])/(130e-6 + 1e-6 * y[1563])
    R2189 = (13.7 * 1e-6 * y[278] * y[173] * y[1219])/(130e-6 + 1e-6 * y[278] * y[173] * y[1219])
    return (R2191) - (R2189)
 
def m_5mta_c(t, y):
    R2193 = (13.7 * 1e-6 * y[209] * y[183])/(130e-6 + 1e-6 * y[209] * y[183])
    R1906 = (13.7 * 1e-6 * y[1220] * y[173])/(130e-6 + 1e-6 * y[1220] * y[173])
    return (R2193) - (R1906)
 
def m_thym_p(t, y):
    R2203 = (13.7 * 1e-6 * y[61] * y[1232])/(130e-6 + 1e-6 * y[61] * y[1232])
    R2204 = (13.7 * 1e-6 * y[1574])/(130e-6 + 1e-6 * y[1574])
    return (R2203 + R2204) - (0)
 
def m_4hba_c(t, y):
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R585 = (13.7 * 1e-6 * y[1222])/(130e-6 + 1e-6 * y[1222])
    return (R2205) - (R585)
 
def m_sbzcoa_c(t, y):
    R2206 = (13.7 * 1e-6 * y[278] * y[99] * y[1224])/(130e-6 + 1e-6 * y[278] * y[99] * y[1224])
    R1722 = (13.7 * 1e-6 * y[1223])/(130e-6 + 1e-6 * y[1223])
    return (R2206) - (R1722)
 
def m_sucbz_c(t, y):
    R2207 = (13.7 * 1e-6 * y[1200])/(130e-6 + 1e-6 * y[1200])
    R2206 = (13.7 * 1e-6 * y[278] * y[99] * y[1224])/(130e-6 + 1e-6 * y[278] * y[99] * y[1224])
    return (R2207) - (R2206)
 
def m_s7p_c(t, y):
    R2209 = (13.7 * 1e-6 * y[227] * y[1156])/(130e-6 + 1e-6 * y[227] * y[1156])
    R2110 = (13.7 * 1e-6 * y[1225])/(130e-6 + 1e-6 * y[1225])
    R2241 = (13.7 * 1e-6 * y[480] * y[1225])/(130e-6 + 1e-6 * y[480] * y[1225])
    return (R2209) - (R2110 + R2241)
 
def m_tma_c(t, y):
    R2216 = (13.7 * 1e-6 * y[36] * y[250] * y[1664])/(130e-6 + 1e-6 * y[36] * y[250] * y[1664])
    R2218 = (13.7 * 1e-6 * y[507] * y[36] * y[1664])/(130e-6 + 1e-6 * y[507] * y[36] * y[1664])
    return (R2216 + R2218) - (0)
 
def m_tma_p(t, y):
    R2217 = (13.7 * 1e-6 * y[61] * y[250] * y[1231])/(130e-6 + 1e-6 * y[61] * y[250] * y[1231])
    R2220 = (13.7 * 1e-6 * y[507] * y[61] * y[1231])/(130e-6 + 1e-6 * y[507] * y[61] * y[1231])
    R2227 = (13.7 * 1e-6 * y[1576])/(130e-6 + 1e-6 * y[1576])
    return (R2217 + R2220 + R2227) - (0)
 
def m_sucr_p(t, y):
    R2223 = (13.7 * 1e-6 * y[1565])/(130e-6 + 1e-6 * y[1565])
    R2224 = (13.7 * 1e-6 * y[563] * y[1228])/(130e-6 + 1e-6 * y[563] * y[1228])
    return (R2223) - (R2224)
 
def m_suc6p_c(t, y):
    R2224 = (13.7 * 1e-6 * y[563] * y[1228])/(130e-6 + 1e-6 * y[563] * y[1228])
    R1078 = (13.7 * 1e-6 * y[173] * y[1229])/(130e-6 + 1e-6 * y[173] * y[1229])
    return (R2224) - (R1078)
 
def m_sulfac_c(t, y):
    R2225 = (13.7 * 1e-6 * y[278] * y[173] * y[1235])/(130e-6 + 1e-6 * y[278] * y[173] * y[1235])
    R982 = (13.7 * 1e-6 * y[655] * y[335] * y[1230])/(130e-6 + 1e-6 * y[655] * y[335] * y[1230])
    return (R2225) - (R982)
 
def m_tmao_p(t, y):
    R2226 = (13.7 * 1e-6 * y[1578])/(130e-6 + 1e-6 * y[1578])
    R2217 = (13.7 * 1e-6 * y[61] * y[250] * y[1231])/(130e-6 + 1e-6 * y[61] * y[250] * y[1231])
    R2220 = (13.7 * 1e-6 * y[507] * y[61] * y[1231])/(130e-6 + 1e-6 * y[507] * y[61] * y[1231])
    return (R2226) - (R2217 + R2220)
 
def m_thym_c(t, y):
    R2229 = (13.7 * 1e-6 * y[37] * y[975])/(130e-6 + 1e-6 * y[37] * y[975])
    R2203 = (13.7 * 1e-6 * y[61] * y[1232])/(130e-6 + 1e-6 * y[61] * y[1232])
    return (R2229) - (R2203)
 
def m_thmmp_c(t, y):
    R2231 = (13.7 * 1e-6 * y[278] * y[1209])/(130e-6 + 1e-6 * y[278] * y[1209])
    R2233 = (13.7 * 1e-6 * y[1099] * y[796] * y[36])/(130e-6 + 1e-6 * y[1099] * y[796] * y[36])
    R2261 = (13.7 * 1e-6 * y[173] * y[1201])/(130e-6 + 1e-6 * y[173] * y[1201])
    R2232 = (13.7 * 1e-6 * y[278] * y[1233])/(130e-6 + 1e-6 * y[278] * y[1233])
    return (R2231 + R2233 + R2261) - (R2232)
 
def m_2tpr3dpcoa_c(t, y):
    R2235 = (13.7 * 1e-6 * y[278] * y[1168])/(130e-6 + 1e-6 * y[278] * y[1168])
    return (R2235) - (0)
 
def m_sulfac_p(t, y):
    R2236 = (13.7 * 1e-6 * y[1566])/(130e-6 + 1e-6 * y[1566])
    R2225 = (13.7 * 1e-6 * y[278] * y[173] * y[1235])/(130e-6 + 1e-6 * y[278] * y[173] * y[1235])
    return (R2236) - (R2225)
 
def m_cdec3eACP_c(t, y):
    R2239 = (13.7 * 1e-6 * y[360])/(130e-6 + 1e-6 * y[360])
    R17 = (13.7 * 1e-6 * y[1236] * y[36] * y[918])/(130e-6 + 1e-6 * y[1236] * y[36] * y[918])
    return (R2239) - (R17)
 
def m_e4p_c(t, y):
    R2241 = (13.7 * 1e-6 * y[480] * y[1225])/(130e-6 + 1e-6 * y[480] * y[1225])
    R558 = (13.7 * 1e-6 * y[1237] * y[173] * y[563])/(130e-6 + 1e-6 * y[1237] * y[173] * y[563])
    R655 = (13.7 * 1e-6 * y[1237] * y[173] * y[236])/(130e-6 + 1e-6 * y[1237] * y[173] * y[236])
    R2210 = (13.7 * 1e-6 * y[1237] * y[1156])/(130e-6 + 1e-6 * y[1237] * y[1156])
    return (R2241) - (R558 + R655 + R2210)
 
def m_tartr__L_c(t, y):
    R2243 = (13.7 * 1e-6 * y[290] * y[1239])/(130e-6 + 1e-6 * y[290] * y[1239])
    R2242 = (13.7 * 1e-6 * y[1238])/(130e-6 + 1e-6 * y[1238])
    return (R2243) - (R2242)
 
def m_tartr__L_p(t, y):
    R2244 = (13.7 * 1e-6 * y[1568])/(130e-6 + 1e-6 * y[1568])
    R2243 = (13.7 * 1e-6 * y[290] * y[1239])/(130e-6 + 1e-6 * y[290] * y[1239])
    return (R2244) - (R2243)
 
def m_trdrd_c(t, y):
    R2245 = (13.7 * 1e-6 * y[36] * y[201] * y[522])/(130e-6 + 1e-6 * y[36] * y[201] * y[522])
    R620 = (13.7 * 1e-6 * y[1199] * y[1240])/(130e-6 + 1e-6 * y[1199] * y[1240])
    R1661 = (13.7 * 1e-6 * y[925] * y[1240])/(130e-6 + 1e-6 * y[925] * y[1240])
    R1662 = (13.7 * 1e-6 * y[926] * y[1240])/(130e-6 + 1e-6 * y[926] * y[1240])
    R1842 = (13.7 * 1e-6 * y[152] * y[1240])/(130e-6 + 1e-6 * y[152] * y[1240])
    R2081 = (13.7 * 1e-6 * y[35] * y[1240])/(130e-6 + 1e-6 * y[35] * y[1240])
    R2083 = (13.7 * 1e-6 * y[157] * y[1240])/(130e-6 + 1e-6 * y[157] * y[1240])
    R2092 = (13.7 * 1e-6 * y[456] * y[1240])/(130e-6 + 1e-6 * y[456] * y[1240])
    R2094 = (13.7 * 1e-6 * y[1240] * y[114])/(130e-6 + 1e-6 * y[1240] * y[114])
    R2170 = (13.7 * 1e-6 * y[93] * y[1240])/(130e-6 + 1e-6 * y[93] * y[1240])
    return (R2245) - (R620 + R1661 + R1662 + R1842 + R2081 + R2083 + R2092 + R2094 + R2170)
 
def m_tre_c(t, y):
    R2247 = (13.7 * 1e-6 * y[173] * y[1242])/(130e-6 + 1e-6 * y[173] * y[1242])
    R2249 = (13.7 * 1e-6 * y[173] * y[1241])/(130e-6 + 1e-6 * y[173] * y[1241])
    return (R2247) - (R2249)
 
def m_tre6p_c(t, y):
    R2248 = (13.7 * 1e-6 * y[108] * y[694])/(130e-6 + 1e-6 * y[108] * y[694])
    R2254 = (13.7 * 1e-6 * y[563] * y[1245])/(130e-6 + 1e-6 * y[563] * y[1245])
    R2246 = (13.7 * 1e-6 * y[173] * y[1242])/(130e-6 + 1e-6 * y[173] * y[1242])
    R2247 = (13.7 * 1e-6 * y[173] * y[1242])/(130e-6 + 1e-6 * y[173] * y[1242])
    return (R2248 + R2254) - (R2246 + R2247)
 
def m_aacald_c(t, y):
    R2250 = (13.7 * 1e-6 * y[213] * y[335] * y[1244])/(130e-6 + 1e-6 * y[213] * y[335] * y[1244])
    R595 = (13.7 * 1e-6 * y[1243])/(130e-6 + 1e-6 * y[1243])
    return (R2250) - (R595)
 
def m_taur_c(t, y):
    R2251 = (13.7 * 1e-6 * y[278] * y[173] * y[1246])/(130e-6 + 1e-6 * y[278] * y[173] * y[1246])
    R2250 = (13.7 * 1e-6 * y[213] * y[335] * y[1244])/(130e-6 + 1e-6 * y[213] * y[335] * y[1244])
    return (R2251) - (R2250)
 
def m_tre_p(t, y):
    R2255 = (13.7 * 1e-6 * y[1579])/(130e-6 + 1e-6 * y[1579])
    R2252 = (13.7 * 1e-6 * y[406] * y[1245])/(130e-6 + 1e-6 * y[406] * y[1245])
    R2254 = (13.7 * 1e-6 * y[563] * y[1245])/(130e-6 + 1e-6 * y[563] * y[1245])
    return (R2255) - (R2252 + R2254)
 
def m_taur_p(t, y):
    R2258 = (13.7 * 1e-6 * y[1569])/(130e-6 + 1e-6 * y[1569])
    R2251 = (13.7 * 1e-6 * y[278] * y[173] * y[1246])/(130e-6 + 1e-6 * y[278] * y[173] * y[1246])
    return (R2258) - (R2251)
 
def m_dtdp4aaddg_c(t, y):
    R2262 = (13.7 * 1e-6 * y[127] * y[1248])/(130e-6 + 1e-6 * y[127] * y[1248])
    R87 = (13.7 * 1e-6 * y[1247] * y[115])/(130e-6 + 1e-6 * y[1247] * y[115])
    return (R2262) - (R87)
 
def m_dtdp4addg_c(t, y):
    R2263 = (13.7 * 1e-6 * y[1253] * y[110])/(130e-6 + 1e-6 * y[1253] * y[110])
    R2262 = (13.7 * 1e-6 * y[127] * y[1248])/(130e-6 + 1e-6 * y[127] * y[1248])
    return (R2263) - (R2262)
 
def m_dtdp4d6dm_c(t, y):
    R2264 = (13.7 * 1e-6 * y[1253])/(130e-6 + 1e-6 * y[1253])
    R2265 = (13.7 * 1e-6 * y[1249] * y[36] * y[201])/(130e-6 + 1e-6 * y[1249] * y[36] * y[201])
    return (R2264) - (R2265)
 
def m_dtdprmn_c(t, y):
    R2265 = (13.7 * 1e-6 * y[1249] * y[36] * y[201])/(130e-6 + 1e-6 * y[1249] * y[36] * y[201])
    R2060 = (13.7 * 1e-6 * y[1250] * y[1002])/(130e-6 + 1e-6 * y[1250] * y[1002])
    return (R2265) - (R2060)
 
def m_trptrna_c(t, y):
    R2268 = (13.7 * 1e-6 * y[278] * y[1665] * y[1108])/(130e-6 + 1e-6 * y[278] * y[1665] * y[1108])
    return (R2268) - (0)
 
def m_cpppg3_c(t, y):
    R2270 = (13.7 * 1e-6 * y[36] * y[1311])/(130e-6 + 1e-6 * y[36] * y[1311])
    R477 = (13.7 * 1e-6 * y[1252] * y[36] * y[335])/(130e-6 + 1e-6 * y[1252] * y[36] * y[335])
    R481 = (13.7 * 1e-6 * y[921] * y[1252])/(130e-6 + 1e-6 * y[921] * y[1252])
    return (R2270) - (R477 + R481)
 
def m_dtdp4d6dg_c(t, y):
    R2271 = (13.7 * 1e-6 * y[652])/(130e-6 + 1e-6 * y[652])
    R2263 = (13.7 * 1e-6 * y[1253] * y[110])/(130e-6 + 1e-6 * y[1253] * y[110])
    R2264 = (13.7 * 1e-6 * y[1253])/(130e-6 + 1e-6 * y[1253])
    return (R2271) - (R2263 + R2264)
 
def m_trp__L_p(t, y):
    R2273 = (13.7 * 1e-6 * y[1580])/(130e-6 + 1e-6 * y[1580])
    R2269 = (13.7 * 1e-6 * y[61] * y[1254])/(130e-6 + 1e-6 * y[61] * y[1254])
    return (R2273) - (R2269)
 
def m_tsul_c(t, y):
    R2275 = (13.7 * 1e-6 * y[278] * y[173] * y[1256])/(130e-6 + 1e-6 * y[278] * y[173] * y[1256])
    R466 = (13.7 * 1e-6 * y[1404] * y[1255])/(130e-6 + 1e-6 * y[1404] * y[1255])
    return (R2275) - (R466)
 
def m_tsul_p(t, y):
    R2278 = (13.7 * 1e-6 * y[1582])/(130e-6 + 1e-6 * y[1582])
    R467 = (13.7 * 1e-6 * y[424] * y[1256])/(130e-6 + 1e-6 * y[424] * y[1256])
    R2275 = (13.7 * 1e-6 * y[278] * y[173] * y[1256])/(130e-6 + 1e-6 * y[278] * y[173] * y[1256])
    return (R2278) - (R467 + R2275)
 
def m_ura_p(t, y):
    R2281 = (13.7 * 1e-6 * y[1540])/(130e-6 + 1e-6 * y[1540])
    R2277 = (13.7 * 1e-6 * y[61] * y[1257])/(130e-6 + 1e-6 * y[61] * y[1257])
    R2279 = (13.7 * 1e-6 * y[61] * y[1257])/(130e-6 + 1e-6 * y[61] * y[1257])
    return (R2281) - (R2277 + R2279)
 
def m_oxur_c(t, y):
    R2282 = (13.7 * 1e-6 * y[236] * y[257])/(130e-6 + 1e-6 * y[236] * y[257])
    R1777 = (13.7 * 1e-6 * y[1258] * y[37])/(130e-6 + 1e-6 * y[1258] * y[37])
    return (R2282) - (R1777)
 
def m_tungs_c(t, y):
    R2285 = (13.7 * 1e-6 * y[278] * y[173] * y[1261])/(130e-6 + 1e-6 * y[278] * y[173] * y[1261])
    return (R2285) - (0)
 
def m_urea_p(t, y):
    R2286 = (13.7 * 1e-6 * y[1541])/(130e-6 + 1e-6 * y[1541])
    R2288 = (13.7 * 1e-6 * y[1260])/(130e-6 + 1e-6 * y[1260])
    return (R2286) - (R2288)
 
def m_tungs_p(t, y):
    R2287 = (13.7 * 1e-6 * y[1516])/(130e-6 + 1e-6 * y[1516])
    R2285 = (13.7 * 1e-6 * y[278] * y[173] * y[1261])/(130e-6 + 1e-6 * y[278] * y[173] * y[1261])
    return (R2287) - (R2285)
 
def m_tym_p(t, y):
    R2292 = (13.7 * 1e-6 * y[1518])/(130e-6 + 1e-6 * y[1518])
    R2293 = (13.7 * 1e-6 * y[406] * y[1004] * y[1262])/(130e-6 + 1e-6 * y[406] * y[1004] * y[1262])
    return (R2292) - (R2293)
 
def m_tyr__L_p(t, y):
    R2294 = (13.7 * 1e-6 * y[406] * y[1264])/(130e-6 + 1e-6 * y[406] * y[1264])
    R2306 = (13.7 * 1e-6 * y[1520])/(130e-6 + 1e-6 * y[1520])
    R2298 = (13.7 * 1e-6 * y[61] * y[1263])/(130e-6 + 1e-6 * y[61] * y[1263])
    return (R2294 + R2306) - (R2298)
 
def m_tyrp_p(t, y):
    R2295 = (13.7 * 1e-6 * y[1522])/(130e-6 + 1e-6 * y[1522])
    R2294 = (13.7 * 1e-6 * y[406] * y[1264])/(130e-6 + 1e-6 * y[406] * y[1264])
    return (R2295) - (R2294)
 
def m_tyrtrna_c(t, y):
    R2297 = (13.7 * 1e-6 * y[278] * y[1666] * y[1266])/(130e-6 + 1e-6 * y[278] * y[1666] * y[1266])
    return (R2297) - (0)
 
def m_tyr__L_c(t, y):
    R2298 = (13.7 * 1e-6 * y[61] * y[1263])/(130e-6 + 1e-6 * y[61] * y[1263])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2205 = (13.7 * 1e-6 * y[278] * y[260] * y[544] * y[1266])/(130e-6 + 1e-6 * y[278] * y[260] * y[544] * y[1266])
    R2296 = (13.7 * 1e-6 * y[213] * y[1266])/(130e-6 + 1e-6 * y[213] * y[1266])
    R2297 = (13.7 * 1e-6 * y[278] * y[1666] * y[1266])/(130e-6 + 1e-6 * y[278] * y[1666] * y[1266])
    return (R2298) - (R926 + R2205 + R2296 + R2297)
 
def m_lipidX_c(t, y):
    R2304 = (13.7 * 1e-6 * y[173] * y[1268])/(130e-6 + 1e-6 * y[173] * y[1268])
    R1494 = (13.7 * 1e-6 * y[1267] * y[1268])/(130e-6 + 1e-6 * y[1267] * y[1268])
    return (R2304) - (R1494)
 
def m_u23ga_c(t, y):
    R2307 = (13.7 * 1e-6 * y[543] * y[1304])/(130e-6 + 1e-6 * y[543] * y[1304])
    R1494 = (13.7 * 1e-6 * y[1267] * y[1268])/(130e-6 + 1e-6 * y[1267] * y[1268])
    R2304 = (13.7 * 1e-6 * y[173] * y[1268])/(130e-6 + 1e-6 * y[173] * y[1268])
    return (R2307) - (R1494 + R2304)
 
def m_ugmd_c(t, y):
    R2308 = (13.7 * 1e-6 * y[443] * y[278] * y[1290])/(130e-6 + 1e-6 * y[443] * y[278] * y[1290])
    R2373 = (13.7 * 1e-6 * y[34] * y[278] * y[1292])/(130e-6 + 1e-6 * y[34] * y[278] * y[1292])
    R2374 = (13.7 * 1e-6 * y[173] * y[1307])/(130e-6 + 1e-6 * y[173] * y[1307])
    R2369 = (13.7 * 1e-6 * y[218] * y[278] * y[1269])/(130e-6 + 1e-6 * y[218] * y[278] * y[1269])
    return (R2308 + R2373 + R2374) - (R2369)
 
def m_ump_p(t, y):
    R2309 = (13.7 * 1e-6 * y[406] * y[1294])/(130e-6 + 1e-6 * y[406] * y[1294])
    R2312 = (13.7 * 1e-6 * y[406] * y[1273])/(130e-6 + 1e-6 * y[406] * y[1273])
    R2358 = (13.7 * 1e-6 * y[406] * y[1297])/(130e-6 + 1e-6 * y[406] * y[1297])
    R2363 = (13.7 * 1e-6 * y[406] * y[1301])/(130e-6 + 1e-6 * y[406] * y[1301])
    R2366 = (13.7 * 1e-6 * y[406] * y[1300])/(130e-6 + 1e-6 * y[406] * y[1300])
    R2377 = (13.7 * 1e-6 * y[1539])/(130e-6 + 1e-6 * y[1539])
    R1742 = (13.7 * 1e-6 * y[406] * y[1270])/(130e-6 + 1e-6 * y[406] * y[1270])
    return (R2309 + R2312 + R2358 + R2363 + R2366 + R2377) - (R1742)
 
def m_valtrna_c(t, y):
    R2310 = (13.7 * 1e-6 * y[278] * y[1667] * y[1272])/(130e-6 + 1e-6 * y[278] * y[1667] * y[1272])
    return (R2310) - (0)
 
def m_val__L_c(t, y):
    R2311 = (13.7 * 1e-6 * y[278] * y[173] * y[1276])/(130e-6 + 1e-6 * y[278] * y[173] * y[1276])
    R2317 = (13.7 * 1e-6 * y[61] * y[1276])/(130e-6 + 1e-6 * y[61] * y[1276])
    R2319 = (13.7 * 1e-6 * y[490] * y[235])/(130e-6 + 1e-6 * y[490] * y[235])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2305 = (13.7 * 1e-6 * y[213] * y[1272])/(130e-6 + 1e-6 * y[213] * y[1272])
    R2310 = (13.7 * 1e-6 * y[278] * y[1667] * y[1272])/(130e-6 + 1e-6 * y[278] * y[1667] * y[1272])
    return (R2311 + R2317 + R2319) - (R926 + R2305 + R2310)
 
def m_uacgam_p(t, y):
    R2314 = (13.7 * 1e-6 * y[1526])/(130e-6 + 1e-6 * y[1526])
    R2312 = (13.7 * 1e-6 * y[406] * y[1273])/(130e-6 + 1e-6 * y[406] * y[1273])
    return (R2314) - (R2312)
 
def m_uacmamu_c(t, y):
    R2315 = (13.7 * 1e-6 * y[173] * y[236] * y[1275])/(130e-6 + 1e-6 * y[173] * y[236] * y[1275])
    R98 = (13.7 * 1e-6 * y[1274] * y[91])/(130e-6 + 1e-6 * y[1274] * y[91])
    return (R2315) - (R98)
 
def m_uacmam_c(t, y):
    R2316 = (13.7 * 1e-6 * y[1288])/(130e-6 + 1e-6 * y[1288])
    R2315 = (13.7 * 1e-6 * y[173] * y[236] * y[1275])/(130e-6 + 1e-6 * y[173] * y[236] * y[1275])
    return (R2316) - (R2315)
 
def m_val__L_p(t, y):
    R2318 = (13.7 * 1e-6 * y[1543])/(130e-6 + 1e-6 * y[1543])
    R2311 = (13.7 * 1e-6 * y[278] * y[173] * y[1276])/(130e-6 + 1e-6 * y[278] * y[173] * y[1276])
    R2317 = (13.7 * 1e-6 * y[61] * y[1276])/(130e-6 + 1e-6 * y[61] * y[1276])
    return (R2318) - (R2311 + R2317)
 
def m_u3aga_c(t, y):
    R2321 = (13.7 * 1e-6 * y[543] * y[1288])/(130e-6 + 1e-6 * y[543] * y[1288])
    R2370 = (13.7 * 1e-6 * y[173] * y[1277])/(130e-6 + 1e-6 * y[173] * y[1277])
    return (R2321) - (R2370)
 
def m_uaccg_c(t, y):
    R2322 = (13.7 * 1e-6 * y[563] * y[1288])/(130e-6 + 1e-6 * y[563] * y[1288])
    R2350 = (13.7 * 1e-6 * y[36] * y[201] * y[1278])/(130e-6 + 1e-6 * y[36] * y[201] * y[1278])
    return (R2322) - (R2350)
 
def m_urate_c(t, y):
    R2323 = (13.7 * 1e-6 * y[173] * y[236] * y[780])/(130e-6 + 1e-6 * y[173] * y[236] * y[780])
    R2290 = (13.7 * 1e-6 * y[173] * y[335] * y[1279])/(130e-6 + 1e-6 * y[173] * y[335] * y[1279])
    return (R2323) - (R2290)
 
def m_xan_p(t, y):
    R2325 = (13.7 * 1e-6 * y[1544])/(130e-6 + 1e-6 * y[1544])
    R2324 = (13.7 * 1e-6 * y[61] * y[1280])/(130e-6 + 1e-6 * y[61] * y[1280])
    R2326 = (13.7 * 1e-6 * y[1280])/(130e-6 + 1e-6 * y[1280])
    return (R2325) - (R2324 + R2326)
 
def m_xmp_p(t, y):
    R2327 = (13.7 * 1e-6 * y[1551])/(130e-6 + 1e-6 * y[1551])
    R1726 = (13.7 * 1e-6 * y[406] * y[1281])/(130e-6 + 1e-6 * y[406] * y[1281])
    return (R2327) - (R1726)
 
def m_xylu__D_c(t, y):
    R2332 = (13.7 * 1e-6 * y[1284])/(130e-6 + 1e-6 * y[1284])
    R2334 = (13.7 * 1e-6 * y[278] * y[1282])/(130e-6 + 1e-6 * y[278] * y[1282])
    return (R2332) - (R2334)
 
def m_xylu__L_p(t, y):
    R2337 = (13.7 * 1e-6 * y[1555])/(130e-6 + 1e-6 * y[1555])
    R2336 = (13.7 * 1e-6 * y[61] * y[1283])/(130e-6 + 1e-6 * y[61] * y[1283])
    return (R2337) - (R2336)
 
def m_xyl__D_c(t, y):
    R2338 = (13.7 * 1e-6 * y[278] * y[173] * y[1285])/(130e-6 + 1e-6 * y[278] * y[173] * y[1285])
    R2339 = (13.7 * 1e-6 * y[61] * y[1285])/(130e-6 + 1e-6 * y[61] * y[1285])
    R2332 = (13.7 * 1e-6 * y[1284])/(130e-6 + 1e-6 * y[1284])
    return (R2338 + R2339) - (R2332)
 
def m_xyl__D_p(t, y):
    R2340 = (13.7 * 1e-6 * y[1554])/(130e-6 + 1e-6 * y[1554])
    R2338 = (13.7 * 1e-6 * y[278] * y[173] * y[1285])/(130e-6 + 1e-6 * y[278] * y[173] * y[1285])
    R2339 = (13.7 * 1e-6 * y[61] * y[1285])/(130e-6 + 1e-6 * y[61] * y[1285])
    return (R2340) - (R2338 + R2339)
 
def m_zn2_p(t, y):
    R2341 = (13.7 * 1e-6 * y[278] * y[173] * y[1287])/(130e-6 + 1e-6 * y[278] * y[173] * y[1287])
    R2342 = (13.7 * 1e-6 * y[61] * y[1287])/(130e-6 + 1e-6 * y[61] * y[1287])
    R2345 = (13.7 * 1e-6 * y[1556])/(130e-6 + 1e-6 * y[1556])
    R2343 = (13.7 * 1e-6 * y[1286])/(130e-6 + 1e-6 * y[1286])
    R2344 = (13.7 * 1e-6 * y[278] * y[173] * y[1286])/(130e-6 + 1e-6 * y[278] * y[173] * y[1286])
    return (R2341 + R2342 + R2345) - (R2343 + R2344)
 
def m_zn2_c(t, y):
    R2343 = (13.7 * 1e-6 * y[1286])/(130e-6 + 1e-6 * y[1286])
    R2344 = (13.7 * 1e-6 * y[278] * y[173] * y[1286])/(130e-6 + 1e-6 * y[278] * y[173] * y[1286])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    R2341 = (13.7 * 1e-6 * y[278] * y[173] * y[1287])/(130e-6 + 1e-6 * y[278] * y[173] * y[1287])
    R2342 = (13.7 * 1e-6 * y[61] * y[1287])/(130e-6 + 1e-6 * y[61] * y[1287])
    return (R2343 + R2344) - (R926 + R2341 + R2342)
 
def m_uacgam_c(t, y):
    R2346 = (13.7 * 1e-6 * y[648] * y[36] * y[929])/(130e-6 + 1e-6 * y[648] * y[36] * y[929])
    R80 = (13.7 * 1e-6 * y[1288] * y[1293])/(130e-6 + 1e-6 * y[1288] * y[1293])
    R2316 = (13.7 * 1e-6 * y[1288])/(130e-6 + 1e-6 * y[1288])
    R2321 = (13.7 * 1e-6 * y[543] * y[1288])/(130e-6 + 1e-6 * y[543] * y[1288])
    R2322 = (13.7 * 1e-6 * y[563] * y[1288])/(130e-6 + 1e-6 * y[563] * y[1288])
    R2347 = (13.7 * 1e-6 * y[1288] * y[1021])/(130e-6 + 1e-6 * y[1288] * y[1021])
    return (R2346) - (R80 + R2316 + R2321 + R2322 + R2347)
 
def m_uaagmda_c(t, y):
    R2347 = (13.7 * 1e-6 * y[1288] * y[1021])/(130e-6 + 1e-6 * y[1288] * y[1021])
    R1862 = (13.7 * 1e-6 * y[1289])/(130e-6 + 1e-6 * y[1289])
    R1873 = (13.7 * 1e-6 * y[1035] * y[1289])/(130e-6 + 1e-6 * y[1035] * y[1289])
    return (R2347) - (R1862 + R1873)
 
def m_uamag_c(t, y):
    R2348 = (13.7 * 1e-6 * y[278] * y[1606] * y[1291])/(130e-6 + 1e-6 * y[278] * y[1606] * y[1291])
    R2308 = (13.7 * 1e-6 * y[443] * y[278] * y[1290])/(130e-6 + 1e-6 * y[443] * y[278] * y[1290])
    return (R2348) - (R2308)
 
def m_uama_c(t, y):
    R2349 = (13.7 * 1e-6 * y[235] * y[278] * y[1292])/(130e-6 + 1e-6 * y[235] * y[278] * y[1292])
    R2348 = (13.7 * 1e-6 * y[278] * y[1606] * y[1291])/(130e-6 + 1e-6 * y[278] * y[1606] * y[1291])
    return (R2349) - (R2348)
 
def m_uamr_c(t, y):
    R2350 = (13.7 * 1e-6 * y[36] * y[201] * y[1278])/(130e-6 + 1e-6 * y[36] * y[201] * y[1278])
    R2349 = (13.7 * 1e-6 * y[235] * y[278] * y[1292])/(130e-6 + 1e-6 * y[235] * y[278] * y[1292])
    R2373 = (13.7 * 1e-6 * y[34] * y[278] * y[1292])/(130e-6 + 1e-6 * y[34] * y[278] * y[1292])
    R2375 = (13.7 * 1e-6 * y[63] * y[278] * y[1292])/(130e-6 + 1e-6 * y[63] * y[278] * y[1292])
    return (R2350) - (R2349 + R2373 + R2375)
 
def m_udcpp_c(t, y):
    R2351 = (13.7 * 1e-6 * y[173] * y[1036])/(130e-6 + 1e-6 * y[173] * y[1036])
    R2354 = (13.7 * 1e-6 * y[838])/(130e-6 + 1e-6 * y[838])
    R80 = (13.7 * 1e-6 * y[1288] * y[1293])/(130e-6 + 1e-6 * y[1288] * y[1293])
    R1839 = (13.7 * 1e-6 * y[1293] * y[1303])/(130e-6 + 1e-6 * y[1293] * y[1303])
    R2380 = (13.7 * 1e-6 * y[1293] * y[1305])/(130e-6 + 1e-6 * y[1293] * y[1305])
    return (R2351 + R2354) - (R80 + R1839 + R2380)
 
def m_udpacgal_p(t, y):
    R2355 = (13.7 * 1e-6 * y[1527])/(130e-6 + 1e-6 * y[1527])
    R2309 = (13.7 * 1e-6 * y[406] * y[1294])/(130e-6 + 1e-6 * y[406] * y[1294])
    return (R2355) - (R2309)
 
def m_udpgal_c(t, y):
    R2356 = (13.7 * 1e-6 * y[694])/(130e-6 + 1e-6 * y[694])
    R2367 = (13.7 * 1e-6 * y[679] * y[694])/(130e-6 + 1e-6 * y[679] * y[694])
    R2357 = (13.7 * 1e-6 * y[1295])/(130e-6 + 1e-6 * y[1295])
    return (R2356 + R2367) - (R2357)
 
def m_udpgalfur_c(t, y):
    R2357 = (13.7 * 1e-6 * y[1295])/(130e-6 + 1e-6 * y[1295])
    R1800 = (13.7 * 1e-6 * y[998] * y[1296])/(130e-6 + 1e-6 * y[998] * y[1296])
    return (R2357) - (R1800)
 
def m_udpgal_p(t, y):
    R2359 = (13.7 * 1e-6 * y[1533])/(130e-6 + 1e-6 * y[1533])
    R2358 = (13.7 * 1e-6 * y[406] * y[1297])/(130e-6 + 1e-6 * y[406] * y[1297])
    return (R2359) - (R2358)
 
def m_udpglcur_c(t, y):
    R2360 = (13.7 * 1e-6 * y[173] * y[236] * y[694])/(130e-6 + 1e-6 * y[173] * y[236] * y[694])
    R2361 = (13.7 * 1e-6 * y[236] * y[1298])/(130e-6 + 1e-6 * y[236] * y[1298])
    return (R2360) - (R2361)
 
def m_udpLa4o_c(t, y):
    R2361 = (13.7 * 1e-6 * y[236] * y[1298])/(130e-6 + 1e-6 * y[236] * y[1298])
    R2365 = (13.7 * 1e-6 * y[110] * y[1299])/(130e-6 + 1e-6 * y[110] * y[1299])
    return (R2361) - (R2365)
 
def m_udpglcur_p(t, y):
    R2362 = (13.7 * 1e-6 * y[1534])/(130e-6 + 1e-6 * y[1534])
    R2366 = (13.7 * 1e-6 * y[406] * y[1300])/(130e-6 + 1e-6 * y[406] * y[1300])
    return (R2362) - (R2366)
 
def m_udpg_p(t, y):
    R2364 = (13.7 * 1e-6 * y[1532])/(130e-6 + 1e-6 * y[1532])
    R2363 = (13.7 * 1e-6 * y[406] * y[1301])/(130e-6 + 1e-6 * y[406] * y[1301])
    return (R2364) - (R2363)
 
def m_udpLa4n_c(t, y):
    R2365 = (13.7 * 1e-6 * y[110] * y[1299])/(130e-6 + 1e-6 * y[110] * y[1299])
    R2371 = (13.7 * 1e-6 * y[1057] * y[1302])/(130e-6 + 1e-6 * y[1057] * y[1302])
    return (R2365) - (R2371)
 
def m_ugmda_c(t, y):
    R2369 = (13.7 * 1e-6 * y[218] * y[278] * y[1269])/(130e-6 + 1e-6 * y[218] * y[278] * y[1269])
    R1839 = (13.7 * 1e-6 * y[1293] * y[1303])/(130e-6 + 1e-6 * y[1293] * y[1303])
    return (R2369) - (R1839)
 
def m_u3hga_c(t, y):
    R2370 = (13.7 * 1e-6 * y[173] * y[1277])/(130e-6 + 1e-6 * y[173] * y[1277])
    R2307 = (13.7 * 1e-6 * y[543] * y[1304])/(130e-6 + 1e-6 * y[543] * y[1304])
    return (R2370) - (R2307)
 
def m_udpLa4fn_c(t, y):
    R2371 = (13.7 * 1e-6 * y[1057] * y[1302])/(130e-6 + 1e-6 * y[1057] * y[1302])
    R2380 = (13.7 * 1e-6 * y[1293] * y[1305])/(130e-6 + 1e-6 * y[1293] * y[1305])
    return (R2371) - (R2380)
 
def m_uLa4n_p(t, y):
    R2372 = (13.7 * 1e-6 * y[1308])/(130e-6 + 1e-6 * y[1308])
    R1437 = (13.7 * 1e-6 * y[409] * y[1306])/(130e-6 + 1e-6 * y[409] * y[1306])
    return (R2372) - (R1437)
 
def m_um4p_c(t, y):
    R2375 = (13.7 * 1e-6 * y[63] * y[278] * y[1292])/(130e-6 + 1e-6 * y[63] * y[278] * y[1292])
    R2374 = (13.7 * 1e-6 * y[173] * y[1307])/(130e-6 + 1e-6 * y[173] * y[1307])
    return (R2375) - (R2374)
 
def m_uLa4n_c(t, y):
    R2379 = (13.7 * 1e-6 * y[173] * y[1309])/(130e-6 + 1e-6 * y[173] * y[1309])
    R2372 = (13.7 * 1e-6 * y[1308])/(130e-6 + 1e-6 * y[1308])
    return (R2379) - (R2372)
 
def m_uLa4fn_c(t, y):
    R2380 = (13.7 * 1e-6 * y[1293] * y[1305])/(130e-6 + 1e-6 * y[1293] * y[1305])
    R2379 = (13.7 * 1e-6 * y[173] * y[1309])/(130e-6 + 1e-6 * y[173] * y[1309])
    return (R2380) - (R2379)
 
def m_dscl_c(t, y):
    R2381 = (13.7 * 1e-6 * y[921] * y[1311])/(130e-6 + 1e-6 * y[921] * y[1311])
    R2159 = (13.7 * 1e-6 * y[1310] * y[236])/(130e-6 + 1e-6 * y[1310] * y[236])
    return (R2381) - (R2159)
 
def m_uppg3_c(t, y):
    R2382 = (13.7 * 1e-6 * y[810])/(130e-6 + 1e-6 * y[810])
    R2270 = (13.7 * 1e-6 * y[36] * y[1311])/(130e-6 + 1e-6 * y[36] * y[1311])
    R2381 = (13.7 * 1e-6 * y[921] * y[1311])/(130e-6 + 1e-6 * y[921] * y[1311])
    return (R2382) - (R2270 + R2381)
 
def m_acser_e(t, y):
    R3 = (13.7 * 1e-6 * y[1312])/(130e-6 + 1e-6 * y[1312])
    R167 = (13.7 * 1e-6 * y[1312])/(130e-6 + 1e-6 * y[1312])
    return (0) - (R3 + R167)
 
def m_LalaDgluMdap_e(t, y):
    R33 = (13.7 * 1e-6 * y[1313])/(130e-6 + 1e-6 * y[1313])
    R771 = (13.7 * 1e-6 * y[1313])/(130e-6 + 1e-6 * y[1313])
    return (0) - (R33 + R771)
 
def m_3ump_e(t, y):
    R34 = (13.7 * 1e-6 * y[1314])/(130e-6 + 1e-6 * y[1314])
    R759 = (13.7 * 1e-6 * y[1314])/(130e-6 + 1e-6 * y[1314])
    return (0) - (R34 + R759)
 
def m_4hoxpacd_e(t, y):
    R36 = (13.7 * 1e-6 * y[1315])/(130e-6 + 1e-6 * y[1315])
    R764 = (13.7 * 1e-6 * y[1315])/(130e-6 + 1e-6 * y[1315])
    return (0) - (R36 + R764)
 
def m_12ppd__R_e(t, y):
    R42 = (13.7 * 1e-6 * y[1316])/(130e-6 + 1e-6 * y[1316])
    R721 = (13.7 * 1e-6 * y[1316])/(130e-6 + 1e-6 * y[1316])
    return (0) - (R42 + R721)
 
def m_12ppd__S_e(t, y):
    R44 = (13.7 * 1e-6 * y[1317])/(130e-6 + 1e-6 * y[1317])
    R727 = (13.7 * 1e-6 * y[1317])/(130e-6 + 1e-6 * y[1317])
    return (0) - (R44 + R727)
 
def m_14glucan_e(t, y):
    R47 = (13.7 * 1e-6 * y[1318])/(130e-6 + 1e-6 * y[1318])
    R728 = (13.7 * 1e-6 * y[1318])/(130e-6 + 1e-6 * y[1318])
    return (0) - (R47 + R728)
 
def m_23camp_e(t, y):
    R48 = (13.7 * 1e-6 * y[1319])/(130e-6 + 1e-6 * y[1319])
    R730 = (13.7 * 1e-6 * y[1319])/(130e-6 + 1e-6 * y[1319])
    return (0) - (R48 + R730)
 
def m_23ccmp_e(t, y):
    R49 = (13.7 * 1e-6 * y[1320])/(130e-6 + 1e-6 * y[1320])
    R732 = (13.7 * 1e-6 * y[1320])/(130e-6 + 1e-6 * y[1320])
    return (0) - (R49 + R732)
 
def m_23cgmp_e(t, y):
    R50 = (13.7 * 1e-6 * y[1321])/(130e-6 + 1e-6 * y[1321])
    R737 = (13.7 * 1e-6 * y[1321])/(130e-6 + 1e-6 * y[1321])
    return (0) - (R50 + R737)
 
def m_23cump_e(t, y):
    R51 = (13.7 * 1e-6 * y[1322])/(130e-6 + 1e-6 * y[1322])
    R738 = (13.7 * 1e-6 * y[1322])/(130e-6 + 1e-6 * y[1322])
    return (0) - (R51 + R738)
 
def m_23dappa_e(t, y):
    R53 = (13.7 * 1e-6 * y[1323])/(130e-6 + 1e-6 * y[1323])
    R742 = (13.7 * 1e-6 * y[1323])/(130e-6 + 1e-6 * y[1323])
    return (0) - (R53 + R742)
 
def m_LalaDgluMdapDala_e(t, y):
    R57 = (13.7 * 1e-6 * y[1324])/(130e-6 + 1e-6 * y[1324])
    R767 = (13.7 * 1e-6 * y[1324])/(130e-6 + 1e-6 * y[1324])
    return (0) - (R57 + R767)
 
def m_5dglcn_e(t, y):
    R60 = (13.7 * 1e-6 * y[1325])/(130e-6 + 1e-6 * y[1325])
    R766 = (13.7 * 1e-6 * y[1325])/(130e-6 + 1e-6 * y[1325])
    return (0) - (R60 + R766)
 
def m_26dap__M_e(t, y):
    R67 = (13.7 * 1e-6 * y[1326])/(130e-6 + 1e-6 * y[1326])
    R743 = (13.7 * 1e-6 * y[1326])/(130e-6 + 1e-6 * y[1326])
    return (0) - (R67 + R743)
 
def m_acgam1p_e(t, y):
    R73 = (13.7 * 1e-6 * y[1327])/(130e-6 + 1e-6 * y[1327])
    R783 = (13.7 * 1e-6 * y[1327])/(130e-6 + 1e-6 * y[1327])
    return (0) - (R73 + R783)
 
def m_acgam_e(t, y):
    R83 = (13.7 * 1e-6 * y[1328])/(130e-6 + 1e-6 * y[1328])
    R785 = (13.7 * 1e-6 * y[1328])/(130e-6 + 1e-6 * y[1328])
    return (0) - (R83 + R785)
 
def m_arbt6p_c(t, y):
    R94 = (13.7 * 1e-6 * y[1329] * y[173])/(130e-6 + 1e-6 * y[1329] * y[173])
    return (0) - (R94)
 
def m_4abut_e(t, y):
    R100 = (13.7 * 1e-6 * y[1330])/(130e-6 + 1e-6 * y[1330])
    R763 = (13.7 * 1e-6 * y[1330])/(130e-6 + 1e-6 * y[1330])
    return (0) - (R100 + R763)
 
def m_acac_e(t, y):
    R105 = (13.7 * 1e-6 * y[1331])/(130e-6 + 1e-6 * y[1331])
    R774 = (13.7 * 1e-6 * y[1331])/(130e-6 + 1e-6 * y[1331])
    return (0) - (R105 + R774)
 
def m_acmana_e(t, y):
    R106 = (13.7 * 1e-6 * y[1332])/(130e-6 + 1e-6 * y[1332])
    R786 = (13.7 * 1e-6 * y[1332])/(130e-6 + 1e-6 * y[1332])
    return (0) - (R106 + R786)
 
def m_acmum_e(t, y):
    R108 = (13.7 * 1e-6 * y[1333])/(130e-6 + 1e-6 * y[1333])
    R790 = (13.7 * 1e-6 * y[1333])/(130e-6 + 1e-6 * y[1333])
    return (0) - (R108 + R790)
 
def m_acald_e(t, y):
    R111 = (13.7 * 1e-6 * y[1334])/(130e-6 + 1e-6 * y[1334])
    R775 = (13.7 * 1e-6 * y[1334])/(130e-6 + 1e-6 * y[1334])
    return (0) - (R111 + R775)
 
def m_acnam_e(t, y):
    R112 = (13.7 * 1e-6 * y[1335])/(130e-6 + 1e-6 * y[1335])
    R791 = (13.7 * 1e-6 * y[1335])/(130e-6 + 1e-6 * y[1335])
    return (0) - (R112 + R791)
 
def m_acgal1p_e(t, y):
    R124 = (13.7 * 1e-6 * y[1336])/(130e-6 + 1e-6 * y[1336])
    R780 = (13.7 * 1e-6 * y[1336])/(130e-6 + 1e-6 * y[1336])
    return (0) - (R124 + R780)
 
def m_acgal_e(t, y):
    R125 = (13.7 * 1e-6 * y[1337])/(130e-6 + 1e-6 * y[1337])
    R781 = (13.7 * 1e-6 * y[1337])/(130e-6 + 1e-6 * y[1337])
    return (0) - (R125 + R781)
 
def m_acorn_c(t, y):
    R135 = (13.7 * 1e-6 * y[1338] * y[173])/(130e-6 + 1e-6 * y[1338] * y[173])
    R157 = (13.7 * 1e-6 * y[1338] * y[213])/(130e-6 + 1e-6 * y[1338] * y[213])
    return (0) - (R135 + R157)
 
def m_acon_T_c(t, y):
    R153 = (13.7 * 1e-6 * y[1339])/(130e-6 + 1e-6 * y[1339])
    R154 = (13.7 * 1e-6 * y[1339] * y[921])/(130e-6 + 1e-6 * y[1339] * y[921])
    return (0) - (R153 + R154)
 
def m_apoACP_c(t, y):
    R165 = (13.7 * 1e-6 * y[1340] * y[99])/(130e-6 + 1e-6 * y[1340] * y[99])
    return (0) - (R165)
 
def m_agm_e(t, y):
    R171 = (13.7 * 1e-6 * y[1341])/(130e-6 + 1e-6 * y[1341])
    R706 = (13.7 * 1e-6 * y[1341])/(130e-6 + 1e-6 * y[1341])
    return (0) - (R171 + R706)
 
def m_ac_e(t, y):
    R177 = (13.7 * 1e-6 * y[1342])/(130e-6 + 1e-6 * y[1342])
    R773 = (13.7 * 1e-6 * y[1342])/(130e-6 + 1e-6 * y[1342])
    return (0) - (R177 + R773)
 
def m_ag_c(t, y):
    R189 = (13.7 * 1e-6 * y[1343] * y[1344])/(130e-6 + 1e-6 * y[1343] * y[1344])
    return (0) - (R189)
 
def m_h_e(t, y):
    R189 = (13.7 * 1e-6 * y[1343] * y[1344])/(130e-6 + 1e-6 * y[1343] * y[1344])
    R460 = (13.7 * 1e-6 * y[1401] * y[1344])/(130e-6 + 1e-6 * y[1401] * y[1344])
    R1280 = (13.7 * 999999.0 * y[1344])/(130e-6 + 999999.0 * y[1344])
    R1369 = (13.7 * 1e-6 * y[1344])/(130e-6 + 1e-6 * y[1344])
    R1482 = (13.7 * 1e-6 * y[413] * y[1344] * y[1614])/(130e-6 + 1e-6 * y[413] * y[1344] * y[1614])
    R1483 = (13.7 * 1e-6 * y[1344] * y[1614] * y[865])/(130e-6 + 1e-6 * y[1344] * y[1614] * y[865])
    return (0) - (R189 + R460 + R1280 + R1369 + R1482 + R1483)
 
def m_ade_e(t, y):
    R191 = (13.7 * 1e-6 * y[1345])/(130e-6 + 1e-6 * y[1345])
    R554 = (13.7 * 1e-6 * y[1345])/(130e-6 + 1e-6 * y[1345])
    return (0) - (R191 + R554)
 
def m_5aizc_c(t, y):
    R202 = (13.7 * 1e-6 * y[1346])/(130e-6 + 1e-6 * y[1346])
    R2037 = (13.7 * 1e-6 * y[1346] * y[300] * y[278])/(130e-6 + 1e-6 * y[1346] * y[300] * y[278])
    return (0) - (R202 + R2037)
 
def m_akg_e(t, y):
    R205 = (13.7 * 1e-6 * y[1347])/(130e-6 + 1e-6 * y[1347])
    R711 = (13.7 * 1e-6 * y[1347])/(130e-6 + 1e-6 * y[1347])
    return (0) - (R205 + R711)
 
def m_adn_e(t, y):
    R213 = (13.7 * 1e-6 * y[1348])/(130e-6 + 1e-6 * y[1348])
    R702 = (13.7 * 1e-6 * y[1348])/(130e-6 + 1e-6 * y[1348])
    return (0) - (R213 + R702)
 
def m_adocbl_e(t, y):
    R217 = (13.7 * 1e-6 * y[1349] * y[61])/(130e-6 + 1e-6 * y[1349] * y[61])
    R703 = (13.7 * 1e-6 * y[1349])/(130e-6 + 1e-6 * y[1349])
    return (0) - (R217 + R703)
 
def m_alaala_e(t, y):
    R218 = (13.7 * 1e-6 * y[1350])/(130e-6 + 1e-6 * y[1350])
    R718 = (13.7 * 1e-6 * y[1350])/(130e-6 + 1e-6 * y[1350])
    return (0) - (R218 + R718)
 
def m_all__D_e(t, y):
    R226 = (13.7 * 1e-6 * y[1351])/(130e-6 + 1e-6 * y[1351])
    R719 = (13.7 * 1e-6 * y[1351])/(130e-6 + 1e-6 * y[1351])
    return (0) - (R226 + R719)
 
def m_alpp_p(t, y):
    R227 = (13.7 * 1e-6 * y[1352] * y[1037])/(130e-6 + 1e-6 * y[1352] * y[1037])
    R228 = (13.7 * 1e-6 * y[1352] * y[370])/(130e-6 + 1e-6 * y[1352] * y[370])
    return (0) - (R227 + R228)
 
def m_trnaala_c(t, y):
    R230 = (13.7 * 1e-6 * y[235] * y[278] * y[1353])/(130e-6 + 1e-6 * y[235] * y[278] * y[1353])
    return (0) - (R230)
 
def m_altrn_c(t, y):
    R236 = (13.7 * 1e-6 * y[1354])/(130e-6 + 1e-6 * y[1354])
    R2240 = (13.7 * 1e-6 * y[1354] * y[236])/(130e-6 + 1e-6 * y[1354] * y[236])
    return (0) - (R236 + R2240)
 
def m_ala__L_e(t, y):
    R238 = (13.7 * 1e-6 * y[1355])/(130e-6 + 1e-6 * y[1355])
    R714 = (13.7 * 1e-6 * y[1355])/(130e-6 + 1e-6 * y[1355])
    return (0) - (R238 + R714)
 
def m_ppal_c(t, y):
    R258 = (13.7 * 1e-6 * y[173] * y[6] * y[1356])/(130e-6 + 1e-6 * y[173] * y[6] * y[1356])
    R1978 = (13.7 * 1e-6 * y[1356])/(130e-6 + 1e-6 * y[1356])
    return (0) - (R258 + R1978)
 
def m_amp_e(t, y):
    R267 = (13.7 * 1e-6 * y[1357])/(130e-6 + 1e-6 * y[1357])
    R722 = (13.7 * 1e-6 * y[1357])/(130e-6 + 1e-6 * y[1357])
    return (0) - (R267 + R722)
 
def m_alltn_e(t, y):
    R268 = (13.7 * 1e-6 * y[1358])/(130e-6 + 1e-6 * y[1358])
    R720 = (13.7 * 1e-6 * y[1358])/(130e-6 + 1e-6 * y[1358])
    return (0) - (R268 + R720)
 
def m_anhgm_e(t, y):
    R271 = (13.7 * 1e-6 * y[1359])/(130e-6 + 1e-6 * y[1359])
    R724 = (13.7 * 1e-6 * y[1359])/(130e-6 + 1e-6 * y[1359])
    return (0) - (R271 + R724)
 
def m_pmcoa_c(t, y):
    R279 = (13.7 * 1e-6 * y[235] * y[36] * y[1360])/(130e-6 + 1e-6 * y[235] * y[36] * y[1360])
    return (0) - (R279)
 
def m_ap4a_c(t, y):
    R280 = (13.7 * 1e-6 * y[1361] * y[173])/(130e-6 + 1e-6 * y[1361] * y[173])
    return (0) - (R280)
 
def m_asn__L_e(t, y):
    R281 = (13.7 * 1e-6 * y[1362])/(130e-6 + 1e-6 * y[1362])
    R736 = (13.7 * 1e-6 * y[1362])/(130e-6 + 1e-6 * y[1362])
    return (0) - (R281 + R736)
 
def m_aso3_e(t, y):
    R284 = (13.7 * 1e-6 * y[1363])/(130e-6 + 1e-6 * y[1363])
    R739 = (13.7 * 1e-6 * y[1363])/(130e-6 + 1e-6 * y[1363])
    return (0) - (R284 + R739)
 
def m_ap5a_c(t, y):
    R286 = (13.7 * 1e-6 * y[1364] * y[173])/(130e-6 + 1e-6 * y[1364] * y[173])
    return (0) - (R286)
 
def m_fe3_e(t, y):
    R299 = (13.7 * 1e-6 * y[293] * y[1365])/(130e-6 + 1e-6 * y[293] * y[1365])
    R472 = (13.7 * 1e-6 * y[419] * y[1365])/(130e-6 + 1e-6 * y[419] * y[1365])
    R855 = (13.7 * 999999.0 * y[1365])/(130e-6 + 999999.0 * y[1365])
    R1016 = (13.7 * 1e-6 * y[1365] * y[611])/(130e-6 + 1e-6 * y[1365] * y[611])
    R1024 = (13.7 * 1e-6 * y[1365])/(130e-6 + 1e-6 * y[1365])
    R1037 = (13.7 * 1e-6 * y[1365] * y[617])/(130e-6 + 1e-6 * y[1365] * y[617])
    R1051 = (13.7 * 1e-6 * y[628] * y[1365])/(130e-6 + 1e-6 * y[628] * y[1365])
    R1071 = (13.7 * 1e-6 * y[1365] * y[637])/(130e-6 + 1e-6 * y[1365] * y[637])
    return (0) - (R299 + R472 + R855 + R1016 + R1024 + R1037 + R1051 + R1071)
 
def m_trnaasp_c(t, y):
    R307 = (13.7 * 1e-6 * y[300] * y[278] * y[1366])/(130e-6 + 1e-6 * y[300] * y[278] * y[1366])
    return (0) - (R307)
 
def m_2dhglcn_c(t, y):
    R312 = (13.7 * 1e-6 * y[1367] * y[36] * y[113])/(130e-6 + 1e-6 * y[1367] * y[36] * y[113])
    R319 = (13.7 * 1e-6 * y[1367] * y[36] * y[201])/(130e-6 + 1e-6 * y[1367] * y[36] * y[201])
    return (0) - (R312 + R319)
 
def m_asp__L_e(t, y):
    R315 = (13.7 * 1e-6 * y[1368])/(130e-6 + 1e-6 * y[1368])
    R741 = (13.7 * 1e-6 * y[1368])/(130e-6 + 1e-6 * y[1368])
    return (0) - (R315 + R741)
 
def m_arab__L_e(t, y):
    R316 = (13.7 * 1e-6 * y[1369])/(130e-6 + 1e-6 * y[1369])
    R725 = (13.7 * 1e-6 * y[1369])/(130e-6 + 1e-6 * y[1369])
    return (0) - (R316 + R725)
 
def m_trnaarg_c(t, y):
    R324 = (13.7 * 1e-6 * y[303] * y[278] * y[1370])/(130e-6 + 1e-6 * y[303] * y[278] * y[1370])
    return (0) - (R324)
 
def m_aso4_c(t, y):
    R326 = (13.7 * 1e-6 * y[1371] * y[763])/(130e-6 + 1e-6 * y[1371] * y[763])
    return (0) - (R326)
 
def m_athr__L_c(t, y):
    R328 = (13.7 * 1e-6 * y[1372] * y[6])/(130e-6 + 1e-6 * y[1372] * y[6])
    R2176 = (13.7 * 1e-6 * y[1372])/(130e-6 + 1e-6 * y[1372])
    return (0) - (R328 + R2176)
 
def m_arg__L_e(t, y):
    R335 = (13.7 * 1e-6 * y[1373])/(130e-6 + 1e-6 * y[1373])
    R733 = (13.7 * 1e-6 * y[1373])/(130e-6 + 1e-6 * y[1373])
    return (0) - (R335 + R733)
 
def m_ala_B_e(t, y):
    R337 = (13.7 * 1e-6 * y[1374])/(130e-6 + 1e-6 * y[1374])
    R712 = (13.7 * 1e-6 * y[1374])/(130e-6 + 1e-6 * y[1374])
    return (0) - (R337 + R712)
 
def m_ascb__L_e(t, y):
    R341 = (13.7 * 1e-6 * y[1375])/(130e-6 + 1e-6 * y[1375])
    R735 = (13.7 * 1e-6 * y[1375])/(130e-6 + 1e-6 * y[1375])
    return (0) - (R341 + R735)
 
def m_betald_c(t, y):
    R343 = (13.7 * 1e-6 * y[1376] * y[173] * y[236])/(130e-6 + 1e-6 * y[1376] * y[173] * y[236])
    R344 = (13.7 * 1e-6 * y[1376] * y[173] * y[6])/(130e-6 + 1e-6 * y[1376] * y[173] * y[6])
    return (0) - (R343 + R344)
 
def m_btnso_c(t, y):
    R346 = (13.7 * 1e-6 * y[1377] * y[36] * y[113])/(130e-6 + 1e-6 * y[1377] * y[36] * y[113])
    R347 = (13.7 * 1e-6 * y[1377] * y[36] * y[201])/(130e-6 + 1e-6 * y[1377] * y[36] * y[201])
    return (0) - (R346 + R347)
 
def m_trnaasn_c(t, y):
    R352 = (13.7 * 1e-6 * y[323] * y[278] * y[1378])/(130e-6 + 1e-6 * y[323] * y[278] * y[1378])
    return (0) - (R352)
 
def m_s_c(t, y):
    R353 = (13.7 * 1e-6 * y[921] * y[461] * y[1379])/(130e-6 + 1e-6 * y[921] * y[461] * y[1379])
    return (0) - (R353)
 
def m_butso3_e(t, y):
    R356 = (13.7 * 1e-6 * y[1380])/(130e-6 + 1e-6 * y[1380])
    R745 = (13.7 * 1e-6 * y[1380])/(130e-6 + 1e-6 * y[1380])
    return (0) - (R356 + R745)
 
def m_but_e(t, y):
    R360 = (13.7 * 1e-6 * y[1381])/(130e-6 + 1e-6 * y[1381])
    R744 = (13.7 * 1e-6 * y[1381])/(130e-6 + 1e-6 * y[1381])
    return (0) - (R360 + R744)
 
def m_ca2_c(t, y):
    R362 = (13.7 * 1e-6 * y[1382] * y[61])/(130e-6 + 1e-6 * y[1382] * y[61])
    R373 = (13.7 * 1e-6 * y[1382] * y[927])/(130e-6 + 1e-6 * y[1382] * y[927])
    R926 = (13.7 * 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])/(130e-6 + 1e-6 * y[1057] * y[1030] * y[235] * y[921] * y[303] * y[323] * y[300] * y[278] * y[1382] * y[394] * y[99] * y[408] * y[404] * y[411] * y[260] * y[935] * y[934] * y[933] * y[932] * y[282] * y[283] * y[566] * y[710] * y[110] * y[261] * y[928] * y[173] * y[803] * y[823] * y[866] * y[847] * y[852] * y[334] * y[326] * y[941] * y[717] * y[967] * y[1006] * y[897] * y[236] * y[6] * y[95] * y[158] * y[1037] * y[160] * y[1038] * y[1091] * y[609] * y[262] * y[1025] * y[285] * y[500] * y[1203] * y[794] * y[206] * y[1201] * y[1216] * y[1108] * y[1266] * y[1036] * y[929] * y[1272] * y[1287])
    return (0) - (R362 + R373 + R926)
 
def m_34dhpac_e(t, y):
    R363 = (13.7 * 1e-6 * y[1383])/(130e-6 + 1e-6 * y[1383])
    R748 = (13.7 * 1e-6 * y[1383])/(130e-6 + 1e-6 * y[1383])
    return (0) - (R363 + R748)
 
def m_ca2_e(t, y):
    R364 = (13.7 * 1e-6 * y[1384])/(130e-6 + 1e-6 * y[1384])
    R751 = (13.7 * 999999.0 * y[1384])/(130e-6 + 999999.0 * y[1384])
    return (0) - (R364 + R751)
 
def m_3amp_e(t, y):
    R371 = (13.7 * 1e-6 * y[1385])/(130e-6 + 1e-6 * y[1385])
    R749 = (13.7 * 1e-6 * y[1385])/(130e-6 + 1e-6 * y[1385])
    return (0) - (R371 + R749)
 
def m_3cmp_e(t, y):
    R376 = (13.7 * 1e-6 * y[1386])/(130e-6 + 1e-6 * y[1386])
    R750 = (13.7 * 1e-6 * y[1386])/(130e-6 + 1e-6 * y[1386])
    return (0) - (R376 + R750)
 
def m_cbi_e(t, y):
    R380 = (13.7 * 1e-6 * y[1387] * y[61])/(130e-6 + 1e-6 * y[1387] * y[61])
    R752 = (13.7 * 1e-6 * y[1387])/(130e-6 + 1e-6 * y[1387])
    return (0) - (R380 + R752)
 
def m_cgly_e(t, y):
    R383 = (13.7 * 1e-6 * y[1388])/(130e-6 + 1e-6 * y[1388])
    R755 = (13.7 * 1e-6 * y[1388])/(130e-6 + 1e-6 * y[1388])
    return (0) - (R383 + R755)
 
def m_3gmp_e(t, y):
    R384 = (13.7 * 1e-6 * y[1389])/(130e-6 + 1e-6 * y[1389])
    R756 = (13.7 * 1e-6 * y[1389])/(130e-6 + 1e-6 * y[1389])
    return (0) - (R384 + R756)
 
def m_chol_e(t, y):
    R387 = (13.7 * 1e-6 * y[1390])/(130e-6 + 1e-6 * y[1390])
    R760 = (13.7 * 1e-6 * y[1390])/(130e-6 + 1e-6 * y[1390])
    return (0) - (R387 + R760)
 
def m_cbl1_e(t, y):
    R390 = (13.7 * 1e-6 * y[1391] * y[61])/(130e-6 + 1e-6 * y[1391] * y[61])
    R753 = (13.7 * 0.01 * y[1391])/(130e-6 + 0.01 * y[1391])
    return (0) - (R390 + R753)
 
def m_cd2_e(t, y):
    R396 = (13.7 * 1e-6 * y[1392])/(130e-6 + 1e-6 * y[1392])
    R754 = (13.7 * 1e-6 * y[1392])/(130e-6 + 1e-6 * y[1392])
    return (0) - (R396 + R754)
 
def m_cinnm_c(t, y):
    R398 = (13.7 * 1e-6 * y[1393] * y[36] * y[113] * y[335])/(130e-6 + 1e-6 * y[1393] * y[36] * y[113] * y[335])
    return (0) - (R398)
 
def m_cit_e(t, y):
    R406 = (13.7 * 1e-6 * y[1394])/(130e-6 + 1e-6 * y[1394])
    R761 = (13.7 * 1e-6 * y[1394])/(130e-6 + 1e-6 * y[1394])
    return (0) - (R406 + R761)
 
def m_crn_e(t, y):
    R431 = (13.7 * 1e-6 * y[1395])/(130e-6 + 1e-6 * y[1395])
    R779 = (13.7 * 1e-6 * y[1395])/(130e-6 + 1e-6 * y[1395])
    return (0) - (R431 + R779)
 
def m_cl_e(t, y):
    R435 = (13.7 * 1e-6 * y[1396])/(130e-6 + 1e-6 * y[1396])
    R762 = (13.7 * 999999.0 * y[1396])/(130e-6 + 999999.0 * y[1396])
    return (0) - (R435 + R762)
 
def m_csn_e(t, y):
    R439 = (13.7 * 1e-6 * y[1397])/(130e-6 + 1e-6 * y[1397])
    R782 = (13.7 * 1e-6 * y[1397])/(130e-6 + 1e-6 * y[1397])
    return (0) - (R439 + R782)
 
def m_cmp_e(t, y):
    R441 = (13.7 * 1e-6 * y[1398])/(130e-6 + 1e-6 * y[1398])
    R768 = (13.7 * 1e-6 * y[1398])/(130e-6 + 1e-6 * y[1398])
    return (0) - (R441 + R768)
 
def m_ctbt_p(t, y):
    R444 = (13.7 * 1e-6 * y[278] * y[1399] * y[173])/(130e-6 + 1e-6 * y[278] * y[1399] * y[173])
    R447 = (13.7 * 1e-6 * y[1399] * y[61])/(130e-6 + 1e-6 * y[1399] * y[61])
    return (0) - (R444 + R447)
 
def m_co2_e(t, y):
    R445 = (13.7 * 1e-6 * y[1400])/(130e-6 + 1e-6 * y[1400])
    R769 = (13.7 * 999999.0 * y[1400])/(130e-6 + 999999.0 * y[1400])
    return (0) - (R445 + R769)
 
def m_cu_c(t, y):
    R451 = (13.7 * 1e-6 * y[278] * y[1401] * y[173])/(130e-6 + 1e-6 * y[278] * y[1401] * y[173])
    R460 = (13.7 * 1e-6 * y[1401] * y[1344])/(130e-6 + 1e-6 * y[1401] * y[1344])
    return (0) - (R451 + R460)
 
def m_cobalt2_e(t, y):
    R453 = (13.7 * 1e-6 * y[1402])/(130e-6 + 1e-6 * y[1402])
    R770 = (13.7 * 999999.0 * y[1402])/(130e-6 + 999999.0 * y[1402])
    return (0) - (R453 + R770)
 
def m_cu2_e(t, y):
    R457 = (13.7 * 1e-6 * y[1403])/(130e-6 + 1e-6 * y[1403])
    R787 = (13.7 * 999999.0 * y[1403])/(130e-6 + 999999.0 * y[1403])
    return (0) - (R457 + R787)
 
def m_cyan_c(t, y):
    R466 = (13.7 * 1e-6 * y[1404] * y[1255])/(130e-6 + 1e-6 * y[1404] * y[1255])
    R1595 = (13.7 * 1e-6 * y[1404] * y[1647])/(130e-6 + 1e-6 * y[1404] * y[1647])
    return (0) - (R466 + R1595)
 
def m_cyan_e(t, y):
    R473 = (13.7 * 1e-6 * y[1405])/(130e-6 + 1e-6 * y[1405])
    R789 = (13.7 * 1e-6 * y[1405])/(130e-6 + 1e-6 * y[1405])
    return (0) - (R473 + R789)
 
def m_cynt_e(t, y):
    R479 = (13.7 * 1e-6 * y[1406])/(130e-6 + 1e-6 * y[1406])
    R793 = (13.7 * 1e-6 * y[1406])/(130e-6 + 1e-6 * y[1406])
    return (0) - (R479 + R793)
 
def m_bbtcoa_c(t, y):
    R482 = (13.7 * 1e-6 * y[1407] * y[384])/(130e-6 + 1e-6 * y[1407] * y[384])
    return (0) - (R482)
 
def m_cys__D_e(t, y):
    R488 = (13.7 * 1e-6 * y[1408])/(130e-6 + 1e-6 * y[1408])
    R794 = (13.7 * 1e-6 * y[1408])/(130e-6 + 1e-6 * y[1408])
    return (0) - (R488 + R794)
 
def m_3sala_c(t, y):
    R490 = (13.7 * 1e-6 * y[1409] * y[36])/(130e-6 + 1e-6 * y[1409] * y[36])
    return (0) - (R490)
 
def m_trnacys_c(t, y):
    R493 = (13.7 * 1e-6 * y[278] * y[260] * y[1410])/(130e-6 + 1e-6 * y[278] * y[260] * y[1410])
    return (0) - (R493)
 
def m_cys__L_e(t, y):
    R497 = (13.7 * 1e-6 * y[1411])/(130e-6 + 1e-6 * y[1411])
    R795 = (13.7 * 1e-6 * y[1411])/(130e-6 + 1e-6 * y[1411])
    return (0) - (R497 + R795)
 
def m_ala__D_e(t, y):
    R499 = (13.7 * 1e-6 * y[1412])/(130e-6 + 1e-6 * y[1412])
    R713 = (13.7 * 1e-6 * y[1412])/(130e-6 + 1e-6 * y[1412])
    return (0) - (R499 + R713)
 
def m_damp_e(t, y):
    R503 = (13.7 * 1e-6 * y[1413])/(130e-6 + 1e-6 * y[1413])
    R799 = (13.7 * 1e-6 * y[1413])/(130e-6 + 1e-6 * y[1413])
    return (0) - (R503 + R799)
 
def m_15dap_e(t, y):
    R513 = (13.7 * 1e-6 * y[1414])/(130e-6 + 1e-6 * y[1414])
    R729 = (13.7 * 1e-6 * y[1414])/(130e-6 + 1e-6 * y[1414])
    return (0) - (R513 + R729)
 
def m_cytd_e(t, y):
    R524 = (13.7 * 1e-6 * y[1415])/(130e-6 + 1e-6 * y[1415])
    R797 = (13.7 * 1e-6 * y[1415])/(130e-6 + 1e-6 * y[1415])
    return (0) - (R524 + R797)
 
def m_dad_2_e(t, y):
    R535 = (13.7 * 1e-6 * y[1416])/(130e-6 + 1e-6 * y[1416])
    R798 = (13.7 * 1e-6 * y[1416])/(130e-6 + 1e-6 * y[1416])
    return (0) - (R535 + R798)
 
def m_dca_e(t, y):
    R537 = (13.7 * 1e-6 * y[1417])/(130e-6 + 1e-6 * y[1417])
    R804 = (13.7 * 1e-6 * y[1417])/(130e-6 + 1e-6 * y[1417])
    return (0) - (R537 + R804)
 
def m_dcmp_e(t, y):
    R538 = (13.7 * 1e-6 * y[1418])/(130e-6 + 1e-6 * y[1418])
    R805 = (13.7 * 1e-6 * y[1418])/(130e-6 + 1e-6 * y[1418])
    return (0) - (R538 + R805)
 
def m_dcyt_e(t, y):
    R548 = (13.7 * 1e-6 * y[1419])/(130e-6 + 1e-6 * y[1419])
    R806 = (13.7 * 1e-6 * y[1419])/(130e-6 + 1e-6 * y[1419])
    return (0) - (R548 + R806)
 
def m_ddca_e(t, y):
    R550 = (13.7 * 1e-6 * y[1420])/(130e-6 + 1e-6 * y[1420])
    R808 = (13.7 * 1e-6 * y[1420])/(130e-6 + 1e-6 * y[1420])
    return (0) - (R550 + R808)
 
def m_2ddglcn_e(t, y):
    R555 = (13.7 * 1e-6 * y[1421])/(130e-6 + 1e-6 * y[1421])
    R746 = (13.7 * 1e-6 * y[1421])/(130e-6 + 1e-6 * y[1421])
    return (0) - (R555 + R746)
 
def m_25dkglcn_c(t, y):
    R559 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    R560 = (13.7 * 1e-6 * y[1422] * y[36] * y[113])/(130e-6 + 1e-6 * y[1422] * y[36] * y[113])
    R561 = (13.7 * 1e-6 * y[1422] * y[36] * y[201])/(130e-6 + 1e-6 * y[1422] * y[36] * y[201])
    return (0) - (R559 + R560 + R561)
 
def m_dgmp_e(t, y):
    R567 = (13.7 * 1e-6 * y[1423])/(130e-6 + 1e-6 * y[1423])
    R813 = (13.7 * 1e-6 * y[1423])/(130e-6 + 1e-6 * y[1423])
    return (0) - (R567 + R813)
 
def m_dmso_c(t, y):
    R573 = (13.7 * 1e-6 * y[1424] * y[250])/(130e-6 + 1e-6 * y[1424] * y[250])
    R581 = (13.7 * 1e-6 * y[507] * y[1424])/(130e-6 + 1e-6 * y[507] * y[1424])
    return (0) - (R573 + R581)
 
def m_dgsn_e(t, y):
    R574 = (13.7 * 1e-6 * y[1425])/(130e-6 + 1e-6 * y[1425])
    R814 = (13.7 * 1e-6 * y[1425])/(130e-6 + 1e-6 * y[1425])
    return (0) - (R574 + R814)
 
def m_23dhmb_c(t, y):
    R575 = (13.7 * 1e-6 * y[1426])/(130e-6 + 1e-6 * y[1426])
    R1455 = (13.7 * 1e-6 * y[1426] * y[6])/(130e-6 + 1e-6 * y[1426] * y[6])
    return (0) - (R575 + R1455)
 
def m_dha_e(t, y):
    R579 = (13.7 * 1e-6 * y[1427])/(130e-6 + 1e-6 * y[1427])
    R818 = (13.7 * 1e-6 * y[1427])/(130e-6 + 1e-6 * y[1427])
    return (0) - (R579 + R818)
 
def m_dmso_e(t, y):
    R583 = (13.7 * 1e-6 * y[1428])/(130e-6 + 1e-6 * y[1428])
    R827 = (13.7 * 1e-6 * y[1428])/(130e-6 + 1e-6 * y[1428])
    return (0) - (R583 + R827)
 
def m_dms_e(t, y):
    R584 = (13.7 * 1e-6 * y[1429])/(130e-6 + 1e-6 * y[1429])
    R826 = (13.7 * 1e-6 * y[1429])/(130e-6 + 1e-6 * y[1429])
    return (0) - (R584 + R826)
 
def m_dhor__S_c(t, y):
    R604 = (13.7 * 1e-6 * y[1430] * y[444])/(130e-6 + 1e-6 * y[1430] * y[444])
    R608 = (13.7 * 1e-6 * y[1430] * y[441])/(130e-6 + 1e-6 * y[1430] * y[441])
    R609 = (13.7 * 1e-6 * y[1430] * y[173])/(130e-6 + 1e-6 * y[1430] * y[173])
    return (0) - (R604 + R608 + R609)
 
def m_23doguln_c(t, y):
    R606 = (13.7 * 1e-6 * y[1431] * y[36] * y[113])/(130e-6 + 1e-6 * y[1431] * y[36] * y[113])
    return (0) - (R606)
 
def m_dopa_e(t, y):
    R607 = (13.7 * 1e-6 * y[1432])/(130e-6 + 1e-6 * y[1432])
    R828 = (13.7 * 1e-6 * y[1432])/(130e-6 + 1e-6 * y[1432])
    return (0) - (R607 + R828)
 
def m_dsbard_p(t, y):
    R617 = (13.7 * 1e-6 * y[1433] * y[444])/(130e-6 + 1e-6 * y[1433] * y[444])
    R618 = (13.7 * 1e-6 * y[1433] * y[441])/(130e-6 + 1e-6 * y[1433] * y[441])
    return (0) - (R617 + R618)
 
def m_dsbcox_p(t, y):
    R619 = (13.7 * 1e-6 * y[1434] * y[771])/(130e-6 + 1e-6 * y[1434] * y[771])
    R2154 = (13.7 * 1e-6 * y[1434] * y[521])/(130e-6 + 1e-6 * y[1434] * y[521])
    return (0) - (R619 + R2154)
 
def m_dsbgox_p(t, y):
    R621 = (13.7 * 1e-6 * y[1435] * y[771])/(130e-6 + 1e-6 * y[1435] * y[771])
    R2156 = (13.7 * 1e-6 * y[521] * y[1435])/(130e-6 + 1e-6 * y[521] * y[1435])
    return (0) - (R621 + R2156)
 
def m_dimp_e(t, y):
    R628 = (13.7 * 1e-6 * y[1436])/(130e-6 + 1e-6 * y[1436])
    R819 = (13.7 * 1e-6 * y[1436])/(130e-6 + 1e-6 * y[1436])
    return (0) - (R628 + R819)
 
def m_ser__D_e(t, y):
    R630 = (13.7 * 1e-6 * y[1437])/(130e-6 + 1e-6 * y[1437])
    R921 = (13.7 * 1e-6 * y[1437])/(130e-6 + 1e-6 * y[1437])
    return (0) - (R630 + R921)
 
def m_dtmp_e(t, y):
    R632 = (13.7 * 1e-6 * y[1438])/(130e-6 + 1e-6 * y[1438])
    R829 = (13.7 * 1e-6 * y[1438])/(130e-6 + 1e-6 * y[1438])
    return (0) - (R632 + R829)
 
def m_din_e(t, y):
    R633 = (13.7 * 1e-6 * y[1439])/(130e-6 + 1e-6 * y[1439])
    R821 = (13.7 * 1e-6 * y[1439])/(130e-6 + 1e-6 * y[1439])
    return (0) - (R633 + R821)
 
def m_dump_e(t, y):
    R635 = (13.7 * 1e-6 * y[1440])/(130e-6 + 1e-6 * y[1440])
    R830 = (13.7 * 1e-6 * y[1440])/(130e-6 + 1e-6 * y[1440])
    return (0) - (R635 + R830)
 
def m_duri_e(t, y):
    R642 = (13.7 * 1e-6 * y[1441])/(130e-6 + 1e-6 * y[1441])
    R831 = (13.7 * 1e-6 * y[1441])/(130e-6 + 1e-6 * y[1441])
    return (0) - (R642 + R831)
 
def m_dxyl_c(t, y):
    R652 = (13.7 * 1e-6 * y[278] * y[1442])/(130e-6 + 1e-6 * y[278] * y[1442])
    return (0) - (R652)
 
def m_lac__D_e(t, y):
    R654 = (13.7 * 1e-6 * y[1443])/(130e-6 + 1e-6 * y[1443])
    R1472 = (13.7 * 1e-6 * y[1443])/(130e-6 + 1e-6 * y[1443])
    return (0) - (R654 + R1472)
 
def m_3hbcoa_c(t, y):
    R666 = (13.7 * 1e-6 * y[1444])/(130e-6 + 1e-6 * y[1444])
    R1355 = (13.7 * 1e-6 * y[1444] * y[236])/(130e-6 + 1e-6 * y[1444] * y[236])
    return (0) - (R666 + R1355)
 
def m_3hhcoa_c(t, y):
    R667 = (13.7 * 1e-6 * y[1445])/(130e-6 + 1e-6 * y[1445])
    R1357 = (13.7 * 1e-6 * y[1445] * y[236])/(130e-6 + 1e-6 * y[1445] * y[236])
    return (0) - (R667 + R1357)
 
def m_3hocoa_c(t, y):
    R671 = (13.7 * 1e-6 * y[1446])/(130e-6 + 1e-6 * y[1446])
    R1358 = (13.7 * 1e-6 * y[1446] * y[236])/(130e-6 + 1e-6 * y[1446] * y[236])
    return (0) - (R671 + R1358)
 
def m_3hdcoa_c(t, y):
    R673 = (13.7 * 1e-6 * y[1447])/(130e-6 + 1e-6 * y[1447])
    R1359 = (13.7 * 1e-6 * y[1447] * y[236])/(130e-6 + 1e-6 * y[1447] * y[236])
    return (0) - (R673 + R1359)
 
def m_3hddcoa_c(t, y):
    R674 = (13.7 * 1e-6 * y[1448])/(130e-6 + 1e-6 * y[1448])
    R1298 = (13.7 * 1e-6 * y[1448] * y[236])/(130e-6 + 1e-6 * y[1448] * y[236])
    return (0) - (R674 + R1298)
 
def m_3htdcoa_c(t, y):
    R675 = (13.7 * 1e-6 * y[1449])/(130e-6 + 1e-6 * y[1449])
    R1299 = (13.7 * 1e-6 * y[1449] * y[236])/(130e-6 + 1e-6 * y[1449] * y[236])
    return (0) - (R675 + R1299)
 
def m_3hhdcoa_c(t, y):
    R679 = (13.7 * 1e-6 * y[1450])/(130e-6 + 1e-6 * y[1450])
    R1300 = (13.7 * 1e-6 * y[1450] * y[236])/(130e-6 + 1e-6 * y[1450] * y[236])
    return (0) - (R679 + R1300)
 
def m_3hodcoa_c(t, y):
    R680 = (13.7 * 1e-6 * y[1451])/(130e-6 + 1e-6 * y[1451])
    R1305 = (13.7 * 1e-6 * y[1451] * y[236])/(130e-6 + 1e-6 * y[1451] * y[236])
    return (0) - (R680 + R1305)
 
def m_for_e(t, y):
    R708 = (13.7 * 1e-6 * y[1452])/(130e-6 + 1e-6 * y[1452])
    R1035 = (13.7 * 1e-6 * y[1452])/(130e-6 + 1e-6 * y[1452])
    return (0) - (R708 + R1035)
 
def m_etha_e(t, y):
    R709 = (13.7 * 1e-6 * y[1453])/(130e-6 + 1e-6 * y[1453])
    R841 = (13.7 * 1e-6 * y[1453])/(130e-6 + 1e-6 * y[1453])
    return (0) - (R709 + R841)
 
def m_ethso3_e(t, y):
    R715 = (13.7 * 1e-6 * y[1454])/(130e-6 + 1e-6 * y[1454])
    R844 = (13.7 * 1e-6 * y[1454])/(130e-6 + 1e-6 * y[1454])
    return (0) - (R715 + R844)
 
def m_etoh_e(t, y):
    R717 = (13.7 * 1e-6 * y[1455])/(130e-6 + 1e-6 * y[1455])
    R846 = (13.7 * 1e-6 * y[1455])/(130e-6 + 1e-6 * y[1455])
    return (0) - (R717 + R846)
 
def m_fru_e(t, y):
    R723 = (13.7 * 1e-6 * y[1456])/(130e-6 + 1e-6 * y[1456])
    R1061 = (13.7 * 1e-6 * y[1456])/(130e-6 + 1e-6 * y[1456])
    return (0) - (R723 + R1061)
 
def m_frulys_e(t, y):
    R734 = (13.7 * 1e-6 * y[1457])/(130e-6 + 1e-6 * y[1457])
    R1054 = (13.7 * 1e-6 * y[1457])/(130e-6 + 1e-6 * y[1457])
    return (0) - (R734 + R1054)
 
def m_fruur_e(t, y):
    R740 = (13.7 * 1e-6 * y[1458])/(130e-6 + 1e-6 * y[1458])
    R1057 = (13.7 * 1e-6 * y[1458])/(130e-6 + 1e-6 * y[1458])
    return (0) - (R740 + R1057)
 
def m_fuc__L_e(t, y):
    R747 = (13.7 * 1e-6 * y[1459])/(130e-6 + 1e-6 * y[1459])
    R1068 = (13.7 * 1e-6 * y[1459])/(130e-6 + 1e-6 * y[1459])
    return (0) - (R747 + R1068)
 
def m_3hcinnm_e(t, y):
    R757 = (13.7 * 1e-6 * y[1460])/(130e-6 + 1e-6 * y[1460])
    R1318 = (13.7 * 1e-6 * y[1460])/(130e-6 + 1e-6 * y[1460])
    return (0) - (R757 + R1318)
 
def m_3hpppn_e(t, y):
    R758 = (13.7 * 1e-6 * y[1461])/(130e-6 + 1e-6 * y[1461])
    R1398 = (13.7 * 1e-6 * y[1461])/(130e-6 + 1e-6 * y[1461])
    return (0) - (R758 + R1398)
 
def m_fum_e(t, y):
    R765 = (13.7 * 1e-6 * y[1462])/(130e-6 + 1e-6 * y[1462])
    R1081 = (13.7 * 1e-6 * y[1462])/(130e-6 + 1e-6 * y[1462])
    return (0) - (R765 + R1081)
 
def m_g1p_e(t, y):
    R772 = (13.7 * 1e-6 * y[1463])/(130e-6 + 1e-6 * y[1463])
    R1089 = (13.7 * 1e-6 * y[1463])/(130e-6 + 1e-6 * y[1463])
    return (0) - (R772 + R1089)
 
def m_g3pc_e(t, y):
    R784 = (13.7 * 1e-6 * y[1464])/(130e-6 + 1e-6 * y[1464])
    R1111 = (13.7 * 1e-6 * y[1464])/(130e-6 + 1e-6 * y[1464])
    return (0) - (R784 + R1111)
 
def m_g3pe_e(t, y):
    R796 = (13.7 * 1e-6 * y[1465])/(130e-6 + 1e-6 * y[1465])
    R1120 = (13.7 * 1e-6 * y[1465])/(130e-6 + 1e-6 * y[1465])
    return (0) - (R796 + R1120)
 
def m_malthx_e(t, y):
    R800 = (13.7 * 1e-6 * y[1466])/(130e-6 + 1e-6 * y[1466])
    R1579 = (13.7 * 1e-6 * y[1466])/(130e-6 + 1e-6 * y[1466])
    return (0) - (R800 + R1579)
 
def m_g3pg_e(t, y):
    R801 = (13.7 * 1e-6 * y[1467])/(130e-6 + 1e-6 * y[1467])
    R1128 = (13.7 * 1e-6 * y[1467])/(130e-6 + 1e-6 * y[1467])
    return (0) - (R801 + R1128)
 
def m_maltpt_e(t, y):
    R802 = (13.7 * 1e-6 * y[1468])/(130e-6 + 1e-6 * y[1468])
    R1581 = (13.7 * 1e-6 * y[1468])/(130e-6 + 1e-6 * y[1468])
    return (0) - (R802 + R1581)
 
def m_malttr_e(t, y):
    R803 = (13.7 * 1e-6 * y[1469])/(130e-6 + 1e-6 * y[1469])
    R1583 = (13.7 * 1e-6 * y[1469])/(130e-6 + 1e-6 * y[1469])
    return (0) - (R803 + R1583)
 
def m_maltttr_e(t, y):
    R807 = (13.7 * 1e-6 * y[1470])/(130e-6 + 1e-6 * y[1470])
    R1589 = (13.7 * 1e-6 * y[1470])/(130e-6 + 1e-6 * y[1470])
    return (0) - (R807 + R1589)
 
def m_man6p_e(t, y):
    R809 = (13.7 * 1e-6 * y[1471])/(130e-6 + 1e-6 * y[1471])
    R1609 = (13.7 * 1e-6 * y[1471])/(130e-6 + 1e-6 * y[1471])
    return (0) - (R809 + R1609)
 
def m_g3pi_e(t, y):
    R810 = (13.7 * 1e-6 * y[1472])/(130e-6 + 1e-6 * y[1472])
    R1130 = (13.7 * 1e-6 * y[1472])/(130e-6 + 1e-6 * y[1472])
    return (0) - (R810 + R1130)
 
def m_man_e(t, y):
    R811 = (13.7 * 1e-6 * y[1473])/(130e-6 + 1e-6 * y[1473])
    R1622 = (13.7 * 1e-6 * y[1473])/(130e-6 + 1e-6 * y[1473])
    return (0) - (R811 + R1622)
 
def m_manglyc_e(t, y):
    R812 = (13.7 * 1e-6 * y[1474])/(130e-6 + 1e-6 * y[1474])
    R1619 = (13.7 * 1e-6 * y[1474])/(130e-6 + 1e-6 * y[1474])
    return (0) - (R812 + R1619)
 
def m_melib_e(t, y):
    R815 = (13.7 * 1e-6 * y[1475])/(130e-6 + 1e-6 * y[1475])
    R1635 = (13.7 * 1e-6 * y[1475])/(130e-6 + 1e-6 * y[1475])
    return (0) - (R815 + R1635)
 
def m_g3ps_e(t, y):
    R816 = (13.7 * 1e-6 * y[1476])/(130e-6 + 1e-6 * y[1476])
    R1137 = (13.7 * 1e-6 * y[1476])/(130e-6 + 1e-6 * y[1476])
    return (0) - (R816 + R1137)
 
def m_met__D_e(t, y):
    R817 = (13.7 * 1e-6 * y[1477])/(130e-6 + 1e-6 * y[1477])
    R1640 = (13.7 * 1e-6 * y[1477])/(130e-6 + 1e-6 * y[1477])
    return (0) - (R817 + R1640)
 
def m_met__L_e(t, y):
    R820 = (13.7 * 1e-6 * y[1478])/(130e-6 + 1e-6 * y[1478])
    R1665 = (13.7 * 1e-6 * y[1478])/(130e-6 + 1e-6 * y[1478])
    return (0) - (R820 + R1665)
 
def m_metsox_R__L_e(t, y):
    R822 = (13.7 * 1e-6 * y[1479])/(130e-6 + 1e-6 * y[1479])
    R1660 = (13.7 * 1e-6 * y[1479])/(130e-6 + 1e-6 * y[1479])
    return (0) - (R822 + R1660)
 
def m_g6p_e(t, y):
    R823 = (13.7 * 1e-6 * y[1480])/(130e-6 + 1e-6 * y[1480])
    R1153 = (13.7 * 1e-6 * y[1480])/(130e-6 + 1e-6 * y[1480])
    return (0) - (R823 + R1153)
 
def m_metsox_S__L_e(t, y):
    R824 = (13.7 * 1e-6 * y[1481])/(130e-6 + 1e-6 * y[1481])
    R1650 = (13.7 * 1e-6 * y[1481])/(130e-6 + 1e-6 * y[1481])
    return (0) - (R824 + R1650)
 
def m_mg2_e(t, y):
    R825 = (13.7 * 999999.0 * y[1482])/(130e-6 + 999999.0 * y[1482])
    R1671 = (13.7 * 1e-6 * y[1482])/(130e-6 + 1e-6 * y[1482])
    return (0) - (R825 + R1671)
 
def m_minohp_e(t, y):
    R834 = (13.7 * 1e-6 * y[1483])/(130e-6 + 1e-6 * y[1483])
    R1685 = (13.7 * 1e-6 * y[1483])/(130e-6 + 1e-6 * y[1483])
    return (0) - (R834 + R1685)
 
def m_mmet_e(t, y):
    R835 = (13.7 * 1e-6 * y[1484])/(130e-6 + 1e-6 * y[1484])
    R1675 = (13.7 * 1e-6 * y[1484])/(130e-6 + 1e-6 * y[1484])
    return (0) - (R835 + R1675)
 
def m_mn2_e(t, y):
    R836 = (13.7 * 999999.0 * y[1485])/(130e-6 + 999999.0 * y[1485])
    R1773 = (13.7 * 1e-6 * y[1485])/(130e-6 + 1e-6 * y[1485])
    return (0) - (R836 + R1773)
 
def m_mnl_e(t, y):
    R837 = (13.7 * 1e-6 * y[1486])/(130e-6 + 1e-6 * y[1486])
    R1743 = (13.7 * 1e-6 * y[1486])/(130e-6 + 1e-6 * y[1486])
    return (0) - (R837 + R1743)
 
def m_mobd_e(t, y):
    R838 = (13.7 * 999999.0 * y[1487])/(130e-6 + 999999.0 * y[1487])
    R1831 = (13.7 * 1e-6 * y[1487])/(130e-6 + 1e-6 * y[1487])
    return (0) - (R838 + R1831)
 
def m_mso3_e(t, y):
    R839 = (13.7 * 1e-6 * y[1488])/(130e-6 + 1e-6 * y[1488])
    R1901 = (13.7 * 1e-6 * y[1488])/(130e-6 + 1e-6 * y[1488])
    return (0) - (R839 + R1901)
 
def m_n2o_e(t, y):
    R842 = (13.7 * 1e-6 * y[1489])/(130e-6 + 1e-6 * y[1489])
    R1997 = (13.7 * 1e-6 * y[1489])/(130e-6 + 1e-6 * y[1489])
    return (0) - (R842 + R1997)
 
def m_na1_e(t, y):
    R843 = (13.7 * 999999.0 * y[1490])/(130e-6 + 999999.0 * y[1490])
    R1644 = (13.7 * 1e-6 * y[1490])/(130e-6 + 1e-6 * y[1490])
    return (0) - (R843 + R1644)
 
def m_gal1p_e(t, y):
    R845 = (13.7 * 1e-6 * y[1491])/(130e-6 + 1e-6 * y[1491])
    R1102 = (13.7 * 1e-6 * y[1491])/(130e-6 + 1e-6 * y[1491])
    return (0) - (R845 + R1102)
 
def m_f6p_e(t, y):
    R847 = (13.7 * 1e-6 * y[1492])/(130e-6 + 1e-6 * y[1492])
    R934 = (13.7 * 1e-6 * y[1492])/(130e-6 + 1e-6 * y[1492])
    return (0) - (R847 + R934)
 
def m_fald_e(t, y):
    R848 = (13.7 * 1e-6 * y[1493])/(130e-6 + 1e-6 * y[1493])
    R997 = (13.7 * 1e-6 * y[1493])/(130e-6 + 1e-6 * y[1493])
    return (0) - (R848 + R997)
 
def m_nac_e(t, y):
    R849 = (13.7 * 1e-6 * y[1494])/(130e-6 + 1e-6 * y[1494])
    R2028 = (13.7 * 1e-6 * y[1494])/(130e-6 + 1e-6 * y[1494])
    return (0) - (R849 + R2028)
 
def m_nh4_e(t, y):
    R850 = (13.7 * 999999.0 * y[1495])/(130e-6 + 999999.0 * y[1495])
    R1658 = (13.7 * 1e-6 * y[1495])/(130e-6 + 1e-6 * y[1495])
    return (0) - (R850 + R1658)
 
def m_ni2_e(t, y):
    R851 = (13.7 * 1e-6 * y[1496])/(130e-6 + 1e-6 * y[1496])
    R1669 = (13.7 * 1e-6 * y[1496])/(130e-6 + 1e-6 * y[1496])
    return (0) - (R851 + R1669)
 
def m_nmn_e(t, y):
    R852 = (13.7 * 1e-6 * y[1497])/(130e-6 + 1e-6 * y[1497])
    R1689 = (13.7 * 1e-6 * y[1497])/(130e-6 + 1e-6 * y[1497])
    return (0) - (R852 + R1689)
 
def m_fe2_e(t, y):
    R853 = (13.7 * 999999.0 * y[1498])/(130e-6 + 999999.0 * y[1498])
    R986 = (13.7 * 1e-6 * y[1498])/(130e-6 + 1e-6 * y[1498])
    return (0) - (R853 + R986)
 
def m_no2_e(t, y):
    R854 = (13.7 * 1e-6 * y[1499])/(130e-6 + 1e-6 * y[1499])
    R1699 = (13.7 * 1e-6 * y[1499])/(130e-6 + 1e-6 * y[1499])
    return (0) - (R854 + R1699)
 
def m_no3_e(t, y):
    R856 = (13.7 * 1e-6 * y[1500])/(130e-6 + 1e-6 * y[1500])
    R1713 = (13.7 * 1e-6 * y[1500])/(130e-6 + 1e-6 * y[1500])
    return (0) - (R856 + R1713)
 
def m_gal_e(t, y):
    R857 = (13.7 * 1e-6 * y[1501])/(130e-6 + 1e-6 * y[1501])
    R1149 = (13.7 * 1e-6 * y[1501])/(130e-6 + 1e-6 * y[1501])
    return (0) - (R857 + R1149)
 
def m_no_e(t, y):
    R858 = (13.7 * 1e-6 * y[1502])/(130e-6 + 1e-6 * y[1502])
    R1717 = (13.7 * 1e-6 * y[1502])/(130e-6 + 1e-6 * y[1502])
    return (0) - (R858 + R1717)
 
def m_fe3dcit_e(t, y):
    R860 = (13.7 * 1e-6 * y[1503])/(130e-6 + 1e-6 * y[1503])
    R992 = (13.7 * 1e-6 * y[1503] * y[61])/(130e-6 + 1e-6 * y[1503] * y[61])
    return (0) - (R860 + R992)
 
def m_fe3dhbzs_e(t, y):
    R861 = (13.7 * 1e-6 * y[1504])/(130e-6 + 1e-6 * y[1504])
    R1001 = (13.7 * 1e-6 * y[1504] * y[61])/(130e-6 + 1e-6 * y[1504] * y[61])
    return (0) - (R861 + R1001)
 
def m_o2_e(t, y):
    R864 = (13.7 * 18.5 * y[1505])/(130e-6 + 18.5 * y[1505])
    R1810 = (13.7 * 1e-6 * y[1505])/(130e-6 + 1e-6 * y[1505])
    return (0) - (R864 + R1810)
 
def m_o2s_e(t, y):
    R866 = (13.7 * 1e-6 * y[1506])/(130e-6 + 1e-6 * y[1506])
    R1809 = (13.7 * 1e-6 * y[1506])/(130e-6 + 1e-6 * y[1506])
    return (0) - (R866 + R1809)
 
def m_ocdca_e(t, y):
    R867 = (13.7 * 1e-6 * y[1507])/(130e-6 + 1e-6 * y[1507])
    R1823 = (13.7 * 1e-6 * y[1507])/(130e-6 + 1e-6 * y[1507])
    return (0) - (R867 + R1823)
 
def m_ocdcea_e(t, y):
    R868 = (13.7 * 1e-6 * y[1508])/(130e-6 + 1e-6 * y[1508])
    R1824 = (13.7 * 1e-6 * y[1508])/(130e-6 + 1e-6 * y[1508])
    return (0) - (R868 + R1824)
 
def m_octa_e(t, y):
    R869 = (13.7 * 1e-6 * y[1509])/(130e-6 + 1e-6 * y[1509])
    R1825 = (13.7 * 1e-6 * y[1509])/(130e-6 + 1e-6 * y[1509])
    return (0) - (R869 + R1825)
 
def m_orn_e(t, y):
    R873 = (13.7 * 1e-6 * y[1510])/(130e-6 + 1e-6 * y[1510])
    R1767 = (13.7 * 1e-6 * y[1510])/(130e-6 + 1e-6 * y[1510])
    return (0) - (R873 + R1767)
 
def m_gal_bD_e(t, y):
    R874 = (13.7 * 1e-6 * y[1511])/(130e-6 + 1e-6 * y[1511])
    R1103 = (13.7 * 1e-6 * y[1511])/(130e-6 + 1e-6 * y[1511])
    return (0) - (R874 + R1103)
 
def m_orot_e(t, y):
    R875 = (13.7 * 1e-6 * y[1512])/(130e-6 + 1e-6 * y[1512])
    R1771 = (13.7 * 1e-6 * y[1512])/(130e-6 + 1e-6 * y[1512])
    return (0) - (R875 + R1771)
 
def m_pacald_e(t, y):
    R876 = (13.7 * 1e-6 * y[1513])/(130e-6 + 1e-6 * y[1513])
    R1802 = (13.7 * 1e-6 * y[1513])/(130e-6 + 1e-6 * y[1513])
    return (0) - (R876 + R1802)
 
def m_peamn_e(t, y):
    R877 = (13.7 * 1e-6 * y[1514])/(130e-6 + 1e-6 * y[1514])
    R1876 = (13.7 * 1e-6 * y[1514])/(130e-6 + 1e-6 * y[1514])
    return (0) - (R877 + R1876)
 
def m_phe__L_e(t, y):
    R878 = (13.7 * 1e-6 * y[1515])/(130e-6 + 1e-6 * y[1515])
    R1950 = (13.7 * 1e-6 * y[1515])/(130e-6 + 1e-6 * y[1515])
    return (0) - (R878 + R1950)
 
def m_tungs_e(t, y):
    R879 = (13.7 * 999999.0 * y[1516])/(130e-6 + 999999.0 * y[1516])
    R2287 = (13.7 * 1e-6 * y[1516])/(130e-6 + 1e-6 * y[1516])
    return (0) - (R879 + R2287)
 
def m_galct__D_e(t, y):
    R880 = (13.7 * 1e-6 * y[1517])/(130e-6 + 1e-6 * y[1517])
    R1124 = (13.7 * 1e-6 * y[1517])/(130e-6 + 1e-6 * y[1517])
    return (0) - (R880 + R1124)
 
def m_tym_e(t, y):
    R881 = (13.7 * 1e-6 * y[1518])/(130e-6 + 1e-6 * y[1518])
    R2292 = (13.7 * 1e-6 * y[1518])/(130e-6 + 1e-6 * y[1518])
    return (0) - (R881 + R2292)
 
def m_pi_e(t, y):
    R883 = (13.7 * 999999.0 * y[1519])/(130e-6 + 999999.0 * y[1519])
    R1953 = (13.7 * 1e-6 * y[1519])/(130e-6 + 1e-6 * y[1519])
    return (0) - (R883 + R1953)
 
def m_tyr__L_e(t, y):
    R884 = (13.7 * 1e-6 * y[1520])/(130e-6 + 1e-6 * y[1520])
    R2306 = (13.7 * 1e-6 * y[1520])/(130e-6 + 1e-6 * y[1520])
    return (0) - (R884 + R2306)
 
def m_galctn__D_e(t, y):
    R885 = (13.7 * 1e-6 * y[1521])/(130e-6 + 1e-6 * y[1521])
    R1122 = (13.7 * 1e-6 * y[1521])/(130e-6 + 1e-6 * y[1521])
    return (0) - (R885 + R1122)
 
def m_tyrp_e(t, y):
    R886 = (13.7 * 1e-6 * y[1522])/(130e-6 + 1e-6 * y[1522])
    R2295 = (13.7 * 1e-6 * y[1522])/(130e-6 + 1e-6 * y[1522])
    return (0) - (R886 + R2295)
 
def m_pnto__R_e(t, y):
    R887 = (13.7 * 1e-6 * y[1523])/(130e-6 + 1e-6 * y[1523])
    R1965 = (13.7 * 1e-6 * y[1523])/(130e-6 + 1e-6 * y[1523])
    return (0) - (R887 + R1965)
 
def m_ppa_e(t, y):
    R888 = (13.7 * 1e-6 * y[1524])/(130e-6 + 1e-6 * y[1524])
    R1980 = (13.7 * 1e-6 * y[1524])/(130e-6 + 1e-6 * y[1524])
    return (0) - (R888 + R1980)
 
def m_ppal_e(t, y):
    R889 = (13.7 * 1e-6 * y[1525])/(130e-6 + 1e-6 * y[1525])
    R1977 = (13.7 * 1e-6 * y[1525])/(130e-6 + 1e-6 * y[1525])
    return (0) - (R889 + R1977)
 
def m_uacgam_e(t, y):
    R890 = (13.7 * 1e-6 * y[1526])/(130e-6 + 1e-6 * y[1526])
    R2314 = (13.7 * 1e-6 * y[1526])/(130e-6 + 1e-6 * y[1526])
    return (0) - (R890 + R2314)
 
def m_udpacgal_e(t, y):
    R891 = (13.7 * 1e-6 * y[1527])/(130e-6 + 1e-6 * y[1527])
    R2355 = (13.7 * 1e-6 * y[1527])/(130e-6 + 1e-6 * y[1527])
    return (0) - (R891 + R2355)
 
def m_pppn_e(t, y):
    R892 = (13.7 * 1e-6 * y[1528])/(130e-6 + 1e-6 * y[1528])
    R2020 = (13.7 * 1e-6 * y[1528])/(130e-6 + 1e-6 * y[1528])
    return (0) - (R892 + R2020)
 
def m_galctn__L_e(t, y):
    R893 = (13.7 * 1e-6 * y[1529])/(130e-6 + 1e-6 * y[1529])
    R1114 = (13.7 * 1e-6 * y[1529])/(130e-6 + 1e-6 * y[1529])
    return (0) - (R893 + R1114)
 
def m_ppt_e(t, y):
    R894 = (13.7 * 1e-6 * y[1530])/(130e-6 + 1e-6 * y[1530])
    R2026 = (13.7 * 1e-6 * y[1530])/(130e-6 + 1e-6 * y[1530])
    return (0) - (R894 + R2026)
 
def m_pro__L_e(t, y):
    R895 = (13.7 * 1e-6 * y[1531])/(130e-6 + 1e-6 * y[1531])
    R2015 = (13.7 * 1e-6 * y[1531])/(130e-6 + 1e-6 * y[1531])
    return (0) - (R895 + R2015)
 
def m_udpg_e(t, y):
    R896 = (13.7 * 1e-6 * y[1532])/(130e-6 + 1e-6 * y[1532])
    R2364 = (13.7 * 1e-6 * y[1532])/(130e-6 + 1e-6 * y[1532])
    return (0) - (R896 + R2364)
 
def m_udpgal_e(t, y):
    R897 = (13.7 * 1e-6 * y[1533])/(130e-6 + 1e-6 * y[1533])
    R2359 = (13.7 * 1e-6 * y[1533])/(130e-6 + 1e-6 * y[1533])
    return (0) - (R897 + R2359)
 
def m_udpglcur_e(t, y):
    R898 = (13.7 * 1e-6 * y[1534])/(130e-6 + 1e-6 * y[1534])
    R2362 = (13.7 * 1e-6 * y[1534])/(130e-6 + 1e-6 * y[1534])
    return (0) - (R898 + R2362)
 
def m_progly_e(t, y):
    R899 = (13.7 * 1e-6 * y[1535])/(130e-6 + 1e-6 * y[1535])
    R2010 = (13.7 * 1e-6 * y[1535])/(130e-6 + 1e-6 * y[1535])
    return (0) - (R899 + R2010)
 
def m_galt_e(t, y):
    R900 = (13.7 * 1e-6 * y[1536])/(130e-6 + 1e-6 * y[1536])
    R1134 = (13.7 * 1e-6 * y[1536])/(130e-6 + 1e-6 * y[1536])
    return (0) - (R900 + R1134)
 
def m_psclys_e(t, y):
    R901 = (13.7 * 1e-6 * y[1537])/(130e-6 + 1e-6 * y[1537])
    R2024 = (13.7 * 1e-6 * y[1537])/(130e-6 + 1e-6 * y[1537])
    return (0) - (R901 + R2024)
 
def m_pser__L_e(t, y):
    R902 = (13.7 * 1e-6 * y[1538])/(130e-6 + 1e-6 * y[1538])
    R2048 = (13.7 * 1e-6 * y[1538])/(130e-6 + 1e-6 * y[1538])
    return (0) - (R902 + R2048)
 
def m_ump_e(t, y):
    R903 = (13.7 * 1e-6 * y[1539])/(130e-6 + 1e-6 * y[1539])
    R2377 = (13.7 * 1e-6 * y[1539])/(130e-6 + 1e-6 * y[1539])
    return (0) - (R903 + R2377)
 
def m_ura_e(t, y):
    R904 = (13.7 * 1e-6 * y[1540])/(130e-6 + 1e-6 * y[1540])
    R2281 = (13.7 * 1e-6 * y[1540])/(130e-6 + 1e-6 * y[1540])
    return (0) - (R904 + R2281)
 
def m_urea_e(t, y):
    R905 = (13.7 * 1e-6 * y[1541])/(130e-6 + 1e-6 * y[1541])
    R2286 = (13.7 * 1e-6 * y[1541])/(130e-6 + 1e-6 * y[1541])
    return (0) - (R905 + R2286)
 
def m_uri_e(t, y):
    R906 = (13.7 * 1e-6 * y[1542])/(130e-6 + 1e-6 * y[1542])
    R2303 = (13.7 * 1e-6 * y[1542])/(130e-6 + 1e-6 * y[1542])
    return (0) - (R906 + R2303)
 
def m_val__L_e(t, y):
    R907 = (13.7 * 1e-6 * y[1543])/(130e-6 + 1e-6 * y[1543])
    R2318 = (13.7 * 1e-6 * y[1543])/(130e-6 + 1e-6 * y[1543])
    return (0) - (R907 + R2318)
 
def m_xan_e(t, y):
    R908 = (13.7 * 1e-6 * y[1544])/(130e-6 + 1e-6 * y[1544])
    R2325 = (13.7 * 1e-6 * y[1544])/(130e-6 + 1e-6 * y[1544])
    return (0) - (R908 + R2325)
 
def m_ptrc_e(t, y):
    R909 = (13.7 * 1e-6 * y[1545])/(130e-6 + 1e-6 * y[1545])
    R2085 = (13.7 * 1e-6 * y[1545])/(130e-6 + 1e-6 * y[1545])
    return (0) - (R909 + R2085)
 
def m_pyr_e(t, y):
    R910 = (13.7 * 1e-6 * y[1546])/(130e-6 + 1e-6 * y[1546])
    R2120 = (13.7 * 1e-6 * y[1546])/(130e-6 + 1e-6 * y[1546])
    return (0) - (R910 + R2120)
 
def m_r5p_e(t, y):
    R911 = (13.7 * 1e-6 * y[1547])/(130e-6 + 1e-6 * y[1547])
    R2139 = (13.7 * 1e-6 * y[1547])/(130e-6 + 1e-6 * y[1547])
    return (0) - (R911 + R2139)
 
def m_rib__D_e(t, y):
    R912 = (13.7 * 1e-6 * y[1548])/(130e-6 + 1e-6 * y[1548])
    R2066 = (13.7 * 1e-6 * y[1548])/(130e-6 + 1e-6 * y[1548])
    return (0) - (R912 + R2066)
 
def m_rmn_e(t, y):
    R913 = (13.7 * 1e-6 * y[1549])/(130e-6 + 1e-6 * y[1549])
    R2071 = (13.7 * 1e-6 * y[1549])/(130e-6 + 1e-6 * y[1549])
    return (0) - (R913 + R2071)
 
def m_sbt__D_e(t, y):
    R914 = (13.7 * 1e-6 * y[1550])/(130e-6 + 1e-6 * y[1550])
    R2122 = (13.7 * 1e-6 * y[1550])/(130e-6 + 1e-6 * y[1550])
    return (0) - (R914 + R2122)
 
def m_xmp_e(t, y):
    R915 = (13.7 * 1e-6 * y[1551])/(130e-6 + 1e-6 * y[1551])
    R2327 = (13.7 * 1e-6 * y[1551])/(130e-6 + 1e-6 * y[1551])
    return (0) - (R915 + R2327)
 
def m_xtsn_e(t, y):
    R916 = (13.7 * 1e-6 * y[1552])/(130e-6 + 1e-6 * y[1552])
    R2331 = (13.7 * 1e-6 * y[1552])/(130e-6 + 1e-6 * y[1552])
    return (0) - (R916 + R2331)
 
def m_galur_e(t, y):
    R917 = (13.7 * 1e-6 * y[1553])/(130e-6 + 1e-6 * y[1553])
    R1136 = (13.7 * 1e-6 * y[1553])/(130e-6 + 1e-6 * y[1553])
    return (0) - (R917 + R1136)
 
def m_xyl__D_e(t, y):
    R918 = (13.7 * 1e-6 * y[1554])/(130e-6 + 1e-6 * y[1554])
    R2340 = (13.7 * 1e-6 * y[1554])/(130e-6 + 1e-6 * y[1554])
    return (0) - (R918 + R2340)
 
def m_xylu__L_e(t, y):
    R919 = (13.7 * 1e-6 * y[1555])/(130e-6 + 1e-6 * y[1555])
    R2337 = (13.7 * 1e-6 * y[1555])/(130e-6 + 1e-6 * y[1555])
    return (0) - (R919 + R2337)
 
def m_zn2_e(t, y):
    R920 = (13.7 * 999999.0 * y[1556])/(130e-6 + 999999.0 * y[1556])
    R2345 = (13.7 * 1e-6 * y[1556])/(130e-6 + 1e-6 * y[1556])
    return (0) - (R920 + R2345)
 
def m_ser__L_e(t, y):
    R922 = (13.7 * 1e-6 * y[1557])/(130e-6 + 1e-6 * y[1557])
    R2148 = (13.7 * 1e-6 * y[1557])/(130e-6 + 1e-6 * y[1557])
    return (0) - (R922 + R2148)
 
def m_skm_e(t, y):
    R923 = (13.7 * 1e-6 * y[1558])/(130e-6 + 1e-6 * y[1558])
    R2168 = (13.7 * 1e-6 * y[1558])/(130e-6 + 1e-6 * y[1558])
    return (0) - (R923 + R2168)
 
def m_so2_e(t, y):
    R924 = (13.7 * 1e-6 * y[1559])/(130e-6 + 1e-6 * y[1559])
    R2169 = (13.7 * 1e-6 * y[1559])/(130e-6 + 1e-6 * y[1559])
    return (0) - (R924 + R2169)
 
def m_so3_e(t, y):
    R925 = (13.7 * 1e-6 * y[1560])/(130e-6 + 1e-6 * y[1560])
    R2178 = (13.7 * 1e-6 * y[1560])/(130e-6 + 1e-6 * y[1560])
    return (0) - (R925 + R2178)
 
def m_gam6p_e(t, y):
    R927 = (13.7 * 1e-6 * y[1561])/(130e-6 + 1e-6 * y[1561])
    R1151 = (13.7 * 1e-6 * y[1561])/(130e-6 + 1e-6 * y[1561])
    return (0) - (R927 + R1151)
 
def m_so4_e(t, y):
    R931 = (13.7 * 999999.0 * y[1562])/(130e-6 + 999999.0 * y[1562])
    R2180 = (13.7 * 1e-6 * y[1562])/(130e-6 + 1e-6 * y[1562])
    return (0) - (R931 + R2180)
 
def m_spmd_e(t, y):
    R932 = (13.7 * 1e-6 * y[1563])/(130e-6 + 1e-6 * y[1563])
    R2191 = (13.7 * 1e-6 * y[1563])/(130e-6 + 1e-6 * y[1563])
    return (0) - (R932 + R2191)
 
def m_succ_e(t, y):
    R933 = (13.7 * 1e-6 * y[1564])/(130e-6 + 1e-6 * y[1564])
    R2214 = (13.7 * 1e-6 * y[1564])/(130e-6 + 1e-6 * y[1564])
    return (0) - (R933 + R2214)
 
def m_sucr_e(t, y):
    R936 = (13.7 * 1e-6 * y[1565])/(130e-6 + 1e-6 * y[1565])
    R2223 = (13.7 * 1e-6 * y[1565])/(130e-6 + 1e-6 * y[1565])
    return (0) - (R936 + R2223)
 
def m_sulfac_e(t, y):
    R938 = (13.7 * 1e-6 * y[1566])/(130e-6 + 1e-6 * y[1566])
    R2236 = (13.7 * 1e-6 * y[1566])/(130e-6 + 1e-6 * y[1566])
    return (0) - (R938 + R2236)
 
def m_gam_e(t, y):
    R939 = (13.7 * 1e-6 * y[1567])/(130e-6 + 1e-6 * y[1567])
    R1156 = (13.7 * 1e-6 * y[1567])/(130e-6 + 1e-6 * y[1567])
    return (0) - (R939 + R1156)
 
def m_tartr__L_e(t, y):
    R940 = (13.7 * 1e-6 * y[1568])/(130e-6 + 1e-6 * y[1568])
    R2244 = (13.7 * 1e-6 * y[1568])/(130e-6 + 1e-6 * y[1568])
    return (0) - (R940 + R2244)
 
def m_taur_e(t, y):
    R947 = (13.7 * 1e-6 * y[1569])/(130e-6 + 1e-6 * y[1569])
    R2258 = (13.7 * 1e-6 * y[1569])/(130e-6 + 1e-6 * y[1569])
    return (0) - (R947 + R2258)
 
def m_tcynt_e(t, y):
    R948 = (13.7 * 1e-6 * y[1570])/(130e-6 + 1e-6 * y[1570])
    R2259 = (13.7 * 1e-6 * y[1570])/(130e-6 + 1e-6 * y[1570])
    return (0) - (R948 + R2259)
 
def m_thm_e(t, y):
    R949 = (13.7 * 1e-6 * y[1571])/(130e-6 + 1e-6 * y[1571])
    R2175 = (13.7 * 1e-6 * y[1571])/(130e-6 + 1e-6 * y[1571])
    return (0) - (R949 + R2175)
 
def m_thr__L_e(t, y):
    R950 = (13.7 * 1e-6 * y[1572])/(130e-6 + 1e-6 * y[1572])
    R2202 = (13.7 * 1e-6 * y[1572])/(130e-6 + 1e-6 * y[1572])
    return (0) - (R950 + R2202)
 
def m_thrp_e(t, y):
    R951 = (13.7 * 1e-6 * y[1573])/(130e-6 + 1e-6 * y[1573])
    R2186 = (13.7 * 1e-6 * y[1573])/(130e-6 + 1e-6 * y[1573])
    return (0) - (R951 + R2186)
 
def m_thym_e(t, y):
    R952 = (13.7 * 1e-6 * y[1574])/(130e-6 + 1e-6 * y[1574])
    R2204 = (13.7 * 1e-6 * y[1574])/(130e-6 + 1e-6 * y[1574])
    return (0) - (R952 + R2204)
 
def m_thymd_e(t, y):
    R956 = (13.7 * 1e-6 * y[1575])/(130e-6 + 1e-6 * y[1575])
    R2173 = (13.7 * 1e-6 * y[1575])/(130e-6 + 1e-6 * y[1575])
    return (0) - (R956 + R2173)
 
def m_tma_e(t, y):
    R958 = (13.7 * 1e-6 * y[1576])/(130e-6 + 1e-6 * y[1576])
    R2227 = (13.7 * 1e-6 * y[1576])/(130e-6 + 1e-6 * y[1576])
    return (0) - (R958 + R2227)
 
def m_gbbtn_e(t, y):
    R959 = (13.7 * 1e-6 * y[1577])/(130e-6 + 1e-6 * y[1577])
    R1162 = (13.7 * 1e-6 * y[1577])/(130e-6 + 1e-6 * y[1577])
    return (0) - (R959 + R1162)
 
def m_tmao_e(t, y):
    R960 = (13.7 * 1e-6 * y[1578])/(130e-6 + 1e-6 * y[1578])
    R2226 = (13.7 * 1e-6 * y[1578])/(130e-6 + 1e-6 * y[1578])
    return (0) - (R960 + R2226)
 
def m_tre_e(t, y):
    R961 = (13.7 * 1e-6 * y[1579])/(130e-6 + 1e-6 * y[1579])
    R2255 = (13.7 * 1e-6 * y[1579])/(130e-6 + 1e-6 * y[1579])
    return (0) - (R961 + R2255)
 
def m_trp__L_e(t, y):
    R965 = (13.7 * 1e-6 * y[1580])/(130e-6 + 1e-6 * y[1580])
    R2273 = (13.7 * 1e-6 * y[1580])/(130e-6 + 1e-6 * y[1580])
    return (0) - (R965 + R2273)
 
def m_gdp_e(t, y):
    R967 = (13.7 * 1e-6 * y[1581])/(130e-6 + 1e-6 * y[1581])
    R1175 = (13.7 * 1e-6 * y[1581])/(130e-6 + 1e-6 * y[1581])
    return (0) - (R967 + R1175)
 
def m_tsul_e(t, y):
    R970 = (13.7 * 1e-6 * y[1582])/(130e-6 + 1e-6 * y[1582])
    R2278 = (13.7 * 1e-6 * y[1582])/(130e-6 + 1e-6 * y[1582])
    return (0) - (R970 + R2278)
 
def m_ttdca_e(t, y):
    R971 = (13.7 * 1e-6 * y[1583])/(130e-6 + 1e-6 * y[1583])
    R2283 = (13.7 * 1e-6 * y[1583])/(130e-6 + 1e-6 * y[1583])
    return (0) - (R971 + R2283)
 
def m_ttdcea_e(t, y):
    R972 = (13.7 * 1e-6 * y[1584])/(130e-6 + 1e-6 * y[1584])
    R2284 = (13.7 * 1e-6 * y[1584])/(130e-6 + 1e-6 * y[1584])
    return (0) - (R972 + R2284)
 
def m_glc__D_e(t, y):
    R975 = (13.7 * 8.0 * y[1585])/(130e-6 + 8.0 * y[1585])
    R1171 = (13.7 * 1e-6 * y[1585])/(130e-6 + 1e-6 * y[1585])
    R1172 = (13.7 * 1e-6 * y[1585])/(130e-6 + 1e-6 * y[1585])
    return (0) - (R975 + R1171 + R1172)
 
def m_glcn_e(t, y):
    R977 = (13.7 * 1e-6 * y[1586])/(130e-6 + 1e-6 * y[1586])
    R1200 = (13.7 * 1e-6 * y[1586])/(130e-6 + 1e-6 * y[1586])
    return (0) - (R977 + R1200)
 
def m_glcr_e(t, y):
    R994 = (13.7 * 1e-6 * y[1587])/(130e-6 + 1e-6 * y[1587])
    R1214 = (13.7 * 1e-6 * y[1587])/(130e-6 + 1e-6 * y[1587])
    return (0) - (R994 + R1214)
 
def m_glcur1p_e(t, y):
    R1005 = (13.7 * 1e-6 * y[1588])/(130e-6 + 1e-6 * y[1588])
    R1223 = (13.7 * 1e-6 * y[1588])/(130e-6 + 1e-6 * y[1588])
    return (0) - (R1005 + R1223)
 
def m_glcur_e(t, y):
    R1025 = (13.7 * 1e-6 * y[1589])/(130e-6 + 1e-6 * y[1589])
    R1163 = (13.7 * 1e-6 * y[1589])/(130e-6 + 1e-6 * y[1589])
    return (0) - (R1025 + R1163)
 
def m_gln__L_e(t, y):
    R1032 = (13.7 * 1e-6 * y[1590])/(130e-6 + 1e-6 * y[1590])
    R1181 = (13.7 * 1e-6 * y[1590])/(130e-6 + 1e-6 * y[1590])
    return (0) - (R1032 + R1181)
 
def m_glu__L_e(t, y):
    R1040 = (13.7 * 1e-6 * y[1591])/(130e-6 + 1e-6 * y[1591])
    R1221 = (13.7 * 1e-6 * y[1591])/(130e-6 + 1e-6 * y[1591])
    return (0) - (R1040 + R1221)
 
def m_gly_e(t, y):
    R1058 = (13.7 * 1e-6 * y[1592])/(130e-6 + 1e-6 * y[1592])
    R1233 = (13.7 * 1e-6 * y[1592])/(130e-6 + 1e-6 * y[1592])
    return (0) - (R1058 + R1233)
 
def m_glyald_e(t, y):
    R1070 = (13.7 * 1e-6 * y[1593])/(130e-6 + 1e-6 * y[1593])
    R1226 = (13.7 * 1e-6 * y[1593])/(130e-6 + 1e-6 * y[1593])
    return (0) - (R1070 + R1226)
 
def m_gam1p_c(t, y):
    R1082 = (13.7 * 1e-6 * y[127] * y[1594])/(130e-6 + 1e-6 * y[127] * y[1594])
    R1904 = (13.7 * 1e-6 * y[1594])/(130e-6 + 1e-6 * y[1594])
    return (0) - (R1082 + R1904)
 
def m_glyb_e(t, y):
    R1084 = (13.7 * 1e-6 * y[1595])/(130e-6 + 1e-6 * y[1595])
    R1237 = (13.7 * 1e-6 * y[1595])/(130e-6 + 1e-6 * y[1595])
    return (0) - (R1084 + R1237)
 
def m_glyc2p_e(t, y):
    R1096 = (13.7 * 1e-6 * y[1596])/(130e-6 + 1e-6 * y[1596])
    R1238 = (13.7 * 1e-6 * y[1596])/(130e-6 + 1e-6 * y[1596])
    return (0) - (R1096 + R1238)
 
def m_glyc3p_e(t, y):
    R1099 = (13.7 * 1e-6 * y[1597])/(130e-6 + 1e-6 * y[1597])
    R1248 = (13.7 * 1e-6 * y[1597])/(130e-6 + 1e-6 * y[1597])
    return (0) - (R1099 + R1248)
 
def m_glyc_e(t, y):
    R1117 = (13.7 * 1e-6 * y[1598])/(130e-6 + 1e-6 * y[1598])
    R1279 = (13.7 * 1e-6 * y[1598])/(130e-6 + 1e-6 * y[1598])
    return (0) - (R1117 + R1279)
 
def m_glyc__R_e(t, y):
    R1146 = (13.7 * 1e-6 * y[1599])/(130e-6 + 1e-6 * y[1599])
    R1250 = (13.7 * 1e-6 * y[1599])/(130e-6 + 1e-6 * y[1599])
    return (0) - (R1146 + R1250)
 
def m_glyclt_e(t, y):
    R1155 = (13.7 * 1e-6 * y[1600])/(130e-6 + 1e-6 * y[1600])
    R1266 = (13.7 * 1e-6 * y[1600])/(130e-6 + 1e-6 * y[1600])
    return (0) - (R1155 + R1266)
 
def m_gmp_e(t, y):
    R1158 = (13.7 * 1e-6 * y[1601])/(130e-6 + 1e-6 * y[1601])
    R1247 = (13.7 * 1e-6 * y[1601])/(130e-6 + 1e-6 * y[1601])
    return (0) - (R1158 + R1247)
 
def m_gsn_e(t, y):
    R1161 = (13.7 * 1e-6 * y[1602])/(130e-6 + 1e-6 * y[1602])
    R1289 = (13.7 * 1e-6 * y[1602])/(130e-6 + 1e-6 * y[1602])
    return (0) - (R1161 + R1289)
 
def m_gthox_e(t, y):
    R1177 = (13.7 * 1e-6 * y[1603])/(130e-6 + 1e-6 * y[1603])
    R1295 = (13.7 * 1e-6 * y[1603])/(130e-6 + 1e-6 * y[1603])
    return (0) - (R1177 + R1295)
 
def m_trnagln_c(t, y):
    R1179 = (13.7 * 1e-6 * y[278] * y[710] * y[1604])/(130e-6 + 1e-6 * y[278] * y[710] * y[1604])
    return (0) - (R1179)
 
def m_gthrd_e(t, y):
    R1193 = (13.7 * 1e-6 * y[1605])/(130e-6 + 1e-6 * y[1605])
    R1303 = (13.7 * 1e-6 * y[1605])/(130e-6 + 1e-6 * y[1605])
    return (0) - (R1193 + R1303)
 
def m_glu__D_c(t, y):
    R1205 = (13.7 * 1e-6 * y[1606])/(130e-6 + 1e-6 * y[1606])
    R2348 = (13.7 * 1e-6 * y[278] * y[1606] * y[1291])/(130e-6 + 1e-6 * y[278] * y[1606] * y[1291])
    return (0) - (R1205 + R2348)
 
def m_gtp_e(t, y):
    R1215 = (13.7 * 1e-6 * y[1607])/(130e-6 + 1e-6 * y[1607])
    R1315 = (13.7 * 1e-6 * y[1607])/(130e-6 + 1e-6 * y[1607])
    return (0) - (R1215 + R1315)
 
def m_gua_e(t, y):
    R1225 = (13.7 * 1e-6 * y[1608])/(130e-6 + 1e-6 * y[1608])
    R1324 = (13.7 * 1e-6 * y[1608])/(130e-6 + 1e-6 * y[1608])
    return (0) - (R1225 + R1324)
 
def m_h2_e(t, y):
    R1230 = (13.7 * 1e-6 * y[1609])/(130e-6 + 1e-6 * y[1609])
    R1351 = (13.7 * 1e-6 * y[1609])/(130e-6 + 1e-6 * y[1609])
    return (0) - (R1230 + R1351)
 
def m_h2o2_e(t, y):
    R1244 = (13.7 * 1e-6 * y[1610])/(130e-6 + 1e-6 * y[1610])
    R1335 = (13.7 * 1e-6 * y[1610])/(130e-6 + 1e-6 * y[1610])
    return (0) - (R1244 + R1335)
 
def m_gp4g_c(t, y):
    R1257 = (13.7 * 1e-6 * y[1611] * y[173])/(130e-6 + 1e-6 * y[1611] * y[173])
    return (0) - (R1257)
 
def m_h2s_e(t, y):
    R1262 = (13.7 * 1e-6 * y[1612])/(130e-6 + 1e-6 * y[1612])
    R1350 = (13.7 * 1e-6 * y[1612])/(130e-6 + 1e-6 * y[1612])
    return (0) - (R1262 + R1350)
 
def m_trnagly_c(t, y):
    R1290 = (13.7 * 1e-6 * y[278] * y[261] * y[1613])/(130e-6 + 1e-6 * y[278] * y[261] * y[1613])
    return (0) - (R1290)
 
def m_hdca_e(t, y):
    R1307 = (13.7 * 1e-6 * y[1614])/(130e-6 + 1e-6 * y[1614])
    R1325 = (13.7 * 1e-6 * y[1614])/(130e-6 + 1e-6 * y[1614])
    R1482 = (13.7 * 1e-6 * y[413] * y[1344] * y[1614])/(130e-6 + 1e-6 * y[413] * y[1344] * y[1614])
    R1483 = (13.7 * 1e-6 * y[1344] * y[1614] * y[865])/(130e-6 + 1e-6 * y[1344] * y[1614] * y[865])
    return (0) - (R1307 + R1325 + R1482 + R1483)
 
def m_hdcea_e(t, y):
    R1314 = (13.7 * 1e-6 * y[1615])/(130e-6 + 1e-6 * y[1615])
    R1330 = (13.7 * 1e-6 * y[1615])/(130e-6 + 1e-6 * y[1615])
    return (0) - (R1314 + R1330)
 
def m_hg2_e(t, y):
    R1320 = (13.7 * 1e-6 * y[1616])/(130e-6 + 1e-6 * y[1616])
    R1362 = (13.7 * 1e-6 * y[1616])/(130e-6 + 1e-6 * y[1616])
    return (0) - (R1320 + R1362)
 
def m_his__L_e(t, y):
    R1327 = (13.7 * 1e-6 * y[1617])/(130e-6 + 1e-6 * y[1617])
    R1373 = (13.7 * 1e-6 * y[1617])/(130e-6 + 1e-6 * y[1617])
    return (0) - (R1327 + R1373)
 
def m_hom__L_e(t, y):
    R1340 = (13.7 * 1e-6 * y[1618])/(130e-6 + 1e-6 * y[1618])
    R1389 = (13.7 * 1e-6 * y[1618])/(130e-6 + 1e-6 * y[1618])
    return (0) - (R1340 + R1389)
 
def m_4mhetz_c(t, y):
    R1346 = (13.7 * 1e-6 * y[1619] * y[278])/(130e-6 + 1e-6 * y[1619] * y[278])
    return (0) - (R1346)
 
def m_hxa_e(t, y):
    R1347 = (13.7 * 1e-6 * y[1620])/(130e-6 + 1e-6 * y[1620])
    R1416 = (13.7 * 1e-6 * y[1620])/(130e-6 + 1e-6 * y[1620])
    return (0) - (R1347 + R1416)
 
def m_hxan_e(t, y):
    R1356 = (13.7 * 1e-6 * y[1621])/(130e-6 + 1e-6 * y[1621])
    R1434 = (13.7 * 1e-6 * y[1621])/(130e-6 + 1e-6 * y[1621])
    return (0) - (R1356 + R1434)
 
def m_hg2_c(t, y):
    R1360 = (13.7 * 1e-6 * y[278] * y[173] * y[1622])/(130e-6 + 1e-6 * y[278] * y[173] * y[1622])
    R1361 = (13.7 * 1e-6 * y[61] * y[1622])/(130e-6 + 1e-6 * y[61] * y[1622])
    return (0) - (R1360 + R1361)
 
def m_idon__L_e(t, y):
    R1364 = (13.7 * 1e-6 * y[1623])/(130e-6 + 1e-6 * y[1623])
    R1385 = (13.7 * 1e-6 * y[1623])/(130e-6 + 1e-6 * y[1623])
    return (0) - (R1364 + R1385)
 
def m_trnahis_c(t, y):
    R1366 = (13.7 * 1e-6 * y[278] * y[803] * y[1624])/(130e-6 + 1e-6 * y[278] * y[803] * y[1624])
    return (0) - (R1366)
 
def m_ile__L_e(t, y):
    R1378 = (13.7 * 1e-6 * y[1625])/(130e-6 + 1e-6 * y[1625])
    R1406 = (13.7 * 1e-6 * y[1625])/(130e-6 + 1e-6 * y[1625])
    return (0) - (R1378 + R1406)
 
def m_4ahmmp_c(t, y):
    R1380 = (13.7 * 1e-6 * y[1626] * y[278])/(130e-6 + 1e-6 * y[1626] * y[278])
    return (0) - (R1380)
 
def m_hom__L_c(t, y):
    R1384 = (13.7 * 1e-6 * y[61] * y[1627])/(130e-6 + 1e-6 * y[61] * y[1627])
    R1402 = (13.7 * 1e-6 * y[1627] * y[6])/(130e-6 + 1e-6 * y[1627] * y[6])
    R1403 = (13.7 * 1e-6 * y[278] * y[1627])/(130e-6 + 1e-6 * y[278] * y[1627])
    R1413 = (13.7 * 1e-6 * y[1627] * y[212])/(130e-6 + 1e-6 * y[1627] * y[212])
    return (0) - (R1384 + R1402 + R1403 + R1413)
 
def m_imp_e(t, y):
    R1386 = (13.7 * 1e-6 * y[1628])/(130e-6 + 1e-6 * y[1628])
    R1409 = (13.7 * 1e-6 * y[1628])/(130e-6 + 1e-6 * y[1628])
    return (0) - (R1386 + R1409)
 
def m_trnaile_c(t, y):
    R1395 = (13.7 * 1e-6 * y[278] * y[823] * y[1629])/(130e-6 + 1e-6 * y[278] * y[823] * y[1629])
    return (0) - (R1395)
 
def m_indole_e(t, y):
    R1397 = (13.7 * 1e-6 * y[1630])/(130e-6 + 1e-6 * y[1630])
    R1412 = (13.7 * 1e-6 * y[1630])/(130e-6 + 1e-6 * y[1630])
    return (0) - (R1397 + R1412)
 
def m_hpyr_c(t, y):
    R1399 = (13.7 * 1e-6 * y[1631])/(130e-6 + 1e-6 * y[1631])
    R1400 = (13.7 * 1e-6 * y[36] * y[1631] * y[113])/(130e-6 + 1e-6 * y[36] * y[1631] * y[113])
    R1401 = (13.7 * 1e-6 * y[36] * y[1631] * y[201])/(130e-6 + 1e-6 * y[36] * y[1631] * y[201])
    return (0) - (R1399 + R1400 + R1401)
 
def m_inost_e(t, y):
    R1420 = (13.7 * 1e-6 * y[1632])/(130e-6 + 1e-6 * y[1632])
    R1422 = (13.7 * 1e-6 * y[1632])/(130e-6 + 1e-6 * y[1632])
    return (0) - (R1420 + R1422)
 
def m_ins_e(t, y):
    R1430 = (13.7 * 1e-6 * y[1633])/(130e-6 + 1e-6 * y[1633])
    R1436 = (13.7 * 1e-6 * y[1633])/(130e-6 + 1e-6 * y[1633])
    return (0) - (R1430 + R1436)
 
def m_3c2hmp_c(t, y):
    R1433 = (13.7 * 1e-6 * y[1634] * y[236])/(130e-6 + 1e-6 * y[1634] * y[236])
    R1439 = (13.7 * 1e-6 * y[1634])/(130e-6 + 1e-6 * y[1634])
    return (0) - (R1433 + R1439)
 
def m_isetac_e(t, y):
    R1444 = (13.7 * 1e-6 * y[1635])/(130e-6 + 1e-6 * y[1635])
    R1446 = (13.7 * 1e-6 * y[1635])/(130e-6 + 1e-6 * y[1635])
    return (0) - (R1444 + R1446)
 
def m_k_e(t, y):
    R1449 = (13.7 * 999999.0 * y[1636])/(130e-6 + 999999.0 * y[1636])
    R1493 = (13.7 * 1e-6 * y[1636])/(130e-6 + 1e-6 * y[1636])
    return (0) - (R1449 + R1493)
 
def m_lcts_e(t, y):
    R1460 = (13.7 * 1e-6 * y[1637])/(130e-6 + 1e-6 * y[1637])
    R1495 = (13.7 * 1e-6 * y[1637])/(130e-6 + 1e-6 * y[1637])
    return (0) - (R1460 + R1495)
 
def m_trnaleu_c(t, y):
    R1470 = (13.7 * 1e-6 * y[278] * y[852] * y[1638])/(130e-6 + 1e-6 * y[278] * y[852] * y[1638])
    return (0) - (R1470)
 
def m_leu__L_e(t, y):
    R1479 = (13.7 * 1e-6 * y[1639])/(130e-6 + 1e-6 * y[1639])
    R1503 = (13.7 * 1e-6 * y[1639])/(130e-6 + 1e-6 * y[1639])
    return (0) - (R1479 + R1503)
 
def m_lac__L_e(t, y):
    R1488 = (13.7 * 1e-6 * y[1640])/(130e-6 + 1e-6 * y[1640])
    R1556 = (13.7 * 1e-6 * y[1640])/(130e-6 + 1e-6 * y[1640])
    return (0) - (R1488 + R1556)
 
def m_trnalys_c(t, y):
    R1536 = (13.7 * 1e-6 * y[278] * y[334] * y[1641])/(130e-6 + 1e-6 * y[278] * y[334] * y[1641])
    return (0) - (R1536)
 
def m_lys__L_e(t, y):
    R1540 = (13.7 * 1e-6 * y[1642])/(130e-6 + 1e-6 * y[1642])
    R1545 = (13.7 * 1e-6 * y[1642])/(130e-6 + 1e-6 * y[1642])
    return (0) - (R1540 + R1545)
 
def m_lyx__L_e(t, y):
    R1548 = (13.7 * 1e-6 * y[1643])/(130e-6 + 1e-6 * y[1643])
    R1554 = (13.7 * 1e-6 * y[1643])/(130e-6 + 1e-6 * y[1643])
    return (0) - (R1548 + R1554)
 
def m_mal__D_e(t, y):
    R1567 = (13.7 * 1e-6 * y[1644])/(130e-6 + 1e-6 * y[1644])
    R1575 = (13.7 * 1e-6 * y[1644])/(130e-6 + 1e-6 * y[1644])
    return (0) - (R1567 + R1575)
 
def m_mal__L_e(t, y):
    R1585 = (13.7 * 1e-6 * y[1645])/(130e-6 + 1e-6 * y[1645])
    R1605 = (13.7 * 1e-6 * y[1645])/(130e-6 + 1e-6 * y[1645])
    return (0) - (R1585 + R1605)
 
def m_malt_e(t, y):
    R1586 = (13.7 * 1e-6 * y[1646])/(130e-6 + 1e-6 * y[1646])
    R1592 = (13.7 * 1e-6 * y[1646])/(130e-6 + 1e-6 * y[1646])
    return (0) - (R1586 + R1592)
 
def m_mercppyr_c(t, y):
    R1595 = (13.7 * 1e-6 * y[1404] * y[1647])/(130e-6 + 1e-6 * y[1404] * y[1647])
    return (0) - (R1595)
 
def m_mana_c(t, y):
    R1617 = (13.7 * 1e-6 * y[1648] * y[236])/(130e-6 + 1e-6 * y[1648] * y[236])
    R1758 = (13.7 * 1e-6 * y[1648])/(130e-6 + 1e-6 * y[1648])
    return (0) - (R1617 + R1758)
 
def m_trnamet_c(t, y):
    R1663 = (13.7 * 1e-6 * y[278] * y[326] * y[1649])/(130e-6 + 1e-6 * y[278] * y[326] * y[1649])
    return (0) - (R1663)
 
def m_mi1p__D_c(t, y):
    R1678 = (13.7 * 1e-6 * y[173] * y[1650])/(130e-6 + 1e-6 * y[173] * y[1650])
    return (0) - (R1678)
 
def m_dmbzid_c(t, y):
    R1692 = (13.7 * 1e-6 * y[1651] * y[945])/(130e-6 + 1e-6 * y[1651] * y[945])
    return (0) - (R1692)
 
def m_orot5p_c(t, y):
    R1776 = (13.7 * 1e-6 * y[1652] * y[73])/(130e-6 + 1e-6 * y[1652] * y[73])
    R1850 = (13.7 * 1e-6 * y[36] * y[1652])/(130e-6 + 1e-6 * y[36] * y[1652])
    return (0) - (R1776 + R1850)
 
def m_ragund_c(t, y):
    R1798 = (13.7 * 1e-6 * y[127] * y[1653])/(130e-6 + 1e-6 * y[127] * y[1653])
    return (0) - (R1798)
 
def m_2pglyc_c(t, y):
    R1872 = (13.7 * 1e-6 * y[1654] * y[173])/(130e-6 + 1e-6 * y[1654] * y[173])
    return (0) - (R1872)
 
def m_trnaphe_c(t, y):
    R1943 = (13.7 * 1e-6 * y[278] * y[1091] * y[1655])/(130e-6 + 1e-6 * y[278] * y[1091] * y[1655])
    return (0) - (R1943)
 
def m_Nmtrp_c(t, y):
    R1976 = (13.7 * 1e-6 * y[1656] * y[173] * y[335])/(130e-6 + 1e-6 * y[1656] * y[173] * y[335])
    return (0) - (R1976)
 
def m_trnapro_c(t, y):
    R2011 = (13.7 * 1e-6 * y[278] * y[262] * y[1657])/(130e-6 + 1e-6 * y[278] * y[262] * y[1657])
    return (0) - (R2011)
 
def m_sarcs_c(t, y):
    R2114 = (13.7 * 1e-6 * y[173] * y[335] * y[1658])/(130e-6 + 1e-6 * y[173] * y[335] * y[1658])
    return (0) - (R2114)
 
def m_sl26da_c(t, y):
    R2124 = (13.7 * 1e-6 * y[173] * y[1659])/(130e-6 + 1e-6 * y[173] * y[1659])
    R2129 = (13.7 * 1e-6 * y[213] * y[1659])/(130e-6 + 1e-6 * y[213] * y[1659])
    return (0) - (R2124 + R2129)
 
def m_seln_c(t, y):
    R2131 = (13.7 * 1e-6 * y[278] * y[173] * y[1660])/(130e-6 + 1e-6 * y[278] * y[173] * y[1660])
    return (0) - (R2131)
 
def m_trnaser_c(t, y):
    R2143 = (13.7 * 1e-6 * y[278] * y[500] * y[1661])/(130e-6 + 1e-6 * y[278] * y[500] * y[1661])
    return (0) - (R2143)
 
def m_trnasecys_c(t, y):
    R2144 = (13.7 * 1e-6 * y[278] * y[500] * y[1662])/(130e-6 + 1e-6 * y[278] * y[500] * y[1662])
    return (0) - (R2144)
 
def m_trnathr_c(t, y):
    R2190 = (13.7 * 1e-6 * y[278] * y[1216] * y[1663])/(130e-6 + 1e-6 * y[278] * y[1216] * y[1663])
    return (0) - (R2190)
 
def m_tmao_c(t, y):
    R2216 = (13.7 * 1e-6 * y[36] * y[250] * y[1664])/(130e-6 + 1e-6 * y[36] * y[250] * y[1664])
    R2218 = (13.7 * 1e-6 * y[507] * y[36] * y[1664])/(130e-6 + 1e-6 * y[507] * y[36] * y[1664])
    return (0) - (R2216 + R2218)
 
def m_trnatrp_c(t, y):
    R2268 = (13.7 * 1e-6 * y[278] * y[1665] * y[1108])/(130e-6 + 1e-6 * y[278] * y[1665] * y[1108])
    return (0) - (R2268)
 
def m_trnatyr_c(t, y):
    R2297 = (13.7 * 1e-6 * y[278] * y[1666] * y[1266])/(130e-6 + 1e-6 * y[278] * y[1666] * y[1266])
    return (0) - (R2297)
 
def m_trnaval_c(t, y):
    R2310 = (13.7 * 1e-6 * y[278] * y[1667] * y[1272])/(130e-6 + 1e-6 * y[278] * y[1667] * y[1272])
    return (0) - (R2310)
 
def boundary_checker(y, boundary, type):
    '''
    Private function - called by ODE solvers to perform boundary checking 
    of variable values and reset them to specific values if the original 
    values fall out of the boundary values.
    
    Boundary parameter takes the form of a dictionary with variable number 
    as key and a list of [<boundary value>, <value to set if boundary is 
    exceeded>]. For example, the following dictionary for lower boundary 
    (type = 'lower') {'1': [0.0, 0.0], '5': [2.0, 2.0]} will set the lower 
    boundary of variable y[0] and [5] to 0.0 and 2.0 respectively. This 
    also allows for setting to a different value - for example, {'1': [0.0, 
    1.0]} will set variable y[0] to 2.0 if the original y[0] value is 
    negative.
    
    @param y: values for variables
    @type y: list
    @param boundary: set of values for boundary of variables
    @type boundary: dictionary
    @param type: the type of boundary to be checked, either 'upper' (upper 
    boundary) or 'lower' (lower boundary)
    '''
    for k in list(boundary.keys()):
        if y[int(k)] < boundary[k][0] and type == 'lower':
            y[int(k)] = boundary[k][1]
        if y[int(k)] > boundary[k][0] and type == 'upper':
            y[int(k)] = boundary[k][1]
    return y

def RK4(funcs, x0, y0, step, xmax, nonODEfunc=None,
        lower_bound=None, upper_bound=None,
        overflow=1e100, zerodivision=1e100):
    '''
    Generator to integrate a system of ODEs, y' = f(x, y), using fourth
    order Runge-Kutta method.
    
    A function (as nonODEfunc parameter) can be included to modify one or 
    more variables (y0 list). This function will not be an ODE (not a 
    dy/dt). This can be used to consolidate the modification of one or 
    more variables at each ODE solving step. For example, y[0] = y[1] / y[2] 
    can be written as 
    
    >>> def modifying_function(y, step):
            y[0] = y[1] / y[2]
            return y
    
    This function must take 'y' (variable list) and 'step' (time step) as 
    parameters and must return 'y' (the modified variable list). This 
    function will execute before boundary checking at each time step.
    
    Upper and lower boundaries of one or more variable can be set using 
    upper_bound and lower_bound parameters respectively. These parameters 
    takes the form of a dictionary with variable number as key and a list 
    of [<boundary value>, <value to set if boundary is exceeded>]. For 
    example, the following dictionary for lower boundary {'1': [0.0, 0.0], 
    '5': [2.0, 2.0]} will set the lower boundary of variable y[0] and y[5] 
    to 0.0 and 2.0 respectively. This also allows for setting to a different 
    value - for example, {'1': [0.0, 1.0]} will set variable y[0] to 2.0 if 
    the original y[0] value is negative.
    
    @param funcs: system of differential equations
    @type funcs: list
    @param x0: initial value of x-axis, which is usually starting time
    @type x0: float
    @param y0: initial values for variables
    @type y0: list
    @param step: step size on the x-axis (also known as step in calculus)
    @type step: float
    @param xmax: maximum value of x-axis, which is usually ending time
    @type xmax: float
    @param nonODEfunc: a function to modify the variable list (y0)
    @type nonODEfunc: function
    @param lower_bound: set of values for lower boundary of variables
    @type lower_bound: dictionary
    @param upper_bound: set of values for upper boundary of variables
    @type upper_bound: dictionary
    @param overflow: value (usually a large value) to assign in event of 
    over flow error (usually caused by a large number) during integration. 
    Default = 1e100.
    @type overflow: float
    @param zerodivision: value (usually a large value) to assign in event 
    of zero division error, which results in positive infinity, during 
    integration. Default = 1e100.
    @type zerodivision: float
    '''
    yield [x0] + y0
    def solver(funcs, x0, y0, step):
        n = len(funcs)
        f1, f2, f3, f4 = [0]*n, [0]*n, [0]*n, [0]*n
        y1 = [0]*n
        for i in range(n):
            try: f1[i] = funcs[i](x0, y0)
            except TypeError: pass
            except ZeroDivisionError: f1[i] = zerodivision
            except OverflowError: f1[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (0.5*step*f1[j])
        for i in range(n):
            try: f2[i] = funcs[i]((x0+(0.5*step)), y1)
            except TypeError: pass
            except ZeroDivisionError: f2[i] = zerodivision
            except OverflowError: f2[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (0.5*step*f2[j])
        for i in range(n):
            try: f3[i] = funcs[i]((x0+(0.5*step)), y1)
            except TypeError: pass
            except ZeroDivisionError: f3[i] = zerodivision
            except OverflowError: f3[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (step*f3[j])
        for i in range(n):
            try: f4[i] = funcs[i]((x0+step), y1)
            except TypeError: pass
            except ZeroDivisionError: f4[i] = zerodivision
            except OverflowError: f4[i] = overflow
        for i in range(n):
            try: y1[i] = y0[i] + (step * \
                    (f1[i] + (2.0*f2[i]) + (2.0*f3[i]) + f4[i]) / 6.0)
            except TypeError: pass
            except ZeroDivisionError: y1[i] = zerodivision
            except OverflowError: y1[i] = overflow
        return y1
    while x0 < xmax:
        y1 = solver(funcs, x0, y0, step)
        if nonODEfunc:
            y1 = nonODEfunc(y1, step)
        if lower_bound: 
            y1 = boundary_checker(y1, lower_bound, 'lower')
        if upper_bound: 
            y1 = boundary_checker(y1, upper_bound, 'upper')
        y0 = y1
        x0 = x0 + step
        yield [x0] + y0
        
ODE = list(range(1668))
ODE[0] = m_acgam_p
ODE[1] = m_pi_p
ODE[2] = m_2tdecg3p_c
ODE[3] = m_2tdec7eg3p_c
ODE[4] = m_2hdecg3p_c
ODE[5] = m_3hoctaACP_c
ODE[6] = m_nadp_c
ODE[7] = m_2hdec9eg3p_c
ODE[8] = m_3hcvac11eACP_c
ODE[9] = m_2odecg3p_c
ODE[10] = m_3haACP_c
ODE[11] = m_2odec11eg3p_c
ODE[12] = m_3hhexACP_c
ODE[13] = m_3hoctACP_c
ODE[14] = m_3odecACP_c
ODE[15] = m_ACP_c
ODE[16] = m_co2_c
ODE[17] = m_2agpe120_c
ODE[18] = m_3oddecACP_c
ODE[19] = m_3ocddec5eACP_c
ODE[20] = m_3omrsACP_c
ODE[21] = m_12dgr120_c
ODE[22] = m_12dgr140_c
ODE[23] = m_3ocmrs7eACP_c
ODE[24] = m_12dgr141_c
ODE[25] = m_2agpe140_c
ODE[26] = m_12dgr160_c
ODE[27] = m_12dgr161_c
ODE[28] = m_3opalmACP_c
ODE[29] = m_3ocpalm9eACP_c
ODE[30] = m_3ooctdACP_c
ODE[31] = m_3ocvac11eACP_c
ODE[32] = m_3ohexACP_c
ODE[33] = m_3ooctACP_c
ODE[34] = m_LalaDgluMdap_c
ODE[35] = m_adp_c
ODE[36] = m_h_c
ODE[37] = m_pi_c
ODE[38] = m_LalaDgluMdap_p
ODE[39] = m_3ump_p
ODE[40] = m_34dhpac_p
ODE[41] = m_h2o2_p
ODE[42] = m_nh4_p
ODE[43] = m_4hoxpacd_p
ODE[44] = m_4hthr_c
ODE[45] = m_ala__D_c
ODE[46] = m_ala__D_p
ODE[47] = m_12dgr180_c
ODE[48] = m_12dgr181_c
ODE[49] = m_12ppd__R_p
ODE[50] = m_12ppd__R_c
ODE[51] = m_12ppd__S_p
ODE[52] = m_12ppd__S_c
ODE[53] = m_14glucan_c
ODE[54] = m_14glucan_p
ODE[55] = m_23camp_p
ODE[56] = m_23ccmp_p
ODE[57] = m_23cgmp_p
ODE[58] = m_23cump_p
ODE[59] = m_23dappa_c
ODE[60] = m_23dappa_p
ODE[61] = m_h_p
ODE[62] = m_3cmp_p
ODE[63] = m_LalaDgluMdapDala_c
ODE[64] = m_LalaDgluMdapDala_p
ODE[65] = m_glcn_c
ODE[66] = m_5dglcn_c
ODE[67] = m_5dglcn_p
ODE[68] = m_5drib_c
ODE[69] = m_ade_c
ODE[70] = m_ara5p_c
ODE[71] = m_amp_c
ODE[72] = m_myrsACP_c
ODE[73] = m_ppi_c
ODE[74] = m_tdeACP_c
ODE[75] = m_3amp_p
ODE[76] = m_3gmp_p
ODE[77] = m_26dap__M_p
ODE[78] = m_2ddecg3p_c
ODE[79] = m_palmACP_c
ODE[80] = m_2agpe141_c
ODE[81] = m_hdeACP_c
ODE[82] = m_octeACP_c
ODE[83] = m_acgam1p_p
ODE[84] = m_ocdcaACP_c
ODE[85] = m_acgam6p_c
ODE[86] = m_ddcaACP_c
ODE[87] = m_2agpe160_c
ODE[88] = m_dcaACP_c
ODE[89] = m_ocACP_c
ODE[90] = m_ump_c
ODE[91] = m_unaga_c
ODE[92] = m_pyr_c
ODE[93] = m_h2o2_c
ODE[94] = m_mthgxl_c
ODE[95] = m_nh4_c
ODE[96] = m_2agpe161_c
ODE[97] = m_acg5p_c
ODE[98] = m_acglu_c
ODE[99] = m_coa_c
ODE[100] = m_dtdp_c
ODE[101] = m_unagamuf_c
ODE[102] = m_malthx_c
ODE[103] = m_2ahbut_c
ODE[104] = m_actp_c
ODE[105] = m_alac__S_c
ODE[106] = m_lac__D_c
ODE[107] = m_malthx_p
ODE[108] = m_g6p_c
ODE[109] = m_hqn_c
ODE[110] = m_glu__L_c
ODE[111] = m_sucsal_c
ODE[112] = m_4abut_c
ODE[113] = m_nadh_c
ODE[114] = m_udp_c
ODE[115] = m_unagamu_c
ODE[116] = m_acmanap_c
ODE[117] = m_4abut_p
ODE[118] = m_2agpe180_c
ODE[119] = m_aacoa_c
ODE[120] = m_ac_c
ODE[121] = m_acac_c
ODE[122] = m_acac_p
ODE[123] = m_acmana_p
ODE[124] = m_acmum6p_c
ODE[125] = m_acmum_p
ODE[126] = m_acnam_c
ODE[127] = m_accoa_c
ODE[128] = m_acald_p
ODE[129] = m_acnam_p
ODE[130] = m_2agpe181_c
ODE[131] = m_acmana_c
ODE[132] = m_acald_c
ODE[133] = m_acanth_c
ODE[134] = m_agdpcbi_c
ODE[135] = m_b2coa_c
ODE[136] = m_fadh2_c
ODE[137] = m_hx2coa_c
ODE[138] = m_malcoa_c
ODE[139] = m_pe120_c
ODE[140] = m_ppcoa_c
ODE[141] = m_acgal_p
ODE[142] = m_acgal1p_p
ODE[143] = m_oc2coa_c
ODE[144] = m_dc2coa_c
ODE[145] = m_dd2coa_c
ODE[146] = m_td2coa_c
ODE[147] = m_hdd2coa_c
ODE[148] = m_od2coa_c
ODE[149] = m_acACP_c
ODE[150] = m_pe140_c
ODE[151] = m_orn_c
ODE[152] = m_paps_c
ODE[153] = m_fum_c
ODE[154] = m_aicar_c
ODE[155] = m_pe141_c
ODE[156] = m_dcamp_c
ODE[157] = m_gdp_c
ODE[158] = m_pe160_c
ODE[159] = m_gam6p_c
ODE[160] = m_pe161_c
ODE[161] = m_anhgm_c
ODE[162] = m_anhgm_p
ODE[163] = m_pe180_c
ODE[164] = m_pe181_c
ODE[165] = m_acgam_c
ODE[166] = m_anhm3p_c
ODE[167] = m_anhgm3p_c
ODE[168] = m_acolipa_e
ODE[169] = m_2agpg120_c
ODE[170] = m_acon_C_c
ODE[171] = m_aconm_c
ODE[172] = m_ahcys_c
ODE[173] = m_h2o_c
ODE[174] = m_icit_c
ODE[175] = m_acg5sa_c
ODE[176] = m_anhgm3p_p
ODE[177] = m_anhm4p_c
ODE[178] = m_anhgm4p_c
ODE[179] = m_anhm_c
ODE[180] = m_adphep_LD_c
ODE[181] = m_pap_c
ODE[182] = m_acser_p
ODE[183] = m_ptrc_c
ODE[184] = m_urea_c
ODE[185] = m_agm_p
ODE[186] = m_2agpg140_c
ODE[187] = m_pa120_c
ODE[188] = m_pa140_c
ODE[189] = m_na1_c
ODE[190] = m_ac_p
ODE[191] = m_ins_c
ODE[192] = m_pa141_c
ODE[193] = m_pa160_c
ODE[194] = m_4abz_c
ODE[195] = m_2agpg141_c
ODE[196] = m_4adcho_c
ODE[197] = m_hxan_c
ODE[198] = m_pa161_c
ODE[199] = m_pa180_c
ODE[200] = m_pa181_c
ODE[201] = m_nadph_c
ODE[202] = m_ag_e
ODE[203] = m_ade_p
ODE[204] = m_rhcys_c
ODE[205] = m_fprica_c
ODE[206] = m_thf_c
ODE[207] = m_idp_c
ODE[208] = m_2agpg160_c
ODE[209] = m_ametam_c
ODE[210] = m_camp_c
ODE[211] = m_5caiz_c
ODE[212] = m_succoa_c
ODE[213] = m_akg_c
ODE[214] = m_akg_p
ODE[215] = m_rib__D_c
ODE[216] = m_adn_c
ODE[217] = m_2agpg161_c
ODE[218] = m_alaala_c
ODE[219] = m_adn_p
ODE[220] = m_adocbip_c
ODE[221] = m_adocbl_c
ODE[222] = m_gmp_c
ODE[223] = m_adocbl_p
ODE[224] = m_alaala_p
ODE[225] = m_LalaLglu_c
ODE[226] = m_pyam5p_c
ODE[227] = m_r5p_c
ODE[228] = m_2agpg180_c
ODE[229] = m_all__D_p
ODE[230] = m_2agpe160_p
ODE[231] = m_lpp_p
ODE[232] = m_2agpg160_p
ODE[233] = m_acetol_c
ODE[234] = m_alatrna_c
ODE[235] = m_ala__L_c
ODE[236] = m_nad_c
ODE[237] = m_2agpg181_c
ODE[238] = m_2ddglcn_c
ODE[239] = m_ala__L_p
ODE[240] = m_glyc_c
ODE[241] = m_pg120_c
ODE[242] = m_glc__D_c
ODE[243] = m_maltttr_c
ODE[244] = m_maltpt_c
ODE[245] = m_pac_c
ODE[246] = m_malthp_c
ODE[247] = m_pg140_c
ODE[248] = m_amob_c
ODE[249] = m_dann_c
ODE[250] = m_mql8_c
ODE[251] = m_4ampm_c
ODE[252] = m_for_c
ODE[253] = m_ppa_c
ODE[254] = m_but_c
ODE[255] = m_all6p_c
ODE[256] = m_allul6p_c
ODE[257] = m_urdglyc_c
ODE[258] = m_alltt_c
ODE[259] = m_alltn_c
ODE[260] = m_cys__L_c
ODE[261] = m_gly_c
ODE[262] = m_pro__L_c
ODE[263] = m_amp_p
ODE[264] = m_alltn_p
ODE[265] = m_pg141_c
ODE[266] = m_f6p_c
ODE[267] = m_all__D_c
ODE[268] = m_pg160_c
ODE[269] = m_pran_c
ODE[270] = m_anth_c
ODE[271] = m_pg161_c
ODE[272] = m_aact_c
ODE[273] = m_8aonn_c
ODE[274] = m_asn__L_p
ODE[275] = m_aso3_p
ODE[276] = m_pg180_c
ODE[277] = m_ala_B_c
ODE[278] = m_atp_c
ODE[279] = m_5aprbu_c
ODE[280] = m_rbl__L_c
ODE[281] = m_arbtn_c
ODE[282] = m_fad_c
ODE[283] = m_fe2_c
ODE[284] = m_fmn_c
ODE[285] = m_ribflv_c
ODE[286] = m_cbasp_c
ODE[287] = m_4pasp_c
ODE[288] = m_iasp_c
ODE[289] = m_q8h2_c
ODE[290] = m_succ_c
ODE[291] = m_arbtn_fe3_c
ODE[292] = m_arbtn_fe3_e
ODE[293] = m_arbtn_e
ODE[294] = m_pg181_c
ODE[295] = m_arbtn_fe3_p
ODE[296] = m_arbtn_p
ODE[297] = m_arab__L_c
ODE[298] = m_oaa_c
ODE[299] = m_asptrna_c
ODE[300] = m_asp__L_c
ODE[301] = m_arab__L_p
ODE[302] = m_asp__L_p
ODE[303] = m_arg__L_c
ODE[304] = m_agm_c
ODE[305] = m_co2_p
ODE[306] = m_orn_p
ODE[307] = m_argsuc_c
ODE[308] = m_argtrna_c
ODE[309] = m_aso3_c
ODE[310] = m_gthox_c
ODE[311] = m_sucarg_c
ODE[312] = m_2aobut_c
ODE[313] = m_itp_c
ODE[314] = m_prbatp_c
ODE[315] = m_arg__L_p
ODE[316] = m_ala_B_p
ODE[317] = m_3dhgulnp_c
ODE[318] = m_idon__L_c
ODE[319] = m_ascb6p_c
ODE[320] = m_ascb__L_p
ODE[321] = m_glyb_c
ODE[322] = m_btn_c
ODE[323] = m_asn__L_c
ODE[324] = m_asntrna_c
ODE[325] = m_dad_5_c
ODE[326] = m_met__L_c
ODE[327] = m_btcoa_c
ODE[328] = m_butso3_c
ODE[329] = m_butso3_p
ODE[330] = m_but_p
ODE[331] = m_ca2_p
ODE[332] = m_cmp_c
ODE[333] = m_15dap_p
ODE[334] = m_lys__L_c
ODE[335] = m_o2_c
ODE[336] = m_2p4c2me_c
ODE[337] = m_cpe160_c
ODE[338] = m_adocbi_c
ODE[339] = m_pppi_c
ODE[340] = m_cpg160_c
ODE[341] = m_cpe180_c
ODE[342] = m_cpg180_c
ODE[343] = m_cgly_c
ODE[344] = m_cbi_p
ODE[345] = m_cbi_c
ODE[346] = m_cbl1_c
ODE[347] = m_cgly_p
ODE[348] = m_chol_c
ODE[349] = m_chol_p
ODE[350] = m_pphn_c
ODE[351] = m_chor_c
ODE[352] = m_cbl1_p
ODE[353] = m_cbp_c
ODE[354] = m_cd2_p
ODE[355] = m_4hbz_c
ODE[356] = m_cenchddd_c
ODE[357] = m_cit_c
ODE[358] = m_succ_p
ODE[359] = m_cd2_c
ODE[360] = m_tdec2eACP_c
ODE[361] = m_cit_p
ODE[362] = m_lipa_cold_e
ODE[363] = m_pa120_p
ODE[364] = m_pg120_p
ODE[365] = m_pa140_p
ODE[366] = m_pg140_p
ODE[367] = m_pa141_p
ODE[368] = m_pg141_p
ODE[369] = m_pa160_p
ODE[370] = m_pg160_p
ODE[371] = m_tddec2eACP_c
ODE[372] = m_pa161_p
ODE[373] = m_pg161_p
ODE[374] = m_t3c5ddeceACP_c
ODE[375] = m_pa180_p
ODE[376] = m_pg180_p
ODE[377] = m_pa181_p
ODE[378] = m_pg181_p
ODE[379] = m_clpn120_p
ODE[380] = m_glyc_p
ODE[381] = m_clpn140_p
ODE[382] = m_crnDcoa_c
ODE[383] = m_crn__D_c
ODE[384] = m_crn_c
ODE[385] = m_gbbtn_p
ODE[386] = m_clpn141_p
ODE[387] = m_clpn160_p
ODE[388] = m_crn__D_p
ODE[389] = m_clpn161_p
ODE[390] = m_clpn180_p
ODE[391] = m_crn_p
ODE[392] = m_clpn181_p
ODE[393] = m_tmrs2eACP_c
ODE[394] = m_cl_c
ODE[395] = m_cl_p
ODE[396] = m_ura_c
ODE[397] = m_csn_c
ODE[398] = m_csn_p
ODE[399] = m_cmp_p
ODE[400] = m_ctbtcoa_c
ODE[401] = m_t3c7mrseACP_c
ODE[402] = m_ctbt_c
ODE[403] = m_cobalt2_p
ODE[404] = m_ctp_c
ODE[405] = m_cu2_p
ODE[406] = m_h2o_p
ODE[407] = m_cu_p
ODE[408] = m_cobalt2_c
ODE[409] = m_colipa_p
ODE[410] = m_tpalm2eACP_c
ODE[411] = m_cu2_c
ODE[412] = m_cu_e
ODE[413] = m_colipa_e
ODE[414] = m_cpgn_un_c
ODE[415] = m_so3_c
ODE[416] = m_tcynt_c
ODE[417] = m_so3_p
ODE[418] = m_tcynt_p
ODE[419] = m_cpgn_un_e
ODE[420] = m_cpgn_un_p
ODE[421] = m_t3c9palmeACP_c
ODE[422] = m_cpgn_c
ODE[423] = m_cpgn_e
ODE[424] = m_cyan_p
ODE[425] = m_cynt_c
ODE[426] = m_cpgn_p
ODE[427] = m_pppg9_c
ODE[428] = m_toctd2eACP_c
ODE[429] = m_cynt_p
ODE[430] = m_h2s_c
ODE[431] = m_crncoa_c
ODE[432] = m_gbbtn_c
ODE[433] = m_cys__D_c
ODE[434] = m_cys__D_p
ODE[435] = m_so2_c
ODE[436] = m_hcys__L_c
ODE[437] = m_cystrna_c
ODE[438] = m_t3c11vaceACP_c
ODE[439] = m_cys__L_p
ODE[440] = m_but2eACP_c
ODE[441] = m_mqn8_c
ODE[442] = m_damp_p
ODE[443] = m_26dap__M_c
ODE[444] = m_q8_c
ODE[445] = m_thex2eACP_c
ODE[446] = m_uri_c
ODE[447] = m_cdpdddecg_c
ODE[448] = m_cdpdtdecg_c
ODE[449] = m_cdpdtdec7eg_c
ODE[450] = m_cdpdhdecg_c
ODE[451] = m_cdpdhdec9eg_c
ODE[452] = m_cdpdodecg_c
ODE[453] = m_cdpdodec11eg_c
ODE[454] = m_cytd_c
ODE[455] = m_cytd_p
ODE[456] = m_cdp_c
ODE[457] = m_dcdp_c
ODE[458] = m_din_c
ODE[459] = m_ditp_c
ODE[460] = m_db4p_c
ODE[461] = m_dtbt_c
ODE[462] = m_dadp_c
ODE[463] = m_toct2eACP_c
ODE[464] = m_dad_2_c
ODE[465] = m_dad_2_p
ODE[466] = m_dca_p
ODE[467] = m_dcmp_p
ODE[468] = m_dutp_c
ODE[469] = m_duri_c
ODE[470] = m_dhcinnm_c
ODE[471] = m_dcyt_c
ODE[472] = m_dcyt_p
ODE[473] = m_dhpppn_c
ODE[474] = m_ddca_p
ODE[475] = m_2dh3dgal6p_c
ODE[476] = m_2ddglcn_p
ODE[477] = m_2ddg6p_c
ODE[478] = m_2dda7p_c
ODE[479] = m_2dhguln_c
ODE[480] = m_g3p_c
ODE[481] = m_2kmb_c
ODE[482] = m_uri_p
ODE[483] = m_dgdp_c
ODE[484] = m_dgmp_p
ODE[485] = m_dgsn_c
ODE[486] = m_grdp_c
ODE[487] = m_dmpp_c
ODE[488] = m_dms_c
ODE[489] = m_dgsn_p
ODE[490] = m_3mob_c
ODE[491] = m_3mop_c
ODE[492] = m_dhap_c
ODE[493] = m_dha_p
ODE[494] = m_dms_p
ODE[495] = m_2dmmq8_c
ODE[496] = m_dmso_p
ODE[497] = m_dha_c
ODE[498] = m_23dhb_c
ODE[499] = m_23dhba_c
ODE[500] = m_ser__L_c
ODE[501] = m_hkntd_c
ODE[502] = m_thdp_c
ODE[503] = m_gsn_p
ODE[504] = m_dhnpt_c
ODE[505] = m_23dhdp_c
ODE[506] = m_dhf_c
ODE[507] = m_2dmmql8_c
ODE[508] = m_6hmhpt_c
ODE[509] = m_gcald_c
ODE[510] = m_orot_c
ODE[511] = m_dhpmp_c
ODE[512] = m_3dhguln_c
ODE[513] = m_dopa_p
ODE[514] = m_3hdecACP_c
ODE[515] = m_5apru_c
ODE[516] = m_dhpt_c
ODE[517] = m_pant__R_c
ODE[518] = m_dsbaox_p
ODE[519] = m_dsbcrd_p
ODE[520] = m_gthox_p
ODE[521] = m_dsbdrd_c
ODE[522] = m_trdox_c
ODE[523] = m_dsbgrd_p
ODE[524] = m_2amsa_c
ODE[525] = m_ser__D_c
ODE[526] = m_hmfurn_c
ODE[527] = m_dhmptp_c
ODE[528] = m_3dhq_c
ODE[529] = m_3dhsk_c
ODE[530] = m_dimp_p
ODE[531] = m_ser__D_p
ODE[532] = m_dtmp_p
ODE[533] = m_din_p
ODE[534] = m_3hddecACP_c
ODE[535] = m_dump_p
ODE[536] = m_dump_c
ODE[537] = m_2dr1p_c
ODE[538] = m_butACP_c
ODE[539] = m_3hcddec5eACP_c
ODE[540] = m_duri_p
ODE[541] = m_hexACP_c
ODE[542] = m_2me4p_c
ODE[543] = m_3hmrsACP_c
ODE[544] = m_dxyl5p_c
ODE[545] = m_eca4colipa_e
ODE[546] = m_lac__D_p
ODE[547] = m_4per_c
ODE[548] = m_eca4colipa_p
ODE[549] = m_udcpdp_p
ODE[550] = m_eca2und_p
ODE[551] = m_3hcmrs7eACP_c
ODE[552] = m_eca3und_p
ODE[553] = m_eca4und_p
ODE[554] = m_unagamuf_p
ODE[555] = m_cddec5eACP_c
ODE[556] = m_3hpalmACP_c
ODE[557] = m_kdo2lipid4L_c
ODE[558] = m_lipa_c
ODE[559] = m_kdo2lipid4p_c
ODE[560] = m_3hcpalm9eACP_c
ODE[561] = m_lipa_cold_c
ODE[562] = m_enlipa_e
ODE[563] = m_pep_c
ODE[564] = m_enter_c
ODE[565] = m_23dhbzs_c
ODE[566] = m_fe3_c
ODE[567] = m_etha_c
ODE[568] = m_etha_p
ODE[569] = m_ethso3_c
ODE[570] = m_ethso3_p
ODE[571] = m_etoh_c
ODE[572] = m_etoh_p
ODE[573] = m_fru_c
ODE[574] = m_f6p_p
ODE[575] = m_dca_c
ODE[576] = m_ddca_c
ODE[577] = m_ttdca_c
ODE[578] = m_ttdcea_c
ODE[579] = m_hdca_c
ODE[580] = m_hdcea_c
ODE[581] = m_octa_c
ODE[582] = m_ocdca_c
ODE[583] = m_ocdcea_c
ODE[584] = m_hxa_c
ODE[585] = m_dcacoa_c
ODE[586] = m_ddcacoa_c
ODE[587] = m_tdcoa_c
ODE[588] = m_tdecoa_c
ODE[589] = m_pmtcoa_c
ODE[590] = m_hdcoa_c
ODE[591] = m_stcoa_c
ODE[592] = m_btal_c
ODE[593] = m_glx_c
ODE[594] = m_fe2_p
ODE[595] = m_odecoa_c
ODE[596] = m_hxcoa_c
ODE[597] = m_occoa_c
ODE[598] = m_fe3dcit_p
ODE[599] = m_Sfglutth_c
ODE[600] = m_fald_p
ODE[601] = m_fald_c
ODE[602] = m_fe3dhbzs_c
ODE[603] = m_fe3dhbzs_p
ODE[604] = m_fe3hox_un_c
ODE[605] = m_hmgth_c
ODE[606] = m_fcl__L_c
ODE[607] = m_fc1p_c
ODE[608] = m_lald__L_c
ODE[609] = m_pheme_c
ODE[610] = m_fe3hox_un_p
ODE[611] = m_fe3hox_un_e
ODE[612] = m_fe3hox_c
ODE[613] = m_fe3hox_e
ODE[614] = m_fe3hox_p
ODE[615] = m_fe3_p
ODE[616] = m_fecrm_un_c
ODE[617] = m_fecrm_un_e
ODE[618] = m_fecrm_un_p
ODE[619] = m_fecrm_c
ODE[620] = m_for_p
ODE[621] = m_fecrm_e
ODE[622] = m_fecrm_p
ODE[623] = m_fdp_c
ODE[624] = m_frulys_c
ODE[625] = m_frulysp_c
ODE[626] = m_feenter_c
ODE[627] = m_feenter_e
ODE[628] = m_enter_e
ODE[629] = m_feenter_p
ODE[630] = m_frulys_p
ODE[631] = m_fruur_c
ODE[632] = m_enter_p
ODE[633] = m_fruur_p
ODE[634] = m_f1p_c
ODE[635] = m_fru_p
ODE[636] = m_feoxam_un_c
ODE[637] = m_feoxam_un_e
ODE[638] = m_feoxam_un_p
ODE[639] = m_fuc__L_p
ODE[640] = m_feoxam_c
ODE[641] = m_feoxam_e
ODE[642] = m_fuc__L_c
ODE[643] = m_mal__L_c
ODE[644] = m_feoxam_p
ODE[645] = m_h2_c
ODE[646] = m_fldrd_c
ODE[647] = m_fum_p
ODE[648] = m_acgam1p_c
ODE[649] = m_rbflvrd_c
ODE[650] = m_fmettrna_c
ODE[651] = m_glc__D_p
ODE[652] = m_dtdpglu_c
ODE[653] = m_g1p_p
ODE[654] = m_5aop_c
ODE[655] = m_fmnh2_c
ODE[656] = m_1ddecg3p_c
ODE[657] = m_1tdecg3p_c
ODE[658] = m_1tdec7eg3p_c
ODE[659] = m_1hdecg3p_c
ODE[660] = m_1hdec9eg3p_c
ODE[661] = m_gal1p_p
ODE[662] = m_gal_bD_p
ODE[663] = m_1odecg3p_c
ODE[664] = m_1odec11eg3p_c
ODE[665] = m_g3pc_c
ODE[666] = m_5dh4dglc_c
ODE[667] = m_tagur_c
ODE[668] = m_2dh3dgal_c
ODE[669] = m_galctn__L_c
ODE[670] = m_g3pc_p
ODE[671] = m_galctn__L_p
ODE[672] = m_galctn__D_c
ODE[673] = m_g3pe_c
ODE[674] = m_g3pe_p
ODE[675] = m_g3pg_c
ODE[676] = m_galctn__D_p
ODE[677] = m_galct__D_c
ODE[678] = m_galct__D_p
ODE[679] = m_gal1p_c
ODE[680] = m_gal_p
ODE[681] = m_gal_c
ODE[682] = m_g3pg_p
ODE[683] = m_g3pi_c
ODE[684] = m_g3pi_p
ODE[685] = m_gagicolipa_c
ODE[686] = m_galt1p_c
ODE[687] = m_g3ps_c
ODE[688] = m_galt_p
ODE[689] = m_galur_c
ODE[690] = m_galur_p
ODE[691] = m_g3ps_p
ODE[692] = m_1pyr5c_c
ODE[693] = m_glu5sa_c
ODE[694] = m_udpg_c
ODE[695] = m_6pgl_c
ODE[696] = m_gam6p_p
ODE[697] = m_g6p_p
ODE[698] = m_gam_p
ODE[699] = m_13dpg_c
ODE[700] = m_fgam_c
ODE[701] = m_glcur_p
ODE[702] = m_glyclt_c
ODE[703] = m_gdpofuc_c
ODE[704] = m_ppgpp_c
ODE[705] = m_man_c
ODE[706] = m_glycogen_c
ODE[707] = m_man1p_c
ODE[708] = m_gdp_p
ODE[709] = m_adpglc_c
ODE[710] = m_gln__L_c
ODE[711] = m_glntrna_c
ODE[712] = m_gln__L_p
ODE[713] = m_tag6p__D_c
ODE[714] = m_gg4abut_c
ODE[715] = m_ggbutal_c
ODE[716] = m_ggptrc_c
ODE[717] = m_mlthf_c
ODE[718] = m_glu5p_c
ODE[719] = m_glucys_c
ODE[720] = m_bglycogen_c
ODE[721] = m_acglc__D_c
ODE[722] = m_glcn_p
ODE[723] = m_g1p_c
ODE[724] = m_glu__L_p
ODE[725] = m_pram_c
ODE[726] = m_glu1sa_c
ODE[727] = m_trnaglu_c
ODE[728] = m_2h3oppan_c
ODE[729] = m_glcr_c
ODE[730] = m_glutrna_c
ODE[731] = m_glcr_p
ODE[732] = m_gicolipa_c
ODE[733] = m_ggagicolipa_c
ODE[734] = m_gggagicolipa_c
ODE[735] = m_glcur1p_p
ODE[736] = m_glyald_p
ODE[737] = m_glyald_c
ODE[738] = m_glcur_c
ODE[739] = m_gly_p
ODE[740] = m_gdpddman_c
ODE[741] = m_glyb_p
ODE[742] = m_glyc2p_p
ODE[743] = m_glyc3p_c
ODE[744] = m_adphep_DD_c
ODE[745] = m_gmhep17bp_c
ODE[746] = m_gmhep1p_c
ODE[747] = m_imp_c
ODE[748] = m_gmp_p
ODE[749] = m_glyc3p_p
ODE[750] = m_glyc__R_c
ODE[751] = m_glyc__R_p
ODE[752] = m_3pg_c
ODE[753] = m_ru5p__D_c
ODE[754] = m_6pgc_c
ODE[755] = m_gdpfuc_c
ODE[756] = m_2pg_c
ODE[757] = m_glyclt_p
ODE[758] = m_ser__L_p
ODE[759] = m_inost_c
ODE[760] = m_inost_p
ODE[761] = m_frdp_c
ODE[762] = m_grxrd_c
ODE[763] = m_gthrd_c
ODE[764] = m_gsn_c
ODE[765] = m_glytrna_c
ODE[766] = m_spmd_c
ODE[767] = m_gtspmd_c
ODE[768] = m_3oddcoa_c
ODE[769] = m_3otdcoa_c
ODE[770] = m_3ohdcoa_c
ODE[771] = m_gthrd_p
ODE[772] = m_3ohodcoa_c
ODE[773] = m_ahdt_c
ODE[774] = m_25drapp_c
ODE[775] = m_gdptp_c
ODE[776] = m_3ophb_c
ODE[777] = m_3hcinnm_c
ODE[778] = m_xtp_c
ODE[779] = m_gtp_p
ODE[780] = m_xan_c
ODE[781] = m_3hcinnm_p
ODE[782] = m_hco3_c
ODE[783] = m_gua_c
ODE[784] = m_gua_p
ODE[785] = m_hdca_p
ODE[786] = m_hdcea_p
ODE[787] = m_hemeO_c
ODE[788] = m_phhlipa_c
ODE[789] = m_phphhlipa_c
ODE[790] = m_hlipa_c
ODE[791] = m_hhlipa_c
ODE[792] = m_hphhlipa_c
ODE[793] = m_colipa_c
ODE[794] = m_so4_c
ODE[795] = m_h2s_p
ODE[796] = m_4mpetz_c
ODE[797] = m_man6p_c
ODE[798] = m_h2_p
ODE[799] = m_3ohcoa_c
ODE[800] = m_3oocoa_c
ODE[801] = m_3odcoa_c
ODE[802] = m_hg2_p
ODE[803] = m_his__L_c
ODE[804] = m_histd_c
ODE[805] = m_histrna_c
ODE[806] = m_ichor_c
ODE[807] = m_his__L_p
ODE[808] = m_op4en_c
ODE[809] = m_23ddhb_c
ODE[810] = m_hmbil_c
ODE[811] = m_hom__L_p
ODE[812] = m_idon__L_p
ODE[813] = m_eig3p_c
ODE[814] = m_imacp_c
ODE[815] = m_6hmhptpp_c
ODE[816] = m_3ig3p_c
ODE[817] = m_hkndd_c
ODE[818] = m_iletrna_c
ODE[819] = m_3hpppn_c
ODE[820] = m_3hpppn_p
ODE[821] = m_aspsa_c
ODE[822] = m_phom_c
ODE[823] = m_ile__L_c
ODE[824] = m_ile__L_p
ODE[825] = m_xmp_c
ODE[826] = m_imp_p
ODE[827] = m_indole_p
ODE[828] = m_indole_c
ODE[829] = m_suchms_c
ODE[830] = m_hisp_c
ODE[831] = m_hxa_p
ODE[832] = m_pydam_c
ODE[833] = m_ins_p
ODE[834] = m_ipdp_c
ODE[835] = m_3c4mop_c
ODE[836] = m_hxan_p
ODE[837] = m_acolipa_p
ODE[838] = m_udcpp_p
ODE[839] = m_2ippm_c
ODE[840] = m_3c3hmp_c
ODE[841] = m_isetac_c
ODE[842] = m_LalaDglu_c
ODE[843] = m_isetac_p
ODE[844] = m_kdo2lipid4_p
ODE[845] = m_lald__D_c
ODE[846] = m_lac__L_c
ODE[847] = m_kdo2lipid4_e
ODE[848] = m_23dhmp_c
ODE[849] = m_actACP_c
ODE[850] = m_lcts_p
ODE[851] = m_lcts_c
ODE[852] = m_leu__L_c
ODE[853] = m_leutrna_c
ODE[854] = m_ckdo_c
ODE[855] = m_leu__L_p
ODE[856] = m_lgt__S_c
ODE[857] = m_lipa_cold_p
ODE[858] = m_h2o_e
ODE[859] = m_hacolipa_e
ODE[860] = m_halipa_e
ODE[861] = m_kdo_c
ODE[862] = m_kdo8p_c
ODE[863] = m_xu5p__L_c
ODE[864] = m_lipa_p
ODE[865] = m_lipa_e
ODE[866] = m_k_c
ODE[867] = m_k_p
ODE[868] = m_lipidAds_c
ODE[869] = m_ttdca_p
ODE[870] = m_ttdcea_p
ODE[871] = m_ocdca_p
ODE[872] = m_ocdcea_p
ODE[873] = m_15dap_c
ODE[874] = m_lystrna_c
ODE[875] = m_lys__L_p
ODE[876] = m_xylu__L_c
ODE[877] = m_lyx__L_c
ODE[878] = m_lyx__L_p
ODE[879] = m_lac__L_p
ODE[880] = m_apg120_c
ODE[881] = m_apg140_c
ODE[882] = m_apg141_c
ODE[883] = m_apg160_c
ODE[884] = m_apg161_c
ODE[885] = m_apg180_c
ODE[886] = m_mal__D_c
ODE[887] = m_mal__D_p
ODE[888] = m_apg181_c
ODE[889] = m_acmalt_c
ODE[890] = m_maltpt_p
ODE[891] = m_malttr_c
ODE[892] = m_malttr_p
ODE[893] = m_maltttr_p
ODE[894] = m_malt_c
ODE[895] = m_malt6p_c
ODE[896] = m_malt_p
ODE[897] = m_murein5px4p_p
ODE[898] = m_murein5px3p_p
ODE[899] = m_murein5px4px4p_p
ODE[900] = m_murein4px4p_p
ODE[901] = m_murein4px4px4p_p
ODE[902] = m_murein5p4p_p
ODE[903] = m_murein4p4p_p
ODE[904] = m_murein4p3p_p
ODE[905] = m_mal__L_p
ODE[906] = m_gdpmann_c
ODE[907] = m_man6p_p
ODE[908] = m_murein4px4p4p_p
ODE[909] = m_man6pglyc_c
ODE[910] = m_manglyc_p
ODE[911] = m_man_p
ODE[912] = m_2mcacn_c
ODE[913] = m_dkmpp_c
ODE[914] = m_h2mb4p_c
ODE[915] = m_2mecdp_c
ODE[916] = m_melib_c
ODE[917] = m_2mcit_c
ODE[918] = m_malACP_c
ODE[919] = m_melib_p
ODE[920] = m_4c2me_c
ODE[921] = m_amet_c
ODE[922] = m_met__D_c
ODE[923] = m_met__D_p
ODE[924] = m_mmcoa__S_c
ODE[925] = m_metsox_S__L_c
ODE[926] = m_metsox_R__L_c
ODE[927] = m_na1_p
ODE[928] = m_gtp_c
ODE[929] = m_utp_c
ODE[930] = m_mmet_c
ODE[931] = m_metsox_S__L_p
ODE[932] = m_dttp_c
ODE[933] = m_dgtp_c
ODE[934] = m_dctp_c
ODE[935] = m_datp_c
ODE[936] = m_metsox_R__L_p
ODE[937] = m_mettrna_c
ODE[938] = m_met__L_p
ODE[939] = m_n2o_c
ODE[940] = m_ni2_p
ODE[941] = m_mg2_c
ODE[942] = m_mg2_p
ODE[943] = m_ni2_c
ODE[944] = m_mmet_p
ODE[945] = m_nicrnt_c
ODE[946] = m_ncam_c
ODE[947] = m_nmn_c
ODE[948] = m_micit_c
ODE[949] = m_minohp_p
ODE[950] = m_murein3px4p_p
ODE[951] = m_murein5p3p_p
ODE[952] = m_nmn_p
ODE[953] = m_nac_c
ODE[954] = m_dnad_c
ODE[955] = m_5prdmbz_c
ODE[956] = m_murein3p3p_p
ODE[957] = m_murein3px3p_p
ODE[958] = m_mmcoa__R_c
ODE[959] = m_no2_c
ODE[960] = m_no2_p
ODE[961] = m_mn2_p
ODE[962] = m_no3_c
ODE[963] = m_anhgm4p_p
ODE[964] = m_no3_p
ODE[965] = m_no_p
ODE[966] = m_no_c
ODE[967] = m_mn2_c
ODE[968] = m_dhna_c
ODE[969] = m_xtsn_c
ODE[970] = m_xtsn_p
ODE[971] = m_mnl1p_c
ODE[972] = m_didp_c
ODE[973] = m_mnl_p
ODE[974] = m_xdp_c
ODE[975] = m_thymd_c
ODE[976] = m_thymd_p
ODE[977] = m_dgmp_c
ODE[978] = m_dimp_c
ODE[979] = m_dcmp_c
ODE[980] = m_damp_c
ODE[981] = m_dtmp_c
ODE[982] = m_orot_p
ODE[983] = m_prpp_c
ODE[984] = m_oxam_c
ODE[985] = m_ssaltpp_c
ODE[986] = m_kdolipid4_c
ODE[987] = m_o16a4colipa_e
ODE[988] = m_o16a4colipa_p
ODE[989] = m_o16a2und_p
ODE[990] = m_o16a3und_p
ODE[991] = m_kdo2lipid4_c
ODE[992] = m_o16a4und_p
ODE[993] = m_aragund_c
ODE[994] = m_o16aund_p
ODE[995] = m_gfgaragund_c
ODE[996] = m_pacald_c
ODE[997] = m_pacald_p
ODE[998] = m_garagund_c
ODE[999] = m_phaccoa_c
ODE[1000] = m_o16aund_c
ODE[1001] = m_pnto__R_c
ODE[1002] = m_kphphhlipa_c
ODE[1003] = m_o2s_p
ODE[1004] = m_o2_p
ODE[1005] = m_12dgr120_p
ODE[1006] = m_mobd_c
ODE[1007] = m_12dgr140_p
ODE[1008] = m_12dgr141_p
ODE[1009] = m_12dgr160_p
ODE[1010] = m_citr__L_c
ODE[1011] = m_octa_p
ODE[1012] = m_octdp_c
ODE[1013] = m_12dgr161_p
ODE[1014] = m_mobd_p
ODE[1015] = m_phthr_c
ODE[1016] = m_2omph_c
ODE[1017] = m_2ommbl_c
ODE[1018] = m_4mop_c
ODE[1019] = m_12dgr180_p
ODE[1020] = m_12dgr181_p
ODE[1021] = m_uagmda_c
ODE[1022] = m_2omhmbl_c
ODE[1023] = m_2dhp_c
ODE[1024] = m_grxox_c
ODE[1025] = m_pydx5p_c
ODE[1026] = m_pdx5p_c
ODE[1027] = m_2ombzl_c
ODE[1028] = m_4h2opntn_c
ODE[1029] = m_2oph_c
ODE[1030] = m_2ohph_c
ODE[1031] = m_pydxn_c
ODE[1032] = m_pe120_p
ODE[1033] = m_pe140_p
ODE[1034] = m_pe141_p
ODE[1035] = m_murein5p5p_p
ODE[1036] = m_udcpdp_c
ODE[1037] = m_pe160_p
ODE[1038] = m_pe161_p
ODE[1039] = m_pe180_p
ODE[1040] = m_3php_c
ODE[1041] = m_pe181_p
ODE[1042] = m_murein5p5p5p_p
ODE[1043] = m_peamn_p
ODE[1044] = m_ohpb_c
ODE[1045] = m_enlipa_p
ODE[1046] = m_pgp120_p
ODE[1047] = m_pgp140_p
ODE[1048] = m_pgp141_p
ODE[1049] = m_pgp160_p
ODE[1050] = m_pgp161_p
ODE[1051] = m_tagdp__D_c
ODE[1052] = m_pgp180_p
ODE[1053] = m_mso3_c
ODE[1054] = m_pgp181_p
ODE[1055] = m_mso3_p
ODE[1056] = m_5mtr_c
ODE[1057] = m_10fthf_c
ODE[1058] = m_1ddecg3p_p
ODE[1059] = m_1tdecg3p_p
ODE[1060] = m_1tdec7eg3p_p
ODE[1061] = m_1hdecg3p_p
ODE[1062] = m_1hdec9eg3p_p
ODE[1063] = m_1odecg3p_p
ODE[1064] = m_pgp120_c
ODE[1065] = m_pgp140_c
ODE[1066] = m_1odec11eg3p_p
ODE[1067] = m_pgp141_c
ODE[1068] = m_methf_c
ODE[1069] = m_pgp160_c
ODE[1070] = m_pgp161_c
ODE[1071] = m_1agpe120_p
ODE[1072] = m_1agpe140_p
ODE[1073] = m_1agpe141_p
ODE[1074] = m_1agpe160_p
ODE[1075] = m_pgp180_c
ODE[1076] = m_pgp181_c
ODE[1077] = m_1agpe161_p
ODE[1078] = m_5mthf_c
ODE[1079] = m_1agpe180_p
ODE[1080] = m_1agpe181_p
ODE[1081] = m_1agpg120_p
ODE[1082] = m_pheme_p
ODE[1083] = m_pheme_e
ODE[1084] = m_phpyr_c
ODE[1085] = m_phetrna_c
ODE[1086] = m_1agpg140_p
ODE[1087] = m_1agpg141_p
ODE[1088] = m_1agpg160_p
ODE[1089] = m_1agpg161_p
ODE[1090] = m_1agpg180_p
ODE[1091] = m_phe__L_c
ODE[1092] = m_phe__L_p
ODE[1093] = m_1agpg181_p
ODE[1094] = m_4r5au_c
ODE[1095] = m_2ddecg3p_p
ODE[1096] = m_5mdru1p_c
ODE[1097] = m_2tdecg3p_p
ODE[1098] = m_2tdec7eg3p_p
ODE[1099] = m_2mahmp_c
ODE[1100] = m_4ppan_c
ODE[1101] = m_pnto__R_p
ODE[1102] = m_2hdecg3p_p
ODE[1103] = m_2hdec9eg3p_p
ODE[1104] = m_5mdr1p_c
ODE[1105] = m_2odecg3p_p
ODE[1106] = m_2odec11eg3p_p
ODE[1107] = m_2agpe120_p
ODE[1108] = m_trp__L_c
ODE[1109] = m_ppal_p
ODE[1110] = m_ppa_p
ODE[1111] = m_2agpe140_p
ODE[1112] = m_2agpe141_p
ODE[1113] = m_2agpe161_p
ODE[1114] = m_2agpe180_p
ODE[1115] = m_2agpe181_p
ODE[1116] = m_2agpg120_p
ODE[1117] = m_2agpg140_p
ODE[1118] = m_2agpg141_p
ODE[1119] = m_ppbng_c
ODE[1120] = m_pan4p_c
ODE[1121] = m_2agpg161_p
ODE[1122] = m_n2o_p
ODE[1123] = m_2agpg180_p
ODE[1124] = m_2agpg181_p
ODE[1125] = m_2dr5p_c
ODE[1126] = m_4ppcys_c
ODE[1127] = m_34hpp_c
ODE[1128] = m_progly_p
ODE[1129] = m_protrna_c
ODE[1130] = m_pro__L_p
ODE[1131] = m_ppp9_c
ODE[1132] = m_cechddd_c
ODE[1133] = m_pppn_c
ODE[1134] = m_pppn_p
ODE[1135] = m_psclys_c
ODE[1136] = m_psclys_p
ODE[1137] = m_ppt_p
ODE[1138] = m_3psme_c
ODE[1139] = m_nac_p
ODE[1140] = m_gar_c
ODE[1141] = m_air_c
ODE[1142] = m_2cpr5p_c
ODE[1143] = m_prfp_c
ODE[1144] = m_25aics_c
ODE[1145] = m_prbamp_c
ODE[1146] = m_fpram_c
ODE[1147] = m_prlp_c
ODE[1148] = m_progly_c
ODE[1149] = m_pser__L_c
ODE[1150] = m_pser__L_p
ODE[1151] = m_ps120_c
ODE[1152] = m_ps140_c
ODE[1153] = m_ru5p__L_c
ODE[1154] = m_ps141_c
ODE[1155] = m_ps160_c
ODE[1156] = m_xu5p__D_c
ODE[1157] = m_icolipa_c
ODE[1158] = m_ps161_c
ODE[1159] = m_ps180_c
ODE[1160] = m_dhptd_c
ODE[1161] = m_rib__D_p
ODE[1162] = m_ps181_c
ODE[1163] = m_rml_c
ODE[1164] = m_rml1p_c
ODE[1165] = m_rmn_p
ODE[1166] = m_ppap_c
ODE[1167] = m_thr__L_p
ODE[1168] = m_dpcoa_c
ODE[1169] = m_4abutn_c
ODE[1170] = m_rmn_c
ODE[1171] = m_ptrc_p
ODE[1172] = m_r1p_c
ODE[1173] = m_dudp_c
ODE[1174] = m_fldox_c
ODE[1175] = m_rdmbzi_c
ODE[1176] = m_gmhep7p_c
ODE[1177] = m_sucorn_c
ODE[1178] = m_aps_c
ODE[1179] = m_pydx_c
ODE[1180] = m_pyr_p
ODE[1181] = m_sbt6p_c
ODE[1182] = m_sbt__D_p
ODE[1183] = m_o2s_c
ODE[1184] = m_26dap_LL_c
ODE[1185] = m_quln_c
ODE[1186] = m_sl2a6o_c
ODE[1187] = m_sectrna_c
ODE[1188] = m_selnp_c
ODE[1189] = m_seramp_c
ODE[1190] = m_acser_c
ODE[1191] = m_r15bp_c
ODE[1192] = m_r5p_p
ODE[1193] = m_dmlz_c
ODE[1194] = m_sertrna_c
ODE[1195] = m_sertrna_sec_c
ODE[1196] = m_adprib_c
ODE[1197] = m_sucglu_c
ODE[1198] = m_lipidA_c
ODE[1199] = m_dsbdox_c
ODE[1200] = m_2shchc_c
ODE[1201] = m_thmpp_c
ODE[1202] = m_scl_c
ODE[1203] = m_sheme_c
ODE[1204] = m_skm_c
ODE[1205] = m_skm5p_c
ODE[1206] = m_cyst__L_c
ODE[1207] = m_skm_p
ODE[1208] = m_so2_p
ODE[1209] = m_thm_c
ODE[1210] = m_thm_p
ODE[1211] = m_so4_p
ODE[1212] = m_sucgsa_c
ODE[1213] = m_N1aspmd_c
ODE[1214] = m_2obut_c
ODE[1215] = m_thrp_p
ODE[1216] = m_thr__L_c
ODE[1217] = m_n8aspmd_c
ODE[1218] = m_thrtrna_c
ODE[1219] = m_spmd_p
ODE[1220] = m_5mta_c
ODE[1221] = m_thym_p
ODE[1222] = m_4hba_c
ODE[1223] = m_sbzcoa_c
ODE[1224] = m_sucbz_c
ODE[1225] = m_s7p_c
ODE[1226] = m_tma_c
ODE[1227] = m_tma_p
ODE[1228] = m_sucr_p
ODE[1229] = m_suc6p_c
ODE[1230] = m_sulfac_c
ODE[1231] = m_tmao_p
ODE[1232] = m_thym_c
ODE[1233] = m_thmmp_c
ODE[1234] = m_2tpr3dpcoa_c
ODE[1235] = m_sulfac_p
ODE[1236] = m_cdec3eACP_c
ODE[1237] = m_e4p_c
ODE[1238] = m_tartr__L_c
ODE[1239] = m_tartr__L_p
ODE[1240] = m_trdrd_c
ODE[1241] = m_tre_c
ODE[1242] = m_tre6p_c
ODE[1243] = m_aacald_c
ODE[1244] = m_taur_c
ODE[1245] = m_tre_p
ODE[1246] = m_taur_p
ODE[1247] = m_dtdp4aaddg_c
ODE[1248] = m_dtdp4addg_c
ODE[1249] = m_dtdp4d6dm_c
ODE[1250] = m_dtdprmn_c
ODE[1251] = m_trptrna_c
ODE[1252] = m_cpppg3_c
ODE[1253] = m_dtdp4d6dg_c
ODE[1254] = m_trp__L_p
ODE[1255] = m_tsul_c
ODE[1256] = m_tsul_p
ODE[1257] = m_ura_p
ODE[1258] = m_oxur_c
ODE[1259] = m_tungs_c
ODE[1260] = m_urea_p
ODE[1261] = m_tungs_p
ODE[1262] = m_tym_p
ODE[1263] = m_tyr__L_p
ODE[1264] = m_tyrp_p
ODE[1265] = m_tyrtrna_c
ODE[1266] = m_tyr__L_c
ODE[1267] = m_lipidX_c
ODE[1268] = m_u23ga_c
ODE[1269] = m_ugmd_c
ODE[1270] = m_ump_p
ODE[1271] = m_valtrna_c
ODE[1272] = m_val__L_c
ODE[1273] = m_uacgam_p
ODE[1274] = m_uacmamu_c
ODE[1275] = m_uacmam_c
ODE[1276] = m_val__L_p
ODE[1277] = m_u3aga_c
ODE[1278] = m_uaccg_c
ODE[1279] = m_urate_c
ODE[1280] = m_xan_p
ODE[1281] = m_xmp_p
ODE[1282] = m_xylu__D_c
ODE[1283] = m_xylu__L_p
ODE[1284] = m_xyl__D_c
ODE[1285] = m_xyl__D_p
ODE[1286] = m_zn2_p
ODE[1287] = m_zn2_c
ODE[1288] = m_uacgam_c
ODE[1289] = m_uaagmda_c
ODE[1290] = m_uamag_c
ODE[1291] = m_uama_c
ODE[1292] = m_uamr_c
ODE[1293] = m_udcpp_c
ODE[1294] = m_udpacgal_p
ODE[1295] = m_udpgal_c
ODE[1296] = m_udpgalfur_c
ODE[1297] = m_udpgal_p
ODE[1298] = m_udpglcur_c
ODE[1299] = m_udpLa4o_c
ODE[1300] = m_udpglcur_p
ODE[1301] = m_udpg_p
ODE[1302] = m_udpLa4n_c
ODE[1303] = m_ugmda_c
ODE[1304] = m_u3hga_c
ODE[1305] = m_udpLa4fn_c
ODE[1306] = m_uLa4n_p
ODE[1307] = m_um4p_c
ODE[1308] = m_uLa4n_c
ODE[1309] = m_uLa4fn_c
ODE[1310] = m_dscl_c
ODE[1311] = m_uppg3_c
ODE[1312] = m_acser_e
ODE[1313] = m_LalaDgluMdap_e
ODE[1314] = m_3ump_e
ODE[1315] = m_4hoxpacd_e
ODE[1316] = m_12ppd__R_e
ODE[1317] = m_12ppd__S_e
ODE[1318] = m_14glucan_e
ODE[1319] = m_23camp_e
ODE[1320] = m_23ccmp_e
ODE[1321] = m_23cgmp_e
ODE[1322] = m_23cump_e
ODE[1323] = m_23dappa_e
ODE[1324] = m_LalaDgluMdapDala_e
ODE[1325] = m_5dglcn_e
ODE[1326] = m_26dap__M_e
ODE[1327] = m_acgam1p_e
ODE[1328] = m_acgam_e
ODE[1329] = m_arbt6p_c
ODE[1330] = m_4abut_e
ODE[1331] = m_acac_e
ODE[1332] = m_acmana_e
ODE[1333] = m_acmum_e
ODE[1334] = m_acald_e
ODE[1335] = m_acnam_e
ODE[1336] = m_acgal1p_e
ODE[1337] = m_acgal_e
ODE[1338] = m_acorn_c
ODE[1339] = m_acon_T_c
ODE[1340] = m_apoACP_c
ODE[1341] = m_agm_e
ODE[1342] = m_ac_e
ODE[1343] = m_ag_c
ODE[1344] = m_h_e
ODE[1345] = m_ade_e
ODE[1346] = m_5aizc_c
ODE[1347] = m_akg_e
ODE[1348] = m_adn_e
ODE[1349] = m_adocbl_e
ODE[1350] = m_alaala_e
ODE[1351] = m_all__D_e
ODE[1352] = m_alpp_p
ODE[1353] = m_trnaala_c
ODE[1354] = m_altrn_c
ODE[1355] = m_ala__L_e
ODE[1356] = m_ppal_c
ODE[1357] = m_amp_e
ODE[1358] = m_alltn_e
ODE[1359] = m_anhgm_e
ODE[1360] = m_pmcoa_c
ODE[1361] = m_ap4a_c
ODE[1362] = m_asn__L_e
ODE[1363] = m_aso3_e
ODE[1364] = m_ap5a_c
ODE[1365] = m_fe3_e
ODE[1366] = m_trnaasp_c
ODE[1367] = m_2dhglcn_c
ODE[1368] = m_asp__L_e
ODE[1369] = m_arab__L_e
ODE[1370] = m_trnaarg_c
ODE[1371] = m_aso4_c
ODE[1372] = m_athr__L_c
ODE[1373] = m_arg__L_e
ODE[1374] = m_ala_B_e
ODE[1375] = m_ascb__L_e
ODE[1376] = m_betald_c
ODE[1377] = m_btnso_c
ODE[1378] = m_trnaasn_c
ODE[1379] = m_s_c
ODE[1380] = m_butso3_e
ODE[1381] = m_but_e
ODE[1382] = m_ca2_c
ODE[1383] = m_34dhpac_e
ODE[1384] = m_ca2_e
ODE[1385] = m_3amp_e
ODE[1386] = m_3cmp_e
ODE[1387] = m_cbi_e
ODE[1388] = m_cgly_e
ODE[1389] = m_3gmp_e
ODE[1390] = m_chol_e
ODE[1391] = m_cbl1_e
ODE[1392] = m_cd2_e
ODE[1393] = m_cinnm_c
ODE[1394] = m_cit_e
ODE[1395] = m_crn_e
ODE[1396] = m_cl_e
ODE[1397] = m_csn_e
ODE[1398] = m_cmp_e
ODE[1399] = m_ctbt_p
ODE[1400] = m_co2_e
ODE[1401] = m_cu_c
ODE[1402] = m_cobalt2_e
ODE[1403] = m_cu2_e
ODE[1404] = m_cyan_c
ODE[1405] = m_cyan_e
ODE[1406] = m_cynt_e
ODE[1407] = m_bbtcoa_c
ODE[1408] = m_cys__D_e
ODE[1409] = m_3sala_c
ODE[1410] = m_trnacys_c
ODE[1411] = m_cys__L_e
ODE[1412] = m_ala__D_e
ODE[1413] = m_damp_e
ODE[1414] = m_15dap_e
ODE[1415] = m_cytd_e
ODE[1416] = m_dad_2_e
ODE[1417] = m_dca_e
ODE[1418] = m_dcmp_e
ODE[1419] = m_dcyt_e
ODE[1420] = m_ddca_e
ODE[1421] = m_2ddglcn_e
ODE[1422] = m_25dkglcn_c
ODE[1423] = m_dgmp_e
ODE[1424] = m_dmso_c
ODE[1425] = m_dgsn_e
ODE[1426] = m_23dhmb_c
ODE[1427] = m_dha_e
ODE[1428] = m_dmso_e
ODE[1429] = m_dms_e
ODE[1430] = m_dhor__S_c
ODE[1431] = m_23doguln_c
ODE[1432] = m_dopa_e
ODE[1433] = m_dsbard_p
ODE[1434] = m_dsbcox_p
ODE[1435] = m_dsbgox_p
ODE[1436] = m_dimp_e
ODE[1437] = m_ser__D_e
ODE[1438] = m_dtmp_e
ODE[1439] = m_din_e
ODE[1440] = m_dump_e
ODE[1441] = m_duri_e
ODE[1442] = m_dxyl_c
ODE[1443] = m_lac__D_e
ODE[1444] = m_3hbcoa_c
ODE[1445] = m_3hhcoa_c
ODE[1446] = m_3hocoa_c
ODE[1447] = m_3hdcoa_c
ODE[1448] = m_3hddcoa_c
ODE[1449] = m_3htdcoa_c
ODE[1450] = m_3hhdcoa_c
ODE[1451] = m_3hodcoa_c
ODE[1452] = m_for_e
ODE[1453] = m_etha_e
ODE[1454] = m_ethso3_e
ODE[1455] = m_etoh_e
ODE[1456] = m_fru_e
ODE[1457] = m_frulys_e
ODE[1458] = m_fruur_e
ODE[1459] = m_fuc__L_e
ODE[1460] = m_3hcinnm_e
ODE[1461] = m_3hpppn_e
ODE[1462] = m_fum_e
ODE[1463] = m_g1p_e
ODE[1464] = m_g3pc_e
ODE[1465] = m_g3pe_e
ODE[1466] = m_malthx_e
ODE[1467] = m_g3pg_e
ODE[1468] = m_maltpt_e
ODE[1469] = m_malttr_e
ODE[1470] = m_maltttr_e
ODE[1471] = m_man6p_e
ODE[1472] = m_g3pi_e
ODE[1473] = m_man_e
ODE[1474] = m_manglyc_e
ODE[1475] = m_melib_e
ODE[1476] = m_g3ps_e
ODE[1477] = m_met__D_e
ODE[1478] = m_met__L_e
ODE[1479] = m_metsox_R__L_e
ODE[1480] = m_g6p_e
ODE[1481] = m_metsox_S__L_e
ODE[1482] = m_mg2_e
ODE[1483] = m_minohp_e
ODE[1484] = m_mmet_e
ODE[1485] = m_mn2_e
ODE[1486] = m_mnl_e
ODE[1487] = m_mobd_e
ODE[1488] = m_mso3_e
ODE[1489] = m_n2o_e
ODE[1490] = m_na1_e
ODE[1491] = m_gal1p_e
ODE[1492] = m_f6p_e
ODE[1493] = m_fald_e
ODE[1494] = m_nac_e
ODE[1495] = m_nh4_e
ODE[1496] = m_ni2_e
ODE[1497] = m_nmn_e
ODE[1498] = m_fe2_e
ODE[1499] = m_no2_e
ODE[1500] = m_no3_e
ODE[1501] = m_gal_e
ODE[1502] = m_no_e
ODE[1503] = m_fe3dcit_e
ODE[1504] = m_fe3dhbzs_e
ODE[1505] = m_o2_e
ODE[1506] = m_o2s_e
ODE[1507] = m_ocdca_e
ODE[1508] = m_ocdcea_e
ODE[1509] = m_octa_e
ODE[1510] = m_orn_e
ODE[1511] = m_gal_bD_e
ODE[1512] = m_orot_e
ODE[1513] = m_pacald_e
ODE[1514] = m_peamn_e
ODE[1515] = m_phe__L_e
ODE[1516] = m_tungs_e
ODE[1517] = m_galct__D_e
ODE[1518] = m_tym_e
ODE[1519] = m_pi_e
ODE[1520] = m_tyr__L_e
ODE[1521] = m_galctn__D_e
ODE[1522] = m_tyrp_e
ODE[1523] = m_pnto__R_e
ODE[1524] = m_ppa_e
ODE[1525] = m_ppal_e
ODE[1526] = m_uacgam_e
ODE[1527] = m_udpacgal_e
ODE[1528] = m_pppn_e
ODE[1529] = m_galctn__L_e
ODE[1530] = m_ppt_e
ODE[1531] = m_pro__L_e
ODE[1532] = m_udpg_e
ODE[1533] = m_udpgal_e
ODE[1534] = m_udpglcur_e
ODE[1535] = m_progly_e
ODE[1536] = m_galt_e
ODE[1537] = m_psclys_e
ODE[1538] = m_pser__L_e
ODE[1539] = m_ump_e
ODE[1540] = m_ura_e
ODE[1541] = m_urea_e
ODE[1542] = m_uri_e
ODE[1543] = m_val__L_e
ODE[1544] = m_xan_e
ODE[1545] = m_ptrc_e
ODE[1546] = m_pyr_e
ODE[1547] = m_r5p_e
ODE[1548] = m_rib__D_e
ODE[1549] = m_rmn_e
ODE[1550] = m_sbt__D_e
ODE[1551] = m_xmp_e
ODE[1552] = m_xtsn_e
ODE[1553] = m_galur_e
ODE[1554] = m_xyl__D_e
ODE[1555] = m_xylu__L_e
ODE[1556] = m_zn2_e
ODE[1557] = m_ser__L_e
ODE[1558] = m_skm_e
ODE[1559] = m_so2_e
ODE[1560] = m_so3_e
ODE[1561] = m_gam6p_e
ODE[1562] = m_so4_e
ODE[1563] = m_spmd_e
ODE[1564] = m_succ_e
ODE[1565] = m_sucr_e
ODE[1566] = m_sulfac_e
ODE[1567] = m_gam_e
ODE[1568] = m_tartr__L_e
ODE[1569] = m_taur_e
ODE[1570] = m_tcynt_e
ODE[1571] = m_thm_e
ODE[1572] = m_thr__L_e
ODE[1573] = m_thrp_e
ODE[1574] = m_thym_e
ODE[1575] = m_thymd_e
ODE[1576] = m_tma_e
ODE[1577] = m_gbbtn_e
ODE[1578] = m_tmao_e
ODE[1579] = m_tre_e
ODE[1580] = m_trp__L_e
ODE[1581] = m_gdp_e
ODE[1582] = m_tsul_e
ODE[1583] = m_ttdca_e
ODE[1584] = m_ttdcea_e
ODE[1585] = m_glc__D_e
ODE[1586] = m_glcn_e
ODE[1587] = m_glcr_e
ODE[1588] = m_glcur1p_e
ODE[1589] = m_glcur_e
ODE[1590] = m_gln__L_e
ODE[1591] = m_glu__L_e
ODE[1592] = m_gly_e
ODE[1593] = m_glyald_e
ODE[1594] = m_gam1p_c
ODE[1595] = m_glyb_e
ODE[1596] = m_glyc2p_e
ODE[1597] = m_glyc3p_e
ODE[1598] = m_glyc_e
ODE[1599] = m_glyc__R_e
ODE[1600] = m_glyclt_e
ODE[1601] = m_gmp_e
ODE[1602] = m_gsn_e
ODE[1603] = m_gthox_e
ODE[1604] = m_trnagln_c
ODE[1605] = m_gthrd_e
ODE[1606] = m_glu__D_c
ODE[1607] = m_gtp_e
ODE[1608] = m_gua_e
ODE[1609] = m_h2_e
ODE[1610] = m_h2o2_e
ODE[1611] = m_gp4g_c
ODE[1612] = m_h2s_e
ODE[1613] = m_trnagly_c
ODE[1614] = m_hdca_e
ODE[1615] = m_hdcea_e
ODE[1616] = m_hg2_e
ODE[1617] = m_his__L_e
ODE[1618] = m_hom__L_e
ODE[1619] = m_4mhetz_c
ODE[1620] = m_hxa_e
ODE[1621] = m_hxan_e
ODE[1622] = m_hg2_c
ODE[1623] = m_idon__L_e
ODE[1624] = m_trnahis_c
ODE[1625] = m_ile__L_e
ODE[1626] = m_4ahmmp_c
ODE[1627] = m_hom__L_c
ODE[1628] = m_imp_e
ODE[1629] = m_trnaile_c
ODE[1630] = m_indole_e
ODE[1631] = m_hpyr_c
ODE[1632] = m_inost_e
ODE[1633] = m_ins_e
ODE[1634] = m_3c2hmp_c
ODE[1635] = m_isetac_e
ODE[1636] = m_k_e
ODE[1637] = m_lcts_e
ODE[1638] = m_trnaleu_c
ODE[1639] = m_leu__L_e
ODE[1640] = m_lac__L_e
ODE[1641] = m_trnalys_c
ODE[1642] = m_lys__L_e
ODE[1643] = m_lyx__L_e
ODE[1644] = m_mal__D_e
ODE[1645] = m_mal__L_e
ODE[1646] = m_malt_e
ODE[1647] = m_mercppyr_c
ODE[1648] = m_mana_c
ODE[1649] = m_trnamet_c
ODE[1650] = m_mi1p__D_c
ODE[1651] = m_dmbzid_c
ODE[1652] = m_orot5p_c
ODE[1653] = m_ragund_c
ODE[1654] = m_2pglyc_c
ODE[1655] = m_trnaphe_c
ODE[1656] = m_Nmtrp_c
ODE[1657] = m_trnapro_c
ODE[1658] = m_sarcs_c
ODE[1659] = m_sl26da_c
ODE[1660] = m_seln_c
ODE[1661] = m_trnaser_c
ODE[1662] = m_trnasecys_c
ODE[1663] = m_trnathr_c
ODE[1664] = m_tmao_c
ODE[1665] = m_trnatrp_c
ODE[1666] = m_trnatyr_c
ODE[1667] = m_trnaval_c
 
y = list(range(1668))
y[0] = 1e-5    # m_acgam_p : m_acgam_p
y[1] = 1e-5    # m_pi_p : m_pi_p
y[2] = 1e-5    # m_2tdecg3p_c : m_2tdecg3p_c
y[3] = 1e-5    # m_2tdec7eg3p_c : m_2tdec7eg3p_c
y[4] = 1e-5    # m_2hdecg3p_c : m_2hdecg3p_c
y[5] = 1e-5    # m_3hoctaACP_c : m_3hoctaACP_c
y[6] = 1e-5    # m_nadp_c : m_nadp_c
y[7] = 1e-5    # m_2hdec9eg3p_c : m_2hdec9eg3p_c
y[8] = 1e-5    # m_3hcvac11eACP_c : m_3hcvac11eACP_c
y[9] = 1e-5    # m_2odecg3p_c : m_2odecg3p_c
y[10] = 1e-5    # m_3haACP_c : m_3haACP_c
y[11] = 1e-5    # m_2odec11eg3p_c : m_2odec11eg3p_c
y[12] = 1e-5    # m_3hhexACP_c : m_3hhexACP_c
y[13] = 1e-5    # m_3hoctACP_c : m_3hoctACP_c
y[14] = 1e-5    # m_3odecACP_c : m_3odecACP_c
y[15] = 1e-5    # m_ACP_c : m_ACP_c
y[16] = 1e-5    # m_co2_c : m_co2_c
y[17] = 1e-5    # m_2agpe120_c : m_2agpe120_c
y[18] = 1e-5    # m_3oddecACP_c : m_3oddecACP_c
y[19] = 1e-5    # m_3ocddec5eACP_c : m_3ocddec5eACP_c
y[20] = 1e-5    # m_3omrsACP_c : m_3omrsACP_c
y[21] = 1e-5    # m_12dgr120_c : m_12dgr120_c
y[22] = 1e-5    # m_12dgr140_c : m_12dgr140_c
y[23] = 1e-5    # m_3ocmrs7eACP_c : m_3ocmrs7eACP_c
y[24] = 1e-5    # m_12dgr141_c : m_12dgr141_c
y[25] = 1e-5    # m_2agpe140_c : m_2agpe140_c
y[26] = 1e-5    # m_12dgr160_c : m_12dgr160_c
y[27] = 1e-5    # m_12dgr161_c : m_12dgr161_c
y[28] = 1e-5    # m_3opalmACP_c : m_3opalmACP_c
y[29] = 1e-5    # m_3ocpalm9eACP_c : m_3ocpalm9eACP_c
y[30] = 1e-5    # m_3ooctdACP_c : m_3ooctdACP_c
y[31] = 1e-5    # m_3ocvac11eACP_c : m_3ocvac11eACP_c
y[32] = 1e-5    # m_3ohexACP_c : m_3ohexACP_c
y[33] = 1e-5    # m_3ooctACP_c : m_3ooctACP_c
y[34] = 1e-5    # m_LalaDgluMdap_c : m_LalaDgluMdap_c
y[35] = 1e-5    # m_adp_c : m_adp_c
y[36] = 1e-5    # m_h_c : m_h_c
y[37] = 1e-5    # m_pi_c : m_pi_c
y[38] = 1e-5    # m_LalaDgluMdap_p : m_LalaDgluMdap_p
y[39] = 1e-5    # m_3ump_p : m_3ump_p
y[40] = 1e-5    # m_34dhpac_p : m_34dhpac_p
y[41] = 1e-5    # m_h2o2_p : m_h2o2_p
y[42] = 1e-5    # m_nh4_p : m_nh4_p
y[43] = 1e-5    # m_4hoxpacd_p : m_4hoxpacd_p
y[44] = 1e-5    # m_4hthr_c : m_4hthr_c
y[45] = 1e-5    # m_ala__D_c : m_ala__D_c
y[46] = 1e-5    # m_ala__D_p : m_ala__D_p
y[47] = 1e-5    # m_12dgr180_c : m_12dgr180_c
y[48] = 1e-5    # m_12dgr181_c : m_12dgr181_c
y[49] = 1e-5    # m_12ppd__R_p : m_12ppd__R_p
y[50] = 1e-5    # m_12ppd__R_c : m_12ppd__R_c
y[51] = 1e-5    # m_12ppd__S_p : m_12ppd__S_p
y[52] = 1e-5    # m_12ppd__S_c : m_12ppd__S_c
y[53] = 1e-5    # m_14glucan_c : m_14glucan_c
y[54] = 1e-5    # m_14glucan_p : m_14glucan_p
y[55] = 1e-5    # m_23camp_p : m_23camp_p
y[56] = 1e-5    # m_23ccmp_p : m_23ccmp_p
y[57] = 1e-5    # m_23cgmp_p : m_23cgmp_p
y[58] = 1e-5    # m_23cump_p : m_23cump_p
y[59] = 1e-5    # m_23dappa_c : m_23dappa_c
y[60] = 1e-5    # m_23dappa_p : m_23dappa_p
y[61] = 1e-5    # m_h_p : m_h_p
y[62] = 1e-5    # m_3cmp_p : m_3cmp_p
y[63] = 1e-5    # m_LalaDgluMdapDala_c : m_LalaDgluMdapDala_c
y[64] = 1e-5    # m_LalaDgluMdapDala_p : m_LalaDgluMdapDala_p
y[65] = 1e-5    # m_glcn_c : m_glcn_c
y[66] = 1e-5    # m_5dglcn_c : m_5dglcn_c
y[67] = 1e-5    # m_5dglcn_p : m_5dglcn_p
y[68] = 1e-5    # m_5drib_c : m_5drib_c
y[69] = 1e-5    # m_ade_c : m_ade_c
y[70] = 1e-5    # m_ara5p_c : m_ara5p_c
y[71] = 1e-5    # m_amp_c : m_amp_c
y[72] = 1e-5    # m_myrsACP_c : m_myrsACP_c
y[73] = 1e-5    # m_ppi_c : m_ppi_c
y[74] = 1e-5    # m_tdeACP_c : m_tdeACP_c
y[75] = 1e-5    # m_3amp_p : m_3amp_p
y[76] = 1e-5    # m_3gmp_p : m_3gmp_p
y[77] = 1e-5    # m_26dap__M_p : m_26dap__M_p
y[78] = 1e-5    # m_2ddecg3p_c : m_2ddecg3p_c
y[79] = 1e-5    # m_palmACP_c : m_palmACP_c
y[80] = 1e-5    # m_2agpe141_c : m_2agpe141_c
y[81] = 1e-5    # m_hdeACP_c : m_hdeACP_c
y[82] = 1e-5    # m_octeACP_c : m_octeACP_c
y[83] = 1e-5    # m_acgam1p_p : m_acgam1p_p
y[84] = 1e-5    # m_ocdcaACP_c : m_ocdcaACP_c
y[85] = 1e-5    # m_acgam6p_c : m_acgam6p_c
y[86] = 1e-5    # m_ddcaACP_c : m_ddcaACP_c
y[87] = 1e-5    # m_2agpe160_c : m_2agpe160_c
y[88] = 1e-5    # m_dcaACP_c : m_dcaACP_c
y[89] = 1e-5    # m_ocACP_c : m_ocACP_c
y[90] = 1e-5    # m_ump_c : m_ump_c
y[91] = 1e-5    # m_unaga_c : m_unaga_c
y[92] = 1e-5    # m_pyr_c : m_pyr_c
y[93] = 1e-5    # m_h2o2_c : m_h2o2_c
y[94] = 1e-5    # m_mthgxl_c : m_mthgxl_c
y[95] = 1e-5    # m_nh4_c : m_nh4_c
y[96] = 1e-5    # m_2agpe161_c : m_2agpe161_c
y[97] = 1e-5    # m_acg5p_c : m_acg5p_c
y[98] = 1e-5    # m_acglu_c : m_acglu_c
y[99] = 1e-5    # m_coa_c : m_coa_c
y[100] = 1e-5    # m_dtdp_c : m_dtdp_c
y[101] = 1e-5    # m_unagamuf_c : m_unagamuf_c
y[102] = 1e-5    # m_malthx_c : m_malthx_c
y[103] = 1e-5    # m_2ahbut_c : m_2ahbut_c
y[104] = 1e-5    # m_actp_c : m_actp_c
y[105] = 1e-5    # m_alac__S_c : m_alac__S_c
y[106] = 1e-5    # m_lac__D_c : m_lac__D_c
y[107] = 1e-5    # m_malthx_p : m_malthx_p
y[108] = 1e-5    # m_g6p_c : m_g6p_c
y[109] = 1e-5    # m_hqn_c : m_hqn_c
y[110] = 1e-5    # m_glu__L_c : m_glu__L_c
y[111] = 1e-5    # m_sucsal_c : m_sucsal_c
y[112] = 1e-5    # m_4abut_c : m_4abut_c
y[113] = 1e-5    # m_nadh_c : m_nadh_c
y[114] = 1e-5    # m_udp_c : m_udp_c
y[115] = 1e-5    # m_unagamu_c : m_unagamu_c
y[116] = 1e-5    # m_acmanap_c : m_acmanap_c
y[117] = 1e-5    # m_4abut_p : m_4abut_p
y[118] = 1e-5    # m_2agpe180_c : m_2agpe180_c
y[119] = 1e-5    # m_aacoa_c : m_aacoa_c
y[120] = 1e-5    # m_ac_c : m_ac_c
y[121] = 1e-5    # m_acac_c : m_acac_c
y[122] = 1e-5    # m_acac_p : m_acac_p
y[123] = 1e-5    # m_acmana_p : m_acmana_p
y[124] = 1e-5    # m_acmum6p_c : m_acmum6p_c
y[125] = 1e-5    # m_acmum_p : m_acmum_p
y[126] = 1e-5    # m_acnam_c : m_acnam_c
y[127] = 1e-5    # m_accoa_c : m_accoa_c
y[128] = 1e-5    # m_acald_p : m_acald_p
y[129] = 1e-5    # m_acnam_p : m_acnam_p
y[130] = 1e-5    # m_2agpe181_c : m_2agpe181_c
y[131] = 1e-5    # m_acmana_c : m_acmana_c
y[132] = 1e-5    # m_acald_c : m_acald_c
y[133] = 1e-5    # m_acanth_c : m_acanth_c
y[134] = 1e-5    # m_agdpcbi_c : m_agdpcbi_c
y[135] = 1e-5    # m_b2coa_c : m_b2coa_c
y[136] = 1e-5    # m_fadh2_c : m_fadh2_c
y[137] = 1e-5    # m_hx2coa_c : m_hx2coa_c
y[138] = 1e-5    # m_malcoa_c : m_malcoa_c
y[139] = 1e-5    # m_pe120_c : m_pe120_c
y[140] = 1e-5    # m_ppcoa_c : m_ppcoa_c
y[141] = 1e-5    # m_acgal_p : m_acgal_p
y[142] = 1e-5    # m_acgal1p_p : m_acgal1p_p
y[143] = 1e-5    # m_oc2coa_c : m_oc2coa_c
y[144] = 1e-5    # m_dc2coa_c : m_dc2coa_c
y[145] = 1e-5    # m_dd2coa_c : m_dd2coa_c
y[146] = 1e-5    # m_td2coa_c : m_td2coa_c
y[147] = 1e-5    # m_hdd2coa_c : m_hdd2coa_c
y[148] = 1e-5    # m_od2coa_c : m_od2coa_c
y[149] = 1e-5    # m_acACP_c : m_acACP_c
y[150] = 1e-5    # m_pe140_c : m_pe140_c
y[151] = 1e-5    # m_orn_c : m_orn_c
y[152] = 1e-5    # m_paps_c : m_paps_c
y[153] = 1e-5    # m_fum_c : m_fum_c
y[154] = 1e-5    # m_aicar_c : m_aicar_c
y[155] = 1e-5    # m_pe141_c : m_pe141_c
y[156] = 1e-5    # m_dcamp_c : m_dcamp_c
y[157] = 1e-5    # m_gdp_c : m_gdp_c
y[158] = 1e-5    # m_pe160_c : m_pe160_c
y[159] = 1e-5    # m_gam6p_c : m_gam6p_c
y[160] = 1e-5    # m_pe161_c : m_pe161_c
y[161] = 1e-5    # m_anhgm_c : m_anhgm_c
y[162] = 1e-5    # m_anhgm_p : m_anhgm_p
y[163] = 1e-5    # m_pe180_c : m_pe180_c
y[164] = 1e-5    # m_pe181_c : m_pe181_c
y[165] = 1e-5    # m_acgam_c : m_acgam_c
y[166] = 1e-5    # m_anhm3p_c : m_anhm3p_c
y[167] = 1e-5    # m_anhgm3p_c : m_anhgm3p_c
y[168] = 1e-5    # m_acolipa_e : m_acolipa_e
y[169] = 1e-5    # m_2agpg120_c : m_2agpg120_c
y[170] = 1e-5    # m_acon_C_c : m_acon_C_c
y[171] = 1e-5    # m_aconm_c : m_aconm_c
y[172] = 1e-5    # m_ahcys_c : m_ahcys_c
y[173] = 1e-5    # m_h2o_c : m_h2o_c
y[174] = 1e-5    # m_icit_c : m_icit_c
y[175] = 1e-5    # m_acg5sa_c : m_acg5sa_c
y[176] = 1e-5    # m_anhgm3p_p : m_anhgm3p_p
y[177] = 1e-5    # m_anhm4p_c : m_anhm4p_c
y[178] = 1e-5    # m_anhgm4p_c : m_anhgm4p_c
y[179] = 1e-5    # m_anhm_c : m_anhm_c
y[180] = 1e-5    # m_adphep_LD_c : m_adphep_LD_c
y[181] = 1e-5    # m_pap_c : m_pap_c
y[182] = 1e-5    # m_acser_p : m_acser_p
y[183] = 1e-5    # m_ptrc_c : m_ptrc_c
y[184] = 1e-5    # m_urea_c : m_urea_c
y[185] = 1e-5    # m_agm_p : m_agm_p
y[186] = 1e-5    # m_2agpg140_c : m_2agpg140_c
y[187] = 1e-5    # m_pa120_c : m_pa120_c
y[188] = 1e-5    # m_pa140_c : m_pa140_c
y[189] = 1e-5    # m_na1_c : m_na1_c
y[190] = 1e-5    # m_ac_p : m_ac_p
y[191] = 1e-5    # m_ins_c : m_ins_c
y[192] = 1e-5    # m_pa141_c : m_pa141_c
y[193] = 1e-5    # m_pa160_c : m_pa160_c
y[194] = 1e-5    # m_4abz_c : m_4abz_c
y[195] = 1e-5    # m_2agpg141_c : m_2agpg141_c
y[196] = 1e-5    # m_4adcho_c : m_4adcho_c
y[197] = 1e-5    # m_hxan_c : m_hxan_c
y[198] = 1e-5    # m_pa161_c : m_pa161_c
y[199] = 1e-5    # m_pa180_c : m_pa180_c
y[200] = 1e-5    # m_pa181_c : m_pa181_c
y[201] = 1e-5    # m_nadph_c : m_nadph_c
y[202] = 1e-5    # m_ag_e : m_ag_e
y[203] = 1e-5    # m_ade_p : m_ade_p
y[204] = 1e-5    # m_rhcys_c : m_rhcys_c
y[205] = 1e-5    # m_fprica_c : m_fprica_c
y[206] = 1e-5    # m_thf_c : m_thf_c
y[207] = 1e-5    # m_idp_c : m_idp_c
y[208] = 1e-5    # m_2agpg160_c : m_2agpg160_c
y[209] = 1e-5    # m_ametam_c : m_ametam_c
y[210] = 1e-5    # m_camp_c : m_camp_c
y[211] = 1e-5    # m_5caiz_c : m_5caiz_c
y[212] = 1e-5    # m_succoa_c : m_succoa_c
y[213] = 1e-5    # m_akg_c : m_akg_c
y[214] = 1e-5    # m_akg_p : m_akg_p
y[215] = 1e-5    # m_rib__D_c : m_rib__D_c
y[216] = 1e-5    # m_adn_c : m_adn_c
y[217] = 1e-5    # m_2agpg161_c : m_2agpg161_c
y[218] = 1e-5    # m_alaala_c : m_alaala_c
y[219] = 1e-5    # m_adn_p : m_adn_p
y[220] = 1e-5    # m_adocbip_c : m_adocbip_c
y[221] = 1e-5    # m_adocbl_c : m_adocbl_c
y[222] = 1e-5    # m_gmp_c : m_gmp_c
y[223] = 1e-5    # m_adocbl_p : m_adocbl_p
y[224] = 1e-5    # m_alaala_p : m_alaala_p
y[225] = 1e-5    # m_LalaLglu_c : m_LalaLglu_c
y[226] = 1e-5    # m_pyam5p_c : m_pyam5p_c
y[227] = 1e-5    # m_r5p_c : m_r5p_c
y[228] = 1e-5    # m_2agpg180_c : m_2agpg180_c
y[229] = 1e-5    # m_all__D_p : m_all__D_p
y[230] = 1e-5    # m_2agpe160_p : m_2agpe160_p
y[231] = 1e-5    # m_lpp_p : m_lpp_p
y[232] = 1e-5    # m_2agpg160_p : m_2agpg160_p
y[233] = 1e-5    # m_acetol_c : m_acetol_c
y[234] = 1e-5    # m_alatrna_c : m_alatrna_c
y[235] = 1e-5    # m_ala__L_c : m_ala__L_c
y[236] = 1e-5    # m_nad_c : m_nad_c
y[237] = 1e-5    # m_2agpg181_c : m_2agpg181_c
y[238] = 1e-5    # m_2ddglcn_c : m_2ddglcn_c
y[239] = 1e-5    # m_ala__L_p : m_ala__L_p
y[240] = 1e-5    # m_glyc_c : m_glyc_c
y[241] = 1e-5    # m_pg120_c : m_pg120_c
y[242] = 1e-5    # m_glc__D_c : m_glc__D_c
y[243] = 1e-5    # m_maltttr_c : m_maltttr_c
y[244] = 1e-5    # m_maltpt_c : m_maltpt_c
y[245] = 1e-5    # m_pac_c : m_pac_c
y[246] = 1e-5    # m_malthp_c : m_malthp_c
y[247] = 1e-5    # m_pg140_c : m_pg140_c
y[248] = 1e-5    # m_amob_c : m_amob_c
y[249] = 1e-5    # m_dann_c : m_dann_c
y[250] = 1e-5    # m_mql8_c : m_mql8_c
y[251] = 1e-5    # m_4ampm_c : m_4ampm_c
y[252] = 1e-5    # m_for_c : m_for_c
y[253] = 1e-5    # m_ppa_c : m_ppa_c
y[254] = 1e-5    # m_but_c : m_but_c
y[255] = 1e-5    # m_all6p_c : m_all6p_c
y[256] = 1e-5    # m_allul6p_c : m_allul6p_c
y[257] = 1e-5    # m_urdglyc_c : m_urdglyc_c
y[258] = 1e-5    # m_alltt_c : m_alltt_c
y[259] = 1e-5    # m_alltn_c : m_alltn_c
y[260] = 1e-5    # m_cys__L_c : m_cys__L_c
y[261] = 1e-5    # m_gly_c : m_gly_c
y[262] = 1e-5    # m_pro__L_c : m_pro__L_c
y[263] = 1e-5    # m_amp_p : m_amp_p
y[264] = 1e-5    # m_alltn_p : m_alltn_p
y[265] = 1e-5    # m_pg141_c : m_pg141_c
y[266] = 1e-5    # m_f6p_c : m_f6p_c
y[267] = 1e-5    # m_all__D_c : m_all__D_c
y[268] = 1e-5    # m_pg160_c : m_pg160_c
y[269] = 1e-5    # m_pran_c : m_pran_c
y[270] = 1e-5    # m_anth_c : m_anth_c
y[271] = 1e-5    # m_pg161_c : m_pg161_c
y[272] = 1e-5    # m_aact_c : m_aact_c
y[273] = 1e-5    # m_8aonn_c : m_8aonn_c
y[274] = 1e-5    # m_asn__L_p : m_asn__L_p
y[275] = 1e-5    # m_aso3_p : m_aso3_p
y[276] = 1e-5    # m_pg180_c : m_pg180_c
y[277] = 1e-5    # m_ala_B_c : m_ala_B_c
y[278] = 1e-5    # m_atp_c : m_atp_c
y[279] = 1e-5    # m_5aprbu_c : m_5aprbu_c
y[280] = 1e-5    # m_rbl__L_c : m_rbl__L_c
y[281] = 1e-5    # m_arbtn_c : m_arbtn_c
y[282] = 1e-5    # m_fad_c : m_fad_c
y[283] = 1e-5    # m_fe2_c : m_fe2_c
y[284] = 1e-5    # m_fmn_c : m_fmn_c
y[285] = 1e-5    # m_ribflv_c : m_ribflv_c
y[286] = 1e-5    # m_cbasp_c : m_cbasp_c
y[287] = 1e-5    # m_4pasp_c : m_4pasp_c
y[288] = 1e-5    # m_iasp_c : m_iasp_c
y[289] = 1e-5    # m_q8h2_c : m_q8h2_c
y[290] = 1e-5    # m_succ_c : m_succ_c
y[291] = 1e-5    # m_arbtn_fe3_c : m_arbtn_fe3_c
y[292] = 1e-5    # m_arbtn_fe3_e : m_arbtn_fe3_e
y[293] = 1e-5    # m_arbtn_e : m_arbtn_e
y[294] = 1e-5    # m_pg181_c : m_pg181_c
y[295] = 1e-5    # m_arbtn_fe3_p : m_arbtn_fe3_p
y[296] = 1e-5    # m_arbtn_p : m_arbtn_p
y[297] = 1e-5    # m_arab__L_c : m_arab__L_c
y[298] = 1e-5    # m_oaa_c : m_oaa_c
y[299] = 1e-5    # m_asptrna_c : m_asptrna_c
y[300] = 1e-5    # m_asp__L_c : m_asp__L_c
y[301] = 1e-5    # m_arab__L_p : m_arab__L_p
y[302] = 1e-5    # m_asp__L_p : m_asp__L_p
y[303] = 1e-5    # m_arg__L_c : m_arg__L_c
y[304] = 1e-5    # m_agm_c : m_agm_c
y[305] = 1e-5    # m_co2_p : m_co2_p
y[306] = 1e-5    # m_orn_p : m_orn_p
y[307] = 1e-5    # m_argsuc_c : m_argsuc_c
y[308] = 1e-5    # m_argtrna_c : m_argtrna_c
y[309] = 1e-5    # m_aso3_c : m_aso3_c
y[310] = 1e-5    # m_gthox_c : m_gthox_c
y[311] = 1e-5    # m_sucarg_c : m_sucarg_c
y[312] = 1e-5    # m_2aobut_c : m_2aobut_c
y[313] = 1e-5    # m_itp_c : m_itp_c
y[314] = 1e-5    # m_prbatp_c : m_prbatp_c
y[315] = 1e-5    # m_arg__L_p : m_arg__L_p
y[316] = 1e-5    # m_ala_B_p : m_ala_B_p
y[317] = 1e-5    # m_3dhgulnp_c : m_3dhgulnp_c
y[318] = 1e-5    # m_idon__L_c : m_idon__L_c
y[319] = 1e-5    # m_ascb6p_c : m_ascb6p_c
y[320] = 1e-5    # m_ascb__L_p : m_ascb__L_p
y[321] = 1e-5    # m_glyb_c : m_glyb_c
y[322] = 1e-5    # m_btn_c : m_btn_c
y[323] = 1e-5    # m_asn__L_c : m_asn__L_c
y[324] = 1e-5    # m_asntrna_c : m_asntrna_c
y[325] = 1e-5    # m_dad_5_c : m_dad_5_c
y[326] = 1e-5    # m_met__L_c : m_met__L_c
y[327] = 1e-5    # m_btcoa_c : m_btcoa_c
y[328] = 1e-5    # m_butso3_c : m_butso3_c
y[329] = 1e-5    # m_butso3_p : m_butso3_p
y[330] = 1e-5    # m_but_p : m_but_p
y[331] = 1e-5    # m_ca2_p : m_ca2_p
y[332] = 1e-5    # m_cmp_c : m_cmp_c
y[333] = 1e-5    # m_15dap_p : m_15dap_p
y[334] = 1e-5    # m_lys__L_c : m_lys__L_c
y[335] = 1e-5    # m_o2_c : m_o2_c
y[336] = 1e-5    # m_2p4c2me_c : m_2p4c2me_c
y[337] = 1e-5    # m_cpe160_c : m_cpe160_c
y[338] = 1e-5    # m_adocbi_c : m_adocbi_c
y[339] = 1e-5    # m_pppi_c : m_pppi_c
y[340] = 1e-5    # m_cpg160_c : m_cpg160_c
y[341] = 1e-5    # m_cpe180_c : m_cpe180_c
y[342] = 1e-5    # m_cpg180_c : m_cpg180_c
y[343] = 1e-5    # m_cgly_c : m_cgly_c
y[344] = 1e-5    # m_cbi_p : m_cbi_p
y[345] = 1e-5    # m_cbi_c : m_cbi_c
y[346] = 1e-5    # m_cbl1_c : m_cbl1_c
y[347] = 1e-5    # m_cgly_p : m_cgly_p
y[348] = 1e-5    # m_chol_c : m_chol_c
y[349] = 1e-5    # m_chol_p : m_chol_p
y[350] = 1e-5    # m_pphn_c : m_pphn_c
y[351] = 1e-5    # m_chor_c : m_chor_c
y[352] = 1e-5    # m_cbl1_p : m_cbl1_p
y[353] = 1e-5    # m_cbp_c : m_cbp_c
y[354] = 1e-5    # m_cd2_p : m_cd2_p
y[355] = 1e-5    # m_4hbz_c : m_4hbz_c
y[356] = 1e-5    # m_cenchddd_c : m_cenchddd_c
y[357] = 1e-5    # m_cit_c : m_cit_c
y[358] = 1e-5    # m_succ_p : m_succ_p
y[359] = 1e-5    # m_cd2_c : m_cd2_c
y[360] = 1e-5    # m_tdec2eACP_c : m_tdec2eACP_c
y[361] = 1e-5    # m_cit_p : m_cit_p
y[362] = 1e-5    # m_lipa_cold_e : m_lipa_cold_e
y[363] = 1e-5    # m_pa120_p : m_pa120_p
y[364] = 1e-5    # m_pg120_p : m_pg120_p
y[365] = 1e-5    # m_pa140_p : m_pa140_p
y[366] = 1e-5    # m_pg140_p : m_pg140_p
y[367] = 1e-5    # m_pa141_p : m_pa141_p
y[368] = 1e-5    # m_pg141_p : m_pg141_p
y[369] = 1e-5    # m_pa160_p : m_pa160_p
y[370] = 1e-5    # m_pg160_p : m_pg160_p
y[371] = 1e-5    # m_tddec2eACP_c : m_tddec2eACP_c
y[372] = 1e-5    # m_pa161_p : m_pa161_p
y[373] = 1e-5    # m_pg161_p : m_pg161_p
y[374] = 1e-5    # m_t3c5ddeceACP_c : m_t3c5ddeceACP_c
y[375] = 1e-5    # m_pa180_p : m_pa180_p
y[376] = 1e-5    # m_pg180_p : m_pg180_p
y[377] = 1e-5    # m_pa181_p : m_pa181_p
y[378] = 1e-5    # m_pg181_p : m_pg181_p
y[379] = 1e-5    # m_clpn120_p : m_clpn120_p
y[380] = 1e-5    # m_glyc_p : m_glyc_p
y[381] = 1e-5    # m_clpn140_p : m_clpn140_p
y[382] = 1e-5    # m_crnDcoa_c : m_crnDcoa_c
y[383] = 1e-5    # m_crn__D_c : m_crn__D_c
y[384] = 1e-5    # m_crn_c : m_crn_c
y[385] = 1e-5    # m_gbbtn_p : m_gbbtn_p
y[386] = 1e-5    # m_clpn141_p : m_clpn141_p
y[387] = 1e-5    # m_clpn160_p : m_clpn160_p
y[388] = 1e-5    # m_crn__D_p : m_crn__D_p
y[389] = 1e-5    # m_clpn161_p : m_clpn161_p
y[390] = 1e-5    # m_clpn180_p : m_clpn180_p
y[391] = 1e-5    # m_crn_p : m_crn_p
y[392] = 1e-5    # m_clpn181_p : m_clpn181_p
y[393] = 1e-5    # m_tmrs2eACP_c : m_tmrs2eACP_c
y[394] = 1e-5    # m_cl_c : m_cl_c
y[395] = 1e-5    # m_cl_p : m_cl_p
y[396] = 1e-5    # m_ura_c : m_ura_c
y[397] = 1e-5    # m_csn_c : m_csn_c
y[398] = 1e-5    # m_csn_p : m_csn_p
y[399] = 1e-5    # m_cmp_p : m_cmp_p
y[400] = 1e-5    # m_ctbtcoa_c : m_ctbtcoa_c
y[401] = 1e-5    # m_t3c7mrseACP_c : m_t3c7mrseACP_c
y[402] = 1e-5    # m_ctbt_c : m_ctbt_c
y[403] = 1e-5    # m_cobalt2_p : m_cobalt2_p
y[404] = 1e-5    # m_ctp_c : m_ctp_c
y[405] = 1e-5    # m_cu2_p : m_cu2_p
y[406] = 1e-5    # m_h2o_p : m_h2o_p
y[407] = 1e-5    # m_cu_p : m_cu_p
y[408] = 1e-5    # m_cobalt2_c : m_cobalt2_c
y[409] = 1e-5    # m_colipa_p : m_colipa_p
y[410] = 1e-5    # m_tpalm2eACP_c : m_tpalm2eACP_c
y[411] = 1e-5    # m_cu2_c : m_cu2_c
y[412] = 1e-5    # m_cu_e : m_cu_e
y[413] = 1e-5    # m_colipa_e : m_colipa_e
y[414] = 1e-5    # m_cpgn_un_c : m_cpgn_un_c
y[415] = 1e-5    # m_so3_c : m_so3_c
y[416] = 1e-5    # m_tcynt_c : m_tcynt_c
y[417] = 1e-5    # m_so3_p : m_so3_p
y[418] = 1e-5    # m_tcynt_p : m_tcynt_p
y[419] = 1e-5    # m_cpgn_un_e : m_cpgn_un_e
y[420] = 1e-5    # m_cpgn_un_p : m_cpgn_un_p
y[421] = 1e-5    # m_t3c9palmeACP_c : m_t3c9palmeACP_c
y[422] = 1e-5    # m_cpgn_c : m_cpgn_c
y[423] = 1e-5    # m_cpgn_e : m_cpgn_e
y[424] = 1e-5    # m_cyan_p : m_cyan_p
y[425] = 1e-5    # m_cynt_c : m_cynt_c
y[426] = 1e-5    # m_cpgn_p : m_cpgn_p
y[427] = 1e-5    # m_pppg9_c : m_pppg9_c
y[428] = 1e-5    # m_toctd2eACP_c : m_toctd2eACP_c
y[429] = 1e-5    # m_cynt_p : m_cynt_p
y[430] = 1e-5    # m_h2s_c : m_h2s_c
y[431] = 1e-5    # m_crncoa_c : m_crncoa_c
y[432] = 1e-5    # m_gbbtn_c : m_gbbtn_c
y[433] = 1e-5    # m_cys__D_c : m_cys__D_c
y[434] = 1e-5    # m_cys__D_p : m_cys__D_p
y[435] = 1e-5    # m_so2_c : m_so2_c
y[436] = 1e-5    # m_hcys__L_c : m_hcys__L_c
y[437] = 1e-5    # m_cystrna_c : m_cystrna_c
y[438] = 1e-5    # m_t3c11vaceACP_c : m_t3c11vaceACP_c
y[439] = 1e-5    # m_cys__L_p : m_cys__L_p
y[440] = 1e-5    # m_but2eACP_c : m_but2eACP_c
y[441] = 1e-5    # m_mqn8_c : m_mqn8_c
y[442] = 1e-5    # m_damp_p : m_damp_p
y[443] = 1e-5    # m_26dap__M_c : m_26dap__M_c
y[444] = 1e-5    # m_q8_c : m_q8_c
y[445] = 1e-5    # m_thex2eACP_c : m_thex2eACP_c
y[446] = 1e-5    # m_uri_c : m_uri_c
y[447] = 1e-5    # m_cdpdddecg_c : m_cdpdddecg_c
y[448] = 1e-5    # m_cdpdtdecg_c : m_cdpdtdecg_c
y[449] = 1e-5    # m_cdpdtdec7eg_c : m_cdpdtdec7eg_c
y[450] = 1e-5    # m_cdpdhdecg_c : m_cdpdhdecg_c
y[451] = 1e-5    # m_cdpdhdec9eg_c : m_cdpdhdec9eg_c
y[452] = 1e-5    # m_cdpdodecg_c : m_cdpdodecg_c
y[453] = 1e-5    # m_cdpdodec11eg_c : m_cdpdodec11eg_c
y[454] = 1e-5    # m_cytd_c : m_cytd_c
y[455] = 1e-5    # m_cytd_p : m_cytd_p
y[456] = 1e-5    # m_cdp_c : m_cdp_c
y[457] = 1e-5    # m_dcdp_c : m_dcdp_c
y[458] = 1e-5    # m_din_c : m_din_c
y[459] = 1e-5    # m_ditp_c : m_ditp_c
y[460] = 1e-5    # m_db4p_c : m_db4p_c
y[461] = 1e-5    # m_dtbt_c : m_dtbt_c
y[462] = 1e-5    # m_dadp_c : m_dadp_c
y[463] = 1e-5    # m_toct2eACP_c : m_toct2eACP_c
y[464] = 1e-5    # m_dad_2_c : m_dad_2_c
y[465] = 1e-5    # m_dad_2_p : m_dad_2_p
y[466] = 1e-5    # m_dca_p : m_dca_p
y[467] = 1e-5    # m_dcmp_p : m_dcmp_p
y[468] = 1e-5    # m_dutp_c : m_dutp_c
y[469] = 1e-5    # m_duri_c : m_duri_c
y[470] = 1e-5    # m_dhcinnm_c : m_dhcinnm_c
y[471] = 1e-5    # m_dcyt_c : m_dcyt_c
y[472] = 1e-5    # m_dcyt_p : m_dcyt_p
y[473] = 1e-5    # m_dhpppn_c : m_dhpppn_c
y[474] = 1e-5    # m_ddca_p : m_ddca_p
y[475] = 1e-5    # m_2dh3dgal6p_c : m_2dh3dgal6p_c
y[476] = 1e-5    # m_2ddglcn_p : m_2ddglcn_p
y[477] = 1e-5    # m_2ddg6p_c : m_2ddg6p_c
y[478] = 1e-5    # m_2dda7p_c : m_2dda7p_c
y[479] = 1e-5    # m_2dhguln_c : m_2dhguln_c
y[480] = 1e-5    # m_g3p_c : m_g3p_c
y[481] = 1e-5    # m_2kmb_c : m_2kmb_c
y[482] = 1e-5    # m_uri_p : m_uri_p
y[483] = 1e-5    # m_dgdp_c : m_dgdp_c
y[484] = 1e-5    # m_dgmp_p : m_dgmp_p
y[485] = 1e-5    # m_dgsn_c : m_dgsn_c
y[486] = 1e-5    # m_grdp_c : m_grdp_c
y[487] = 1e-5    # m_dmpp_c : m_dmpp_c
y[488] = 1e-5    # m_dms_c : m_dms_c
y[489] = 1e-5    # m_dgsn_p : m_dgsn_p
y[490] = 1e-5    # m_3mob_c : m_3mob_c
y[491] = 1e-5    # m_3mop_c : m_3mop_c
y[492] = 1e-5    # m_dhap_c : m_dhap_c
y[493] = 1e-5    # m_dha_p : m_dha_p
y[494] = 1e-5    # m_dms_p : m_dms_p
y[495] = 1e-5    # m_2dmmq8_c : m_2dmmq8_c
y[496] = 1e-5    # m_dmso_p : m_dmso_p
y[497] = 1e-5    # m_dha_c : m_dha_c
y[498] = 1e-5    # m_23dhb_c : m_23dhb_c
y[499] = 1e-5    # m_23dhba_c : m_23dhba_c
y[500] = 1e-5    # m_ser__L_c : m_ser__L_c
y[501] = 1e-5    # m_hkntd_c : m_hkntd_c
y[502] = 1e-5    # m_thdp_c : m_thdp_c
y[503] = 1e-5    # m_gsn_p : m_gsn_p
y[504] = 1e-5    # m_dhnpt_c : m_dhnpt_c
y[505] = 1e-5    # m_23dhdp_c : m_23dhdp_c
y[506] = 1e-5    # m_dhf_c : m_dhf_c
y[507] = 1e-5    # m_2dmmql8_c : m_2dmmql8_c
y[508] = 1e-5    # m_6hmhpt_c : m_6hmhpt_c
y[509] = 1e-5    # m_gcald_c : m_gcald_c
y[510] = 1e-5    # m_orot_c : m_orot_c
y[511] = 1e-5    # m_dhpmp_c : m_dhpmp_c
y[512] = 1e-5    # m_3dhguln_c : m_3dhguln_c
y[513] = 1e-5    # m_dopa_p : m_dopa_p
y[514] = 1e-5    # m_3hdecACP_c : m_3hdecACP_c
y[515] = 1e-5    # m_5apru_c : m_5apru_c
y[516] = 1e-5    # m_dhpt_c : m_dhpt_c
y[517] = 1e-5    # m_pant__R_c : m_pant__R_c
y[518] = 1e-5    # m_dsbaox_p : m_dsbaox_p
y[519] = 1e-5    # m_dsbcrd_p : m_dsbcrd_p
y[520] = 1e-5    # m_gthox_p : m_gthox_p
y[521] = 1e-5    # m_dsbdrd_c : m_dsbdrd_c
y[522] = 1e-5    # m_trdox_c : m_trdox_c
y[523] = 1e-5    # m_dsbgrd_p : m_dsbgrd_p
y[524] = 1e-5    # m_2amsa_c : m_2amsa_c
y[525] = 1e-5    # m_ser__D_c : m_ser__D_c
y[526] = 1e-5    # m_hmfurn_c : m_hmfurn_c
y[527] = 1e-5    # m_dhmptp_c : m_dhmptp_c
y[528] = 1e-5    # m_3dhq_c : m_3dhq_c
y[529] = 1e-5    # m_3dhsk_c : m_3dhsk_c
y[530] = 1e-5    # m_dimp_p : m_dimp_p
y[531] = 1e-5    # m_ser__D_p : m_ser__D_p
y[532] = 1e-5    # m_dtmp_p : m_dtmp_p
y[533] = 1e-5    # m_din_p : m_din_p
y[534] = 1e-5    # m_3hddecACP_c : m_3hddecACP_c
y[535] = 1e-5    # m_dump_p : m_dump_p
y[536] = 1e-5    # m_dump_c : m_dump_c
y[537] = 1e-5    # m_2dr1p_c : m_2dr1p_c
y[538] = 1e-5    # m_butACP_c : m_butACP_c
y[539] = 1e-5    # m_3hcddec5eACP_c : m_3hcddec5eACP_c
y[540] = 1e-5    # m_duri_p : m_duri_p
y[541] = 1e-5    # m_hexACP_c : m_hexACP_c
y[542] = 1e-5    # m_2me4p_c : m_2me4p_c
y[543] = 1e-5    # m_3hmrsACP_c : m_3hmrsACP_c
y[544] = 1e-5    # m_dxyl5p_c : m_dxyl5p_c
y[545] = 1e-5    # m_eca4colipa_e : m_eca4colipa_e
y[546] = 1e-5    # m_lac__D_p : m_lac__D_p
y[547] = 1e-5    # m_4per_c : m_4per_c
y[548] = 1e-5    # m_eca4colipa_p : m_eca4colipa_p
y[549] = 1e-5    # m_udcpdp_p : m_udcpdp_p
y[550] = 1e-5    # m_eca2und_p : m_eca2und_p
y[551] = 1e-5    # m_3hcmrs7eACP_c : m_3hcmrs7eACP_c
y[552] = 1e-5    # m_eca3und_p : m_eca3und_p
y[553] = 1e-5    # m_eca4und_p : m_eca4und_p
y[554] = 1e-5    # m_unagamuf_p : m_unagamuf_p
y[555] = 1e-5    # m_cddec5eACP_c : m_cddec5eACP_c
y[556] = 1e-5    # m_3hpalmACP_c : m_3hpalmACP_c
y[557] = 1e-5    # m_kdo2lipid4L_c : m_kdo2lipid4L_c
y[558] = 1e-5    # m_lipa_c : m_lipa_c
y[559] = 1e-5    # m_kdo2lipid4p_c : m_kdo2lipid4p_c
y[560] = 1e-5    # m_3hcpalm9eACP_c : m_3hcpalm9eACP_c
y[561] = 1e-5    # m_lipa_cold_c : m_lipa_cold_c
y[562] = 1e-5    # m_enlipa_e : m_enlipa_e
y[563] = 1e-5    # m_pep_c : m_pep_c
y[564] = 1e-5    # m_enter_c : m_enter_c
y[565] = 1e-5    # m_23dhbzs_c : m_23dhbzs_c
y[566] = 1e-5    # m_fe3_c : m_fe3_c
y[567] = 1e-5    # m_etha_c : m_etha_c
y[568] = 1e-5    # m_etha_p : m_etha_p
y[569] = 1e-5    # m_ethso3_c : m_ethso3_c
y[570] = 1e-5    # m_ethso3_p : m_ethso3_p
y[571] = 1e-5    # m_etoh_c : m_etoh_c
y[572] = 1e-5    # m_etoh_p : m_etoh_p
y[573] = 1e-5    # m_fru_c : m_fru_c
y[574] = 1e-5    # m_f6p_p : m_f6p_p
y[575] = 1e-5    # m_dca_c : m_dca_c
y[576] = 1e-5    # m_ddca_c : m_ddca_c
y[577] = 1e-5    # m_ttdca_c : m_ttdca_c
y[578] = 1e-5    # m_ttdcea_c : m_ttdcea_c
y[579] = 1e-5    # m_hdca_c : m_hdca_c
y[580] = 1e-5    # m_hdcea_c : m_hdcea_c
y[581] = 1e-5    # m_octa_c : m_octa_c
y[582] = 1e-5    # m_ocdca_c : m_ocdca_c
y[583] = 1e-5    # m_ocdcea_c : m_ocdcea_c
y[584] = 1e-5    # m_hxa_c : m_hxa_c
y[585] = 1e-5    # m_dcacoa_c : m_dcacoa_c
y[586] = 1e-5    # m_ddcacoa_c : m_ddcacoa_c
y[587] = 1e-5    # m_tdcoa_c : m_tdcoa_c
y[588] = 1e-5    # m_tdecoa_c : m_tdecoa_c
y[589] = 1e-5    # m_pmtcoa_c : m_pmtcoa_c
y[590] = 1e-5    # m_hdcoa_c : m_hdcoa_c
y[591] = 1e-5    # m_stcoa_c : m_stcoa_c
y[592] = 1e-5    # m_btal_c : m_btal_c
y[593] = 1e-5    # m_glx_c : m_glx_c
y[594] = 1e-5    # m_fe2_p : m_fe2_p
y[595] = 1e-5    # m_odecoa_c : m_odecoa_c
y[596] = 1e-5    # m_hxcoa_c : m_hxcoa_c
y[597] = 1e-5    # m_occoa_c : m_occoa_c
y[598] = 1e-5    # m_fe3dcit_p : m_fe3dcit_p
y[599] = 1e-5    # m_Sfglutth_c : m_Sfglutth_c
y[600] = 1e-5    # m_fald_p : m_fald_p
y[601] = 1e-5    # m_fald_c : m_fald_c
y[602] = 1e-5    # m_fe3dhbzs_c : m_fe3dhbzs_c
y[603] = 1e-5    # m_fe3dhbzs_p : m_fe3dhbzs_p
y[604] = 1e-5    # m_fe3hox_un_c : m_fe3hox_un_c
y[605] = 1e-5    # m_hmgth_c : m_hmgth_c
y[606] = 1e-5    # m_fcl__L_c : m_fcl__L_c
y[607] = 1e-5    # m_fc1p_c : m_fc1p_c
y[608] = 1e-5    # m_lald__L_c : m_lald__L_c
y[609] = 1e-5    # m_pheme_c : m_pheme_c
y[610] = 1e-5    # m_fe3hox_un_p : m_fe3hox_un_p
y[611] = 1e-5    # m_fe3hox_un_e : m_fe3hox_un_e
y[612] = 1e-5    # m_fe3hox_c : m_fe3hox_c
y[613] = 1e-5    # m_fe3hox_e : m_fe3hox_e
y[614] = 1e-5    # m_fe3hox_p : m_fe3hox_p
y[615] = 1e-5    # m_fe3_p : m_fe3_p
y[616] = 1e-5    # m_fecrm_un_c : m_fecrm_un_c
y[617] = 1e-5    # m_fecrm_un_e : m_fecrm_un_e
y[618] = 1e-5    # m_fecrm_un_p : m_fecrm_un_p
y[619] = 1e-5    # m_fecrm_c : m_fecrm_c
y[620] = 1e-5    # m_for_p : m_for_p
y[621] = 1e-5    # m_fecrm_e : m_fecrm_e
y[622] = 1e-5    # m_fecrm_p : m_fecrm_p
y[623] = 1e-5    # m_fdp_c : m_fdp_c
y[624] = 1e-5    # m_frulys_c : m_frulys_c
y[625] = 1e-5    # m_frulysp_c : m_frulysp_c
y[626] = 1e-5    # m_feenter_c : m_feenter_c
y[627] = 1e-5    # m_feenter_e : m_feenter_e
y[628] = 1e-5    # m_enter_e : m_enter_e
y[629] = 1e-5    # m_feenter_p : m_feenter_p
y[630] = 1e-5    # m_frulys_p : m_frulys_p
y[631] = 1e-5    # m_fruur_c : m_fruur_c
y[632] = 1e-5    # m_enter_p : m_enter_p
y[633] = 1e-5    # m_fruur_p : m_fruur_p
y[634] = 1e-5    # m_f1p_c : m_f1p_c
y[635] = 1e-5    # m_fru_p : m_fru_p
y[636] = 1e-5    # m_feoxam_un_c : m_feoxam_un_c
y[637] = 1e-5    # m_feoxam_un_e : m_feoxam_un_e
y[638] = 1e-5    # m_feoxam_un_p : m_feoxam_un_p
y[639] = 1e-5    # m_fuc__L_p : m_fuc__L_p
y[640] = 1e-5    # m_feoxam_c : m_feoxam_c
y[641] = 1e-5    # m_feoxam_e : m_feoxam_e
y[642] = 1e-5    # m_fuc__L_c : m_fuc__L_c
y[643] = 1e-5    # m_mal__L_c : m_mal__L_c
y[644] = 1e-5    # m_feoxam_p : m_feoxam_p
y[645] = 1e-5    # m_h2_c : m_h2_c
y[646] = 1e-5    # m_fldrd_c : m_fldrd_c
y[647] = 1e-5    # m_fum_p : m_fum_p
y[648] = 1e-5    # m_acgam1p_c : m_acgam1p_c
y[649] = 1e-5    # m_rbflvrd_c : m_rbflvrd_c
y[650] = 1e-5    # m_fmettrna_c : m_fmettrna_c
y[651] = 1e-5    # m_glc__D_p : m_glc__D_p
y[652] = 1e-5    # m_dtdpglu_c : m_dtdpglu_c
y[653] = 1e-5    # m_g1p_p : m_g1p_p
y[654] = 1e-5    # m_5aop_c : m_5aop_c
y[655] = 1e-5    # m_fmnh2_c : m_fmnh2_c
y[656] = 1e-5    # m_1ddecg3p_c : m_1ddecg3p_c
y[657] = 1e-5    # m_1tdecg3p_c : m_1tdecg3p_c
y[658] = 1e-5    # m_1tdec7eg3p_c : m_1tdec7eg3p_c
y[659] = 1e-5    # m_1hdecg3p_c : m_1hdecg3p_c
y[660] = 1e-5    # m_1hdec9eg3p_c : m_1hdec9eg3p_c
y[661] = 1e-5    # m_gal1p_p : m_gal1p_p
y[662] = 1e-5    # m_gal_bD_p : m_gal_bD_p
y[663] = 1e-5    # m_1odecg3p_c : m_1odecg3p_c
y[664] = 1e-5    # m_1odec11eg3p_c : m_1odec11eg3p_c
y[665] = 1e-5    # m_g3pc_c : m_g3pc_c
y[666] = 1e-5    # m_5dh4dglc_c : m_5dh4dglc_c
y[667] = 1e-5    # m_tagur_c : m_tagur_c
y[668] = 1e-5    # m_2dh3dgal_c : m_2dh3dgal_c
y[669] = 1e-5    # m_galctn__L_c : m_galctn__L_c
y[670] = 1e-5    # m_g3pc_p : m_g3pc_p
y[671] = 1e-5    # m_galctn__L_p : m_galctn__L_p
y[672] = 1e-5    # m_galctn__D_c : m_galctn__D_c
y[673] = 1e-5    # m_g3pe_c : m_g3pe_c
y[674] = 1e-5    # m_g3pe_p : m_g3pe_p
y[675] = 1e-5    # m_g3pg_c : m_g3pg_c
y[676] = 1e-5    # m_galctn__D_p : m_galctn__D_p
y[677] = 1e-5    # m_galct__D_c : m_galct__D_c
y[678] = 1e-5    # m_galct__D_p : m_galct__D_p
y[679] = 1e-5    # m_gal1p_c : m_gal1p_c
y[680] = 1e-5    # m_gal_p : m_gal_p
y[681] = 1e-5    # m_gal_c : m_gal_c
y[682] = 1e-5    # m_g3pg_p : m_g3pg_p
y[683] = 1e-5    # m_g3pi_c : m_g3pi_c
y[684] = 1e-5    # m_g3pi_p : m_g3pi_p
y[685] = 1e-5    # m_gagicolipa_c : m_gagicolipa_c
y[686] = 1e-5    # m_galt1p_c : m_galt1p_c
y[687] = 1e-5    # m_g3ps_c : m_g3ps_c
y[688] = 1e-5    # m_galt_p : m_galt_p
y[689] = 1e-5    # m_galur_c : m_galur_c
y[690] = 1e-5    # m_galur_p : m_galur_p
y[691] = 1e-5    # m_g3ps_p : m_g3ps_p
y[692] = 1e-5    # m_1pyr5c_c : m_1pyr5c_c
y[693] = 1e-5    # m_glu5sa_c : m_glu5sa_c
y[694] = 1e-5    # m_udpg_c : m_udpg_c
y[695] = 1e-5    # m_6pgl_c : m_6pgl_c
y[696] = 1e-5    # m_gam6p_p : m_gam6p_p
y[697] = 1e-5    # m_g6p_p : m_g6p_p
y[698] = 1e-5    # m_gam_p : m_gam_p
y[699] = 1e-5    # m_13dpg_c : m_13dpg_c
y[700] = 1e-5    # m_fgam_c : m_fgam_c
y[701] = 1e-5    # m_glcur_p : m_glcur_p
y[702] = 1e-5    # m_glyclt_c : m_glyclt_c
y[703] = 1e-5    # m_gdpofuc_c : m_gdpofuc_c
y[704] = 1e-5    # m_ppgpp_c : m_ppgpp_c
y[705] = 1e-5    # m_man_c : m_man_c
y[706] = 1e-5    # m_glycogen_c : m_glycogen_c
y[707] = 1e-5    # m_man1p_c : m_man1p_c
y[708] = 1e-5    # m_gdp_p : m_gdp_p
y[709] = 1e-5    # m_adpglc_c : m_adpglc_c
y[710] = 1e-5    # m_gln__L_c : m_gln__L_c
y[711] = 1e-5    # m_glntrna_c : m_glntrna_c
y[712] = 1e-5    # m_gln__L_p : m_gln__L_p
y[713] = 1e-5    # m_tag6p__D_c : m_tag6p__D_c
y[714] = 1e-5    # m_gg4abut_c : m_gg4abut_c
y[715] = 1e-5    # m_ggbutal_c : m_ggbutal_c
y[716] = 1e-5    # m_ggptrc_c : m_ggptrc_c
y[717] = 1e-5    # m_mlthf_c : m_mlthf_c
y[718] = 1e-5    # m_glu5p_c : m_glu5p_c
y[719] = 1e-5    # m_glucys_c : m_glucys_c
y[720] = 1e-5    # m_bglycogen_c : m_bglycogen_c
y[721] = 1e-5    # m_acglc__D_c : m_acglc__D_c
y[722] = 1e-5    # m_glcn_p : m_glcn_p
y[723] = 1e-5    # m_g1p_c : m_g1p_c
y[724] = 1e-5    # m_glu__L_p : m_glu__L_p
y[725] = 1e-5    # m_pram_c : m_pram_c
y[726] = 1e-5    # m_glu1sa_c : m_glu1sa_c
y[727] = 1e-5    # m_trnaglu_c : m_trnaglu_c
y[728] = 1e-5    # m_2h3oppan_c : m_2h3oppan_c
y[729] = 1e-5    # m_glcr_c : m_glcr_c
y[730] = 1e-5    # m_glutrna_c : m_glutrna_c
y[731] = 1e-5    # m_glcr_p : m_glcr_p
y[732] = 1e-5    # m_gicolipa_c : m_gicolipa_c
y[733] = 1e-5    # m_ggagicolipa_c : m_ggagicolipa_c
y[734] = 1e-5    # m_gggagicolipa_c : m_gggagicolipa_c
y[735] = 1e-5    # m_glcur1p_p : m_glcur1p_p
y[736] = 1e-5    # m_glyald_p : m_glyald_p
y[737] = 1e-5    # m_glyald_c : m_glyald_c
y[738] = 1e-5    # m_glcur_c : m_glcur_c
y[739] = 1e-5    # m_gly_p : m_gly_p
y[740] = 1e-5    # m_gdpddman_c : m_gdpddman_c
y[741] = 1e-5    # m_glyb_p : m_glyb_p
y[742] = 1e-5    # m_glyc2p_p : m_glyc2p_p
y[743] = 1e-5    # m_glyc3p_c : m_glyc3p_c
y[744] = 1e-5    # m_adphep_DD_c : m_adphep_DD_c
y[745] = 1e-5    # m_gmhep17bp_c : m_gmhep17bp_c
y[746] = 1e-5    # m_gmhep1p_c : m_gmhep1p_c
y[747] = 1e-5    # m_imp_c : m_imp_c
y[748] = 1e-5    # m_gmp_p : m_gmp_p
y[749] = 1e-5    # m_glyc3p_p : m_glyc3p_p
y[750] = 1e-5    # m_glyc__R_c : m_glyc__R_c
y[751] = 1e-5    # m_glyc__R_p : m_glyc__R_p
y[752] = 1e-5    # m_3pg_c : m_3pg_c
y[753] = 1e-5    # m_ru5p__D_c : m_ru5p__D_c
y[754] = 1e-5    # m_6pgc_c : m_6pgc_c
y[755] = 1e-5    # m_gdpfuc_c : m_gdpfuc_c
y[756] = 1e-5    # m_2pg_c : m_2pg_c
y[757] = 1e-5    # m_glyclt_p : m_glyclt_p
y[758] = 1e-5    # m_ser__L_p : m_ser__L_p
y[759] = 1e-5    # m_inost_c : m_inost_c
y[760] = 1e-5    # m_inost_p : m_inost_p
y[761] = 1e-5    # m_frdp_c : m_frdp_c
y[762] = 1e-5    # m_grxrd_c : m_grxrd_c
y[763] = 1e-5    # m_gthrd_c : m_gthrd_c
y[764] = 1e-5    # m_gsn_c : m_gsn_c
y[765] = 1e-5    # m_glytrna_c : m_glytrna_c
y[766] = 1e-5    # m_spmd_c : m_spmd_c
y[767] = 1e-5    # m_gtspmd_c : m_gtspmd_c
y[768] = 1e-5    # m_3oddcoa_c : m_3oddcoa_c
y[769] = 1e-5    # m_3otdcoa_c : m_3otdcoa_c
y[770] = 1e-5    # m_3ohdcoa_c : m_3ohdcoa_c
y[771] = 1e-5    # m_gthrd_p : m_gthrd_p
y[772] = 1e-5    # m_3ohodcoa_c : m_3ohodcoa_c
y[773] = 1e-5    # m_ahdt_c : m_ahdt_c
y[774] = 1e-5    # m_25drapp_c : m_25drapp_c
y[775] = 1e-5    # m_gdptp_c : m_gdptp_c
y[776] = 1e-5    # m_3ophb_c : m_3ophb_c
y[777] = 1e-5    # m_3hcinnm_c : m_3hcinnm_c
y[778] = 1e-5    # m_xtp_c : m_xtp_c
y[779] = 1e-5    # m_gtp_p : m_gtp_p
y[780] = 1e-5    # m_xan_c : m_xan_c
y[781] = 1e-5    # m_3hcinnm_p : m_3hcinnm_p
y[782] = 1e-5    # m_hco3_c : m_hco3_c
y[783] = 1e-5    # m_gua_c : m_gua_c
y[784] = 1e-5    # m_gua_p : m_gua_p
y[785] = 1e-5    # m_hdca_p : m_hdca_p
y[786] = 1e-5    # m_hdcea_p : m_hdcea_p
y[787] = 1e-5    # m_hemeO_c : m_hemeO_c
y[788] = 1e-5    # m_phhlipa_c : m_phhlipa_c
y[789] = 1e-5    # m_phphhlipa_c : m_phphhlipa_c
y[790] = 1e-5    # m_hlipa_c : m_hlipa_c
y[791] = 1e-5    # m_hhlipa_c : m_hhlipa_c
y[792] = 1e-5    # m_hphhlipa_c : m_hphhlipa_c
y[793] = 1e-5    # m_colipa_c : m_colipa_c
y[794] = 1e-5    # m_so4_c : m_so4_c
y[795] = 1e-5    # m_h2s_p : m_h2s_p
y[796] = 1e-5    # m_4mpetz_c : m_4mpetz_c
y[797] = 1e-5    # m_man6p_c : m_man6p_c
y[798] = 1e-5    # m_h2_p : m_h2_p
y[799] = 1e-5    # m_3ohcoa_c : m_3ohcoa_c
y[800] = 1e-5    # m_3oocoa_c : m_3oocoa_c
y[801] = 1e-5    # m_3odcoa_c : m_3odcoa_c
y[802] = 1e-5    # m_hg2_p : m_hg2_p
y[803] = 1e-5    # m_his__L_c : m_his__L_c
y[804] = 1e-5    # m_histd_c : m_histd_c
y[805] = 1e-5    # m_histrna_c : m_histrna_c
y[806] = 1e-5    # m_ichor_c : m_ichor_c
y[807] = 1e-5    # m_his__L_p : m_his__L_p
y[808] = 1e-5    # m_op4en_c : m_op4en_c
y[809] = 1e-5    # m_23ddhb_c : m_23ddhb_c
y[810] = 1e-5    # m_hmbil_c : m_hmbil_c
y[811] = 1e-5    # m_hom__L_p : m_hom__L_p
y[812] = 1e-5    # m_idon__L_p : m_idon__L_p
y[813] = 1e-5    # m_eig3p_c : m_eig3p_c
y[814] = 1e-5    # m_imacp_c : m_imacp_c
y[815] = 1e-5    # m_6hmhptpp_c : m_6hmhptpp_c
y[816] = 1e-5    # m_3ig3p_c : m_3ig3p_c
y[817] = 1e-5    # m_hkndd_c : m_hkndd_c
y[818] = 1e-5    # m_iletrna_c : m_iletrna_c
y[819] = 1e-5    # m_3hpppn_c : m_3hpppn_c
y[820] = 1e-5    # m_3hpppn_p : m_3hpppn_p
y[821] = 1e-5    # m_aspsa_c : m_aspsa_c
y[822] = 1e-5    # m_phom_c : m_phom_c
y[823] = 1e-5    # m_ile__L_c : m_ile__L_c
y[824] = 1e-5    # m_ile__L_p : m_ile__L_p
y[825] = 1e-5    # m_xmp_c : m_xmp_c
y[826] = 1e-5    # m_imp_p : m_imp_p
y[827] = 1e-5    # m_indole_p : m_indole_p
y[828] = 1e-5    # m_indole_c : m_indole_c
y[829] = 1e-5    # m_suchms_c : m_suchms_c
y[830] = 1e-5    # m_hisp_c : m_hisp_c
y[831] = 1e-5    # m_hxa_p : m_hxa_p
y[832] = 1e-5    # m_pydam_c : m_pydam_c
y[833] = 1e-5    # m_ins_p : m_ins_p
y[834] = 1e-5    # m_ipdp_c : m_ipdp_c
y[835] = 1e-5    # m_3c4mop_c : m_3c4mop_c
y[836] = 1e-5    # m_hxan_p : m_hxan_p
y[837] = 1e-5    # m_acolipa_p : m_acolipa_p
y[838] = 1e-5    # m_udcpp_p : m_udcpp_p
y[839] = 1e-5    # m_2ippm_c : m_2ippm_c
y[840] = 1e-5    # m_3c3hmp_c : m_3c3hmp_c
y[841] = 1e-5    # m_isetac_c : m_isetac_c
y[842] = 1e-5    # m_LalaDglu_c : m_LalaDglu_c
y[843] = 1e-5    # m_isetac_p : m_isetac_p
y[844] = 1e-5    # m_kdo2lipid4_p : m_kdo2lipid4_p
y[845] = 1e-5    # m_lald__D_c : m_lald__D_c
y[846] = 1e-5    # m_lac__L_c : m_lac__L_c
y[847] = 1e-5    # m_kdo2lipid4_e : m_kdo2lipid4_e
y[848] = 1e-5    # m_23dhmp_c : m_23dhmp_c
y[849] = 1e-5    # m_actACP_c : m_actACP_c
y[850] = 1e-5    # m_lcts_p : m_lcts_p
y[851] = 1e-5    # m_lcts_c : m_lcts_c
y[852] = 1e-5    # m_leu__L_c : m_leu__L_c
y[853] = 1e-5    # m_leutrna_c : m_leutrna_c
y[854] = 1e-5    # m_ckdo_c : m_ckdo_c
y[855] = 1e-5    # m_leu__L_p : m_leu__L_p
y[856] = 1e-5    # m_lgt__S_c : m_lgt__S_c
y[857] = 1e-5    # m_lipa_cold_p : m_lipa_cold_p
y[858] = 1e-5    # m_h2o_e : m_h2o_e
y[859] = 1e-5    # m_hacolipa_e : m_hacolipa_e
y[860] = 1e-5    # m_halipa_e : m_halipa_e
y[861] = 1e-5    # m_kdo_c : m_kdo_c
y[862] = 1e-5    # m_kdo8p_c : m_kdo8p_c
y[863] = 1e-5    # m_xu5p__L_c : m_xu5p__L_c
y[864] = 1e-5    # m_lipa_p : m_lipa_p
y[865] = 1e-5    # m_lipa_e : m_lipa_e
y[866] = 1e-5    # m_k_c : m_k_c
y[867] = 1e-5    # m_k_p : m_k_p
y[868] = 1e-5    # m_lipidAds_c : m_lipidAds_c
y[869] = 1e-5    # m_ttdca_p : m_ttdca_p
y[870] = 1e-5    # m_ttdcea_p : m_ttdcea_p
y[871] = 1e-5    # m_ocdca_p : m_ocdca_p
y[872] = 1e-5    # m_ocdcea_p : m_ocdcea_p
y[873] = 1e-5    # m_15dap_c : m_15dap_c
y[874] = 1e-5    # m_lystrna_c : m_lystrna_c
y[875] = 1e-5    # m_lys__L_p : m_lys__L_p
y[876] = 1e-5    # m_xylu__L_c : m_xylu__L_c
y[877] = 1e-5    # m_lyx__L_c : m_lyx__L_c
y[878] = 1e-5    # m_lyx__L_p : m_lyx__L_p
y[879] = 1e-5    # m_lac__L_p : m_lac__L_p
y[880] = 1e-5    # m_apg120_c : m_apg120_c
y[881] = 1e-5    # m_apg140_c : m_apg140_c
y[882] = 1e-5    # m_apg141_c : m_apg141_c
y[883] = 1e-5    # m_apg160_c : m_apg160_c
y[884] = 1e-5    # m_apg161_c : m_apg161_c
y[885] = 1e-5    # m_apg180_c : m_apg180_c
y[886] = 1e-5    # m_mal__D_c : m_mal__D_c
y[887] = 1e-5    # m_mal__D_p : m_mal__D_p
y[888] = 1e-5    # m_apg181_c : m_apg181_c
y[889] = 1e-5    # m_acmalt_c : m_acmalt_c
y[890] = 1e-5    # m_maltpt_p : m_maltpt_p
y[891] = 1e-5    # m_malttr_c : m_malttr_c
y[892] = 1e-5    # m_malttr_p : m_malttr_p
y[893] = 1e-5    # m_maltttr_p : m_maltttr_p
y[894] = 1e-5    # m_malt_c : m_malt_c
y[895] = 1e-5    # m_malt6p_c : m_malt6p_c
y[896] = 1e-5    # m_malt_p : m_malt_p
y[897] = 1e-5    # m_murein5px4p_p : m_murein5px4p_p
y[898] = 1e-5    # m_murein5px3p_p : m_murein5px3p_p
y[899] = 1e-5    # m_murein5px4px4p_p : m_murein5px4px4p_p
y[900] = 1e-5    # m_murein4px4p_p : m_murein4px4p_p
y[901] = 1e-5    # m_murein4px4px4p_p : m_murein4px4px4p_p
y[902] = 1e-5    # m_murein5p4p_p : m_murein5p4p_p
y[903] = 1e-5    # m_murein4p4p_p : m_murein4p4p_p
y[904] = 1e-5    # m_murein4p3p_p : m_murein4p3p_p
y[905] = 1e-5    # m_mal__L_p : m_mal__L_p
y[906] = 1e-5    # m_gdpmann_c : m_gdpmann_c
y[907] = 1e-5    # m_man6p_p : m_man6p_p
y[908] = 1e-5    # m_murein4px4p4p_p : m_murein4px4p4p_p
y[909] = 1e-5    # m_man6pglyc_c : m_man6pglyc_c
y[910] = 1e-5    # m_manglyc_p : m_manglyc_p
y[911] = 1e-5    # m_man_p : m_man_p
y[912] = 1e-5    # m_2mcacn_c : m_2mcacn_c
y[913] = 1e-5    # m_dkmpp_c : m_dkmpp_c
y[914] = 1e-5    # m_h2mb4p_c : m_h2mb4p_c
y[915] = 1e-5    # m_2mecdp_c : m_2mecdp_c
y[916] = 1e-5    # m_melib_c : m_melib_c
y[917] = 1e-5    # m_2mcit_c : m_2mcit_c
y[918] = 1e-5    # m_malACP_c : m_malACP_c
y[919] = 1e-5    # m_melib_p : m_melib_p
y[920] = 1e-5    # m_4c2me_c : m_4c2me_c
y[921] = 1e-5    # m_amet_c : m_amet_c
y[922] = 1e-5    # m_met__D_c : m_met__D_c
y[923] = 1e-5    # m_met__D_p : m_met__D_p
y[924] = 1e-5    # m_mmcoa__S_c : m_mmcoa__S_c
y[925] = 1e-5    # m_metsox_S__L_c : m_metsox_S__L_c
y[926] = 1e-5    # m_metsox_R__L_c : m_metsox_R__L_c
y[927] = 1e-5    # m_na1_p : m_na1_p
y[928] = 1e-5    # m_gtp_c : m_gtp_c
y[929] = 1e-5    # m_utp_c : m_utp_c
y[930] = 1e-5    # m_mmet_c : m_mmet_c
y[931] = 1e-5    # m_metsox_S__L_p : m_metsox_S__L_p
y[932] = 1e-5    # m_dttp_c : m_dttp_c
y[933] = 1e-5    # m_dgtp_c : m_dgtp_c
y[934] = 1e-5    # m_dctp_c : m_dctp_c
y[935] = 1e-5    # m_datp_c : m_datp_c
y[936] = 1e-5    # m_metsox_R__L_p : m_metsox_R__L_p
y[937] = 1e-5    # m_mettrna_c : m_mettrna_c
y[938] = 1e-5    # m_met__L_p : m_met__L_p
y[939] = 1e-5    # m_n2o_c : m_n2o_c
y[940] = 1e-5    # m_ni2_p : m_ni2_p
y[941] = 1e-5    # m_mg2_c : m_mg2_c
y[942] = 1e-5    # m_mg2_p : m_mg2_p
y[943] = 1e-5    # m_ni2_c : m_ni2_c
y[944] = 1e-5    # m_mmet_p : m_mmet_p
y[945] = 1e-5    # m_nicrnt_c : m_nicrnt_c
y[946] = 1e-5    # m_ncam_c : m_ncam_c
y[947] = 1e-5    # m_nmn_c : m_nmn_c
y[948] = 1e-5    # m_micit_c : m_micit_c
y[949] = 1e-5    # m_minohp_p : m_minohp_p
y[950] = 1e-5    # m_murein3px4p_p : m_murein3px4p_p
y[951] = 1e-5    # m_murein5p3p_p : m_murein5p3p_p
y[952] = 1e-5    # m_nmn_p : m_nmn_p
y[953] = 1e-5    # m_nac_c : m_nac_c
y[954] = 1e-5    # m_dnad_c : m_dnad_c
y[955] = 1e-5    # m_5prdmbz_c : m_5prdmbz_c
y[956] = 1e-5    # m_murein3p3p_p : m_murein3p3p_p
y[957] = 1e-5    # m_murein3px3p_p : m_murein3px3p_p
y[958] = 1e-5    # m_mmcoa__R_c : m_mmcoa__R_c
y[959] = 1e-5    # m_no2_c : m_no2_c
y[960] = 1e-5    # m_no2_p : m_no2_p
y[961] = 1e-5    # m_mn2_p : m_mn2_p
y[962] = 1e-5    # m_no3_c : m_no3_c
y[963] = 1e-5    # m_anhgm4p_p : m_anhgm4p_p
y[964] = 1e-5    # m_no3_p : m_no3_p
y[965] = 1e-5    # m_no_p : m_no_p
y[966] = 1e-5    # m_no_c : m_no_c
y[967] = 1e-5    # m_mn2_c : m_mn2_c
y[968] = 1e-5    # m_dhna_c : m_dhna_c
y[969] = 1e-5    # m_xtsn_c : m_xtsn_c
y[970] = 1e-5    # m_xtsn_p : m_xtsn_p
y[971] = 1e-5    # m_mnl1p_c : m_mnl1p_c
y[972] = 1e-5    # m_didp_c : m_didp_c
y[973] = 1e-5    # m_mnl_p : m_mnl_p
y[974] = 1e-5    # m_xdp_c : m_xdp_c
y[975] = 1e-5    # m_thymd_c : m_thymd_c
y[976] = 1e-5    # m_thymd_p : m_thymd_p
y[977] = 1e-5    # m_dgmp_c : m_dgmp_c
y[978] = 1e-5    # m_dimp_c : m_dimp_c
y[979] = 1e-5    # m_dcmp_c : m_dcmp_c
y[980] = 1e-5    # m_damp_c : m_damp_c
y[981] = 1e-5    # m_dtmp_c : m_dtmp_c
y[982] = 1e-5    # m_orot_p : m_orot_p
y[983] = 1e-5    # m_prpp_c : m_prpp_c
y[984] = 1e-5    # m_oxam_c : m_oxam_c
y[985] = 1e-5    # m_ssaltpp_c : m_ssaltpp_c
y[986] = 1e-5    # m_kdolipid4_c : m_kdolipid4_c
y[987] = 1e-5    # m_o16a4colipa_e : m_o16a4colipa_e
y[988] = 1e-5    # m_o16a4colipa_p : m_o16a4colipa_p
y[989] = 1e-5    # m_o16a2und_p : m_o16a2und_p
y[990] = 1e-5    # m_o16a3und_p : m_o16a3und_p
y[991] = 1e-5    # m_kdo2lipid4_c : m_kdo2lipid4_c
y[992] = 1e-5    # m_o16a4und_p : m_o16a4und_p
y[993] = 1e-5    # m_aragund_c : m_aragund_c
y[994] = 1e-5    # m_o16aund_p : m_o16aund_p
y[995] = 1e-5    # m_gfgaragund_c : m_gfgaragund_c
y[996] = 1e-5    # m_pacald_c : m_pacald_c
y[997] = 1e-5    # m_pacald_p : m_pacald_p
y[998] = 1e-5    # m_garagund_c : m_garagund_c
y[999] = 1e-5    # m_phaccoa_c : m_phaccoa_c
y[1000] = 1e-5    # m_o16aund_c : m_o16aund_c
y[1001] = 1e-5    # m_pnto__R_c : m_pnto__R_c
y[1002] = 1e-5    # m_kphphhlipa_c : m_kphphhlipa_c
y[1003] = 1e-5    # m_o2s_p : m_o2s_p
y[1004] = 1e-5    # m_o2_p : m_o2_p
y[1005] = 1e-5    # m_12dgr120_p : m_12dgr120_p
y[1006] = 1e-5    # m_mobd_c : m_mobd_c
y[1007] = 1e-5    # m_12dgr140_p : m_12dgr140_p
y[1008] = 1e-5    # m_12dgr141_p : m_12dgr141_p
y[1009] = 1e-5    # m_12dgr160_p : m_12dgr160_p
y[1010] = 1e-5    # m_citr__L_c : m_citr__L_c
y[1011] = 1e-5    # m_octa_p : m_octa_p
y[1012] = 1e-5    # m_octdp_c : m_octdp_c
y[1013] = 1e-5    # m_12dgr161_p : m_12dgr161_p
y[1014] = 1e-5    # m_mobd_p : m_mobd_p
y[1015] = 1e-5    # m_phthr_c : m_phthr_c
y[1016] = 1e-5    # m_2omph_c : m_2omph_c
y[1017] = 1e-5    # m_2ommbl_c : m_2ommbl_c
y[1018] = 1e-5    # m_4mop_c : m_4mop_c
y[1019] = 1e-5    # m_12dgr180_p : m_12dgr180_p
y[1020] = 1e-5    # m_12dgr181_p : m_12dgr181_p
y[1021] = 1e-5    # m_uagmda_c : m_uagmda_c
y[1022] = 1e-5    # m_2omhmbl_c : m_2omhmbl_c
y[1023] = 1e-5    # m_2dhp_c : m_2dhp_c
y[1024] = 1e-5    # m_grxox_c : m_grxox_c
y[1025] = 1e-5    # m_pydx5p_c : m_pydx5p_c
y[1026] = 1e-5    # m_pdx5p_c : m_pdx5p_c
y[1027] = 1e-5    # m_2ombzl_c : m_2ombzl_c
y[1028] = 1e-5    # m_4h2opntn_c : m_4h2opntn_c
y[1029] = 1e-5    # m_2oph_c : m_2oph_c
y[1030] = 1e-5    # m_2ohph_c : m_2ohph_c
y[1031] = 1e-5    # m_pydxn_c : m_pydxn_c
y[1032] = 1e-5    # m_pe120_p : m_pe120_p
y[1033] = 1e-5    # m_pe140_p : m_pe140_p
y[1034] = 1e-5    # m_pe141_p : m_pe141_p
y[1035] = 1e-5    # m_murein5p5p_p : m_murein5p5p_p
y[1036] = 1e-5    # m_udcpdp_c : m_udcpdp_c
y[1037] = 1e-5    # m_pe160_p : m_pe160_p
y[1038] = 1e-5    # m_pe161_p : m_pe161_p
y[1039] = 1e-5    # m_pe180_p : m_pe180_p
y[1040] = 1e-5    # m_3php_c : m_3php_c
y[1041] = 1e-5    # m_pe181_p : m_pe181_p
y[1042] = 1e-5    # m_murein5p5p5p_p : m_murein5p5p5p_p
y[1043] = 1e-5    # m_peamn_p : m_peamn_p
y[1044] = 1e-5    # m_ohpb_c : m_ohpb_c
y[1045] = 1e-5    # m_enlipa_p : m_enlipa_p
y[1046] = 1e-5    # m_pgp120_p : m_pgp120_p
y[1047] = 1e-5    # m_pgp140_p : m_pgp140_p
y[1048] = 1e-5    # m_pgp141_p : m_pgp141_p
y[1049] = 1e-5    # m_pgp160_p : m_pgp160_p
y[1050] = 1e-5    # m_pgp161_p : m_pgp161_p
y[1051] = 1e-5    # m_tagdp__D_c : m_tagdp__D_c
y[1052] = 1e-5    # m_pgp180_p : m_pgp180_p
y[1053] = 1e-5    # m_mso3_c : m_mso3_c
y[1054] = 1e-5    # m_pgp181_p : m_pgp181_p
y[1055] = 1e-5    # m_mso3_p : m_mso3_p
y[1056] = 1e-5    # m_5mtr_c : m_5mtr_c
y[1057] = 1e-5    # m_10fthf_c : m_10fthf_c
y[1058] = 1e-5    # m_1ddecg3p_p : m_1ddecg3p_p
y[1059] = 1e-5    # m_1tdecg3p_p : m_1tdecg3p_p
y[1060] = 1e-5    # m_1tdec7eg3p_p : m_1tdec7eg3p_p
y[1061] = 1e-5    # m_1hdecg3p_p : m_1hdecg3p_p
y[1062] = 1e-5    # m_1hdec9eg3p_p : m_1hdec9eg3p_p
y[1063] = 1e-5    # m_1odecg3p_p : m_1odecg3p_p
y[1064] = 1e-5    # m_pgp120_c : m_pgp120_c
y[1065] = 1e-5    # m_pgp140_c : m_pgp140_c
y[1066] = 1e-5    # m_1odec11eg3p_p : m_1odec11eg3p_p
y[1067] = 1e-5    # m_pgp141_c : m_pgp141_c
y[1068] = 1e-5    # m_methf_c : m_methf_c
y[1069] = 1e-5    # m_pgp160_c : m_pgp160_c
y[1070] = 1e-5    # m_pgp161_c : m_pgp161_c
y[1071] = 1e-5    # m_1agpe120_p : m_1agpe120_p
y[1072] = 1e-5    # m_1agpe140_p : m_1agpe140_p
y[1073] = 1e-5    # m_1agpe141_p : m_1agpe141_p
y[1074] = 1e-5    # m_1agpe160_p : m_1agpe160_p
y[1075] = 1e-5    # m_pgp180_c : m_pgp180_c
y[1076] = 1e-5    # m_pgp181_c : m_pgp181_c
y[1077] = 1e-5    # m_1agpe161_p : m_1agpe161_p
y[1078] = 1e-5    # m_5mthf_c : m_5mthf_c
y[1079] = 1e-5    # m_1agpe180_p : m_1agpe180_p
y[1080] = 1e-5    # m_1agpe181_p : m_1agpe181_p
y[1081] = 1e-5    # m_1agpg120_p : m_1agpg120_p
y[1082] = 1e-5    # m_pheme_p : m_pheme_p
y[1083] = 1e-5    # m_pheme_e : m_pheme_e
y[1084] = 1e-5    # m_phpyr_c : m_phpyr_c
y[1085] = 1e-5    # m_phetrna_c : m_phetrna_c
y[1086] = 1e-5    # m_1agpg140_p : m_1agpg140_p
y[1087] = 1e-5    # m_1agpg141_p : m_1agpg141_p
y[1088] = 1e-5    # m_1agpg160_p : m_1agpg160_p
y[1089] = 1e-5    # m_1agpg161_p : m_1agpg161_p
y[1090] = 1e-5    # m_1agpg180_p : m_1agpg180_p
y[1091] = 1e-5    # m_phe__L_c : m_phe__L_c
y[1092] = 1e-5    # m_phe__L_p : m_phe__L_p
y[1093] = 1e-5    # m_1agpg181_p : m_1agpg181_p
y[1094] = 1e-5    # m_4r5au_c : m_4r5au_c
y[1095] = 1e-5    # m_2ddecg3p_p : m_2ddecg3p_p
y[1096] = 1e-5    # m_5mdru1p_c : m_5mdru1p_c
y[1097] = 1e-5    # m_2tdecg3p_p : m_2tdecg3p_p
y[1098] = 1e-5    # m_2tdec7eg3p_p : m_2tdec7eg3p_p
y[1099] = 1e-5    # m_2mahmp_c : m_2mahmp_c
y[1100] = 1e-5    # m_4ppan_c : m_4ppan_c
y[1101] = 1e-5    # m_pnto__R_p : m_pnto__R_p
y[1102] = 1e-5    # m_2hdecg3p_p : m_2hdecg3p_p
y[1103] = 1e-5    # m_2hdec9eg3p_p : m_2hdec9eg3p_p
y[1104] = 1e-5    # m_5mdr1p_c : m_5mdr1p_c
y[1105] = 1e-5    # m_2odecg3p_p : m_2odecg3p_p
y[1106] = 1e-5    # m_2odec11eg3p_p : m_2odec11eg3p_p
y[1107] = 1e-5    # m_2agpe120_p : m_2agpe120_p
y[1108] = 1e-5    # m_trp__L_c : m_trp__L_c
y[1109] = 1e-5    # m_ppal_p : m_ppal_p
y[1110] = 1e-5    # m_ppa_p : m_ppa_p
y[1111] = 1e-5    # m_2agpe140_p : m_2agpe140_p
y[1112] = 1e-5    # m_2agpe141_p : m_2agpe141_p
y[1113] = 1e-5    # m_2agpe161_p : m_2agpe161_p
y[1114] = 1e-5    # m_2agpe180_p : m_2agpe180_p
y[1115] = 1e-5    # m_2agpe181_p : m_2agpe181_p
y[1116] = 1e-5    # m_2agpg120_p : m_2agpg120_p
y[1117] = 1e-5    # m_2agpg140_p : m_2agpg140_p
y[1118] = 1e-5    # m_2agpg141_p : m_2agpg141_p
y[1119] = 1e-5    # m_ppbng_c : m_ppbng_c
y[1120] = 1e-5    # m_pan4p_c : m_pan4p_c
y[1121] = 1e-5    # m_2agpg161_p : m_2agpg161_p
y[1122] = 1e-5    # m_n2o_p : m_n2o_p
y[1123] = 1e-5    # m_2agpg180_p : m_2agpg180_p
y[1124] = 1e-5    # m_2agpg181_p : m_2agpg181_p
y[1125] = 1e-5    # m_2dr5p_c : m_2dr5p_c
y[1126] = 1e-5    # m_4ppcys_c : m_4ppcys_c
y[1127] = 1e-5    # m_34hpp_c : m_34hpp_c
y[1128] = 1e-5    # m_progly_p : m_progly_p
y[1129] = 1e-5    # m_protrna_c : m_protrna_c
y[1130] = 1e-5    # m_pro__L_p : m_pro__L_p
y[1131] = 1e-5    # m_ppp9_c : m_ppp9_c
y[1132] = 1e-5    # m_cechddd_c : m_cechddd_c
y[1133] = 1e-5    # m_pppn_c : m_pppn_c
y[1134] = 1e-5    # m_pppn_p : m_pppn_p
y[1135] = 1e-5    # m_psclys_c : m_psclys_c
y[1136] = 1e-5    # m_psclys_p : m_psclys_p
y[1137] = 1e-5    # m_ppt_p : m_ppt_p
y[1138] = 1e-5    # m_3psme_c : m_3psme_c
y[1139] = 1e-5    # m_nac_p : m_nac_p
y[1140] = 1e-5    # m_gar_c : m_gar_c
y[1141] = 1e-5    # m_air_c : m_air_c
y[1142] = 1e-5    # m_2cpr5p_c : m_2cpr5p_c
y[1143] = 1e-5    # m_prfp_c : m_prfp_c
y[1144] = 1e-5    # m_25aics_c : m_25aics_c
y[1145] = 1e-5    # m_prbamp_c : m_prbamp_c
y[1146] = 1e-5    # m_fpram_c : m_fpram_c
y[1147] = 1e-5    # m_prlp_c : m_prlp_c
y[1148] = 1e-5    # m_progly_c : m_progly_c
y[1149] = 1e-5    # m_pser__L_c : m_pser__L_c
y[1150] = 1e-5    # m_pser__L_p : m_pser__L_p
y[1151] = 1e-5    # m_ps120_c : m_ps120_c
y[1152] = 1e-5    # m_ps140_c : m_ps140_c
y[1153] = 1e-5    # m_ru5p__L_c : m_ru5p__L_c
y[1154] = 1e-5    # m_ps141_c : m_ps141_c
y[1155] = 1e-5    # m_ps160_c : m_ps160_c
y[1156] = 1e-5    # m_xu5p__D_c : m_xu5p__D_c
y[1157] = 1e-5    # m_icolipa_c : m_icolipa_c
y[1158] = 1e-5    # m_ps161_c : m_ps161_c
y[1159] = 1e-5    # m_ps180_c : m_ps180_c
y[1160] = 1e-5    # m_dhptd_c : m_dhptd_c
y[1161] = 1e-5    # m_rib__D_p : m_rib__D_p
y[1162] = 1e-5    # m_ps181_c : m_ps181_c
y[1163] = 1e-5    # m_rml_c : m_rml_c
y[1164] = 1e-5    # m_rml1p_c : m_rml1p_c
y[1165] = 1e-5    # m_rmn_p : m_rmn_p
y[1166] = 1e-5    # m_ppap_c : m_ppap_c
y[1167] = 1e-5    # m_thr__L_p : m_thr__L_p
y[1168] = 1e-5    # m_dpcoa_c : m_dpcoa_c
y[1169] = 1e-5    # m_4abutn_c : m_4abutn_c
y[1170] = 1e-5    # m_rmn_c : m_rmn_c
y[1171] = 1e-5    # m_ptrc_p : m_ptrc_p
y[1172] = 1e-5    # m_r1p_c : m_r1p_c
y[1173] = 1e-5    # m_dudp_c : m_dudp_c
y[1174] = 1e-5    # m_fldox_c : m_fldox_c
y[1175] = 1e-5    # m_rdmbzi_c : m_rdmbzi_c
y[1176] = 1e-5    # m_gmhep7p_c : m_gmhep7p_c
y[1177] = 1e-5    # m_sucorn_c : m_sucorn_c
y[1178] = 1e-5    # m_aps_c : m_aps_c
y[1179] = 1e-5    # m_pydx_c : m_pydx_c
y[1180] = 1e-5    # m_pyr_p : m_pyr_p
y[1181] = 1e-5    # m_sbt6p_c : m_sbt6p_c
y[1182] = 1e-5    # m_sbt__D_p : m_sbt__D_p
y[1183] = 1e-5    # m_o2s_c : m_o2s_c
y[1184] = 1e-5    # m_26dap_LL_c : m_26dap_LL_c
y[1185] = 1e-5    # m_quln_c : m_quln_c
y[1186] = 1e-5    # m_sl2a6o_c : m_sl2a6o_c
y[1187] = 1e-5    # m_sectrna_c : m_sectrna_c
y[1188] = 1e-5    # m_selnp_c : m_selnp_c
y[1189] = 1e-5    # m_seramp_c : m_seramp_c
y[1190] = 1e-5    # m_acser_c : m_acser_c
y[1191] = 1e-5    # m_r15bp_c : m_r15bp_c
y[1192] = 1e-5    # m_r5p_p : m_r5p_p
y[1193] = 1e-5    # m_dmlz_c : m_dmlz_c
y[1194] = 1e-5    # m_sertrna_c : m_sertrna_c
y[1195] = 1e-5    # m_sertrna_sec_c : m_sertrna_sec_c
y[1196] = 1e-5    # m_adprib_c : m_adprib_c
y[1197] = 1e-5    # m_sucglu_c : m_sucglu_c
y[1198] = 1e-5    # m_lipidA_c : m_lipidA_c
y[1199] = 1e-5    # m_dsbdox_c : m_dsbdox_c
y[1200] = 1e-5    # m_2shchc_c : m_2shchc_c
y[1201] = 1e-5    # m_thmpp_c : m_thmpp_c
y[1202] = 1e-5    # m_scl_c : m_scl_c
y[1203] = 1e-5    # m_sheme_c : m_sheme_c
y[1204] = 1e-5    # m_skm_c : m_skm_c
y[1205] = 1e-5    # m_skm5p_c : m_skm5p_c
y[1206] = 1e-5    # m_cyst__L_c : m_cyst__L_c
y[1207] = 1e-5    # m_skm_p : m_skm_p
y[1208] = 1e-5    # m_so2_p : m_so2_p
y[1209] = 1e-5    # m_thm_c : m_thm_c
y[1210] = 1e-5    # m_thm_p : m_thm_p
y[1211] = 1e-5    # m_so4_p : m_so4_p
y[1212] = 1e-5    # m_sucgsa_c : m_sucgsa_c
y[1213] = 1e-5    # m_N1aspmd_c : m_N1aspmd_c
y[1214] = 1e-5    # m_2obut_c : m_2obut_c
y[1215] = 1e-5    # m_thrp_p : m_thrp_p
y[1216] = 1e-5    # m_thr__L_c : m_thr__L_c
y[1217] = 1e-5    # m_n8aspmd_c : m_n8aspmd_c
y[1218] = 1e-5    # m_thrtrna_c : m_thrtrna_c
y[1219] = 1e-5    # m_spmd_p : m_spmd_p
y[1220] = 1e-5    # m_5mta_c : m_5mta_c
y[1221] = 1e-5    # m_thym_p : m_thym_p
y[1222] = 1e-5    # m_4hba_c : m_4hba_c
y[1223] = 1e-5    # m_sbzcoa_c : m_sbzcoa_c
y[1224] = 1e-5    # m_sucbz_c : m_sucbz_c
y[1225] = 1e-5    # m_s7p_c : m_s7p_c
y[1226] = 1e-5    # m_tma_c : m_tma_c
y[1227] = 1e-5    # m_tma_p : m_tma_p
y[1228] = 1e-5    # m_sucr_p : m_sucr_p
y[1229] = 1e-5    # m_suc6p_c : m_suc6p_c
y[1230] = 1e-5    # m_sulfac_c : m_sulfac_c
y[1231] = 1e-5    # m_tmao_p : m_tmao_p
y[1232] = 1e-5    # m_thym_c : m_thym_c
y[1233] = 1e-5    # m_thmmp_c : m_thmmp_c
y[1234] = 1e-5    # m_2tpr3dpcoa_c : m_2tpr3dpcoa_c
y[1235] = 1e-5    # m_sulfac_p : m_sulfac_p
y[1236] = 1e-5    # m_cdec3eACP_c : m_cdec3eACP_c
y[1237] = 1e-5    # m_e4p_c : m_e4p_c
y[1238] = 1e-5    # m_tartr__L_c : m_tartr__L_c
y[1239] = 1e-5    # m_tartr__L_p : m_tartr__L_p
y[1240] = 1e-5    # m_trdrd_c : m_trdrd_c
y[1241] = 1e-5    # m_tre_c : m_tre_c
y[1242] = 1e-5    # m_tre6p_c : m_tre6p_c
y[1243] = 1e-5    # m_aacald_c : m_aacald_c
y[1244] = 1e-5    # m_taur_c : m_taur_c
y[1245] = 1e-5    # m_tre_p : m_tre_p
y[1246] = 1e-5    # m_taur_p : m_taur_p
y[1247] = 1e-5    # m_dtdp4aaddg_c : m_dtdp4aaddg_c
y[1248] = 1e-5    # m_dtdp4addg_c : m_dtdp4addg_c
y[1249] = 1e-5    # m_dtdp4d6dm_c : m_dtdp4d6dm_c
y[1250] = 1e-5    # m_dtdprmn_c : m_dtdprmn_c
y[1251] = 1e-5    # m_trptrna_c : m_trptrna_c
y[1252] = 1e-5    # m_cpppg3_c : m_cpppg3_c
y[1253] = 1e-5    # m_dtdp4d6dg_c : m_dtdp4d6dg_c
y[1254] = 1e-5    # m_trp__L_p : m_trp__L_p
y[1255] = 1e-5    # m_tsul_c : m_tsul_c
y[1256] = 1e-5    # m_tsul_p : m_tsul_p
y[1257] = 1e-5    # m_ura_p : m_ura_p
y[1258] = 1e-5    # m_oxur_c : m_oxur_c
y[1259] = 1e-5    # m_tungs_c : m_tungs_c
y[1260] = 1e-5    # m_urea_p : m_urea_p
y[1261] = 1e-5    # m_tungs_p : m_tungs_p
y[1262] = 1e-5    # m_tym_p : m_tym_p
y[1263] = 1e-5    # m_tyr__L_p : m_tyr__L_p
y[1264] = 1e-5    # m_tyrp_p : m_tyrp_p
y[1265] = 1e-5    # m_tyrtrna_c : m_tyrtrna_c
y[1266] = 1e-5    # m_tyr__L_c : m_tyr__L_c
y[1267] = 1e-5    # m_lipidX_c : m_lipidX_c
y[1268] = 1e-5    # m_u23ga_c : m_u23ga_c
y[1269] = 1e-5    # m_ugmd_c : m_ugmd_c
y[1270] = 1e-5    # m_ump_p : m_ump_p
y[1271] = 1e-5    # m_valtrna_c : m_valtrna_c
y[1272] = 1e-5    # m_val__L_c : m_val__L_c
y[1273] = 1e-5    # m_uacgam_p : m_uacgam_p
y[1274] = 1e-5    # m_uacmamu_c : m_uacmamu_c
y[1275] = 1e-5    # m_uacmam_c : m_uacmam_c
y[1276] = 1e-5    # m_val__L_p : m_val__L_p
y[1277] = 1e-5    # m_u3aga_c : m_u3aga_c
y[1278] = 1e-5    # m_uaccg_c : m_uaccg_c
y[1279] = 1e-5    # m_urate_c : m_urate_c
y[1280] = 1e-5    # m_xan_p : m_xan_p
y[1281] = 1e-5    # m_xmp_p : m_xmp_p
y[1282] = 1e-5    # m_xylu__D_c : m_xylu__D_c
y[1283] = 1e-5    # m_xylu__L_p : m_xylu__L_p
y[1284] = 1e-5    # m_xyl__D_c : m_xyl__D_c
y[1285] = 1e-5    # m_xyl__D_p : m_xyl__D_p
y[1286] = 1e-5    # m_zn2_p : m_zn2_p
y[1287] = 1e-5    # m_zn2_c : m_zn2_c
y[1288] = 1e-5    # m_uacgam_c : m_uacgam_c
y[1289] = 1e-5    # m_uaagmda_c : m_uaagmda_c
y[1290] = 1e-5    # m_uamag_c : m_uamag_c
y[1291] = 1e-5    # m_uama_c : m_uama_c
y[1292] = 1e-5    # m_uamr_c : m_uamr_c
y[1293] = 1e-5    # m_udcpp_c : m_udcpp_c
y[1294] = 1e-5    # m_udpacgal_p : m_udpacgal_p
y[1295] = 1e-5    # m_udpgal_c : m_udpgal_c
y[1296] = 1e-5    # m_udpgalfur_c : m_udpgalfur_c
y[1297] = 1e-5    # m_udpgal_p : m_udpgal_p
y[1298] = 1e-5    # m_udpglcur_c : m_udpglcur_c
y[1299] = 1e-5    # m_udpLa4o_c : m_udpLa4o_c
y[1300] = 1e-5    # m_udpglcur_p : m_udpglcur_p
y[1301] = 1e-5    # m_udpg_p : m_udpg_p
y[1302] = 1e-5    # m_udpLa4n_c : m_udpLa4n_c
y[1303] = 1e-5    # m_ugmda_c : m_ugmda_c
y[1304] = 1e-5    # m_u3hga_c : m_u3hga_c
y[1305] = 1e-5    # m_udpLa4fn_c : m_udpLa4fn_c
y[1306] = 1e-5    # m_uLa4n_p : m_uLa4n_p
y[1307] = 1e-5    # m_um4p_c : m_um4p_c
y[1308] = 1e-5    # m_uLa4n_c : m_uLa4n_c
y[1309] = 1e-5    # m_uLa4fn_c : m_uLa4fn_c
y[1310] = 1e-5    # m_dscl_c : m_dscl_c
y[1311] = 1e-5    # m_uppg3_c : m_uppg3_c
y[1312] = 1e-5    # m_acser_e : m_acser_e
y[1313] = 1e-5    # m_LalaDgluMdap_e : m_LalaDgluMdap_e
y[1314] = 1e-5    # m_3ump_e : m_3ump_e
y[1315] = 1e-5    # m_4hoxpacd_e : m_4hoxpacd_e
y[1316] = 1e-5    # m_12ppd__R_e : m_12ppd__R_e
y[1317] = 1e-5    # m_12ppd__S_e : m_12ppd__S_e
y[1318] = 1e-5    # m_14glucan_e : m_14glucan_e
y[1319] = 1e-5    # m_23camp_e : m_23camp_e
y[1320] = 1e-5    # m_23ccmp_e : m_23ccmp_e
y[1321] = 1e-5    # m_23cgmp_e : m_23cgmp_e
y[1322] = 1e-5    # m_23cump_e : m_23cump_e
y[1323] = 1e-5    # m_23dappa_e : m_23dappa_e
y[1324] = 1e-5    # m_LalaDgluMdapDala_e : m_LalaDgluMdapDala_e
y[1325] = 1e-5    # m_5dglcn_e : m_5dglcn_e
y[1326] = 1e-5    # m_26dap__M_e : m_26dap__M_e
y[1327] = 1e-5    # m_acgam1p_e : m_acgam1p_e
y[1328] = 1e-5    # m_acgam_e : m_acgam_e
y[1329] = 1e-5    # m_arbt6p_c : m_arbt6p_c
y[1330] = 1e-5    # m_4abut_e : m_4abut_e
y[1331] = 1e-5    # m_acac_e : m_acac_e
y[1332] = 1e-5    # m_acmana_e : m_acmana_e
y[1333] = 1e-5    # m_acmum_e : m_acmum_e
y[1334] = 1e-5    # m_acald_e : m_acald_e
y[1335] = 1e-5    # m_acnam_e : m_acnam_e
y[1336] = 1e-5    # m_acgal1p_e : m_acgal1p_e
y[1337] = 1e-5    # m_acgal_e : m_acgal_e
y[1338] = 1e-5    # m_acorn_c : m_acorn_c
y[1339] = 1e-5    # m_acon_T_c : m_acon_T_c
y[1340] = 1e-5    # m_apoACP_c : m_apoACP_c
y[1341] = 1e-5    # m_agm_e : m_agm_e
y[1342] = 1e-5    # m_ac_e : m_ac_e
y[1343] = 1e-5    # m_ag_c : m_ag_c
y[1344] = 1e-5    # m_h_e : m_h_e
y[1345] = 1e-5    # m_ade_e : m_ade_e
y[1346] = 1e-5    # m_5aizc_c : m_5aizc_c
y[1347] = 1e-5    # m_akg_e : m_akg_e
y[1348] = 1e-5    # m_adn_e : m_adn_e
y[1349] = 1e-5    # m_adocbl_e : m_adocbl_e
y[1350] = 1e-5    # m_alaala_e : m_alaala_e
y[1351] = 1e-5    # m_all__D_e : m_all__D_e
y[1352] = 1e-5    # m_alpp_p : m_alpp_p
y[1353] = 1e-5    # m_trnaala_c : m_trnaala_c
y[1354] = 1e-5    # m_altrn_c : m_altrn_c
y[1355] = 1e-5    # m_ala__L_e : m_ala__L_e
y[1356] = 1e-5    # m_ppal_c : m_ppal_c
y[1357] = 1e-5    # m_amp_e : m_amp_e
y[1358] = 1e-5    # m_alltn_e : m_alltn_e
y[1359] = 1e-5    # m_anhgm_e : m_anhgm_e
y[1360] = 1e-5    # m_pmcoa_c : m_pmcoa_c
y[1361] = 1e-5    # m_ap4a_c : m_ap4a_c
y[1362] = 1e-5    # m_asn__L_e : m_asn__L_e
y[1363] = 1e-5    # m_aso3_e : m_aso3_e
y[1364] = 1e-5    # m_ap5a_c : m_ap5a_c
y[1365] = 1e-5    # m_fe3_e : m_fe3_e
y[1366] = 1e-5    # m_trnaasp_c : m_trnaasp_c
y[1367] = 1e-5    # m_2dhglcn_c : m_2dhglcn_c
y[1368] = 1e-5    # m_asp__L_e : m_asp__L_e
y[1369] = 1e-5    # m_arab__L_e : m_arab__L_e
y[1370] = 1e-5    # m_trnaarg_c : m_trnaarg_c
y[1371] = 1e-5    # m_aso4_c : m_aso4_c
y[1372] = 1e-5    # m_athr__L_c : m_athr__L_c
y[1373] = 1e-5    # m_arg__L_e : m_arg__L_e
y[1374] = 1e-5    # m_ala_B_e : m_ala_B_e
y[1375] = 1e-5    # m_ascb__L_e : m_ascb__L_e
y[1376] = 1e-5    # m_betald_c : m_betald_c
y[1377] = 1e-5    # m_btnso_c : m_btnso_c
y[1378] = 1e-5    # m_trnaasn_c : m_trnaasn_c
y[1379] = 1e-5    # m_s_c : m_s_c
y[1380] = 1e-5    # m_butso3_e : m_butso3_e
y[1381] = 1e-5    # m_but_e : m_but_e
y[1382] = 1e-5    # m_ca2_c : m_ca2_c
y[1383] = 1e-5    # m_34dhpac_e : m_34dhpac_e
y[1384] = 1e-5    # m_ca2_e : m_ca2_e
y[1385] = 1e-5    # m_3amp_e : m_3amp_e
y[1386] = 1e-5    # m_3cmp_e : m_3cmp_e
y[1387] = 1e-5    # m_cbi_e : m_cbi_e
y[1388] = 1e-5    # m_cgly_e : m_cgly_e
y[1389] = 1e-5    # m_3gmp_e : m_3gmp_e
y[1390] = 1e-5    # m_chol_e : m_chol_e
y[1391] = 1e-5    # m_cbl1_e : m_cbl1_e
y[1392] = 1e-5    # m_cd2_e : m_cd2_e
y[1393] = 1e-5    # m_cinnm_c : m_cinnm_c
y[1394] = 1e-5    # m_cit_e : m_cit_e
y[1395] = 1e-5    # m_crn_e : m_crn_e
y[1396] = 1e-5    # m_cl_e : m_cl_e
y[1397] = 1e-5    # m_csn_e : m_csn_e
y[1398] = 1e-5    # m_cmp_e : m_cmp_e
y[1399] = 1e-5    # m_ctbt_p : m_ctbt_p
y[1400] = 1e-5    # m_co2_e : m_co2_e
y[1401] = 1e-5    # m_cu_c : m_cu_c
y[1402] = 1e-5    # m_cobalt2_e : m_cobalt2_e
y[1403] = 1e-5    # m_cu2_e : m_cu2_e
y[1404] = 1e-5    # m_cyan_c : m_cyan_c
y[1405] = 1e-5    # m_cyan_e : m_cyan_e
y[1406] = 1e-5    # m_cynt_e : m_cynt_e
y[1407] = 1e-5    # m_bbtcoa_c : m_bbtcoa_c
y[1408] = 1e-5    # m_cys__D_e : m_cys__D_e
y[1409] = 1e-5    # m_3sala_c : m_3sala_c
y[1410] = 1e-5    # m_trnacys_c : m_trnacys_c
y[1411] = 1e-5    # m_cys__L_e : m_cys__L_e
y[1412] = 1e-5    # m_ala__D_e : m_ala__D_e
y[1413] = 1e-5    # m_damp_e : m_damp_e
y[1414] = 1e-5    # m_15dap_e : m_15dap_e
y[1415] = 1e-5    # m_cytd_e : m_cytd_e
y[1416] = 1e-5    # m_dad_2_e : m_dad_2_e
y[1417] = 1e-5    # m_dca_e : m_dca_e
y[1418] = 1e-5    # m_dcmp_e : m_dcmp_e
y[1419] = 1e-5    # m_dcyt_e : m_dcyt_e
y[1420] = 1e-5    # m_ddca_e : m_ddca_e
y[1421] = 1e-5    # m_2ddglcn_e : m_2ddglcn_e
y[1422] = 1e-5    # m_25dkglcn_c : m_25dkglcn_c
y[1423] = 1e-5    # m_dgmp_e : m_dgmp_e
y[1424] = 1e-5    # m_dmso_c : m_dmso_c
y[1425] = 1e-5    # m_dgsn_e : m_dgsn_e
y[1426] = 1e-5    # m_23dhmb_c : m_23dhmb_c
y[1427] = 1e-5    # m_dha_e : m_dha_e
y[1428] = 1e-5    # m_dmso_e : m_dmso_e
y[1429] = 1e-5    # m_dms_e : m_dms_e
y[1430] = 1e-5    # m_dhor__S_c : m_dhor__S_c
y[1431] = 1e-5    # m_23doguln_c : m_23doguln_c
y[1432] = 1e-5    # m_dopa_e : m_dopa_e
y[1433] = 1e-5    # m_dsbard_p : m_dsbard_p
y[1434] = 1e-5    # m_dsbcox_p : m_dsbcox_p
y[1435] = 1e-5    # m_dsbgox_p : m_dsbgox_p
y[1436] = 1e-5    # m_dimp_e : m_dimp_e
y[1437] = 1e-5    # m_ser__D_e : m_ser__D_e
y[1438] = 1e-5    # m_dtmp_e : m_dtmp_e
y[1439] = 1e-5    # m_din_e : m_din_e
y[1440] = 1e-5    # m_dump_e : m_dump_e
y[1441] = 1e-5    # m_duri_e : m_duri_e
y[1442] = 1e-5    # m_dxyl_c : m_dxyl_c
y[1443] = 1e-5    # m_lac__D_e : m_lac__D_e
y[1444] = 1e-5    # m_3hbcoa_c : m_3hbcoa_c
y[1445] = 1e-5    # m_3hhcoa_c : m_3hhcoa_c
y[1446] = 1e-5    # m_3hocoa_c : m_3hocoa_c
y[1447] = 1e-5    # m_3hdcoa_c : m_3hdcoa_c
y[1448] = 1e-5    # m_3hddcoa_c : m_3hddcoa_c
y[1449] = 1e-5    # m_3htdcoa_c : m_3htdcoa_c
y[1450] = 1e-5    # m_3hhdcoa_c : m_3hhdcoa_c
y[1451] = 1e-5    # m_3hodcoa_c : m_3hodcoa_c
y[1452] = 1e-5    # m_for_e : m_for_e
y[1453] = 1e-5    # m_etha_e : m_etha_e
y[1454] = 1e-5    # m_ethso3_e : m_ethso3_e
y[1455] = 1e-5    # m_etoh_e : m_etoh_e
y[1456] = 1e-5    # m_fru_e : m_fru_e
y[1457] = 1e-5    # m_frulys_e : m_frulys_e
y[1458] = 1e-5    # m_fruur_e : m_fruur_e
y[1459] = 1e-5    # m_fuc__L_e : m_fuc__L_e
y[1460] = 1e-5    # m_3hcinnm_e : m_3hcinnm_e
y[1461] = 1e-5    # m_3hpppn_e : m_3hpppn_e
y[1462] = 1e-5    # m_fum_e : m_fum_e
y[1463] = 1e-5    # m_g1p_e : m_g1p_e
y[1464] = 1e-5    # m_g3pc_e : m_g3pc_e
y[1465] = 1e-5    # m_g3pe_e : m_g3pe_e
y[1466] = 1e-5    # m_malthx_e : m_malthx_e
y[1467] = 1e-5    # m_g3pg_e : m_g3pg_e
y[1468] = 1e-5    # m_maltpt_e : m_maltpt_e
y[1469] = 1e-5    # m_malttr_e : m_malttr_e
y[1470] = 1e-5    # m_maltttr_e : m_maltttr_e
y[1471] = 1e-5    # m_man6p_e : m_man6p_e
y[1472] = 1e-5    # m_g3pi_e : m_g3pi_e
y[1473] = 1e-5    # m_man_e : m_man_e
y[1474] = 1e-5    # m_manglyc_e : m_manglyc_e
y[1475] = 1e-5    # m_melib_e : m_melib_e
y[1476] = 1e-5    # m_g3ps_e : m_g3ps_e
y[1477] = 1e-5    # m_met__D_e : m_met__D_e
y[1478] = 1e-5    # m_met__L_e : m_met__L_e
y[1479] = 1e-5    # m_metsox_R__L_e : m_metsox_R__L_e
y[1480] = 1e-5    # m_g6p_e : m_g6p_e
y[1481] = 1e-5    # m_metsox_S__L_e : m_metsox_S__L_e
y[1482] = 1e-5    # m_mg2_e : m_mg2_e
y[1483] = 1e-5    # m_minohp_e : m_minohp_e
y[1484] = 1e-5    # m_mmet_e : m_mmet_e
y[1485] = 1e-5    # m_mn2_e : m_mn2_e
y[1486] = 1e-5    # m_mnl_e : m_mnl_e
y[1487] = 1e-5    # m_mobd_e : m_mobd_e
y[1488] = 1e-5    # m_mso3_e : m_mso3_e
y[1489] = 1e-5    # m_n2o_e : m_n2o_e
y[1490] = 1e-5    # m_na1_e : m_na1_e
y[1491] = 1e-5    # m_gal1p_e : m_gal1p_e
y[1492] = 1e-5    # m_f6p_e : m_f6p_e
y[1493] = 1e-5    # m_fald_e : m_fald_e
y[1494] = 1e-5    # m_nac_e : m_nac_e
y[1495] = 1e-5    # m_nh4_e : m_nh4_e
y[1496] = 1e-5    # m_ni2_e : m_ni2_e
y[1497] = 1e-5    # m_nmn_e : m_nmn_e
y[1498] = 1e-5    # m_fe2_e : m_fe2_e
y[1499] = 1e-5    # m_no2_e : m_no2_e
y[1500] = 1e-5    # m_no3_e : m_no3_e
y[1501] = 1e-5    # m_gal_e : m_gal_e
y[1502] = 1e-5    # m_no_e : m_no_e
y[1503] = 1e-5    # m_fe3dcit_e : m_fe3dcit_e
y[1504] = 1e-5    # m_fe3dhbzs_e : m_fe3dhbzs_e
y[1505] = 1e-5    # m_o2_e : m_o2_e
y[1506] = 1e-5    # m_o2s_e : m_o2s_e
y[1507] = 1e-5    # m_ocdca_e : m_ocdca_e
y[1508] = 1e-5    # m_ocdcea_e : m_ocdcea_e
y[1509] = 1e-5    # m_octa_e : m_octa_e
y[1510] = 1e-5    # m_orn_e : m_orn_e
y[1511] = 1e-5    # m_gal_bD_e : m_gal_bD_e
y[1512] = 1e-5    # m_orot_e : m_orot_e
y[1513] = 1e-5    # m_pacald_e : m_pacald_e
y[1514] = 1e-5    # m_peamn_e : m_peamn_e
y[1515] = 1e-5    # m_phe__L_e : m_phe__L_e
y[1516] = 1e-5    # m_tungs_e : m_tungs_e
y[1517] = 1e-5    # m_galct__D_e : m_galct__D_e
y[1518] = 1e-5    # m_tym_e : m_tym_e
y[1519] = 1e-5    # m_pi_e : m_pi_e
y[1520] = 1e-5    # m_tyr__L_e : m_tyr__L_e
y[1521] = 1e-5    # m_galctn__D_e : m_galctn__D_e
y[1522] = 1e-5    # m_tyrp_e : m_tyrp_e
y[1523] = 1e-5    # m_pnto__R_e : m_pnto__R_e
y[1524] = 1e-5    # m_ppa_e : m_ppa_e
y[1525] = 1e-5    # m_ppal_e : m_ppal_e
y[1526] = 1e-5    # m_uacgam_e : m_uacgam_e
y[1527] = 1e-5    # m_udpacgal_e : m_udpacgal_e
y[1528] = 1e-5    # m_pppn_e : m_pppn_e
y[1529] = 1e-5    # m_galctn__L_e : m_galctn__L_e
y[1530] = 1e-5    # m_ppt_e : m_ppt_e
y[1531] = 1e-5    # m_pro__L_e : m_pro__L_e
y[1532] = 1e-5    # m_udpg_e : m_udpg_e
y[1533] = 1e-5    # m_udpgal_e : m_udpgal_e
y[1534] = 1e-5    # m_udpglcur_e : m_udpglcur_e
y[1535] = 1e-5    # m_progly_e : m_progly_e
y[1536] = 1e-5    # m_galt_e : m_galt_e
y[1537] = 1e-5    # m_psclys_e : m_psclys_e
y[1538] = 1e-5    # m_pser__L_e : m_pser__L_e
y[1539] = 1e-5    # m_ump_e : m_ump_e
y[1540] = 1e-5    # m_ura_e : m_ura_e
y[1541] = 1e-5    # m_urea_e : m_urea_e
y[1542] = 1e-5    # m_uri_e : m_uri_e
y[1543] = 1e-5    # m_val__L_e : m_val__L_e
y[1544] = 1e-5    # m_xan_e : m_xan_e
y[1545] = 1e-5    # m_ptrc_e : m_ptrc_e
y[1546] = 1e-5    # m_pyr_e : m_pyr_e
y[1547] = 1e-5    # m_r5p_e : m_r5p_e
y[1548] = 1e-5    # m_rib__D_e : m_rib__D_e
y[1549] = 1e-5    # m_rmn_e : m_rmn_e
y[1550] = 1e-5    # m_sbt__D_e : m_sbt__D_e
y[1551] = 1e-5    # m_xmp_e : m_xmp_e
y[1552] = 1e-5    # m_xtsn_e : m_xtsn_e
y[1553] = 1e-5    # m_galur_e : m_galur_e
y[1554] = 1e-5    # m_xyl__D_e : m_xyl__D_e
y[1555] = 1e-5    # m_xylu__L_e : m_xylu__L_e
y[1556] = 1e-5    # m_zn2_e : m_zn2_e
y[1557] = 1e-5    # m_ser__L_e : m_ser__L_e
y[1558] = 1e-5    # m_skm_e : m_skm_e
y[1559] = 1e-5    # m_so2_e : m_so2_e
y[1560] = 1e-5    # m_so3_e : m_so3_e
y[1561] = 1e-5    # m_gam6p_e : m_gam6p_e
y[1562] = 1e-5    # m_so4_e : m_so4_e
y[1563] = 1e-5    # m_spmd_e : m_spmd_e
y[1564] = 1e-5    # m_succ_e : m_succ_e
y[1565] = 1e-5    # m_sucr_e : m_sucr_e
y[1566] = 1e-5    # m_sulfac_e : m_sulfac_e
y[1567] = 1e-5    # m_gam_e : m_gam_e
y[1568] = 1e-5    # m_tartr__L_e : m_tartr__L_e
y[1569] = 1e-5    # m_taur_e : m_taur_e
y[1570] = 1e-5    # m_tcynt_e : m_tcynt_e
y[1571] = 1e-5    # m_thm_e : m_thm_e
y[1572] = 1e-5    # m_thr__L_e : m_thr__L_e
y[1573] = 1e-5    # m_thrp_e : m_thrp_e
y[1574] = 1e-5    # m_thym_e : m_thym_e
y[1575] = 1e-5    # m_thymd_e : m_thymd_e
y[1576] = 1e-5    # m_tma_e : m_tma_e
y[1577] = 1e-5    # m_gbbtn_e : m_gbbtn_e
y[1578] = 1e-5    # m_tmao_e : m_tmao_e
y[1579] = 1e-5    # m_tre_e : m_tre_e
y[1580] = 1e-5    # m_trp__L_e : m_trp__L_e
y[1581] = 1e-5    # m_gdp_e : m_gdp_e
y[1582] = 1e-5    # m_tsul_e : m_tsul_e
y[1583] = 1e-5    # m_ttdca_e : m_ttdca_e
y[1584] = 1e-5    # m_ttdcea_e : m_ttdcea_e
y[1585] = 1e-5    # m_glc__D_e : m_glc__D_e
y[1586] = 1e-5    # m_glcn_e : m_glcn_e
y[1587] = 1e-5    # m_glcr_e : m_glcr_e
y[1588] = 1e-5    # m_glcur1p_e : m_glcur1p_e
y[1589] = 1e-5    # m_glcur_e : m_glcur_e
y[1590] = 1e-5    # m_gln__L_e : m_gln__L_e
y[1591] = 1e-5    # m_glu__L_e : m_glu__L_e
y[1592] = 1e-5    # m_gly_e : m_gly_e
y[1593] = 1e-5    # m_glyald_e : m_glyald_e
y[1594] = 1e-5    # m_gam1p_c : m_gam1p_c
y[1595] = 1e-5    # m_glyb_e : m_glyb_e
y[1596] = 1e-5    # m_glyc2p_e : m_glyc2p_e
y[1597] = 1e-5    # m_glyc3p_e : m_glyc3p_e
y[1598] = 1e-5    # m_glyc_e : m_glyc_e
y[1599] = 1e-5    # m_glyc__R_e : m_glyc__R_e
y[1600] = 1e-5    # m_glyclt_e : m_glyclt_e
y[1601] = 1e-5    # m_gmp_e : m_gmp_e
y[1602] = 1e-5    # m_gsn_e : m_gsn_e
y[1603] = 1e-5    # m_gthox_e : m_gthox_e
y[1604] = 1e-5    # m_trnagln_c : m_trnagln_c
y[1605] = 1e-5    # m_gthrd_e : m_gthrd_e
y[1606] = 1e-5    # m_glu__D_c : m_glu__D_c
y[1607] = 1e-5    # m_gtp_e : m_gtp_e
y[1608] = 1e-5    # m_gua_e : m_gua_e
y[1609] = 1e-5    # m_h2_e : m_h2_e
y[1610] = 1e-5    # m_h2o2_e : m_h2o2_e
y[1611] = 1e-5    # m_gp4g_c : m_gp4g_c
y[1612] = 1e-5    # m_h2s_e : m_h2s_e
y[1613] = 1e-5    # m_trnagly_c : m_trnagly_c
y[1614] = 1e-5    # m_hdca_e : m_hdca_e
y[1615] = 1e-5    # m_hdcea_e : m_hdcea_e
y[1616] = 1e-5    # m_hg2_e : m_hg2_e
y[1617] = 1e-5    # m_his__L_e : m_his__L_e
y[1618] = 1e-5    # m_hom__L_e : m_hom__L_e
y[1619] = 1e-5    # m_4mhetz_c : m_4mhetz_c
y[1620] = 1e-5    # m_hxa_e : m_hxa_e
y[1621] = 1e-5    # m_hxan_e : m_hxan_e
y[1622] = 1e-5    # m_hg2_c : m_hg2_c
y[1623] = 1e-5    # m_idon__L_e : m_idon__L_e
y[1624] = 1e-5    # m_trnahis_c : m_trnahis_c
y[1625] = 1e-5    # m_ile__L_e : m_ile__L_e
y[1626] = 1e-5    # m_4ahmmp_c : m_4ahmmp_c
y[1627] = 1e-5    # m_hom__L_c : m_hom__L_c
y[1628] = 1e-5    # m_imp_e : m_imp_e
y[1629] = 1e-5    # m_trnaile_c : m_trnaile_c
y[1630] = 1e-5    # m_indole_e : m_indole_e
y[1631] = 1e-5    # m_hpyr_c : m_hpyr_c
y[1632] = 1e-5    # m_inost_e : m_inost_e
y[1633] = 1e-5    # m_ins_e : m_ins_e
y[1634] = 1e-5    # m_3c2hmp_c : m_3c2hmp_c
y[1635] = 1e-5    # m_isetac_e : m_isetac_e
y[1636] = 1e-5    # m_k_e : m_k_e
y[1637] = 1e-5    # m_lcts_e : m_lcts_e
y[1638] = 1e-5    # m_trnaleu_c : m_trnaleu_c
y[1639] = 1e-5    # m_leu__L_e : m_leu__L_e
y[1640] = 1e-5    # m_lac__L_e : m_lac__L_e
y[1641] = 1e-5    # m_trnalys_c : m_trnalys_c
y[1642] = 1e-5    # m_lys__L_e : m_lys__L_e
y[1643] = 1e-5    # m_lyx__L_e : m_lyx__L_e
y[1644] = 1e-5    # m_mal__D_e : m_mal__D_e
y[1645] = 1e-5    # m_mal__L_e : m_mal__L_e
y[1646] = 1e-5    # m_malt_e : m_malt_e
y[1647] = 1e-5    # m_mercppyr_c : m_mercppyr_c
y[1648] = 1e-5    # m_mana_c : m_mana_c
y[1649] = 1e-5    # m_trnamet_c : m_trnamet_c
y[1650] = 1e-5    # m_mi1p__D_c : m_mi1p__D_c
y[1651] = 1e-5    # m_dmbzid_c : m_dmbzid_c
y[1652] = 1e-5    # m_orot5p_c : m_orot5p_c
y[1653] = 1e-5    # m_ragund_c : m_ragund_c
y[1654] = 1e-5    # m_2pglyc_c : m_2pglyc_c
y[1655] = 1e-5    # m_trnaphe_c : m_trnaphe_c
y[1656] = 1e-5    # m_Nmtrp_c : m_Nmtrp_c
y[1657] = 1e-5    # m_trnapro_c : m_trnapro_c
y[1658] = 1e-5    # m_sarcs_c : m_sarcs_c
y[1659] = 1e-5    # m_sl26da_c : m_sl26da_c
y[1660] = 1e-5    # m_seln_c : m_seln_c
y[1661] = 1e-5    # m_trnaser_c : m_trnaser_c
y[1662] = 1e-5    # m_trnasecys_c : m_trnasecys_c
y[1663] = 1e-5    # m_trnathr_c : m_trnathr_c
y[1664] = 1e-5    # m_tmao_c : m_tmao_c
y[1665] = 1e-5    # m_trnatrp_c : m_trnatrp_c
y[1666] = 1e-5    # m_trnatyr_c : m_trnatyr_c
y[1667] = 1e-5    # m_trnaval_c : m_trnaval_c
 
labels = ['time', 'm_acgam_p', 'm_pi_p', 'm_2tdecg3p_c', 'm_2tdec7eg3p_c', 'm_2hdecg3p_c', 'm_3hoctaACP_c', 'm_nadp_c', 'm_2hdec9eg3p_c', 'm_3hcvac11eACP_c', 'm_2odecg3p_c', 'm_3haACP_c', 'm_2odec11eg3p_c', 'm_3hhexACP_c', 'm_3hoctACP_c', 'm_3odecACP_c', 'm_ACP_c', 'm_co2_c', 'm_2agpe120_c', 'm_3oddecACP_c', 'm_3ocddec5eACP_c', 'm_3omrsACP_c', 'm_12dgr120_c', 'm_12dgr140_c', 'm_3ocmrs7eACP_c', 'm_12dgr141_c', 'm_2agpe140_c', 'm_12dgr160_c', 'm_12dgr161_c', 'm_3opalmACP_c', 'm_3ocpalm9eACP_c', 'm_3ooctdACP_c', 'm_3ocvac11eACP_c', 'm_3ohexACP_c', 'm_3ooctACP_c', 'm_LalaDgluMdap_c', 'm_adp_c', 'm_h_c', 'm_pi_c', 'm_LalaDgluMdap_p', 'm_3ump_p', 'm_34dhpac_p', 'm_h2o2_p', 'm_nh4_p', 'm_4hoxpacd_p', 'm_4hthr_c', 'm_ala__D_c', 'm_ala__D_p', 'm_12dgr180_c', 'm_12dgr181_c', 'm_12ppd__R_p', 'm_12ppd__R_c', 'm_12ppd__S_p', 'm_12ppd__S_c', 'm_14glucan_c', 'm_14glucan_p', 'm_23camp_p', 'm_23ccmp_p', 'm_23cgmp_p', 'm_23cump_p', 'm_23dappa_c', 'm_23dappa_p', 'm_h_p', 'm_3cmp_p', 'm_LalaDgluMdapDala_c', 'm_LalaDgluMdapDala_p', 'm_glcn_c', 'm_5dglcn_c', 'm_5dglcn_p', 'm_5drib_c', 'm_ade_c', 'm_ara5p_c', 'm_amp_c', 'm_myrsACP_c', 'm_ppi_c', 'm_tdeACP_c', 'm_3amp_p', 'm_3gmp_p', 'm_26dap__M_p', 'm_2ddecg3p_c', 'm_palmACP_c', 'm_2agpe141_c', 'm_hdeACP_c', 'm_octeACP_c', 'm_acgam1p_p', 'm_ocdcaACP_c', 'm_acgam6p_c', 'm_ddcaACP_c', 'm_2agpe160_c', 'm_dcaACP_c', 'm_ocACP_c', 'm_ump_c', 'm_unaga_c', 'm_pyr_c', 'm_h2o2_c', 'm_mthgxl_c', 'm_nh4_c', 'm_2agpe161_c', 'm_acg5p_c', 'm_acglu_c', 'm_coa_c', 'm_dtdp_c', 'm_unagamuf_c', 'm_malthx_c', 'm_2ahbut_c', 'm_actp_c', 'm_alac__S_c', 'm_lac__D_c', 'm_malthx_p', 'm_g6p_c', 'm_hqn_c', 'm_glu__L_c', 'm_sucsal_c', 'm_4abut_c', 'm_nadh_c', 'm_udp_c', 'm_unagamu_c', 'm_acmanap_c', 'm_4abut_p', 'm_2agpe180_c', 'm_aacoa_c', 'm_ac_c', 'm_acac_c', 'm_acac_p', 'm_acmana_p', 'm_acmum6p_c', 'm_acmum_p', 'm_acnam_c', 'm_accoa_c', 'm_acald_p', 'm_acnam_p', 'm_2agpe181_c', 'm_acmana_c', 'm_acald_c', 'm_acanth_c', 'm_agdpcbi_c', 'm_b2coa_c', 'm_fadh2_c', 'm_hx2coa_c', 'm_malcoa_c', 'm_pe120_c', 'm_ppcoa_c', 'm_acgal_p', 'm_acgal1p_p', 'm_oc2coa_c', 'm_dc2coa_c', 'm_dd2coa_c', 'm_td2coa_c', 'm_hdd2coa_c', 'm_od2coa_c', 'm_acACP_c', 'm_pe140_c', 'm_orn_c', 'm_paps_c', 'm_fum_c', 'm_aicar_c', 'm_pe141_c', 'm_dcamp_c', 'm_gdp_c', 'm_pe160_c', 'm_gam6p_c', 'm_pe161_c', 'm_anhgm_c', 'm_anhgm_p', 'm_pe180_c', 'm_pe181_c', 'm_acgam_c', 'm_anhm3p_c', 'm_anhgm3p_c', 'm_acolipa_e', 'm_2agpg120_c', 'm_acon_C_c', 'm_aconm_c', 'm_ahcys_c', 'm_h2o_c', 'm_icit_c', 'm_acg5sa_c', 'm_anhgm3p_p', 'm_anhm4p_c', 'm_anhgm4p_c', 'm_anhm_c', 'm_adphep_LD_c', 'm_pap_c', 'm_acser_p', 'm_ptrc_c', 'm_urea_c', 'm_agm_p', 'm_2agpg140_c', 'm_pa120_c', 'm_pa140_c', 'm_na1_c', 'm_ac_p', 'm_ins_c', 'm_pa141_c', 'm_pa160_c', 'm_4abz_c', 'm_2agpg141_c', 'm_4adcho_c', 'm_hxan_c', 'm_pa161_c', 'm_pa180_c', 'm_pa181_c', 'm_nadph_c', 'm_ag_e', 'm_ade_p', 'm_rhcys_c', 'm_fprica_c', 'm_thf_c', 'm_idp_c', 'm_2agpg160_c', 'm_ametam_c', 'm_camp_c', 'm_5caiz_c', 'm_succoa_c', 'm_akg_c', 'm_akg_p', 'm_rib__D_c', 'm_adn_c', 'm_2agpg161_c', 'm_alaala_c', 'm_adn_p', 'm_adocbip_c', 'm_adocbl_c', 'm_gmp_c', 'm_adocbl_p', 'm_alaala_p', 'm_LalaLglu_c', 'm_pyam5p_c', 'm_r5p_c', 'm_2agpg180_c', 'm_all__D_p', 'm_2agpe160_p', 'm_lpp_p', 'm_2agpg160_p', 'm_acetol_c', 'm_alatrna_c', 'm_ala__L_c', 'm_nad_c', 'm_2agpg181_c', 'm_2ddglcn_c', 'm_ala__L_p', 'm_glyc_c', 'm_pg120_c', 'm_glc__D_c', 'm_maltttr_c', 'm_maltpt_c', 'm_pac_c', 'm_malthp_c', 'm_pg140_c', 'm_amob_c', 'm_dann_c', 'm_mql8_c', 'm_4ampm_c', 'm_for_c', 'm_ppa_c', 'm_but_c', 'm_all6p_c', 'm_allul6p_c', 'm_urdglyc_c', 'm_alltt_c', 'm_alltn_c', 'm_cys__L_c', 'm_gly_c', 'm_pro__L_c', 'm_amp_p', 'm_alltn_p', 'm_pg141_c', 'm_f6p_c', 'm_all__D_c', 'm_pg160_c', 'm_pran_c', 'm_anth_c', 'm_pg161_c', 'm_aact_c', 'm_8aonn_c', 'm_asn__L_p', 'm_aso3_p', 'm_pg180_c', 'm_ala_B_c', 'm_atp_c', 'm_5aprbu_c', 'm_rbl__L_c', 'm_arbtn_c', 'm_fad_c', 'm_fe2_c', 'm_fmn_c', 'm_ribflv_c', 'm_cbasp_c', 'm_4pasp_c', 'm_iasp_c', 'm_q8h2_c', 'm_succ_c', 'm_arbtn_fe3_c', 'm_arbtn_fe3_e', 'm_arbtn_e', 'm_pg181_c', 'm_arbtn_fe3_p', 'm_arbtn_p', 'm_arab__L_c', 'm_oaa_c', 'm_asptrna_c', 'm_asp__L_c', 'm_arab__L_p', 'm_asp__L_p', 'm_arg__L_c', 'm_agm_c', 'm_co2_p', 'm_orn_p', 'm_argsuc_c', 'm_argtrna_c', 'm_aso3_c', 'm_gthox_c', 'm_sucarg_c', 'm_2aobut_c', 'm_itp_c', 'm_prbatp_c', 'm_arg__L_p', 'm_ala_B_p', 'm_3dhgulnp_c', 'm_idon__L_c', 'm_ascb6p_c', 'm_ascb__L_p', 'm_glyb_c', 'm_btn_c', 'm_asn__L_c', 'm_asntrna_c', 'm_dad_5_c', 'm_met__L_c', 'm_btcoa_c', 'm_butso3_c', 'm_butso3_p', 'm_but_p', 'm_ca2_p', 'm_cmp_c', 'm_15dap_p', 'm_lys__L_c', 'm_o2_c', 'm_2p4c2me_c', 'm_cpe160_c', 'm_adocbi_c', 'm_pppi_c', 'm_cpg160_c', 'm_cpe180_c', 'm_cpg180_c', 'm_cgly_c', 'm_cbi_p', 'm_cbi_c', 'm_cbl1_c', 'm_cgly_p', 'm_chol_c', 'm_chol_p', 'm_pphn_c', 'm_chor_c', 'm_cbl1_p', 'm_cbp_c', 'm_cd2_p', 'm_4hbz_c', 'm_cenchddd_c', 'm_cit_c', 'm_succ_p', 'm_cd2_c', 'm_tdec2eACP_c', 'm_cit_p', 'm_lipa_cold_e', 'm_pa120_p', 'm_pg120_p', 'm_pa140_p', 'm_pg140_p', 'm_pa141_p', 'm_pg141_p', 'm_pa160_p', 'm_pg160_p', 'm_tddec2eACP_c', 'm_pa161_p', 'm_pg161_p', 'm_t3c5ddeceACP_c', 'm_pa180_p', 'm_pg180_p', 'm_pa181_p', 'm_pg181_p', 'm_clpn120_p', 'm_glyc_p', 'm_clpn140_p', 'm_crnDcoa_c', 'm_crn__D_c', 'm_crn_c', 'm_gbbtn_p', 'm_clpn141_p', 'm_clpn160_p', 'm_crn__D_p', 'm_clpn161_p', 'm_clpn180_p', 'm_crn_p', 'm_clpn181_p', 'm_tmrs2eACP_c', 'm_cl_c', 'm_cl_p', 'm_ura_c', 'm_csn_c', 'm_csn_p', 'm_cmp_p', 'm_ctbtcoa_c', 'm_t3c7mrseACP_c', 'm_ctbt_c', 'm_cobalt2_p', 'm_ctp_c', 'm_cu2_p', 'm_h2o_p', 'm_cu_p', 'm_cobalt2_c', 'm_colipa_p', 'm_tpalm2eACP_c', 'm_cu2_c', 'm_cu_e', 'm_colipa_e', 'm_cpgn_un_c', 'm_so3_c', 'm_tcynt_c', 'm_so3_p', 'm_tcynt_p', 'm_cpgn_un_e', 'm_cpgn_un_p', 'm_t3c9palmeACP_c', 'm_cpgn_c', 'm_cpgn_e', 'm_cyan_p', 'm_cynt_c', 'm_cpgn_p', 'm_pppg9_c', 'm_toctd2eACP_c', 'm_cynt_p', 'm_h2s_c', 'm_crncoa_c', 'm_gbbtn_c', 'm_cys__D_c', 'm_cys__D_p', 'm_so2_c', 'm_hcys__L_c', 'm_cystrna_c', 'm_t3c11vaceACP_c', 'm_cys__L_p', 'm_but2eACP_c', 'm_mqn8_c', 'm_damp_p', 'm_26dap__M_c', 'm_q8_c', 'm_thex2eACP_c', 'm_uri_c', 'm_cdpdddecg_c', 'm_cdpdtdecg_c', 'm_cdpdtdec7eg_c', 'm_cdpdhdecg_c', 'm_cdpdhdec9eg_c', 'm_cdpdodecg_c', 'm_cdpdodec11eg_c', 'm_cytd_c', 'm_cytd_p', 'm_cdp_c', 'm_dcdp_c', 'm_din_c', 'm_ditp_c', 'm_db4p_c', 'm_dtbt_c', 'm_dadp_c', 'm_toct2eACP_c', 'm_dad_2_c', 'm_dad_2_p', 'm_dca_p', 'm_dcmp_p', 'm_dutp_c', 'm_duri_c', 'm_dhcinnm_c', 'm_dcyt_c', 'm_dcyt_p', 'm_dhpppn_c', 'm_ddca_p', 'm_2dh3dgal6p_c', 'm_2ddglcn_p', 'm_2ddg6p_c', 'm_2dda7p_c', 'm_2dhguln_c', 'm_g3p_c', 'm_2kmb_c', 'm_uri_p', 'm_dgdp_c', 'm_dgmp_p', 'm_dgsn_c', 'm_grdp_c', 'm_dmpp_c', 'm_dms_c', 'm_dgsn_p', 'm_3mob_c', 'm_3mop_c', 'm_dhap_c', 'm_dha_p', 'm_dms_p', 'm_2dmmq8_c', 'm_dmso_p', 'm_dha_c', 'm_23dhb_c', 'm_23dhba_c', 'm_ser__L_c', 'm_hkntd_c', 'm_thdp_c', 'm_gsn_p', 'm_dhnpt_c', 'm_23dhdp_c', 'm_dhf_c', 'm_2dmmql8_c', 'm_6hmhpt_c', 'm_gcald_c', 'm_orot_c', 'm_dhpmp_c', 'm_3dhguln_c', 'm_dopa_p', 'm_3hdecACP_c', 'm_5apru_c', 'm_dhpt_c', 'm_pant__R_c', 'm_dsbaox_p', 'm_dsbcrd_p', 'm_gthox_p', 'm_dsbdrd_c', 'm_trdox_c', 'm_dsbgrd_p', 'm_2amsa_c', 'm_ser__D_c', 'm_hmfurn_c', 'm_dhmptp_c', 'm_3dhq_c', 'm_3dhsk_c', 'm_dimp_p', 'm_ser__D_p', 'm_dtmp_p', 'm_din_p', 'm_3hddecACP_c', 'm_dump_p', 'm_dump_c', 'm_2dr1p_c', 'm_butACP_c', 'm_3hcddec5eACP_c', 'm_duri_p', 'm_hexACP_c', 'm_2me4p_c', 'm_3hmrsACP_c', 'm_dxyl5p_c', 'm_eca4colipa_e', 'm_lac__D_p', 'm_4per_c', 'm_eca4colipa_p', 'm_udcpdp_p', 'm_eca2und_p', 'm_3hcmrs7eACP_c', 'm_eca3und_p', 'm_eca4und_p', 'm_unagamuf_p', 'm_cddec5eACP_c', 'm_3hpalmACP_c', 'm_kdo2lipid4L_c', 'm_lipa_c', 'm_kdo2lipid4p_c', 'm_3hcpalm9eACP_c', 'm_lipa_cold_c', 'm_enlipa_e', 'm_pep_c', 'm_enter_c', 'm_23dhbzs_c', 'm_fe3_c', 'm_etha_c', 'm_etha_p', 'm_ethso3_c', 'm_ethso3_p', 'm_etoh_c', 'm_etoh_p', 'm_fru_c', 'm_f6p_p', 'm_dca_c', 'm_ddca_c', 'm_ttdca_c', 'm_ttdcea_c', 'm_hdca_c', 'm_hdcea_c', 'm_octa_c', 'm_ocdca_c', 'm_ocdcea_c', 'm_hxa_c', 'm_dcacoa_c', 'm_ddcacoa_c', 'm_tdcoa_c', 'm_tdecoa_c', 'm_pmtcoa_c', 'm_hdcoa_c', 'm_stcoa_c', 'm_btal_c', 'm_glx_c', 'm_fe2_p', 'm_odecoa_c', 'm_hxcoa_c', 'm_occoa_c', 'm_fe3dcit_p', 'm_Sfglutth_c', 'm_fald_p', 'm_fald_c', 'm_fe3dhbzs_c', 'm_fe3dhbzs_p', 'm_fe3hox_un_c', 'm_hmgth_c', 'm_fcl__L_c', 'm_fc1p_c', 'm_lald__L_c', 'm_pheme_c', 'm_fe3hox_un_p', 'm_fe3hox_un_e', 'm_fe3hox_c', 'm_fe3hox_e', 'm_fe3hox_p', 'm_fe3_p', 'm_fecrm_un_c', 'm_fecrm_un_e', 'm_fecrm_un_p', 'm_fecrm_c', 'm_for_p', 'm_fecrm_e', 'm_fecrm_p', 'm_fdp_c', 'm_frulys_c', 'm_frulysp_c', 'm_feenter_c', 'm_feenter_e', 'm_enter_e', 'm_feenter_p', 'm_frulys_p', 'm_fruur_c', 'm_enter_p', 'm_fruur_p', 'm_f1p_c', 'm_fru_p', 'm_feoxam_un_c', 'm_feoxam_un_e', 'm_feoxam_un_p', 'm_fuc__L_p', 'm_feoxam_c', 'm_feoxam_e', 'm_fuc__L_c', 'm_mal__L_c', 'm_feoxam_p', 'm_h2_c', 'm_fldrd_c', 'm_fum_p', 'm_acgam1p_c', 'm_rbflvrd_c', 'm_fmettrna_c', 'm_glc__D_p', 'm_dtdpglu_c', 'm_g1p_p', 'm_5aop_c', 'm_fmnh2_c', 'm_1ddecg3p_c', 'm_1tdecg3p_c', 'm_1tdec7eg3p_c', 'm_1hdecg3p_c', 'm_1hdec9eg3p_c', 'm_gal1p_p', 'm_gal_bD_p', 'm_1odecg3p_c', 'm_1odec11eg3p_c', 'm_g3pc_c', 'm_5dh4dglc_c', 'm_tagur_c', 'm_2dh3dgal_c', 'm_galctn__L_c', 'm_g3pc_p', 'm_galctn__L_p', 'm_galctn__D_c', 'm_g3pe_c', 'm_g3pe_p', 'm_g3pg_c', 'm_galctn__D_p', 'm_galct__D_c', 'm_galct__D_p', 'm_gal1p_c', 'm_gal_p', 'm_gal_c', 'm_g3pg_p', 'm_g3pi_c', 'm_g3pi_p', 'm_gagicolipa_c', 'm_galt1p_c', 'm_g3ps_c', 'm_galt_p', 'm_galur_c', 'm_galur_p', 'm_g3ps_p', 'm_1pyr5c_c', 'm_glu5sa_c', 'm_udpg_c', 'm_6pgl_c', 'm_gam6p_p', 'm_g6p_p', 'm_gam_p', 'm_13dpg_c', 'm_fgam_c', 'm_glcur_p', 'm_glyclt_c', 'm_gdpofuc_c', 'm_ppgpp_c', 'm_man_c', 'm_glycogen_c', 'm_man1p_c', 'm_gdp_p', 'm_adpglc_c', 'm_gln__L_c', 'm_glntrna_c', 'm_gln__L_p', 'm_tag6p__D_c', 'm_gg4abut_c', 'm_ggbutal_c', 'm_ggptrc_c', 'm_mlthf_c', 'm_glu5p_c', 'm_glucys_c', 'm_bglycogen_c', 'm_acglc__D_c', 'm_glcn_p', 'm_g1p_c', 'm_glu__L_p', 'm_pram_c', 'm_glu1sa_c', 'm_trnaglu_c', 'm_2h3oppan_c', 'm_glcr_c', 'm_glutrna_c', 'm_glcr_p', 'm_gicolipa_c', 'm_ggagicolipa_c', 'm_gggagicolipa_c', 'm_glcur1p_p', 'm_glyald_p', 'm_glyald_c', 'm_glcur_c', 'm_gly_p', 'm_gdpddman_c', 'm_glyb_p', 'm_glyc2p_p', 'm_glyc3p_c', 'm_adphep_DD_c', 'm_gmhep17bp_c', 'm_gmhep1p_c', 'm_imp_c', 'm_gmp_p', 'm_glyc3p_p', 'm_glyc__R_c', 'm_glyc__R_p', 'm_3pg_c', 'm_ru5p__D_c', 'm_6pgc_c', 'm_gdpfuc_c', 'm_2pg_c', 'm_glyclt_p', 'm_ser__L_p', 'm_inost_c', 'm_inost_p', 'm_frdp_c', 'm_grxrd_c', 'm_gthrd_c', 'm_gsn_c', 'm_glytrna_c', 'm_spmd_c', 'm_gtspmd_c', 'm_3oddcoa_c', 'm_3otdcoa_c', 'm_3ohdcoa_c', 'm_gthrd_p', 'm_3ohodcoa_c', 'm_ahdt_c', 'm_25drapp_c', 'm_gdptp_c', 'm_3ophb_c', 'm_3hcinnm_c', 'm_xtp_c', 'm_gtp_p', 'm_xan_c', 'm_3hcinnm_p', 'm_hco3_c', 'm_gua_c', 'm_gua_p', 'm_hdca_p', 'm_hdcea_p', 'm_hemeO_c', 'm_phhlipa_c', 'm_phphhlipa_c', 'm_hlipa_c', 'm_hhlipa_c', 'm_hphhlipa_c', 'm_colipa_c', 'm_so4_c', 'm_h2s_p', 'm_4mpetz_c', 'm_man6p_c', 'm_h2_p', 'm_3ohcoa_c', 'm_3oocoa_c', 'm_3odcoa_c', 'm_hg2_p', 'm_his__L_c', 'm_histd_c', 'm_histrna_c', 'm_ichor_c', 'm_his__L_p', 'm_op4en_c', 'm_23ddhb_c', 'm_hmbil_c', 'm_hom__L_p', 'm_idon__L_p', 'm_eig3p_c', 'm_imacp_c', 'm_6hmhptpp_c', 'm_3ig3p_c', 'm_hkndd_c', 'm_iletrna_c', 'm_3hpppn_c', 'm_3hpppn_p', 'm_aspsa_c', 'm_phom_c', 'm_ile__L_c', 'm_ile__L_p', 'm_xmp_c', 'm_imp_p', 'm_indole_p', 'm_indole_c', 'm_suchms_c', 'm_hisp_c', 'm_hxa_p', 'm_pydam_c', 'm_ins_p', 'm_ipdp_c', 'm_3c4mop_c', 'm_hxan_p', 'm_acolipa_p', 'm_udcpp_p', 'm_2ippm_c', 'm_3c3hmp_c', 'm_isetac_c', 'm_LalaDglu_c', 'm_isetac_p', 'm_kdo2lipid4_p', 'm_lald__D_c', 'm_lac__L_c', 'm_kdo2lipid4_e', 'm_23dhmp_c', 'm_actACP_c', 'm_lcts_p', 'm_lcts_c', 'm_leu__L_c', 'm_leutrna_c', 'm_ckdo_c', 'm_leu__L_p', 'm_lgt__S_c', 'm_lipa_cold_p', 'm_h2o_e', 'm_hacolipa_e', 'm_halipa_e', 'm_kdo_c', 'm_kdo8p_c', 'm_xu5p__L_c', 'm_lipa_p', 'm_lipa_e', 'm_k_c', 'm_k_p', 'm_lipidAds_c', 'm_ttdca_p', 'm_ttdcea_p', 'm_ocdca_p', 'm_ocdcea_p', 'm_15dap_c', 'm_lystrna_c', 'm_lys__L_p', 'm_xylu__L_c', 'm_lyx__L_c', 'm_lyx__L_p', 'm_lac__L_p', 'm_apg120_c', 'm_apg140_c', 'm_apg141_c', 'm_apg160_c', 'm_apg161_c', 'm_apg180_c', 'm_mal__D_c', 'm_mal__D_p', 'm_apg181_c', 'm_acmalt_c', 'm_maltpt_p', 'm_malttr_c', 'm_malttr_p', 'm_maltttr_p', 'm_malt_c', 'm_malt6p_c', 'm_malt_p', 'm_murein5px4p_p', 'm_murein5px3p_p', 'm_murein5px4px4p_p', 'm_murein4px4p_p', 'm_murein4px4px4p_p', 'm_murein5p4p_p', 'm_murein4p4p_p', 'm_murein4p3p_p', 'm_mal__L_p', 'm_gdpmann_c', 'm_man6p_p', 'm_murein4px4p4p_p', 'm_man6pglyc_c', 'm_manglyc_p', 'm_man_p', 'm_2mcacn_c', 'm_dkmpp_c', 'm_h2mb4p_c', 'm_2mecdp_c', 'm_melib_c', 'm_2mcit_c', 'm_malACP_c', 'm_melib_p', 'm_4c2me_c', 'm_amet_c', 'm_met__D_c', 'm_met__D_p', 'm_mmcoa__S_c', 'm_metsox_S__L_c', 'm_metsox_R__L_c', 'm_na1_p', 'm_gtp_c', 'm_utp_c', 'm_mmet_c', 'm_metsox_S__L_p', 'm_dttp_c', 'm_dgtp_c', 'm_dctp_c', 'm_datp_c', 'm_metsox_R__L_p', 'm_mettrna_c', 'm_met__L_p', 'm_n2o_c', 'm_ni2_p', 'm_mg2_c', 'm_mg2_p', 'm_ni2_c', 'm_mmet_p', 'm_nicrnt_c', 'm_ncam_c', 'm_nmn_c', 'm_micit_c', 'm_minohp_p', 'm_murein3px4p_p', 'm_murein5p3p_p', 'm_nmn_p', 'm_nac_c', 'm_dnad_c', 'm_5prdmbz_c', 'm_murein3p3p_p', 'm_murein3px3p_p', 'm_mmcoa__R_c', 'm_no2_c', 'm_no2_p', 'm_mn2_p', 'm_no3_c', 'm_anhgm4p_p', 'm_no3_p', 'm_no_p', 'm_no_c', 'm_mn2_c', 'm_dhna_c', 'm_xtsn_c', 'm_xtsn_p', 'm_mnl1p_c', 'm_didp_c', 'm_mnl_p', 'm_xdp_c', 'm_thymd_c', 'm_thymd_p', 'm_dgmp_c', 'm_dimp_c', 'm_dcmp_c', 'm_damp_c', 'm_dtmp_c', 'm_orot_p', 'm_prpp_c', 'm_oxam_c', 'm_ssaltpp_c', 'm_kdolipid4_c', 'm_o16a4colipa_e', 'm_o16a4colipa_p', 'm_o16a2und_p', 'm_o16a3und_p', 'm_kdo2lipid4_c', 'm_o16a4und_p', 'm_aragund_c', 'm_o16aund_p', 'm_gfgaragund_c', 'm_pacald_c', 'm_pacald_p', 'm_garagund_c', 'm_phaccoa_c', 'm_o16aund_c', 'm_pnto__R_c', 'm_kphphhlipa_c', 'm_o2s_p', 'm_o2_p', 'm_12dgr120_p', 'm_mobd_c', 'm_12dgr140_p', 'm_12dgr141_p', 'm_12dgr160_p', 'm_citr__L_c', 'm_octa_p', 'm_octdp_c', 'm_12dgr161_p', 'm_mobd_p', 'm_phthr_c', 'm_2omph_c', 'm_2ommbl_c', 'm_4mop_c', 'm_12dgr180_p', 'm_12dgr181_p', 'm_uagmda_c', 'm_2omhmbl_c', 'm_2dhp_c', 'm_grxox_c', 'm_pydx5p_c', 'm_pdx5p_c', 'm_2ombzl_c', 'm_4h2opntn_c', 'm_2oph_c', 'm_2ohph_c', 'm_pydxn_c', 'm_pe120_p', 'm_pe140_p', 'm_pe141_p', 'm_murein5p5p_p', 'm_udcpdp_c', 'm_pe160_p', 'm_pe161_p', 'm_pe180_p', 'm_3php_c', 'm_pe181_p', 'm_murein5p5p5p_p', 'm_peamn_p', 'm_ohpb_c', 'm_enlipa_p', 'm_pgp120_p', 'm_pgp140_p', 'm_pgp141_p', 'm_pgp160_p', 'm_pgp161_p', 'm_tagdp__D_c', 'm_pgp180_p', 'm_mso3_c', 'm_pgp181_p', 'm_mso3_p', 'm_5mtr_c', 'm_10fthf_c', 'm_1ddecg3p_p', 'm_1tdecg3p_p', 'm_1tdec7eg3p_p', 'm_1hdecg3p_p', 'm_1hdec9eg3p_p', 'm_1odecg3p_p', 'm_pgp120_c', 'm_pgp140_c', 'm_1odec11eg3p_p', 'm_pgp141_c', 'm_methf_c', 'm_pgp160_c', 'm_pgp161_c', 'm_1agpe120_p', 'm_1agpe140_p', 'm_1agpe141_p', 'm_1agpe160_p', 'm_pgp180_c', 'm_pgp181_c', 'm_1agpe161_p', 'm_5mthf_c', 'm_1agpe180_p', 'm_1agpe181_p', 'm_1agpg120_p', 'm_pheme_p', 'm_pheme_e', 'm_phpyr_c', 'm_phetrna_c', 'm_1agpg140_p', 'm_1agpg141_p', 'm_1agpg160_p', 'm_1agpg161_p', 'm_1agpg180_p', 'm_phe__L_c', 'm_phe__L_p', 'm_1agpg181_p', 'm_4r5au_c', 'm_2ddecg3p_p', 'm_5mdru1p_c', 'm_2tdecg3p_p', 'm_2tdec7eg3p_p', 'm_2mahmp_c', 'm_4ppan_c', 'm_pnto__R_p', 'm_2hdecg3p_p', 'm_2hdec9eg3p_p', 'm_5mdr1p_c', 'm_2odecg3p_p', 'm_2odec11eg3p_p', 'm_2agpe120_p', 'm_trp__L_c', 'm_ppal_p', 'm_ppa_p', 'm_2agpe140_p', 'm_2agpe141_p', 'm_2agpe161_p', 'm_2agpe180_p', 'm_2agpe181_p', 'm_2agpg120_p', 'm_2agpg140_p', 'm_2agpg141_p', 'm_ppbng_c', 'm_pan4p_c', 'm_2agpg161_p', 'm_n2o_p', 'm_2agpg180_p', 'm_2agpg181_p', 'm_2dr5p_c', 'm_4ppcys_c', 'm_34hpp_c', 'm_progly_p', 'm_protrna_c', 'm_pro__L_p', 'm_ppp9_c', 'm_cechddd_c', 'm_pppn_c', 'm_pppn_p', 'm_psclys_c', 'm_psclys_p', 'm_ppt_p', 'm_3psme_c', 'm_nac_p', 'm_gar_c', 'm_air_c', 'm_2cpr5p_c', 'm_prfp_c', 'm_25aics_c', 'm_prbamp_c', 'm_fpram_c', 'm_prlp_c', 'm_progly_c', 'm_pser__L_c', 'm_pser__L_p', 'm_ps120_c', 'm_ps140_c', 'm_ru5p__L_c', 'm_ps141_c', 'm_ps160_c', 'm_xu5p__D_c', 'm_icolipa_c', 'm_ps161_c', 'm_ps180_c', 'm_dhptd_c', 'm_rib__D_p', 'm_ps181_c', 'm_rml_c', 'm_rml1p_c', 'm_rmn_p', 'm_ppap_c', 'm_thr__L_p', 'm_dpcoa_c', 'm_4abutn_c', 'm_rmn_c', 'm_ptrc_p', 'm_r1p_c', 'm_dudp_c', 'm_fldox_c', 'm_rdmbzi_c', 'm_gmhep7p_c', 'm_sucorn_c', 'm_aps_c', 'm_pydx_c', 'm_pyr_p', 'm_sbt6p_c', 'm_sbt__D_p', 'm_o2s_c', 'm_26dap_LL_c', 'm_quln_c', 'm_sl2a6o_c', 'm_sectrna_c', 'm_selnp_c', 'm_seramp_c', 'm_acser_c', 'm_r15bp_c', 'm_r5p_p', 'm_dmlz_c', 'm_sertrna_c', 'm_sertrna_sec_c', 'm_adprib_c', 'm_sucglu_c', 'm_lipidA_c', 'm_dsbdox_c', 'm_2shchc_c', 'm_thmpp_c', 'm_scl_c', 'm_sheme_c', 'm_skm_c', 'm_skm5p_c', 'm_cyst__L_c', 'm_skm_p', 'm_so2_p', 'm_thm_c', 'm_thm_p', 'm_so4_p', 'm_sucgsa_c', 'm_N1aspmd_c', 'm_2obut_c', 'm_thrp_p', 'm_thr__L_c', 'm_n8aspmd_c', 'm_thrtrna_c', 'm_spmd_p', 'm_5mta_c', 'm_thym_p', 'm_4hba_c', 'm_sbzcoa_c', 'm_sucbz_c', 'm_s7p_c', 'm_tma_c', 'm_tma_p', 'm_sucr_p', 'm_suc6p_c', 'm_sulfac_c', 'm_tmao_p', 'm_thym_c', 'm_thmmp_c', 'm_2tpr3dpcoa_c', 'm_sulfac_p', 'm_cdec3eACP_c', 'm_e4p_c', 'm_tartr__L_c', 'm_tartr__L_p', 'm_trdrd_c', 'm_tre_c', 'm_tre6p_c', 'm_aacald_c', 'm_taur_c', 'm_tre_p', 'm_taur_p', 'm_dtdp4aaddg_c', 'm_dtdp4addg_c', 'm_dtdp4d6dm_c', 'm_dtdprmn_c', 'm_trptrna_c', 'm_cpppg3_c', 'm_dtdp4d6dg_c', 'm_trp__L_p', 'm_tsul_c', 'm_tsul_p', 'm_ura_p', 'm_oxur_c', 'm_tungs_c', 'm_urea_p', 'm_tungs_p', 'm_tym_p', 'm_tyr__L_p', 'm_tyrp_p', 'm_tyrtrna_c', 'm_tyr__L_c', 'm_lipidX_c', 'm_u23ga_c', 'm_ugmd_c', 'm_ump_p', 'm_valtrna_c', 'm_val__L_c', 'm_uacgam_p', 'm_uacmamu_c', 'm_uacmam_c', 'm_val__L_p', 'm_u3aga_c', 'm_uaccg_c', 'm_urate_c', 'm_xan_p', 'm_xmp_p', 'm_xylu__D_c', 'm_xylu__L_p', 'm_xyl__D_c', 'm_xyl__D_p', 'm_zn2_p', 'm_zn2_c', 'm_uacgam_c', 'm_uaagmda_c', 'm_uamag_c', 'm_uama_c', 'm_uamr_c', 'm_udcpp_c', 'm_udpacgal_p', 'm_udpgal_c', 'm_udpgalfur_c', 'm_udpgal_p', 'm_udpglcur_c', 'm_udpLa4o_c', 'm_udpglcur_p', 'm_udpg_p', 'm_udpLa4n_c', 'm_ugmda_c', 'm_u3hga_c', 'm_udpLa4fn_c', 'm_uLa4n_p', 'm_um4p_c', 'm_uLa4n_c', 'm_uLa4fn_c', 'm_dscl_c', 'm_uppg3_c', 'm_acser_e', 'm_LalaDgluMdap_e', 'm_3ump_e', 'm_4hoxpacd_e', 'm_12ppd__R_e', 'm_12ppd__S_e', 'm_14glucan_e', 'm_23camp_e', 'm_23ccmp_e', 'm_23cgmp_e', 'm_23cump_e', 'm_23dappa_e', 'm_LalaDgluMdapDala_e', 'm_5dglcn_e', 'm_26dap__M_e', 'm_acgam1p_e', 'm_acgam_e', 'm_arbt6p_c', 'm_4abut_e', 'm_acac_e', 'm_acmana_e', 'm_acmum_e', 'm_acald_e', 'm_acnam_e', 'm_acgal1p_e', 'm_acgal_e', 'm_acorn_c', 'm_acon_T_c', 'm_apoACP_c', 'm_agm_e', 'm_ac_e', 'm_ag_c', 'm_h_e', 'm_ade_e', 'm_5aizc_c', 'm_akg_e', 'm_adn_e', 'm_adocbl_e', 'm_alaala_e', 'm_all__D_e', 'm_alpp_p', 'm_trnaala_c', 'm_altrn_c', 'm_ala__L_e', 'm_ppal_c', 'm_amp_e', 'm_alltn_e', 'm_anhgm_e', 'm_pmcoa_c', 'm_ap4a_c', 'm_asn__L_e', 'm_aso3_e', 'm_ap5a_c', 'm_fe3_e', 'm_trnaasp_c', 'm_2dhglcn_c', 'm_asp__L_e', 'm_arab__L_e', 'm_trnaarg_c', 'm_aso4_c', 'm_athr__L_c', 'm_arg__L_e', 'm_ala_B_e', 'm_ascb__L_e', 'm_betald_c', 'm_btnso_c', 'm_trnaasn_c', 'm_s_c', 'm_butso3_e', 'm_but_e', 'm_ca2_c', 'm_34dhpac_e', 'm_ca2_e', 'm_3amp_e', 'm_3cmp_e', 'm_cbi_e', 'm_cgly_e', 'm_3gmp_e', 'm_chol_e', 'm_cbl1_e', 'm_cd2_e', 'm_cinnm_c', 'm_cit_e', 'm_crn_e', 'm_cl_e', 'm_csn_e', 'm_cmp_e', 'm_ctbt_p', 'm_co2_e', 'm_cu_c', 'm_cobalt2_e', 'm_cu2_e', 'm_cyan_c', 'm_cyan_e', 'm_cynt_e', 'm_bbtcoa_c', 'm_cys__D_e', 'm_3sala_c', 'm_trnacys_c', 'm_cys__L_e', 'm_ala__D_e', 'm_damp_e', 'm_15dap_e', 'm_cytd_e', 'm_dad_2_e', 'm_dca_e', 'm_dcmp_e', 'm_dcyt_e', 'm_ddca_e', 'm_2ddglcn_e', 'm_25dkglcn_c', 'm_dgmp_e', 'm_dmso_c', 'm_dgsn_e', 'm_23dhmb_c', 'm_dha_e', 'm_dmso_e', 'm_dms_e', 'm_dhor__S_c', 'm_23doguln_c', 'm_dopa_e', 'm_dsbard_p', 'm_dsbcox_p', 'm_dsbgox_p', 'm_dimp_e', 'm_ser__D_e', 'm_dtmp_e', 'm_din_e', 'm_dump_e', 'm_duri_e', 'm_dxyl_c', 'm_lac__D_e', 'm_3hbcoa_c', 'm_3hhcoa_c', 'm_3hocoa_c', 'm_3hdcoa_c', 'm_3hddcoa_c', 'm_3htdcoa_c', 'm_3hhdcoa_c', 'm_3hodcoa_c', 'm_for_e', 'm_etha_e', 'm_ethso3_e', 'm_etoh_e', 'm_fru_e', 'm_frulys_e', 'm_fruur_e', 'm_fuc__L_e', 'm_3hcinnm_e', 'm_3hpppn_e', 'm_fum_e', 'm_g1p_e', 'm_g3pc_e', 'm_g3pe_e', 'm_malthx_e', 'm_g3pg_e', 'm_maltpt_e', 'm_malttr_e', 'm_maltttr_e', 'm_man6p_e', 'm_g3pi_e', 'm_man_e', 'm_manglyc_e', 'm_melib_e', 'm_g3ps_e', 'm_met__D_e', 'm_met__L_e', 'm_metsox_R__L_e', 'm_g6p_e', 'm_metsox_S__L_e', 'm_mg2_e', 'm_minohp_e', 'm_mmet_e', 'm_mn2_e', 'm_mnl_e', 'm_mobd_e', 'm_mso3_e', 'm_n2o_e', 'm_na1_e', 'm_gal1p_e', 'm_f6p_e', 'm_fald_e', 'm_nac_e', 'm_nh4_e', 'm_ni2_e', 'm_nmn_e', 'm_fe2_e', 'm_no2_e', 'm_no3_e', 'm_gal_e', 'm_no_e', 'm_fe3dcit_e', 'm_fe3dhbzs_e', 'm_o2_e', 'm_o2s_e', 'm_ocdca_e', 'm_ocdcea_e', 'm_octa_e', 'm_orn_e', 'm_gal_bD_e', 'm_orot_e', 'm_pacald_e', 'm_peamn_e', 'm_phe__L_e', 'm_tungs_e', 'm_galct__D_e', 'm_tym_e', 'm_pi_e', 'm_tyr__L_e', 'm_galctn__D_e', 'm_tyrp_e', 'm_pnto__R_e', 'm_ppa_e', 'm_ppal_e', 'm_uacgam_e', 'm_udpacgal_e', 'm_pppn_e', 'm_galctn__L_e', 'm_ppt_e', 'm_pro__L_e', 'm_udpg_e', 'm_udpgal_e', 'm_udpglcur_e', 'm_progly_e', 'm_galt_e', 'm_psclys_e', 'm_pser__L_e', 'm_ump_e', 'm_ura_e', 'm_urea_e', 'm_uri_e', 'm_val__L_e', 'm_xan_e', 'm_ptrc_e', 'm_pyr_e', 'm_r5p_e', 'm_rib__D_e', 'm_rmn_e', 'm_sbt__D_e', 'm_xmp_e', 'm_xtsn_e', 'm_galur_e', 'm_xyl__D_e', 'm_xylu__L_e', 'm_zn2_e', 'm_ser__L_e', 'm_skm_e', 'm_so2_e', 'm_so3_e', 'm_gam6p_e', 'm_so4_e', 'm_spmd_e', 'm_succ_e', 'm_sucr_e', 'm_sulfac_e', 'm_gam_e', 'm_tartr__L_e', 'm_taur_e', 'm_tcynt_e', 'm_thm_e', 'm_thr__L_e', 'm_thrp_e', 'm_thym_e', 'm_thymd_e', 'm_tma_e', 'm_gbbtn_e', 'm_tmao_e', 'm_tre_e', 'm_trp__L_e', 'm_gdp_e', 'm_tsul_e', 'm_ttdca_e', 'm_ttdcea_e', 'm_glc__D_e', 'm_glcn_e', 'm_glcr_e', 'm_glcur1p_e', 'm_glcur_e', 'm_gln__L_e', 'm_glu__L_e', 'm_gly_e', 'm_glyald_e', 'm_gam1p_c', 'm_glyb_e', 'm_glyc2p_e', 'm_glyc3p_e', 'm_glyc_e', 'm_glyc__R_e', 'm_glyclt_e', 'm_gmp_e', 'm_gsn_e', 'm_gthox_e', 'm_trnagln_c', 'm_gthrd_e', 'm_glu__D_c', 'm_gtp_e', 'm_gua_e', 'm_h2_e', 'm_h2o2_e', 'm_gp4g_c', 'm_h2s_e', 'm_trnagly_c', 'm_hdca_e', 'm_hdcea_e', 'm_hg2_e', 'm_his__L_e', 'm_hom__L_e', 'm_4mhetz_c', 'm_hxa_e', 'm_hxan_e', 'm_hg2_c', 'm_idon__L_e', 'm_trnahis_c', 'm_ile__L_e', 'm_4ahmmp_c', 'm_hom__L_c', 'm_imp_e', 'm_trnaile_c', 'm_indole_e', 'm_hpyr_c', 'm_inost_e', 'm_ins_e', 'm_3c2hmp_c', 'm_isetac_e', 'm_k_e', 'm_lcts_e', 'm_trnaleu_c', 'm_leu__L_e', 'm_lac__L_e', 'm_trnalys_c', 'm_lys__L_e', 'm_lyx__L_e', 'm_mal__D_e', 'm_mal__L_e', 'm_malt_e', 'm_mercppyr_c', 'm_mana_c', 'm_trnamet_c', 'm_mi1p__D_c', 'm_dmbzid_c', 'm_orot5p_c', 'm_ragund_c', 'm_2pglyc_c', 'm_trnaphe_c', 'm_Nmtrp_c', 'm_trnapro_c', 'm_sarcs_c', 'm_sl26da_c', 'm_seln_c', 'm_trnaser_c', 'm_trnasecys_c', 'm_trnathr_c', 'm_tmao_c', 'm_trnatrp_c', 'm_trnatyr_c', 'm_trnaval_c']
 
lowerbound = {'0': [0.0, 0.0], '1': [0.0, 0.0], '2': [0.0, 0.0], '3': [0.0, 0.0], '4': [0.0, 0.0], '5': [0.0, 0.0], '6': [0.0, 0.0], '7': [0.0, 0.0], '8': [0.0, 0.0], '9': [0.0, 0.0], '10': [0.0, 0.0], '11': [0.0, 0.0], '12': [0.0, 0.0], '13': [0.0, 0.0], '14': [0.0, 0.0], '15': [0.0, 0.0], '16': [0.0, 0.0], '17': [0.0, 0.0], '18': [0.0, 0.0], '19': [0.0, 0.0], '20': [0.0, 0.0], '21': [0.0, 0.0], '22': [0.0, 0.0], '23': [0.0, 0.0], '24': [0.0, 0.0], '25': [0.0, 0.0], '26': [0.0, 0.0], '27': [0.0, 0.0], '28': [0.0, 0.0], '29': [0.0, 0.0], '30': [0.0, 0.0], '31': [0.0, 0.0], '32': [0.0, 0.0], '33': [0.0, 0.0], '34': [0.0, 0.0], '35': [0.0, 0.0], '36': [0.0, 0.0], '37': [0.0, 0.0], '38': [0.0, 0.0], '39': [0.0, 0.0], '40': [0.0, 0.0], '41': [0.0, 0.0], '42': [0.0, 0.0], '43': [0.0, 0.0], '44': [0.0, 0.0], '45': [0.0, 0.0], '46': [0.0, 0.0], '47': [0.0, 0.0], '48': [0.0, 0.0], '49': [0.0, 0.0], '50': [0.0, 0.0], '51': [0.0, 0.0], '52': [0.0, 0.0], '53': [0.0, 0.0], '54': [0.0, 0.0], '55': [0.0, 0.0], '56': [0.0, 0.0], '57': [0.0, 0.0], '58': [0.0, 0.0], '59': [0.0, 0.0], '60': [0.0, 0.0], '61': [0.0, 0.0], '62': [0.0, 0.0], '63': [0.0, 0.0], '64': [0.0, 0.0], '65': [0.0, 0.0], '66': [0.0, 0.0], '67': [0.0, 0.0], '68': [0.0, 0.0], '69': [0.0, 0.0], '70': [0.0, 0.0], '71': [0.0, 0.0], '72': [0.0, 0.0], '73': [0.0, 0.0], '74': [0.0, 0.0], '75': [0.0, 0.0], '76': [0.0, 0.0], '77': [0.0, 0.0], '78': [0.0, 0.0], '79': [0.0, 0.0], '80': [0.0, 0.0], '81': [0.0, 0.0], '82': [0.0, 0.0], '83': [0.0, 0.0], '84': [0.0, 0.0], '85': [0.0, 0.0], '86': [0.0, 0.0], '87': [0.0, 0.0], '88': [0.0, 0.0], '89': [0.0, 0.0], '90': [0.0, 0.0], '91': [0.0, 0.0], '92': [0.0, 0.0], '93': [0.0, 0.0], '94': [0.0, 0.0], '95': [0.0, 0.0], '96': [0.0, 0.0], '97': [0.0, 0.0], '98': [0.0, 0.0], '99': [0.0, 0.0], '100': [0.0, 0.0], '101': [0.0, 0.0], '102': [0.0, 0.0], '103': [0.0, 0.0], '104': [0.0, 0.0], '105': [0.0, 0.0], '106': [0.0, 0.0], '107': [0.0, 0.0], '108': [0.0, 0.0], '109': [0.0, 0.0], '110': [0.0, 0.0], '111': [0.0, 0.0], '112': [0.0, 0.0], '113': [0.0, 0.0], '114': [0.0, 0.0], '115': [0.0, 0.0], '116': [0.0, 0.0], '117': [0.0, 0.0], '118': [0.0, 0.0], '119': [0.0, 0.0], '120': [0.0, 0.0], '121': [0.0, 0.0], '122': [0.0, 0.0], '123': [0.0, 0.0], '124': [0.0, 0.0], '125': [0.0, 0.0], '126': [0.0, 0.0], '127': [0.0, 0.0], '128': [0.0, 0.0], '129': [0.0, 0.0], '130': [0.0, 0.0], '131': [0.0, 0.0], '132': [0.0, 0.0], '133': [0.0, 0.0], '134': [0.0, 0.0], '135': [0.0, 0.0], '136': [0.0, 0.0], '137': [0.0, 0.0], '138': [0.0, 0.0], '139': [0.0, 0.0], '140': [0.0, 0.0], '141': [0.0, 0.0], '142': [0.0, 0.0], '143': [0.0, 0.0], '144': [0.0, 0.0], '145': [0.0, 0.0], '146': [0.0, 0.0], '147': [0.0, 0.0], '148': [0.0, 0.0], '149': [0.0, 0.0], '150': [0.0, 0.0], '151': [0.0, 0.0], '152': [0.0, 0.0], '153': [0.0, 0.0], '154': [0.0, 0.0], '155': [0.0, 0.0], '156': [0.0, 0.0], '157': [0.0, 0.0], '158': [0.0, 0.0], '159': [0.0, 0.0], '160': [0.0, 0.0], '161': [0.0, 0.0], '162': [0.0, 0.0], '163': [0.0, 0.0], '164': [0.0, 0.0], '165': [0.0, 0.0], '166': [0.0, 0.0], '167': [0.0, 0.0], '168': [0.0, 0.0], '169': [0.0, 0.0], '170': [0.0, 0.0], '171': [0.0, 0.0], '172': [0.0, 0.0], '173': [0.0, 0.0], '174': [0.0, 0.0], '175': [0.0, 0.0], '176': [0.0, 0.0], '177': [0.0, 0.0], '178': [0.0, 0.0], '179': [0.0, 0.0], '180': [0.0, 0.0], '181': [0.0, 0.0], '182': [0.0, 0.0], '183': [0.0, 0.0], '184': [0.0, 0.0], '185': [0.0, 0.0], '186': [0.0, 0.0], '187': [0.0, 0.0], '188': [0.0, 0.0], '189': [0.0, 0.0], '190': [0.0, 0.0], '191': [0.0, 0.0], '192': [0.0, 0.0], '193': [0.0, 0.0], '194': [0.0, 0.0], '195': [0.0, 0.0], '196': [0.0, 0.0], '197': [0.0, 0.0], '198': [0.0, 0.0], '199': [0.0, 0.0], '200': [0.0, 0.0], '201': [0.0, 0.0], '202': [0.0, 0.0], '203': [0.0, 0.0], '204': [0.0, 0.0], '205': [0.0, 0.0], '206': [0.0, 0.0], '207': [0.0, 0.0], '208': [0.0, 0.0], '209': [0.0, 0.0], '210': [0.0, 0.0], '211': [0.0, 0.0], '212': [0.0, 0.0], '213': [0.0, 0.0], '214': [0.0, 0.0], '215': [0.0, 0.0], '216': [0.0, 0.0], '217': [0.0, 0.0], '218': [0.0, 0.0], '219': [0.0, 0.0], '220': [0.0, 0.0], '221': [0.0, 0.0], '222': [0.0, 0.0], '223': [0.0, 0.0], '224': [0.0, 0.0], '225': [0.0, 0.0], '226': [0.0, 0.0], '227': [0.0, 0.0], '228': [0.0, 0.0], '229': [0.0, 0.0], '230': [0.0, 0.0], '231': [0.0, 0.0], '232': [0.0, 0.0], '233': [0.0, 0.0], '234': [0.0, 0.0], '235': [0.0, 0.0], '236': [0.0, 0.0], '237': [0.0, 0.0], '238': [0.0, 0.0], '239': [0.0, 0.0], '240': [0.0, 0.0], '241': [0.0, 0.0], '242': [0.0, 0.0], '243': [0.0, 0.0], '244': [0.0, 0.0], '245': [0.0, 0.0], '246': [0.0, 0.0], '247': [0.0, 0.0], '248': [0.0, 0.0], '249': [0.0, 0.0], '250': [0.0, 0.0], '251': [0.0, 0.0], '252': [0.0, 0.0], '253': [0.0, 0.0], '254': [0.0, 0.0], '255': [0.0, 0.0], '256': [0.0, 0.0], '257': [0.0, 0.0], '258': [0.0, 0.0], '259': [0.0, 0.0], '260': [0.0, 0.0], '261': [0.0, 0.0], '262': [0.0, 0.0], '263': [0.0, 0.0], '264': [0.0, 0.0], '265': [0.0, 0.0], '266': [0.0, 0.0], '267': [0.0, 0.0], '268': [0.0, 0.0], '269': [0.0, 0.0], '270': [0.0, 0.0], '271': [0.0, 0.0], '272': [0.0, 0.0], '273': [0.0, 0.0], '274': [0.0, 0.0], '275': [0.0, 0.0], '276': [0.0, 0.0], '277': [0.0, 0.0], '278': [0.0, 0.0], '279': [0.0, 0.0], '280': [0.0, 0.0], '281': [0.0, 0.0], '282': [0.0, 0.0], '283': [0.0, 0.0], '284': [0.0, 0.0], '285': [0.0, 0.0], '286': [0.0, 0.0], '287': [0.0, 0.0], '288': [0.0, 0.0], '289': [0.0, 0.0], '290': [0.0, 0.0], '291': [0.0, 0.0], '292': [0.0, 0.0], '293': [0.0, 0.0], '294': [0.0, 0.0], '295': [0.0, 0.0], '296': [0.0, 0.0], '297': [0.0, 0.0], '298': [0.0, 0.0], '299': [0.0, 0.0], '300': [0.0, 0.0], '301': [0.0, 0.0], '302': [0.0, 0.0], '303': [0.0, 0.0], '304': [0.0, 0.0], '305': [0.0, 0.0], '306': [0.0, 0.0], '307': [0.0, 0.0], '308': [0.0, 0.0], '309': [0.0, 0.0], '310': [0.0, 0.0], '311': [0.0, 0.0], '312': [0.0, 0.0], '313': [0.0, 0.0], '314': [0.0, 0.0], '315': [0.0, 0.0], '316': [0.0, 0.0], '317': [0.0, 0.0], '318': [0.0, 0.0], '319': [0.0, 0.0], '320': [0.0, 0.0], '321': [0.0, 0.0], '322': [0.0, 0.0], '323': [0.0, 0.0], '324': [0.0, 0.0], '325': [0.0, 0.0], '326': [0.0, 0.0], '327': [0.0, 0.0], '328': [0.0, 0.0], '329': [0.0, 0.0], '330': [0.0, 0.0], '331': [0.0, 0.0], '332': [0.0, 0.0], '333': [0.0, 0.0], '334': [0.0, 0.0], '335': [0.0, 0.0], '336': [0.0, 0.0], '337': [0.0, 0.0], '338': [0.0, 0.0], '339': [0.0, 0.0], '340': [0.0, 0.0], '341': [0.0, 0.0], '342': [0.0, 0.0], '343': [0.0, 0.0], '344': [0.0, 0.0], '345': [0.0, 0.0], '346': [0.0, 0.0], '347': [0.0, 0.0], '348': [0.0, 0.0], '349': [0.0, 0.0], '350': [0.0, 0.0], '351': [0.0, 0.0], '352': [0.0, 0.0], '353': [0.0, 0.0], '354': [0.0, 0.0], '355': [0.0, 0.0], '356': [0.0, 0.0], '357': [0.0, 0.0], '358': [0.0, 0.0], '359': [0.0, 0.0], '360': [0.0, 0.0], '361': [0.0, 0.0], '362': [0.0, 0.0], '363': [0.0, 0.0], '364': [0.0, 0.0], '365': [0.0, 0.0], '366': [0.0, 0.0], '367': [0.0, 0.0], '368': [0.0, 0.0], '369': [0.0, 0.0], '370': [0.0, 0.0], '371': [0.0, 0.0], '372': [0.0, 0.0], '373': [0.0, 0.0], '374': [0.0, 0.0], '375': [0.0, 0.0], '376': [0.0, 0.0], '377': [0.0, 0.0], '378': [0.0, 0.0], '379': [0.0, 0.0], '380': [0.0, 0.0], '381': [0.0, 0.0], '382': [0.0, 0.0], '383': [0.0, 0.0], '384': [0.0, 0.0], '385': [0.0, 0.0], '386': [0.0, 0.0], '387': [0.0, 0.0], '388': [0.0, 0.0], '389': [0.0, 0.0], '390': [0.0, 0.0], '391': [0.0, 0.0], '392': [0.0, 0.0], '393': [0.0, 0.0], '394': [0.0, 0.0], '395': [0.0, 0.0], '396': [0.0, 0.0], '397': [0.0, 0.0], '398': [0.0, 0.0], '399': [0.0, 0.0], '400': [0.0, 0.0], '401': [0.0, 0.0], '402': [0.0, 0.0], '403': [0.0, 0.0], '404': [0.0, 0.0], '405': [0.0, 0.0], '406': [0.0, 0.0], '407': [0.0, 0.0], '408': [0.0, 0.0], '409': [0.0, 0.0], '410': [0.0, 0.0], '411': [0.0, 0.0], '412': [0.0, 0.0], '413': [0.0, 0.0], '414': [0.0, 0.0], '415': [0.0, 0.0], '416': [0.0, 0.0], '417': [0.0, 0.0], '418': [0.0, 0.0], '419': [0.0, 0.0], '420': [0.0, 0.0], '421': [0.0, 0.0], '422': [0.0, 0.0], '423': [0.0, 0.0], '424': [0.0, 0.0], '425': [0.0, 0.0], '426': [0.0, 0.0], '427': [0.0, 0.0], '428': [0.0, 0.0], '429': [0.0, 0.0], '430': [0.0, 0.0], '431': [0.0, 0.0], '432': [0.0, 0.0], '433': [0.0, 0.0], '434': [0.0, 0.0], '435': [0.0, 0.0], '436': [0.0, 0.0], '437': [0.0, 0.0], '438': [0.0, 0.0], '439': [0.0, 0.0], '440': [0.0, 0.0], '441': [0.0, 0.0], '442': [0.0, 0.0], '443': [0.0, 0.0], '444': [0.0, 0.0], '445': [0.0, 0.0], '446': [0.0, 0.0], '447': [0.0, 0.0], '448': [0.0, 0.0], '449': [0.0, 0.0], '450': [0.0, 0.0], '451': [0.0, 0.0], '452': [0.0, 0.0], '453': [0.0, 0.0], '454': [0.0, 0.0], '455': [0.0, 0.0], '456': [0.0, 0.0], '457': [0.0, 0.0], '458': [0.0, 0.0], '459': [0.0, 0.0], '460': [0.0, 0.0], '461': [0.0, 0.0], '462': [0.0, 0.0], '463': [0.0, 0.0], '464': [0.0, 0.0], '465': [0.0, 0.0], '466': [0.0, 0.0], '467': [0.0, 0.0], '468': [0.0, 0.0], '469': [0.0, 0.0], '470': [0.0, 0.0], '471': [0.0, 0.0], '472': [0.0, 0.0], '473': [0.0, 0.0], '474': [0.0, 0.0], '475': [0.0, 0.0], '476': [0.0, 0.0], '477': [0.0, 0.0], '478': [0.0, 0.0], '479': [0.0, 0.0], '480': [0.0, 0.0], '481': [0.0, 0.0], '482': [0.0, 0.0], '483': [0.0, 0.0], '484': [0.0, 0.0], '485': [0.0, 0.0], '486': [0.0, 0.0], '487': [0.0, 0.0], '488': [0.0, 0.0], '489': [0.0, 0.0], '490': [0.0, 0.0], '491': [0.0, 0.0], '492': [0.0, 0.0], '493': [0.0, 0.0], '494': [0.0, 0.0], '495': [0.0, 0.0], '496': [0.0, 0.0], '497': [0.0, 0.0], '498': [0.0, 0.0], '499': [0.0, 0.0], '500': [0.0, 0.0], '501': [0.0, 0.0], '502': [0.0, 0.0], '503': [0.0, 0.0], '504': [0.0, 0.0], '505': [0.0, 0.0], '506': [0.0, 0.0], '507': [0.0, 0.0], '508': [0.0, 0.0], '509': [0.0, 0.0], '510': [0.0, 0.0], '511': [0.0, 0.0], '512': [0.0, 0.0], '513': [0.0, 0.0], '514': [0.0, 0.0], '515': [0.0, 0.0], '516': [0.0, 0.0], '517': [0.0, 0.0], '518': [0.0, 0.0], '519': [0.0, 0.0], '520': [0.0, 0.0], '521': [0.0, 0.0], '522': [0.0, 0.0], '523': [0.0, 0.0], '524': [0.0, 0.0], '525': [0.0, 0.0], '526': [0.0, 0.0], '527': [0.0, 0.0], '528': [0.0, 0.0], '529': [0.0, 0.0], '530': [0.0, 0.0], '531': [0.0, 0.0], '532': [0.0, 0.0], '533': [0.0, 0.0], '534': [0.0, 0.0], '535': [0.0, 0.0], '536': [0.0, 0.0], '537': [0.0, 0.0], '538': [0.0, 0.0], '539': [0.0, 0.0], '540': [0.0, 0.0], '541': [0.0, 0.0], '542': [0.0, 0.0], '543': [0.0, 0.0], '544': [0.0, 0.0], '545': [0.0, 0.0], '546': [0.0, 0.0], '547': [0.0, 0.0], '548': [0.0, 0.0], '549': [0.0, 0.0], '550': [0.0, 0.0], '551': [0.0, 0.0], '552': [0.0, 0.0], '553': [0.0, 0.0], '554': [0.0, 0.0], '555': [0.0, 0.0], '556': [0.0, 0.0], '557': [0.0, 0.0], '558': [0.0, 0.0], '559': [0.0, 0.0], '560': [0.0, 0.0], '561': [0.0, 0.0], '562': [0.0, 0.0], '563': [0.0, 0.0], '564': [0.0, 0.0], '565': [0.0, 0.0], '566': [0.0, 0.0], '567': [0.0, 0.0], '568': [0.0, 0.0], '569': [0.0, 0.0], '570': [0.0, 0.0], '571': [0.0, 0.0], '572': [0.0, 0.0], '573': [0.0, 0.0], '574': [0.0, 0.0], '575': [0.0, 0.0], '576': [0.0, 0.0], '577': [0.0, 0.0], '578': [0.0, 0.0], '579': [0.0, 0.0], '580': [0.0, 0.0], '581': [0.0, 0.0], '582': [0.0, 0.0], '583': [0.0, 0.0], '584': [0.0, 0.0], '585': [0.0, 0.0], '586': [0.0, 0.0], '587': [0.0, 0.0], '588': [0.0, 0.0], '589': [0.0, 0.0], '590': [0.0, 0.0], '591': [0.0, 0.0], '592': [0.0, 0.0], '593': [0.0, 0.0], '594': [0.0, 0.0], '595': [0.0, 0.0], '596': [0.0, 0.0], '597': [0.0, 0.0], '598': [0.0, 0.0], '599': [0.0, 0.0], '600': [0.0, 0.0], '601': [0.0, 0.0], '602': [0.0, 0.0], '603': [0.0, 0.0], '604': [0.0, 0.0], '605': [0.0, 0.0], '606': [0.0, 0.0], '607': [0.0, 0.0], '608': [0.0, 0.0], '609': [0.0, 0.0], '610': [0.0, 0.0], '611': [0.0, 0.0], '612': [0.0, 0.0], '613': [0.0, 0.0], '614': [0.0, 0.0], '615': [0.0, 0.0], '616': [0.0, 0.0], '617': [0.0, 0.0], '618': [0.0, 0.0], '619': [0.0, 0.0], '620': [0.0, 0.0], '621': [0.0, 0.0], '622': [0.0, 0.0], '623': [0.0, 0.0], '624': [0.0, 0.0], '625': [0.0, 0.0], '626': [0.0, 0.0], '627': [0.0, 0.0], '628': [0.0, 0.0], '629': [0.0, 0.0], '630': [0.0, 0.0], '631': [0.0, 0.0], '632': [0.0, 0.0], '633': [0.0, 0.0], '634': [0.0, 0.0], '635': [0.0, 0.0], '636': [0.0, 0.0], '637': [0.0, 0.0], '638': [0.0, 0.0], '639': [0.0, 0.0], '640': [0.0, 0.0], '641': [0.0, 0.0], '642': [0.0, 0.0], '643': [0.0, 0.0], '644': [0.0, 0.0], '645': [0.0, 0.0], '646': [0.0, 0.0], '647': [0.0, 0.0], '648': [0.0, 0.0], '649': [0.0, 0.0], '650': [0.0, 0.0], '651': [0.0, 0.0], '652': [0.0, 0.0], '653': [0.0, 0.0], '654': [0.0, 0.0], '655': [0.0, 0.0], '656': [0.0, 0.0], '657': [0.0, 0.0], '658': [0.0, 0.0], '659': [0.0, 0.0], '660': [0.0, 0.0], '661': [0.0, 0.0], '662': [0.0, 0.0], '663': [0.0, 0.0], '664': [0.0, 0.0], '665': [0.0, 0.0], '666': [0.0, 0.0], '667': [0.0, 0.0], '668': [0.0, 0.0], '669': [0.0, 0.0], '670': [0.0, 0.0], '671': [0.0, 0.0], '672': [0.0, 0.0], '673': [0.0, 0.0], '674': [0.0, 0.0], '675': [0.0, 0.0], '676': [0.0, 0.0], '677': [0.0, 0.0], '678': [0.0, 0.0], '679': [0.0, 0.0], '680': [0.0, 0.0], '681': [0.0, 0.0], '682': [0.0, 0.0], '683': [0.0, 0.0], '684': [0.0, 0.0], '685': [0.0, 0.0], '686': [0.0, 0.0], '687': [0.0, 0.0], '688': [0.0, 0.0], '689': [0.0, 0.0], '690': [0.0, 0.0], '691': [0.0, 0.0], '692': [0.0, 0.0], '693': [0.0, 0.0], '694': [0.0, 0.0], '695': [0.0, 0.0], '696': [0.0, 0.0], '697': [0.0, 0.0], '698': [0.0, 0.0], '699': [0.0, 0.0], '700': [0.0, 0.0], '701': [0.0, 0.0], '702': [0.0, 0.0], '703': [0.0, 0.0], '704': [0.0, 0.0], '705': [0.0, 0.0], '706': [0.0, 0.0], '707': [0.0, 0.0], '708': [0.0, 0.0], '709': [0.0, 0.0], '710': [0.0, 0.0], '711': [0.0, 0.0], '712': [0.0, 0.0], '713': [0.0, 0.0], '714': [0.0, 0.0], '715': [0.0, 0.0], '716': [0.0, 0.0], '717': [0.0, 0.0], '718': [0.0, 0.0], '719': [0.0, 0.0], '720': [0.0, 0.0], '721': [0.0, 0.0], '722': [0.0, 0.0], '723': [0.0, 0.0], '724': [0.0, 0.0], '725': [0.0, 0.0], '726': [0.0, 0.0], '727': [0.0, 0.0], '728': [0.0, 0.0], '729': [0.0, 0.0], '730': [0.0, 0.0], '731': [0.0, 0.0], '732': [0.0, 0.0], '733': [0.0, 0.0], '734': [0.0, 0.0], '735': [0.0, 0.0], '736': [0.0, 0.0], '737': [0.0, 0.0], '738': [0.0, 0.0], '739': [0.0, 0.0], '740': [0.0, 0.0], '741': [0.0, 0.0], '742': [0.0, 0.0], '743': [0.0, 0.0], '744': [0.0, 0.0], '745': [0.0, 0.0], '746': [0.0, 0.0], '747': [0.0, 0.0], '748': [0.0, 0.0], '749': [0.0, 0.0], '750': [0.0, 0.0], '751': [0.0, 0.0], '752': [0.0, 0.0], '753': [0.0, 0.0], '754': [0.0, 0.0], '755': [0.0, 0.0], '756': [0.0, 0.0], '757': [0.0, 0.0], '758': [0.0, 0.0], '759': [0.0, 0.0], '760': [0.0, 0.0], '761': [0.0, 0.0], '762': [0.0, 0.0], '763': [0.0, 0.0], '764': [0.0, 0.0], '765': [0.0, 0.0], '766': [0.0, 0.0], '767': [0.0, 0.0], '768': [0.0, 0.0], '769': [0.0, 0.0], '770': [0.0, 0.0], '771': [0.0, 0.0], '772': [0.0, 0.0], '773': [0.0, 0.0], '774': [0.0, 0.0], '775': [0.0, 0.0], '776': [0.0, 0.0], '777': [0.0, 0.0], '778': [0.0, 0.0], '779': [0.0, 0.0], '780': [0.0, 0.0], '781': [0.0, 0.0], '782': [0.0, 0.0], '783': [0.0, 0.0], '784': [0.0, 0.0], '785': [0.0, 0.0], '786': [0.0, 0.0], '787': [0.0, 0.0], '788': [0.0, 0.0], '789': [0.0, 0.0], '790': [0.0, 0.0], '791': [0.0, 0.0], '792': [0.0, 0.0], '793': [0.0, 0.0], '794': [0.0, 0.0], '795': [0.0, 0.0], '796': [0.0, 0.0], '797': [0.0, 0.0], '798': [0.0, 0.0], '799': [0.0, 0.0], '800': [0.0, 0.0], '801': [0.0, 0.0], '802': [0.0, 0.0], '803': [0.0, 0.0], '804': [0.0, 0.0], '805': [0.0, 0.0], '806': [0.0, 0.0], '807': [0.0, 0.0], '808': [0.0, 0.0], '809': [0.0, 0.0], '810': [0.0, 0.0], '811': [0.0, 0.0], '812': [0.0, 0.0], '813': [0.0, 0.0], '814': [0.0, 0.0], '815': [0.0, 0.0], '816': [0.0, 0.0], '817': [0.0, 0.0], '818': [0.0, 0.0], '819': [0.0, 0.0], '820': [0.0, 0.0], '821': [0.0, 0.0], '822': [0.0, 0.0], '823': [0.0, 0.0], '824': [0.0, 0.0], '825': [0.0, 0.0], '826': [0.0, 0.0], '827': [0.0, 0.0], '828': [0.0, 0.0], '829': [0.0, 0.0], '830': [0.0, 0.0], '831': [0.0, 0.0], '832': [0.0, 0.0], '833': [0.0, 0.0], '834': [0.0, 0.0], '835': [0.0, 0.0], '836': [0.0, 0.0], '837': [0.0, 0.0], '838': [0.0, 0.0], '839': [0.0, 0.0], '840': [0.0, 0.0], '841': [0.0, 0.0], '842': [0.0, 0.0], '843': [0.0, 0.0], '844': [0.0, 0.0], '845': [0.0, 0.0], '846': [0.0, 0.0], '847': [0.0, 0.0], '848': [0.0, 0.0], '849': [0.0, 0.0], '850': [0.0, 0.0], '851': [0.0, 0.0], '852': [0.0, 0.0], '853': [0.0, 0.0], '854': [0.0, 0.0], '855': [0.0, 0.0], '856': [0.0, 0.0], '857': [0.0, 0.0], '858': [0.0, 0.0], '859': [0.0, 0.0], '860': [0.0, 0.0], '861': [0.0, 0.0], '862': [0.0, 0.0], '863': [0.0, 0.0], '864': [0.0, 0.0], '865': [0.0, 0.0], '866': [0.0, 0.0], '867': [0.0, 0.0], '868': [0.0, 0.0], '869': [0.0, 0.0], '870': [0.0, 0.0], '871': [0.0, 0.0], '872': [0.0, 0.0], '873': [0.0, 0.0], '874': [0.0, 0.0], '875': [0.0, 0.0], '876': [0.0, 0.0], '877': [0.0, 0.0], '878': [0.0, 0.0], '879': [0.0, 0.0], '880': [0.0, 0.0], '881': [0.0, 0.0], '882': [0.0, 0.0], '883': [0.0, 0.0], '884': [0.0, 0.0], '885': [0.0, 0.0], '886': [0.0, 0.0], '887': [0.0, 0.0], '888': [0.0, 0.0], '889': [0.0, 0.0], '890': [0.0, 0.0], '891': [0.0, 0.0], '892': [0.0, 0.0], '893': [0.0, 0.0], '894': [0.0, 0.0], '895': [0.0, 0.0], '896': [0.0, 0.0], '897': [0.0, 0.0], '898': [0.0, 0.0], '899': [0.0, 0.0], '900': [0.0, 0.0], '901': [0.0, 0.0], '902': [0.0, 0.0], '903': [0.0, 0.0], '904': [0.0, 0.0], '905': [0.0, 0.0], '906': [0.0, 0.0], '907': [0.0, 0.0], '908': [0.0, 0.0], '909': [0.0, 0.0], '910': [0.0, 0.0], '911': [0.0, 0.0], '912': [0.0, 0.0], '913': [0.0, 0.0], '914': [0.0, 0.0], '915': [0.0, 0.0], '916': [0.0, 0.0], '917': [0.0, 0.0], '918': [0.0, 0.0], '919': [0.0, 0.0], '920': [0.0, 0.0], '921': [0.0, 0.0], '922': [0.0, 0.0], '923': [0.0, 0.0], '924': [0.0, 0.0], '925': [0.0, 0.0], '926': [0.0, 0.0], '927': [0.0, 0.0], '928': [0.0, 0.0], '929': [0.0, 0.0], '930': [0.0, 0.0], '931': [0.0, 0.0], '932': [0.0, 0.0], '933': [0.0, 0.0], '934': [0.0, 0.0], '935': [0.0, 0.0], '936': [0.0, 0.0], '937': [0.0, 0.0], '938': [0.0, 0.0], '939': [0.0, 0.0], '940': [0.0, 0.0], '941': [0.0, 0.0], '942': [0.0, 0.0], '943': [0.0, 0.0], '944': [0.0, 0.0], '945': [0.0, 0.0], '946': [0.0, 0.0], '947': [0.0, 0.0], '948': [0.0, 0.0], '949': [0.0, 0.0], '950': [0.0, 0.0], '951': [0.0, 0.0], '952': [0.0, 0.0], '953': [0.0, 0.0], '954': [0.0, 0.0], '955': [0.0, 0.0], '956': [0.0, 0.0], '957': [0.0, 0.0], '958': [0.0, 0.0], '959': [0.0, 0.0], '960': [0.0, 0.0], '961': [0.0, 0.0], '962': [0.0, 0.0], '963': [0.0, 0.0], '964': [0.0, 0.0], '965': [0.0, 0.0], '966': [0.0, 0.0], '967': [0.0, 0.0], '968': [0.0, 0.0], '969': [0.0, 0.0], '970': [0.0, 0.0], '971': [0.0, 0.0], '972': [0.0, 0.0], '973': [0.0, 0.0], '974': [0.0, 0.0], '975': [0.0, 0.0], '976': [0.0, 0.0], '977': [0.0, 0.0], '978': [0.0, 0.0], '979': [0.0, 0.0], '980': [0.0, 0.0], '981': [0.0, 0.0], '982': [0.0, 0.0], '983': [0.0, 0.0], '984': [0.0, 0.0], '985': [0.0, 0.0], '986': [0.0, 0.0], '987': [0.0, 0.0], '988': [0.0, 0.0], '989': [0.0, 0.0], '990': [0.0, 0.0], '991': [0.0, 0.0], '992': [0.0, 0.0], '993': [0.0, 0.0], '994': [0.0, 0.0], '995': [0.0, 0.0], '996': [0.0, 0.0], '997': [0.0, 0.0], '998': [0.0, 0.0], '999': [0.0, 0.0], '1000': [0.0, 0.0], '1001': [0.0, 0.0], '1002': [0.0, 0.0], '1003': [0.0, 0.0], '1004': [0.0, 0.0], '1005': [0.0, 0.0], '1006': [0.0, 0.0], '1007': [0.0, 0.0], '1008': [0.0, 0.0], '1009': [0.0, 0.0], '1010': [0.0, 0.0], '1011': [0.0, 0.0], '1012': [0.0, 0.0], '1013': [0.0, 0.0], '1014': [0.0, 0.0], '1015': [0.0, 0.0], '1016': [0.0, 0.0], '1017': [0.0, 0.0], '1018': [0.0, 0.0], '1019': [0.0, 0.0], '1020': [0.0, 0.0], '1021': [0.0, 0.0], '1022': [0.0, 0.0], '1023': [0.0, 0.0], '1024': [0.0, 0.0], '1025': [0.0, 0.0], '1026': [0.0, 0.0], '1027': [0.0, 0.0], '1028': [0.0, 0.0], '1029': [0.0, 0.0], '1030': [0.0, 0.0], '1031': [0.0, 0.0], '1032': [0.0, 0.0], '1033': [0.0, 0.0], '1034': [0.0, 0.0], '1035': [0.0, 0.0], '1036': [0.0, 0.0], '1037': [0.0, 0.0], '1038': [0.0, 0.0], '1039': [0.0, 0.0], '1040': [0.0, 0.0], '1041': [0.0, 0.0], '1042': [0.0, 0.0], '1043': [0.0, 0.0], '1044': [0.0, 0.0], '1045': [0.0, 0.0], '1046': [0.0, 0.0], '1047': [0.0, 0.0], '1048': [0.0, 0.0], '1049': [0.0, 0.0], '1050': [0.0, 0.0], '1051': [0.0, 0.0], '1052': [0.0, 0.0], '1053': [0.0, 0.0], '1054': [0.0, 0.0], '1055': [0.0, 0.0], '1056': [0.0, 0.0], '1057': [0.0, 0.0], '1058': [0.0, 0.0], '1059': [0.0, 0.0], '1060': [0.0, 0.0], '1061': [0.0, 0.0], '1062': [0.0, 0.0], '1063': [0.0, 0.0], '1064': [0.0, 0.0], '1065': [0.0, 0.0], '1066': [0.0, 0.0], '1067': [0.0, 0.0], '1068': [0.0, 0.0], '1069': [0.0, 0.0], '1070': [0.0, 0.0], '1071': [0.0, 0.0], '1072': [0.0, 0.0], '1073': [0.0, 0.0], '1074': [0.0, 0.0], '1075': [0.0, 0.0], '1076': [0.0, 0.0], '1077': [0.0, 0.0], '1078': [0.0, 0.0], '1079': [0.0, 0.0], '1080': [0.0, 0.0], '1081': [0.0, 0.0], '1082': [0.0, 0.0], '1083': [0.0, 0.0], '1084': [0.0, 0.0], '1085': [0.0, 0.0], '1086': [0.0, 0.0], '1087': [0.0, 0.0], '1088': [0.0, 0.0], '1089': [0.0, 0.0], '1090': [0.0, 0.0], '1091': [0.0, 0.0], '1092': [0.0, 0.0], '1093': [0.0, 0.0], '1094': [0.0, 0.0], '1095': [0.0, 0.0], '1096': [0.0, 0.0], '1097': [0.0, 0.0], '1098': [0.0, 0.0], '1099': [0.0, 0.0], '1100': [0.0, 0.0], '1101': [0.0, 0.0], '1102': [0.0, 0.0], '1103': [0.0, 0.0], '1104': [0.0, 0.0], '1105': [0.0, 0.0], '1106': [0.0, 0.0], '1107': [0.0, 0.0], '1108': [0.0, 0.0], '1109': [0.0, 0.0], '1110': [0.0, 0.0], '1111': [0.0, 0.0], '1112': [0.0, 0.0], '1113': [0.0, 0.0], '1114': [0.0, 0.0], '1115': [0.0, 0.0], '1116': [0.0, 0.0], '1117': [0.0, 0.0], '1118': [0.0, 0.0], '1119': [0.0, 0.0], '1120': [0.0, 0.0], '1121': [0.0, 0.0], '1122': [0.0, 0.0], '1123': [0.0, 0.0], '1124': [0.0, 0.0], '1125': [0.0, 0.0], '1126': [0.0, 0.0], '1127': [0.0, 0.0], '1128': [0.0, 0.0], '1129': [0.0, 0.0], '1130': [0.0, 0.0], '1131': [0.0, 0.0], '1132': [0.0, 0.0], '1133': [0.0, 0.0], '1134': [0.0, 0.0], '1135': [0.0, 0.0], '1136': [0.0, 0.0], '1137': [0.0, 0.0], '1138': [0.0, 0.0], '1139': [0.0, 0.0], '1140': [0.0, 0.0], '1141': [0.0, 0.0], '1142': [0.0, 0.0], '1143': [0.0, 0.0], '1144': [0.0, 0.0], '1145': [0.0, 0.0], '1146': [0.0, 0.0], '1147': [0.0, 0.0], '1148': [0.0, 0.0], '1149': [0.0, 0.0], '1150': [0.0, 0.0], '1151': [0.0, 0.0], '1152': [0.0, 0.0], '1153': [0.0, 0.0], '1154': [0.0, 0.0], '1155': [0.0, 0.0], '1156': [0.0, 0.0], '1157': [0.0, 0.0], '1158': [0.0, 0.0], '1159': [0.0, 0.0], '1160': [0.0, 0.0], '1161': [0.0, 0.0], '1162': [0.0, 0.0], '1163': [0.0, 0.0], '1164': [0.0, 0.0], '1165': [0.0, 0.0], '1166': [0.0, 0.0], '1167': [0.0, 0.0], '1168': [0.0, 0.0], '1169': [0.0, 0.0], '1170': [0.0, 0.0], '1171': [0.0, 0.0], '1172': [0.0, 0.0], '1173': [0.0, 0.0], '1174': [0.0, 0.0], '1175': [0.0, 0.0], '1176': [0.0, 0.0], '1177': [0.0, 0.0], '1178': [0.0, 0.0], '1179': [0.0, 0.0], '1180': [0.0, 0.0], '1181': [0.0, 0.0], '1182': [0.0, 0.0], '1183': [0.0, 0.0], '1184': [0.0, 0.0], '1185': [0.0, 0.0], '1186': [0.0, 0.0], '1187': [0.0, 0.0], '1188': [0.0, 0.0], '1189': [0.0, 0.0], '1190': [0.0, 0.0], '1191': [0.0, 0.0], '1192': [0.0, 0.0], '1193': [0.0, 0.0], '1194': [0.0, 0.0], '1195': [0.0, 0.0], '1196': [0.0, 0.0], '1197': [0.0, 0.0], '1198': [0.0, 0.0], '1199': [0.0, 0.0], '1200': [0.0, 0.0], '1201': [0.0, 0.0], '1202': [0.0, 0.0], '1203': [0.0, 0.0], '1204': [0.0, 0.0], '1205': [0.0, 0.0], '1206': [0.0, 0.0], '1207': [0.0, 0.0], '1208': [0.0, 0.0], '1209': [0.0, 0.0], '1210': [0.0, 0.0], '1211': [0.0, 0.0], '1212': [0.0, 0.0], '1213': [0.0, 0.0], '1214': [0.0, 0.0], '1215': [0.0, 0.0], '1216': [0.0, 0.0], '1217': [0.0, 0.0], '1218': [0.0, 0.0], '1219': [0.0, 0.0], '1220': [0.0, 0.0], '1221': [0.0, 0.0], '1222': [0.0, 0.0], '1223': [0.0, 0.0], '1224': [0.0, 0.0], '1225': [0.0, 0.0], '1226': [0.0, 0.0], '1227': [0.0, 0.0], '1228': [0.0, 0.0], '1229': [0.0, 0.0], '1230': [0.0, 0.0], '1231': [0.0, 0.0], '1232': [0.0, 0.0], '1233': [0.0, 0.0], '1234': [0.0, 0.0], '1235': [0.0, 0.0], '1236': [0.0, 0.0], '1237': [0.0, 0.0], '1238': [0.0, 0.0], '1239': [0.0, 0.0], '1240': [0.0, 0.0], '1241': [0.0, 0.0], '1242': [0.0, 0.0], '1243': [0.0, 0.0], '1244': [0.0, 0.0], '1245': [0.0, 0.0], '1246': [0.0, 0.0], '1247': [0.0, 0.0], '1248': [0.0, 0.0], '1249': [0.0, 0.0], '1250': [0.0, 0.0], '1251': [0.0, 0.0], '1252': [0.0, 0.0], '1253': [0.0, 0.0], '1254': [0.0, 0.0], '1255': [0.0, 0.0], '1256': [0.0, 0.0], '1257': [0.0, 0.0], '1258': [0.0, 0.0], '1259': [0.0, 0.0], '1260': [0.0, 0.0], '1261': [0.0, 0.0], '1262': [0.0, 0.0], '1263': [0.0, 0.0], '1264': [0.0, 0.0], '1265': [0.0, 0.0], '1266': [0.0, 0.0], '1267': [0.0, 0.0], '1268': [0.0, 0.0], '1269': [0.0, 0.0], '1270': [0.0, 0.0], '1271': [0.0, 0.0], '1272': [0.0, 0.0], '1273': [0.0, 0.0], '1274': [0.0, 0.0], '1275': [0.0, 0.0], '1276': [0.0, 0.0], '1277': [0.0, 0.0], '1278': [0.0, 0.0], '1279': [0.0, 0.0], '1280': [0.0, 0.0], '1281': [0.0, 0.0], '1282': [0.0, 0.0], '1283': [0.0, 0.0], '1284': [0.0, 0.0], '1285': [0.0, 0.0], '1286': [0.0, 0.0], '1287': [0.0, 0.0], '1288': [0.0, 0.0], '1289': [0.0, 0.0], '1290': [0.0, 0.0], '1291': [0.0, 0.0], '1292': [0.0, 0.0], '1293': [0.0, 0.0], '1294': [0.0, 0.0], '1295': [0.0, 0.0], '1296': [0.0, 0.0], '1297': [0.0, 0.0], '1298': [0.0, 0.0], '1299': [0.0, 0.0], '1300': [0.0, 0.0], '1301': [0.0, 0.0], '1302': [0.0, 0.0], '1303': [0.0, 0.0], '1304': [0.0, 0.0], '1305': [0.0, 0.0], '1306': [0.0, 0.0], '1307': [0.0, 0.0], '1308': [0.0, 0.0], '1309': [0.0, 0.0], '1310': [0.0, 0.0], '1311': [0.0, 0.0], '1312': [0.0, 0.0], '1313': [0.0, 0.0], '1314': [0.0, 0.0], '1315': [0.0, 0.0], '1316': [0.0, 0.0], '1317': [0.0, 0.0], '1318': [0.0, 0.0], '1319': [0.0, 0.0], '1320': [0.0, 0.0], '1321': [0.0, 0.0], '1322': [0.0, 0.0], '1323': [0.0, 0.0], '1324': [0.0, 0.0], '1325': [0.0, 0.0], '1326': [0.0, 0.0], '1327': [0.0, 0.0], '1328': [0.0, 0.0], '1329': [0.0, 0.0], '1330': [0.0, 0.0], '1331': [0.0, 0.0], '1332': [0.0, 0.0], '1333': [0.0, 0.0], '1334': [0.0, 0.0], '1335': [0.0, 0.0], '1336': [0.0, 0.0], '1337': [0.0, 0.0], '1338': [0.0, 0.0], '1339': [0.0, 0.0], '1340': [0.0, 0.0], '1341': [0.0, 0.0], '1342': [0.0, 0.0], '1343': [0.0, 0.0], '1344': [0.0, 0.0], '1345': [0.0, 0.0], '1346': [0.0, 0.0], '1347': [0.0, 0.0], '1348': [0.0, 0.0], '1349': [0.0, 0.0], '1350': [0.0, 0.0], '1351': [0.0, 0.0], '1352': [0.0, 0.0], '1353': [0.0, 0.0], '1354': [0.0, 0.0], '1355': [0.0, 0.0], '1356': [0.0, 0.0], '1357': [0.0, 0.0], '1358': [0.0, 0.0], '1359': [0.0, 0.0], '1360': [0.0, 0.0], '1361': [0.0, 0.0], '1362': [0.0, 0.0], '1363': [0.0, 0.0], '1364': [0.0, 0.0], '1365': [0.0, 0.0], '1366': [0.0, 0.0], '1367': [0.0, 0.0], '1368': [0.0, 0.0], '1369': [0.0, 0.0], '1370': [0.0, 0.0], '1371': [0.0, 0.0], '1372': [0.0, 0.0], '1373': [0.0, 0.0], '1374': [0.0, 0.0], '1375': [0.0, 0.0], '1376': [0.0, 0.0], '1377': [0.0, 0.0], '1378': [0.0, 0.0], '1379': [0.0, 0.0], '1380': [0.0, 0.0], '1381': [0.0, 0.0], '1382': [0.0, 0.0], '1383': [0.0, 0.0], '1384': [0.0, 0.0], '1385': [0.0, 0.0], '1386': [0.0, 0.0], '1387': [0.0, 0.0], '1388': [0.0, 0.0], '1389': [0.0, 0.0], '1390': [0.0, 0.0], '1391': [0.0, 0.0], '1392': [0.0, 0.0], '1393': [0.0, 0.0], '1394': [0.0, 0.0], '1395': [0.0, 0.0], '1396': [0.0, 0.0], '1397': [0.0, 0.0], '1398': [0.0, 0.0], '1399': [0.0, 0.0], '1400': [0.0, 0.0], '1401': [0.0, 0.0], '1402': [0.0, 0.0], '1403': [0.0, 0.0], '1404': [0.0, 0.0], '1405': [0.0, 0.0], '1406': [0.0, 0.0], '1407': [0.0, 0.0], '1408': [0.0, 0.0], '1409': [0.0, 0.0], '1410': [0.0, 0.0], '1411': [0.0, 0.0], '1412': [0.0, 0.0], '1413': [0.0, 0.0], '1414': [0.0, 0.0], '1415': [0.0, 0.0], '1416': [0.0, 0.0], '1417': [0.0, 0.0], '1418': [0.0, 0.0], '1419': [0.0, 0.0], '1420': [0.0, 0.0], '1421': [0.0, 0.0], '1422': [0.0, 0.0], '1423': [0.0, 0.0], '1424': [0.0, 0.0], '1425': [0.0, 0.0], '1426': [0.0, 0.0], '1427': [0.0, 0.0], '1428': [0.0, 0.0], '1429': [0.0, 0.0], '1430': [0.0, 0.0], '1431': [0.0, 0.0], '1432': [0.0, 0.0], '1433': [0.0, 0.0], '1434': [0.0, 0.0], '1435': [0.0, 0.0], '1436': [0.0, 0.0], '1437': [0.0, 0.0], '1438': [0.0, 0.0], '1439': [0.0, 0.0], '1440': [0.0, 0.0], '1441': [0.0, 0.0], '1442': [0.0, 0.0], '1443': [0.0, 0.0], '1444': [0.0, 0.0], '1445': [0.0, 0.0], '1446': [0.0, 0.0], '1447': [0.0, 0.0], '1448': [0.0, 0.0], '1449': [0.0, 0.0], '1450': [0.0, 0.0], '1451': [0.0, 0.0], '1452': [0.0, 0.0], '1453': [0.0, 0.0], '1454': [0.0, 0.0], '1455': [0.0, 0.0], '1456': [0.0, 0.0], '1457': [0.0, 0.0], '1458': [0.0, 0.0], '1459': [0.0, 0.0], '1460': [0.0, 0.0], '1461': [0.0, 0.0], '1462': [0.0, 0.0], '1463': [0.0, 0.0], '1464': [0.0, 0.0], '1465': [0.0, 0.0], '1466': [0.0, 0.0], '1467': [0.0, 0.0], '1468': [0.0, 0.0], '1469': [0.0, 0.0], '1470': [0.0, 0.0], '1471': [0.0, 0.0], '1472': [0.0, 0.0], '1473': [0.0, 0.0], '1474': [0.0, 0.0], '1475': [0.0, 0.0], '1476': [0.0, 0.0], '1477': [0.0, 0.0], '1478': [0.0, 0.0], '1479': [0.0, 0.0], '1480': [0.0, 0.0], '1481': [0.0, 0.0], '1482': [0.0, 0.0], '1483': [0.0, 0.0], '1484': [0.0, 0.0], '1485': [0.0, 0.0], '1486': [0.0, 0.0], '1487': [0.0, 0.0], '1488': [0.0, 0.0], '1489': [0.0, 0.0], '1490': [0.0, 0.0], '1491': [0.0, 0.0], '1492': [0.0, 0.0], '1493': [0.0, 0.0], '1494': [0.0, 0.0], '1495': [0.0, 0.0], '1496': [0.0, 0.0], '1497': [0.0, 0.0], '1498': [0.0, 0.0], '1499': [0.0, 0.0], '1500': [0.0, 0.0], '1501': [0.0, 0.0], '1502': [0.0, 0.0], '1503': [0.0, 0.0], '1504': [0.0, 0.0], '1505': [0.0, 0.0], '1506': [0.0, 0.0], '1507': [0.0, 0.0], '1508': [0.0, 0.0], '1509': [0.0, 0.0], '1510': [0.0, 0.0], '1511': [0.0, 0.0], '1512': [0.0, 0.0], '1513': [0.0, 0.0], '1514': [0.0, 0.0], '1515': [0.0, 0.0], '1516': [0.0, 0.0], '1517': [0.0, 0.0], '1518': [0.0, 0.0], '1519': [0.0, 0.0], '1520': [0.0, 0.0], '1521': [0.0, 0.0], '1522': [0.0, 0.0], '1523': [0.0, 0.0], '1524': [0.0, 0.0], '1525': [0.0, 0.0], '1526': [0.0, 0.0], '1527': [0.0, 0.0], '1528': [0.0, 0.0], '1529': [0.0, 0.0], '1530': [0.0, 0.0], '1531': [0.0, 0.0], '1532': [0.0, 0.0], '1533': [0.0, 0.0], '1534': [0.0, 0.0], '1535': [0.0, 0.0], '1536': [0.0, 0.0], '1537': [0.0, 0.0], '1538': [0.0, 0.0], '1539': [0.0, 0.0], '1540': [0.0, 0.0], '1541': [0.0, 0.0], '1542': [0.0, 0.0], '1543': [0.0, 0.0], '1544': [0.0, 0.0], '1545': [0.0, 0.0], '1546': [0.0, 0.0], '1547': [0.0, 0.0], '1548': [0.0, 0.0], '1549': [0.0, 0.0], '1550': [0.0, 0.0], '1551': [0.0, 0.0], '1552': [0.0, 0.0], '1553': [0.0, 0.0], '1554': [0.0, 0.0], '1555': [0.0, 0.0], '1556': [0.0, 0.0], '1557': [0.0, 0.0], '1558': [0.0, 0.0], '1559': [0.0, 0.0], '1560': [0.0, 0.0], '1561': [0.0, 0.0], '1562': [0.0, 0.0], '1563': [0.0, 0.0], '1564': [0.0, 0.0], '1565': [0.0, 0.0], '1566': [0.0, 0.0], '1567': [0.0, 0.0], '1568': [0.0, 0.0], '1569': [0.0, 0.0], '1570': [0.0, 0.0], '1571': [0.0, 0.0], '1572': [0.0, 0.0], '1573': [0.0, 0.0], '1574': [0.0, 0.0], '1575': [0.0, 0.0], '1576': [0.0, 0.0], '1577': [0.0, 0.0], '1578': [0.0, 0.0], '1579': [0.0, 0.0], '1580': [0.0, 0.0], '1581': [0.0, 0.0], '1582': [0.0, 0.0], '1583': [0.0, 0.0], '1584': [0.0, 0.0], '1585': [0.0, 0.0], '1586': [0.0, 0.0], '1587': [0.0, 0.0], '1588': [0.0, 0.0], '1589': [0.0, 0.0], '1590': [0.0, 0.0], '1591': [0.0, 0.0], '1592': [0.0, 0.0], '1593': [0.0, 0.0], '1594': [0.0, 0.0], '1595': [0.0, 0.0], '1596': [0.0, 0.0], '1597': [0.0, 0.0], '1598': [0.0, 0.0], '1599': [0.0, 0.0], '1600': [0.0, 0.0], '1601': [0.0, 0.0], '1602': [0.0, 0.0], '1603': [0.0, 0.0], '1604': [0.0, 0.0], '1605': [0.0, 0.0], '1606': [0.0, 0.0], '1607': [0.0, 0.0], '1608': [0.0, 0.0], '1609': [0.0, 0.0], '1610': [0.0, 0.0], '1611': [0.0, 0.0], '1612': [0.0, 0.0], '1613': [0.0, 0.0], '1614': [0.0, 0.0], '1615': [0.0, 0.0], '1616': [0.0, 0.0], '1617': [0.0, 0.0], '1618': [0.0, 0.0], '1619': [0.0, 0.0], '1620': [0.0, 0.0], '1621': [0.0, 0.0], '1622': [0.0, 0.0], '1623': [0.0, 0.0], '1624': [0.0, 0.0], '1625': [0.0, 0.0], '1626': [0.0, 0.0], '1627': [0.0, 0.0], '1628': [0.0, 0.0], '1629': [0.0, 0.0], '1630': [0.0, 0.0], '1631': [0.0, 0.0], '1632': [0.0, 0.0], '1633': [0.0, 0.0], '1634': [0.0, 0.0], '1635': [0.0, 0.0], '1636': [0.0, 0.0], '1637': [0.0, 0.0], '1638': [0.0, 0.0], '1639': [0.0, 0.0], '1640': [0.0, 0.0], '1641': [0.0, 0.0], '1642': [0.0, 0.0], '1643': [0.0, 0.0], '1644': [0.0, 0.0], '1645': [0.0, 0.0], '1646': [0.0, 0.0], '1647': [0.0, 0.0], '1648': [0.0, 0.0], '1649': [0.0, 0.0], '1650': [0.0, 0.0], '1651': [0.0, 0.0], '1652': [0.0, 0.0], '1653': [0.0, 0.0], '1654': [0.0, 0.0], '1655': [0.0, 0.0], '1656': [0.0, 0.0], '1657': [0.0, 0.0], '1658': [0.0, 0.0], '1659': [0.0, 0.0], '1660': [0.0, 0.0], '1661': [0.0, 0.0], '1662': [0.0, 0.0], '1663': [0.0, 0.0], '1664': [0.0, 0.0], '1665': [0.0, 0.0], '1666': [0.0, 0.0], '1667': [0.0, 0.0], }
 
upperbound = {'0': [0.001, 0.001], '1': [0.001, 0.001], '2': [0.001, 0.001], '3': [0.001, 0.001], '4': [0.001, 0.001], '5': [0.001, 0.001], '6': [0.001, 0.001], '7': [0.001, 0.001], '8': [0.001, 0.001], '9': [0.001, 0.001], '10': [0.001, 0.001], '11': [0.001, 0.001], '12': [0.001, 0.001], '13': [0.001, 0.001], '14': [0.001, 0.001], '15': [0.001, 0.001], '16': [0.001, 0.001], '17': [0.001, 0.001], '18': [0.001, 0.001], '19': [0.001, 0.001], '20': [0.001, 0.001], '21': [0.001, 0.001], '22': [0.001, 0.001], '23': [0.001, 0.001], '24': [0.001, 0.001], '25': [0.001, 0.001], '26': [0.001, 0.001], '27': [0.001, 0.001], '28': [0.001, 0.001], '29': [0.001, 0.001], '30': [0.001, 0.001], '31': [0.001, 0.001], '32': [0.001, 0.001], '33': [0.001, 0.001], '34': [0.001, 0.001], '35': [0.001, 0.001], '36': [0.001, 0.001], '37': [0.001, 0.001], '38': [0.001, 0.001], '39': [0.001, 0.001], '40': [0.001, 0.001], '41': [0.001, 0.001], '42': [0.001, 0.001], '43': [0.001, 0.001], '44': [0.001, 0.001], '45': [0.001, 0.001], '46': [0.001, 0.001], '47': [0.001, 0.001], '48': [0.001, 0.001], '49': [0.001, 0.001], '50': [0.001, 0.001], '51': [0.001, 0.001], '52': [0.001, 0.001], '53': [0.001, 0.001], '54': [0.001, 0.001], '55': [0.001, 0.001], '56': [0.001, 0.001], '57': [0.001, 0.001], '58': [0.001, 0.001], '59': [0.001, 0.001], '60': [0.001, 0.001], '61': [0.001, 0.001], '62': [0.001, 0.001], '63': [0.001, 0.001], '64': [0.001, 0.001], '65': [0.001, 0.001], '66': [0.001, 0.001], '67': [0.001, 0.001], '68': [0.001, 0.001], '69': [0.001, 0.001], '70': [0.001, 0.001], '71': [0.001, 0.001], '72': [0.001, 0.001], '73': [0.001, 0.001], '74': [0.001, 0.001], '75': [0.001, 0.001], '76': [0.001, 0.001], '77': [0.001, 0.001], '78': [0.001, 0.001], '79': [0.001, 0.001], '80': [0.001, 0.001], '81': [0.001, 0.001], '82': [0.001, 0.001], '83': [0.001, 0.001], '84': [0.001, 0.001], '85': [0.001, 0.001], '86': [0.001, 0.001], '87': [0.001, 0.001], '88': [0.001, 0.001], '89': [0.001, 0.001], '90': [0.001, 0.001], '91': [0.001, 0.001], '92': [0.001, 0.001], '93': [0.001, 0.001], '94': [0.001, 0.001], '95': [0.001, 0.001], '96': [0.001, 0.001], '97': [0.001, 0.001], '98': [0.001, 0.001], '99': [0.001, 0.001], '100': [0.001, 0.001], '101': [0.001, 0.001], '102': [0.001, 0.001], '103': [0.001, 0.001], '104': [0.001, 0.001], '105': [0.001, 0.001], '106': [0.001, 0.001], '107': [0.001, 0.001], '108': [0.001, 0.001], '109': [0.001, 0.001], '110': [0.001, 0.001], '111': [0.001, 0.001], '112': [0.001, 0.001], '113': [0.001, 0.001], '114': [0.001, 0.001], '115': [0.001, 0.001], '116': [0.001, 0.001], '117': [0.001, 0.001], '118': [0.001, 0.001], '119': [0.001, 0.001], '120': [0.001, 0.001], '121': [0.001, 0.001], '122': [0.001, 0.001], '123': [0.001, 0.001], '124': [0.001, 0.001], '125': [0.001, 0.001], '126': [0.001, 0.001], '127': [0.001, 0.001], '128': [0.001, 0.001], '129': [0.001, 0.001], '130': [0.001, 0.001], '131': [0.001, 0.001], '132': [0.001, 0.001], '133': [0.001, 0.001], '134': [0.001, 0.001], '135': [0.001, 0.001], '136': [0.001, 0.001], '137': [0.001, 0.001], '138': [0.001, 0.001], '139': [0.001, 0.001], '140': [0.001, 0.001], '141': [0.001, 0.001], '142': [0.001, 0.001], '143': [0.001, 0.001], '144': [0.001, 0.001], '145': [0.001, 0.001], '146': [0.001, 0.001], '147': [0.001, 0.001], '148': [0.001, 0.001], '149': [0.001, 0.001], '150': [0.001, 0.001], '151': [0.001, 0.001], '152': [0.001, 0.001], '153': [0.001, 0.001], '154': [0.001, 0.001], '155': [0.001, 0.001], '156': [0.001, 0.001], '157': [0.001, 0.001], '158': [0.001, 0.001], '159': [0.001, 0.001], '160': [0.001, 0.001], '161': [0.001, 0.001], '162': [0.001, 0.001], '163': [0.001, 0.001], '164': [0.001, 0.001], '165': [0.001, 0.001], '166': [0.001, 0.001], '167': [0.001, 0.001], '168': [0.001, 0.001], '169': [0.001, 0.001], '170': [0.001, 0.001], '171': [0.001, 0.001], '172': [0.001, 0.001], '173': [0.001, 0.001], '174': [0.001, 0.001], '175': [0.001, 0.001], '176': [0.001, 0.001], '177': [0.001, 0.001], '178': [0.001, 0.001], '179': [0.001, 0.001], '180': [0.001, 0.001], '181': [0.001, 0.001], '182': [0.001, 0.001], '183': [0.001, 0.001], '184': [0.001, 0.001], '185': [0.001, 0.001], '186': [0.001, 0.001], '187': [0.001, 0.001], '188': [0.001, 0.001], '189': [0.001, 0.001], '190': [0.001, 0.001], '191': [0.001, 0.001], '192': [0.001, 0.001], '193': [0.001, 0.001], '194': [0.001, 0.001], '195': [0.001, 0.001], '196': [0.001, 0.001], '197': [0.001, 0.001], '198': [0.001, 0.001], '199': [0.001, 0.001], '200': [0.001, 0.001], '201': [0.001, 0.001], '202': [0.001, 0.001], '203': [0.001, 0.001], '204': [0.001, 0.001], '205': [0.001, 0.001], '206': [0.001, 0.001], '207': [0.001, 0.001], '208': [0.001, 0.001], '209': [0.001, 0.001], '210': [0.001, 0.001], '211': [0.001, 0.001], '212': [0.001, 0.001], '213': [0.001, 0.001], '214': [0.001, 0.001], '215': [0.001, 0.001], '216': [0.001, 0.001], '217': [0.001, 0.001], '218': [0.001, 0.001], '219': [0.001, 0.001], '220': [0.001, 0.001], '221': [0.001, 0.001], '222': [0.001, 0.001], '223': [0.001, 0.001], '224': [0.001, 0.001], '225': [0.001, 0.001], '226': [0.001, 0.001], '227': [0.001, 0.001], '228': [0.001, 0.001], '229': [0.001, 0.001], '230': [0.001, 0.001], '231': [0.001, 0.001], '232': [0.001, 0.001], '233': [0.001, 0.001], '234': [0.001, 0.001], '235': [0.001, 0.001], '236': [0.001, 0.001], '237': [0.001, 0.001], '238': [0.001, 0.001], '239': [0.001, 0.001], '240': [0.001, 0.001], '241': [0.001, 0.001], '242': [0.001, 0.001], '243': [0.001, 0.001], '244': [0.001, 0.001], '245': [0.001, 0.001], '246': [0.001, 0.001], '247': [0.001, 0.001], '248': [0.001, 0.001], '249': [0.001, 0.001], '250': [0.001, 0.001], '251': [0.001, 0.001], '252': [0.001, 0.001], '253': [0.001, 0.001], '254': [0.001, 0.001], '255': [0.001, 0.001], '256': [0.001, 0.001], '257': [0.001, 0.001], '258': [0.001, 0.001], '259': [0.001, 0.001], '260': [0.001, 0.001], '261': [0.001, 0.001], '262': [0.001, 0.001], '263': [0.001, 0.001], '264': [0.001, 0.001], '265': [0.001, 0.001], '266': [0.001, 0.001], '267': [0.001, 0.001], '268': [0.001, 0.001], '269': [0.001, 0.001], '270': [0.001, 0.001], '271': [0.001, 0.001], '272': [0.001, 0.001], '273': [0.001, 0.001], '274': [0.001, 0.001], '275': [0.001, 0.001], '276': [0.001, 0.001], '277': [0.001, 0.001], '278': [0.001, 0.001], '279': [0.001, 0.001], '280': [0.001, 0.001], '281': [0.001, 0.001], '282': [0.001, 0.001], '283': [0.001, 0.001], '284': [0.001, 0.001], '285': [0.001, 0.001], '286': [0.001, 0.001], '287': [0.001, 0.001], '288': [0.001, 0.001], '289': [0.001, 0.001], '290': [0.001, 0.001], '291': [0.001, 0.001], '292': [0.001, 0.001], '293': [0.001, 0.001], '294': [0.001, 0.001], '295': [0.001, 0.001], '296': [0.001, 0.001], '297': [0.001, 0.001], '298': [0.001, 0.001], '299': [0.001, 0.001], '300': [0.001, 0.001], '301': [0.001, 0.001], '302': [0.001, 0.001], '303': [0.001, 0.001], '304': [0.001, 0.001], '305': [0.001, 0.001], '306': [0.001, 0.001], '307': [0.001, 0.001], '308': [0.001, 0.001], '309': [0.001, 0.001], '310': [0.001, 0.001], '311': [0.001, 0.001], '312': [0.001, 0.001], '313': [0.001, 0.001], '314': [0.001, 0.001], '315': [0.001, 0.001], '316': [0.001, 0.001], '317': [0.001, 0.001], '318': [0.001, 0.001], '319': [0.001, 0.001], '320': [0.001, 0.001], '321': [0.001, 0.001], '322': [0.001, 0.001], '323': [0.001, 0.001], '324': [0.001, 0.001], '325': [0.001, 0.001], '326': [0.001, 0.001], '327': [0.001, 0.001], '328': [0.001, 0.001], '329': [0.001, 0.001], '330': [0.001, 0.001], '331': [0.001, 0.001], '332': [0.001, 0.001], '333': [0.001, 0.001], '334': [0.001, 0.001], '335': [0.001, 0.001], '336': [0.001, 0.001], '337': [0.001, 0.001], '338': [0.001, 0.001], '339': [0.001, 0.001], '340': [0.001, 0.001], '341': [0.001, 0.001], '342': [0.001, 0.001], '343': [0.001, 0.001], '344': [0.001, 0.001], '345': [0.001, 0.001], '346': [0.001, 0.001], '347': [0.001, 0.001], '348': [0.001, 0.001], '349': [0.001, 0.001], '350': [0.001, 0.001], '351': [0.001, 0.001], '352': [0.001, 0.001], '353': [0.001, 0.001], '354': [0.001, 0.001], '355': [0.001, 0.001], '356': [0.001, 0.001], '357': [0.001, 0.001], '358': [0.001, 0.001], '359': [0.001, 0.001], '360': [0.001, 0.001], '361': [0.001, 0.001], '362': [0.001, 0.001], '363': [0.001, 0.001], '364': [0.001, 0.001], '365': [0.001, 0.001], '366': [0.001, 0.001], '367': [0.001, 0.001], '368': [0.001, 0.001], '369': [0.001, 0.001], '370': [0.001, 0.001], '371': [0.001, 0.001], '372': [0.001, 0.001], '373': [0.001, 0.001], '374': [0.001, 0.001], '375': [0.001, 0.001], '376': [0.001, 0.001], '377': [0.001, 0.001], '378': [0.001, 0.001], '379': [0.001, 0.001], '380': [0.001, 0.001], '381': [0.001, 0.001], '382': [0.001, 0.001], '383': [0.001, 0.001], '384': [0.001, 0.001], '385': [0.001, 0.001], '386': [0.001, 0.001], '387': [0.001, 0.001], '388': [0.001, 0.001], '389': [0.001, 0.001], '390': [0.001, 0.001], '391': [0.001, 0.001], '392': [0.001, 0.001], '393': [0.001, 0.001], '394': [0.001, 0.001], '395': [0.001, 0.001], '396': [0.001, 0.001], '397': [0.001, 0.001], '398': [0.001, 0.001], '399': [0.001, 0.001], '400': [0.001, 0.001], '401': [0.001, 0.001], '402': [0.001, 0.001], '403': [0.001, 0.001], '404': [0.001, 0.001], '405': [0.001, 0.001], '406': [0.001, 0.001], '407': [0.001, 0.001], '408': [0.001, 0.001], '409': [0.001, 0.001], '410': [0.001, 0.001], '411': [0.001, 0.001], '412': [0.001, 0.001], '413': [0.001, 0.001], '414': [0.001, 0.001], '415': [0.001, 0.001], '416': [0.001, 0.001], '417': [0.001, 0.001], '418': [0.001, 0.001], '419': [0.001, 0.001], '420': [0.001, 0.001], '421': [0.001, 0.001], '422': [0.001, 0.001], '423': [0.001, 0.001], '424': [0.001, 0.001], '425': [0.001, 0.001], '426': [0.001, 0.001], '427': [0.001, 0.001], '428': [0.001, 0.001], '429': [0.001, 0.001], '430': [0.001, 0.001], '431': [0.001, 0.001], '432': [0.001, 0.001], '433': [0.001, 0.001], '434': [0.001, 0.001], '435': [0.001, 0.001], '436': [0.001, 0.001], '437': [0.001, 0.001], '438': [0.001, 0.001], '439': [0.001, 0.001], '440': [0.001, 0.001], '441': [0.001, 0.001], '442': [0.001, 0.001], '443': [0.001, 0.001], '444': [0.001, 0.001], '445': [0.001, 0.001], '446': [0.001, 0.001], '447': [0.001, 0.001], '448': [0.001, 0.001], '449': [0.001, 0.001], '450': [0.001, 0.001], '451': [0.001, 0.001], '452': [0.001, 0.001], '453': [0.001, 0.001], '454': [0.001, 0.001], '455': [0.001, 0.001], '456': [0.001, 0.001], '457': [0.001, 0.001], '458': [0.001, 0.001], '459': [0.001, 0.001], '460': [0.001, 0.001], '461': [0.001, 0.001], '462': [0.001, 0.001], '463': [0.001, 0.001], '464': [0.001, 0.001], '465': [0.001, 0.001], '466': [0.001, 0.001], '467': [0.001, 0.001], '468': [0.001, 0.001], '469': [0.001, 0.001], '470': [0.001, 0.001], '471': [0.001, 0.001], '472': [0.001, 0.001], '473': [0.001, 0.001], '474': [0.001, 0.001], '475': [0.001, 0.001], '476': [0.001, 0.001], '477': [0.001, 0.001], '478': [0.001, 0.001], '479': [0.001, 0.001], '480': [0.001, 0.001], '481': [0.001, 0.001], '482': [0.001, 0.001], '483': [0.001, 0.001], '484': [0.001, 0.001], '485': [0.001, 0.001], '486': [0.001, 0.001], '487': [0.001, 0.001], '488': [0.001, 0.001], '489': [0.001, 0.001], '490': [0.001, 0.001], '491': [0.001, 0.001], '492': [0.001, 0.001], '493': [0.001, 0.001], '494': [0.001, 0.001], '495': [0.001, 0.001], '496': [0.001, 0.001], '497': [0.001, 0.001], '498': [0.001, 0.001], '499': [0.001, 0.001], '500': [0.001, 0.001], '501': [0.001, 0.001], '502': [0.001, 0.001], '503': [0.001, 0.001], '504': [0.001, 0.001], '505': [0.001, 0.001], '506': [0.001, 0.001], '507': [0.001, 0.001], '508': [0.001, 0.001], '509': [0.001, 0.001], '510': [0.001, 0.001], '511': [0.001, 0.001], '512': [0.001, 0.001], '513': [0.001, 0.001], '514': [0.001, 0.001], '515': [0.001, 0.001], '516': [0.001, 0.001], '517': [0.001, 0.001], '518': [0.001, 0.001], '519': [0.001, 0.001], '520': [0.001, 0.001], '521': [0.001, 0.001], '522': [0.001, 0.001], '523': [0.001, 0.001], '524': [0.001, 0.001], '525': [0.001, 0.001], '526': [0.001, 0.001], '527': [0.001, 0.001], '528': [0.001, 0.001], '529': [0.001, 0.001], '530': [0.001, 0.001], '531': [0.001, 0.001], '532': [0.001, 0.001], '533': [0.001, 0.001], '534': [0.001, 0.001], '535': [0.001, 0.001], '536': [0.001, 0.001], '537': [0.001, 0.001], '538': [0.001, 0.001], '539': [0.001, 0.001], '540': [0.001, 0.001], '541': [0.001, 0.001], '542': [0.001, 0.001], '543': [0.001, 0.001], '544': [0.001, 0.001], '545': [0.001, 0.001], '546': [0.001, 0.001], '547': [0.001, 0.001], '548': [0.001, 0.001], '549': [0.001, 0.001], '550': [0.001, 0.001], '551': [0.001, 0.001], '552': [0.001, 0.001], '553': [0.001, 0.001], '554': [0.001, 0.001], '555': [0.001, 0.001], '556': [0.001, 0.001], '557': [0.001, 0.001], '558': [0.001, 0.001], '559': [0.001, 0.001], '560': [0.001, 0.001], '561': [0.001, 0.001], '562': [0.001, 0.001], '563': [0.001, 0.001], '564': [0.001, 0.001], '565': [0.001, 0.001], '566': [0.001, 0.001], '567': [0.001, 0.001], '568': [0.001, 0.001], '569': [0.001, 0.001], '570': [0.001, 0.001], '571': [0.001, 0.001], '572': [0.001, 0.001], '573': [0.001, 0.001], '574': [0.001, 0.001], '575': [0.001, 0.001], '576': [0.001, 0.001], '577': [0.001, 0.001], '578': [0.001, 0.001], '579': [0.001, 0.001], '580': [0.001, 0.001], '581': [0.001, 0.001], '582': [0.001, 0.001], '583': [0.001, 0.001], '584': [0.001, 0.001], '585': [0.001, 0.001], '586': [0.001, 0.001], '587': [0.001, 0.001], '588': [0.001, 0.001], '589': [0.001, 0.001], '590': [0.001, 0.001], '591': [0.001, 0.001], '592': [0.001, 0.001], '593': [0.001, 0.001], '594': [0.001, 0.001], '595': [0.001, 0.001], '596': [0.001, 0.001], '597': [0.001, 0.001], '598': [0.001, 0.001], '599': [0.001, 0.001], '600': [0.001, 0.001], '601': [0.001, 0.001], '602': [0.001, 0.001], '603': [0.001, 0.001], '604': [0.001, 0.001], '605': [0.001, 0.001], '606': [0.001, 0.001], '607': [0.001, 0.001], '608': [0.001, 0.001], '609': [0.001, 0.001], '610': [0.001, 0.001], '611': [0.001, 0.001], '612': [0.001, 0.001], '613': [0.001, 0.001], '614': [0.001, 0.001], '615': [0.001, 0.001], '616': [0.001, 0.001], '617': [0.001, 0.001], '618': [0.001, 0.001], '619': [0.001, 0.001], '620': [0.001, 0.001], '621': [0.001, 0.001], '622': [0.001, 0.001], '623': [0.001, 0.001], '624': [0.001, 0.001], '625': [0.001, 0.001], '626': [0.001, 0.001], '627': [0.001, 0.001], '628': [0.001, 0.001], '629': [0.001, 0.001], '630': [0.001, 0.001], '631': [0.001, 0.001], '632': [0.001, 0.001], '633': [0.001, 0.001], '634': [0.001, 0.001], '635': [0.001, 0.001], '636': [0.001, 0.001], '637': [0.001, 0.001], '638': [0.001, 0.001], '639': [0.001, 0.001], '640': [0.001, 0.001], '641': [0.001, 0.001], '642': [0.001, 0.001], '643': [0.001, 0.001], '644': [0.001, 0.001], '645': [0.001, 0.001], '646': [0.001, 0.001], '647': [0.001, 0.001], '648': [0.001, 0.001], '649': [0.001, 0.001], '650': [0.001, 0.001], '651': [0.001, 0.001], '652': [0.001, 0.001], '653': [0.001, 0.001], '654': [0.001, 0.001], '655': [0.001, 0.001], '656': [0.001, 0.001], '657': [0.001, 0.001], '658': [0.001, 0.001], '659': [0.001, 0.001], '660': [0.001, 0.001], '661': [0.001, 0.001], '662': [0.001, 0.001], '663': [0.001, 0.001], '664': [0.001, 0.001], '665': [0.001, 0.001], '666': [0.001, 0.001], '667': [0.001, 0.001], '668': [0.001, 0.001], '669': [0.001, 0.001], '670': [0.001, 0.001], '671': [0.001, 0.001], '672': [0.001, 0.001], '673': [0.001, 0.001], '674': [0.001, 0.001], '675': [0.001, 0.001], '676': [0.001, 0.001], '677': [0.001, 0.001], '678': [0.001, 0.001], '679': [0.001, 0.001], '680': [0.001, 0.001], '681': [0.001, 0.001], '682': [0.001, 0.001], '683': [0.001, 0.001], '684': [0.001, 0.001], '685': [0.001, 0.001], '686': [0.001, 0.001], '687': [0.001, 0.001], '688': [0.001, 0.001], '689': [0.001, 0.001], '690': [0.001, 0.001], '691': [0.001, 0.001], '692': [0.001, 0.001], '693': [0.001, 0.001], '694': [0.001, 0.001], '695': [0.001, 0.001], '696': [0.001, 0.001], '697': [0.001, 0.001], '698': [0.001, 0.001], '699': [0.001, 0.001], '700': [0.001, 0.001], '701': [0.001, 0.001], '702': [0.001, 0.001], '703': [0.001, 0.001], '704': [0.001, 0.001], '705': [0.001, 0.001], '706': [0.001, 0.001], '707': [0.001, 0.001], '708': [0.001, 0.001], '709': [0.001, 0.001], '710': [0.001, 0.001], '711': [0.001, 0.001], '712': [0.001, 0.001], '713': [0.001, 0.001], '714': [0.001, 0.001], '715': [0.001, 0.001], '716': [0.001, 0.001], '717': [0.001, 0.001], '718': [0.001, 0.001], '719': [0.001, 0.001], '720': [0.001, 0.001], '721': [0.001, 0.001], '722': [0.001, 0.001], '723': [0.001, 0.001], '724': [0.001, 0.001], '725': [0.001, 0.001], '726': [0.001, 0.001], '727': [0.001, 0.001], '728': [0.001, 0.001], '729': [0.001, 0.001], '730': [0.001, 0.001], '731': [0.001, 0.001], '732': [0.001, 0.001], '733': [0.001, 0.001], '734': [0.001, 0.001], '735': [0.001, 0.001], '736': [0.001, 0.001], '737': [0.001, 0.001], '738': [0.001, 0.001], '739': [0.001, 0.001], '740': [0.001, 0.001], '741': [0.001, 0.001], '742': [0.001, 0.001], '743': [0.001, 0.001], '744': [0.001, 0.001], '745': [0.001, 0.001], '746': [0.001, 0.001], '747': [0.001, 0.001], '748': [0.001, 0.001], '749': [0.001, 0.001], '750': [0.001, 0.001], '751': [0.001, 0.001], '752': [0.001, 0.001], '753': [0.001, 0.001], '754': [0.001, 0.001], '755': [0.001, 0.001], '756': [0.001, 0.001], '757': [0.001, 0.001], '758': [0.001, 0.001], '759': [0.001, 0.001], '760': [0.001, 0.001], '761': [0.001, 0.001], '762': [0.001, 0.001], '763': [0.001, 0.001], '764': [0.001, 0.001], '765': [0.001, 0.001], '766': [0.001, 0.001], '767': [0.001, 0.001], '768': [0.001, 0.001], '769': [0.001, 0.001], '770': [0.001, 0.001], '771': [0.001, 0.001], '772': [0.001, 0.001], '773': [0.001, 0.001], '774': [0.001, 0.001], '775': [0.001, 0.001], '776': [0.001, 0.001], '777': [0.001, 0.001], '778': [0.001, 0.001], '779': [0.001, 0.001], '780': [0.001, 0.001], '781': [0.001, 0.001], '782': [0.001, 0.001], '783': [0.001, 0.001], '784': [0.001, 0.001], '785': [0.001, 0.001], '786': [0.001, 0.001], '787': [0.001, 0.001], '788': [0.001, 0.001], '789': [0.001, 0.001], '790': [0.001, 0.001], '791': [0.001, 0.001], '792': [0.001, 0.001], '793': [0.001, 0.001], '794': [0.001, 0.001], '795': [0.001, 0.001], '796': [0.001, 0.001], '797': [0.001, 0.001], '798': [0.001, 0.001], '799': [0.001, 0.001], '800': [0.001, 0.001], '801': [0.001, 0.001], '802': [0.001, 0.001], '803': [0.001, 0.001], '804': [0.001, 0.001], '805': [0.001, 0.001], '806': [0.001, 0.001], '807': [0.001, 0.001], '808': [0.001, 0.001], '809': [0.001, 0.001], '810': [0.001, 0.001], '811': [0.001, 0.001], '812': [0.001, 0.001], '813': [0.001, 0.001], '814': [0.001, 0.001], '815': [0.001, 0.001], '816': [0.001, 0.001], '817': [0.001, 0.001], '818': [0.001, 0.001], '819': [0.001, 0.001], '820': [0.001, 0.001], '821': [0.001, 0.001], '822': [0.001, 0.001], '823': [0.001, 0.001], '824': [0.001, 0.001], '825': [0.001, 0.001], '826': [0.001, 0.001], '827': [0.001, 0.001], '828': [0.001, 0.001], '829': [0.001, 0.001], '830': [0.001, 0.001], '831': [0.001, 0.001], '832': [0.001, 0.001], '833': [0.001, 0.001], '834': [0.001, 0.001], '835': [0.001, 0.001], '836': [0.001, 0.001], '837': [0.001, 0.001], '838': [0.001, 0.001], '839': [0.001, 0.001], '840': [0.001, 0.001], '841': [0.001, 0.001], '842': [0.001, 0.001], '843': [0.001, 0.001], '844': [0.001, 0.001], '845': [0.001, 0.001], '846': [0.001, 0.001], '847': [0.001, 0.001], '848': [0.001, 0.001], '849': [0.001, 0.001], '850': [0.001, 0.001], '851': [0.001, 0.001], '852': [0.001, 0.001], '853': [0.001, 0.001], '854': [0.001, 0.001], '855': [0.001, 0.001], '856': [0.001, 0.001], '857': [0.001, 0.001], '858': [0.001, 0.001], '859': [0.001, 0.001], '860': [0.001, 0.001], '861': [0.001, 0.001], '862': [0.001, 0.001], '863': [0.001, 0.001], '864': [0.001, 0.001], '865': [0.001, 0.001], '866': [0.001, 0.001], '867': [0.001, 0.001], '868': [0.001, 0.001], '869': [0.001, 0.001], '870': [0.001, 0.001], '871': [0.001, 0.001], '872': [0.001, 0.001], '873': [0.001, 0.001], '874': [0.001, 0.001], '875': [0.001, 0.001], '876': [0.001, 0.001], '877': [0.001, 0.001], '878': [0.001, 0.001], '879': [0.001, 0.001], '880': [0.001, 0.001], '881': [0.001, 0.001], '882': [0.001, 0.001], '883': [0.001, 0.001], '884': [0.001, 0.001], '885': [0.001, 0.001], '886': [0.001, 0.001], '887': [0.001, 0.001], '888': [0.001, 0.001], '889': [0.001, 0.001], '890': [0.001, 0.001], '891': [0.001, 0.001], '892': [0.001, 0.001], '893': [0.001, 0.001], '894': [0.001, 0.001], '895': [0.001, 0.001], '896': [0.001, 0.001], '897': [0.001, 0.001], '898': [0.001, 0.001], '899': [0.001, 0.001], '900': [0.001, 0.001], '901': [0.001, 0.001], '902': [0.001, 0.001], '903': [0.001, 0.001], '904': [0.001, 0.001], '905': [0.001, 0.001], '906': [0.001, 0.001], '907': [0.001, 0.001], '908': [0.001, 0.001], '909': [0.001, 0.001], '910': [0.001, 0.001], '911': [0.001, 0.001], '912': [0.001, 0.001], '913': [0.001, 0.001], '914': [0.001, 0.001], '915': [0.001, 0.001], '916': [0.001, 0.001], '917': [0.001, 0.001], '918': [0.001, 0.001], '919': [0.001, 0.001], '920': [0.001, 0.001], '921': [0.001, 0.001], '922': [0.001, 0.001], '923': [0.001, 0.001], '924': [0.001, 0.001], '925': [0.001, 0.001], '926': [0.001, 0.001], '927': [0.001, 0.001], '928': [0.001, 0.001], '929': [0.001, 0.001], '930': [0.001, 0.001], '931': [0.001, 0.001], '932': [0.001, 0.001], '933': [0.001, 0.001], '934': [0.001, 0.001], '935': [0.001, 0.001], '936': [0.001, 0.001], '937': [0.001, 0.001], '938': [0.001, 0.001], '939': [0.001, 0.001], '940': [0.001, 0.001], '941': [0.001, 0.001], '942': [0.001, 0.001], '943': [0.001, 0.001], '944': [0.001, 0.001], '945': [0.001, 0.001], '946': [0.001, 0.001], '947': [0.001, 0.001], '948': [0.001, 0.001], '949': [0.001, 0.001], '950': [0.001, 0.001], '951': [0.001, 0.001], '952': [0.001, 0.001], '953': [0.001, 0.001], '954': [0.001, 0.001], '955': [0.001, 0.001], '956': [0.001, 0.001], '957': [0.001, 0.001], '958': [0.001, 0.001], '959': [0.001, 0.001], '960': [0.001, 0.001], '961': [0.001, 0.001], '962': [0.001, 0.001], '963': [0.001, 0.001], '964': [0.001, 0.001], '965': [0.001, 0.001], '966': [0.001, 0.001], '967': [0.001, 0.001], '968': [0.001, 0.001], '969': [0.001, 0.001], '970': [0.001, 0.001], '971': [0.001, 0.001], '972': [0.001, 0.001], '973': [0.001, 0.001], '974': [0.001, 0.001], '975': [0.001, 0.001], '976': [0.001, 0.001], '977': [0.001, 0.001], '978': [0.001, 0.001], '979': [0.001, 0.001], '980': [0.001, 0.001], '981': [0.001, 0.001], '982': [0.001, 0.001], '983': [0.001, 0.001], '984': [0.001, 0.001], '985': [0.001, 0.001], '986': [0.001, 0.001], '987': [0.001, 0.001], '988': [0.001, 0.001], '989': [0.001, 0.001], '990': [0.001, 0.001], '991': [0.001, 0.001], '992': [0.001, 0.001], '993': [0.001, 0.001], '994': [0.001, 0.001], '995': [0.001, 0.001], '996': [0.001, 0.001], '997': [0.001, 0.001], '998': [0.001, 0.001], '999': [0.001, 0.001], '1000': [0.001, 0.001], '1001': [0.001, 0.001], '1002': [0.001, 0.001], '1003': [0.001, 0.001], '1004': [0.001, 0.001], '1005': [0.001, 0.001], '1006': [0.001, 0.001], '1007': [0.001, 0.001], '1008': [0.001, 0.001], '1009': [0.001, 0.001], '1010': [0.001, 0.001], '1011': [0.001, 0.001], '1012': [0.001, 0.001], '1013': [0.001, 0.001], '1014': [0.001, 0.001], '1015': [0.001, 0.001], '1016': [0.001, 0.001], '1017': [0.001, 0.001], '1018': [0.001, 0.001], '1019': [0.001, 0.001], '1020': [0.001, 0.001], '1021': [0.001, 0.001], '1022': [0.001, 0.001], '1023': [0.001, 0.001], '1024': [0.001, 0.001], '1025': [0.001, 0.001], '1026': [0.001, 0.001], '1027': [0.001, 0.001], '1028': [0.001, 0.001], '1029': [0.001, 0.001], '1030': [0.001, 0.001], '1031': [0.001, 0.001], '1032': [0.001, 0.001], '1033': [0.001, 0.001], '1034': [0.001, 0.001], '1035': [0.001, 0.001], '1036': [0.001, 0.001], '1037': [0.001, 0.001], '1038': [0.001, 0.001], '1039': [0.001, 0.001], '1040': [0.001, 0.001], '1041': [0.001, 0.001], '1042': [0.001, 0.001], '1043': [0.001, 0.001], '1044': [0.001, 0.001], '1045': [0.001, 0.001], '1046': [0.001, 0.001], '1047': [0.001, 0.001], '1048': [0.001, 0.001], '1049': [0.001, 0.001], '1050': [0.001, 0.001], '1051': [0.001, 0.001], '1052': [0.001, 0.001], '1053': [0.001, 0.001], '1054': [0.001, 0.001], '1055': [0.001, 0.001], '1056': [0.001, 0.001], '1057': [0.001, 0.001], '1058': [0.001, 0.001], '1059': [0.001, 0.001], '1060': [0.001, 0.001], '1061': [0.001, 0.001], '1062': [0.001, 0.001], '1063': [0.001, 0.001], '1064': [0.001, 0.001], '1065': [0.001, 0.001], '1066': [0.001, 0.001], '1067': [0.001, 0.001], '1068': [0.001, 0.001], '1069': [0.001, 0.001], '1070': [0.001, 0.001], '1071': [0.001, 0.001], '1072': [0.001, 0.001], '1073': [0.001, 0.001], '1074': [0.001, 0.001], '1075': [0.001, 0.001], '1076': [0.001, 0.001], '1077': [0.001, 0.001], '1078': [0.001, 0.001], '1079': [0.001, 0.001], '1080': [0.001, 0.001], '1081': [0.001, 0.001], '1082': [0.001, 0.001], '1083': [0.001, 0.001], '1084': [0.001, 0.001], '1085': [0.001, 0.001], '1086': [0.001, 0.001], '1087': [0.001, 0.001], '1088': [0.001, 0.001], '1089': [0.001, 0.001], '1090': [0.001, 0.001], '1091': [0.001, 0.001], '1092': [0.001, 0.001], '1093': [0.001, 0.001], '1094': [0.001, 0.001], '1095': [0.001, 0.001], '1096': [0.001, 0.001], '1097': [0.001, 0.001], '1098': [0.001, 0.001], '1099': [0.001, 0.001], '1100': [0.001, 0.001], '1101': [0.001, 0.001], '1102': [0.001, 0.001], '1103': [0.001, 0.001], '1104': [0.001, 0.001], '1105': [0.001, 0.001], '1106': [0.001, 0.001], '1107': [0.001, 0.001], '1108': [0.001, 0.001], '1109': [0.001, 0.001], '1110': [0.001, 0.001], '1111': [0.001, 0.001], '1112': [0.001, 0.001], '1113': [0.001, 0.001], '1114': [0.001, 0.001], '1115': [0.001, 0.001], '1116': [0.001, 0.001], '1117': [0.001, 0.001], '1118': [0.001, 0.001], '1119': [0.001, 0.001], '1120': [0.001, 0.001], '1121': [0.001, 0.001], '1122': [0.001, 0.001], '1123': [0.001, 0.001], '1124': [0.001, 0.001], '1125': [0.001, 0.001], '1126': [0.001, 0.001], '1127': [0.001, 0.001], '1128': [0.001, 0.001], '1129': [0.001, 0.001], '1130': [0.001, 0.001], '1131': [0.001, 0.001], '1132': [0.001, 0.001], '1133': [0.001, 0.001], '1134': [0.001, 0.001], '1135': [0.001, 0.001], '1136': [0.001, 0.001], '1137': [0.001, 0.001], '1138': [0.001, 0.001], '1139': [0.001, 0.001], '1140': [0.001, 0.001], '1141': [0.001, 0.001], '1142': [0.001, 0.001], '1143': [0.001, 0.001], '1144': [0.001, 0.001], '1145': [0.001, 0.001], '1146': [0.001, 0.001], '1147': [0.001, 0.001], '1148': [0.001, 0.001], '1149': [0.001, 0.001], '1150': [0.001, 0.001], '1151': [0.001, 0.001], '1152': [0.001, 0.001], '1153': [0.001, 0.001], '1154': [0.001, 0.001], '1155': [0.001, 0.001], '1156': [0.001, 0.001], '1157': [0.001, 0.001], '1158': [0.001, 0.001], '1159': [0.001, 0.001], '1160': [0.001, 0.001], '1161': [0.001, 0.001], '1162': [0.001, 0.001], '1163': [0.001, 0.001], '1164': [0.001, 0.001], '1165': [0.001, 0.001], '1166': [0.001, 0.001], '1167': [0.001, 0.001], '1168': [0.001, 0.001], '1169': [0.001, 0.001], '1170': [0.001, 0.001], '1171': [0.001, 0.001], '1172': [0.001, 0.001], '1173': [0.001, 0.001], '1174': [0.001, 0.001], '1175': [0.001, 0.001], '1176': [0.001, 0.001], '1177': [0.001, 0.001], '1178': [0.001, 0.001], '1179': [0.001, 0.001], '1180': [0.001, 0.001], '1181': [0.001, 0.001], '1182': [0.001, 0.001], '1183': [0.001, 0.001], '1184': [0.001, 0.001], '1185': [0.001, 0.001], '1186': [0.001, 0.001], '1187': [0.001, 0.001], '1188': [0.001, 0.001], '1189': [0.001, 0.001], '1190': [0.001, 0.001], '1191': [0.001, 0.001], '1192': [0.001, 0.001], '1193': [0.001, 0.001], '1194': [0.001, 0.001], '1195': [0.001, 0.001], '1196': [0.001, 0.001], '1197': [0.001, 0.001], '1198': [0.001, 0.001], '1199': [0.001, 0.001], '1200': [0.001, 0.001], '1201': [0.001, 0.001], '1202': [0.001, 0.001], '1203': [0.001, 0.001], '1204': [0.001, 0.001], '1205': [0.001, 0.001], '1206': [0.001, 0.001], '1207': [0.001, 0.001], '1208': [0.001, 0.001], '1209': [0.001, 0.001], '1210': [0.001, 0.001], '1211': [0.001, 0.001], '1212': [0.001, 0.001], '1213': [0.001, 0.001], '1214': [0.001, 0.001], '1215': [0.001, 0.001], '1216': [0.001, 0.001], '1217': [0.001, 0.001], '1218': [0.001, 0.001], '1219': [0.001, 0.001], '1220': [0.001, 0.001], '1221': [0.001, 0.001], '1222': [0.001, 0.001], '1223': [0.001, 0.001], '1224': [0.001, 0.001], '1225': [0.001, 0.001], '1226': [0.001, 0.001], '1227': [0.001, 0.001], '1228': [0.001, 0.001], '1229': [0.001, 0.001], '1230': [0.001, 0.001], '1231': [0.001, 0.001], '1232': [0.001, 0.001], '1233': [0.001, 0.001], '1234': [0.001, 0.001], '1235': [0.001, 0.001], '1236': [0.001, 0.001], '1237': [0.001, 0.001], '1238': [0.001, 0.001], '1239': [0.001, 0.001], '1240': [0.001, 0.001], '1241': [0.001, 0.001], '1242': [0.001, 0.001], '1243': [0.001, 0.001], '1244': [0.001, 0.001], '1245': [0.001, 0.001], '1246': [0.001, 0.001], '1247': [0.001, 0.001], '1248': [0.001, 0.001], '1249': [0.001, 0.001], '1250': [0.001, 0.001], '1251': [0.001, 0.001], '1252': [0.001, 0.001], '1253': [0.001, 0.001], '1254': [0.001, 0.001], '1255': [0.001, 0.001], '1256': [0.001, 0.001], '1257': [0.001, 0.001], '1258': [0.001, 0.001], '1259': [0.001, 0.001], '1260': [0.001, 0.001], '1261': [0.001, 0.001], '1262': [0.001, 0.001], '1263': [0.001, 0.001], '1264': [0.001, 0.001], '1265': [0.001, 0.001], '1266': [0.001, 0.001], '1267': [0.001, 0.001], '1268': [0.001, 0.001], '1269': [0.001, 0.001], '1270': [0.001, 0.001], '1271': [0.001, 0.001], '1272': [0.001, 0.001], '1273': [0.001, 0.001], '1274': [0.001, 0.001], '1275': [0.001, 0.001], '1276': [0.001, 0.001], '1277': [0.001, 0.001], '1278': [0.001, 0.001], '1279': [0.001, 0.001], '1280': [0.001, 0.001], '1281': [0.001, 0.001], '1282': [0.001, 0.001], '1283': [0.001, 0.001], '1284': [0.001, 0.001], '1285': [0.001, 0.001], '1286': [0.001, 0.001], '1287': [0.001, 0.001], '1288': [0.001, 0.001], '1289': [0.001, 0.001], '1290': [0.001, 0.001], '1291': [0.001, 0.001], '1292': [0.001, 0.001], '1293': [0.001, 0.001], '1294': [0.001, 0.001], '1295': [0.001, 0.001], '1296': [0.001, 0.001], '1297': [0.001, 0.001], '1298': [0.001, 0.001], '1299': [0.001, 0.001], '1300': [0.001, 0.001], '1301': [0.001, 0.001], '1302': [0.001, 0.001], '1303': [0.001, 0.001], '1304': [0.001, 0.001], '1305': [0.001, 0.001], '1306': [0.001, 0.001], '1307': [0.001, 0.001], '1308': [0.001, 0.001], '1309': [0.001, 0.001], '1310': [0.001, 0.001], '1311': [0.001, 0.001], '1312': [0.001, 0.001], '1313': [0.001, 0.001], '1314': [0.001, 0.001], '1315': [0.001, 0.001], '1316': [0.001, 0.001], '1317': [0.001, 0.001], '1318': [0.001, 0.001], '1319': [0.001, 0.001], '1320': [0.001, 0.001], '1321': [0.001, 0.001], '1322': [0.001, 0.001], '1323': [0.001, 0.001], '1324': [0.001, 0.001], '1325': [0.001, 0.001], '1326': [0.001, 0.001], '1327': [0.001, 0.001], '1328': [0.001, 0.001], '1329': [0.001, 0.001], '1330': [0.001, 0.001], '1331': [0.001, 0.001], '1332': [0.001, 0.001], '1333': [0.001, 0.001], '1334': [0.001, 0.001], '1335': [0.001, 0.001], '1336': [0.001, 0.001], '1337': [0.001, 0.001], '1338': [0.001, 0.001], '1339': [0.001, 0.001], '1340': [0.001, 0.001], '1341': [0.001, 0.001], '1342': [0.001, 0.001], '1343': [0.001, 0.001], '1344': [0.001, 0.001], '1345': [0.001, 0.001], '1346': [0.001, 0.001], '1347': [0.001, 0.001], '1348': [0.001, 0.001], '1349': [0.001, 0.001], '1350': [0.001, 0.001], '1351': [0.001, 0.001], '1352': [0.001, 0.001], '1353': [0.001, 0.001], '1354': [0.001, 0.001], '1355': [0.001, 0.001], '1356': [0.001, 0.001], '1357': [0.001, 0.001], '1358': [0.001, 0.001], '1359': [0.001, 0.001], '1360': [0.001, 0.001], '1361': [0.001, 0.001], '1362': [0.001, 0.001], '1363': [0.001, 0.001], '1364': [0.001, 0.001], '1365': [0.001, 0.001], '1366': [0.001, 0.001], '1367': [0.001, 0.001], '1368': [0.001, 0.001], '1369': [0.001, 0.001], '1370': [0.001, 0.001], '1371': [0.001, 0.001], '1372': [0.001, 0.001], '1373': [0.001, 0.001], '1374': [0.001, 0.001], '1375': [0.001, 0.001], '1376': [0.001, 0.001], '1377': [0.001, 0.001], '1378': [0.001, 0.001], '1379': [0.001, 0.001], '1380': [0.001, 0.001], '1381': [0.001, 0.001], '1382': [0.001, 0.001], '1383': [0.001, 0.001], '1384': [0.001, 0.001], '1385': [0.001, 0.001], '1386': [0.001, 0.001], '1387': [0.001, 0.001], '1388': [0.001, 0.001], '1389': [0.001, 0.001], '1390': [0.001, 0.001], '1391': [0.001, 0.001], '1392': [0.001, 0.001], '1393': [0.001, 0.001], '1394': [0.001, 0.001], '1395': [0.001, 0.001], '1396': [0.001, 0.001], '1397': [0.001, 0.001], '1398': [0.001, 0.001], '1399': [0.001, 0.001], '1400': [0.001, 0.001], '1401': [0.001, 0.001], '1402': [0.001, 0.001], '1403': [0.001, 0.001], '1404': [0.001, 0.001], '1405': [0.001, 0.001], '1406': [0.001, 0.001], '1407': [0.001, 0.001], '1408': [0.001, 0.001], '1409': [0.001, 0.001], '1410': [0.001, 0.001], '1411': [0.001, 0.001], '1412': [0.001, 0.001], '1413': [0.001, 0.001], '1414': [0.001, 0.001], '1415': [0.001, 0.001], '1416': [0.001, 0.001], '1417': [0.001, 0.001], '1418': [0.001, 0.001], '1419': [0.001, 0.001], '1420': [0.001, 0.001], '1421': [0.001, 0.001], '1422': [0.001, 0.001], '1423': [0.001, 0.001], '1424': [0.001, 0.001], '1425': [0.001, 0.001], '1426': [0.001, 0.001], '1427': [0.001, 0.001], '1428': [0.001, 0.001], '1429': [0.001, 0.001], '1430': [0.001, 0.001], '1431': [0.001, 0.001], '1432': [0.001, 0.001], '1433': [0.001, 0.001], '1434': [0.001, 0.001], '1435': [0.001, 0.001], '1436': [0.001, 0.001], '1437': [0.001, 0.001], '1438': [0.001, 0.001], '1439': [0.001, 0.001], '1440': [0.001, 0.001], '1441': [0.001, 0.001], '1442': [0.001, 0.001], '1443': [0.001, 0.001], '1444': [0.001, 0.001], '1445': [0.001, 0.001], '1446': [0.001, 0.001], '1447': [0.001, 0.001], '1448': [0.001, 0.001], '1449': [0.001, 0.001], '1450': [0.001, 0.001], '1451': [0.001, 0.001], '1452': [0.001, 0.001], '1453': [0.001, 0.001], '1454': [0.001, 0.001], '1455': [0.001, 0.001], '1456': [0.001, 0.001], '1457': [0.001, 0.001], '1458': [0.001, 0.001], '1459': [0.001, 0.001], '1460': [0.001, 0.001], '1461': [0.001, 0.001], '1462': [0.001, 0.001], '1463': [0.001, 0.001], '1464': [0.001, 0.001], '1465': [0.001, 0.001], '1466': [0.001, 0.001], '1467': [0.001, 0.001], '1468': [0.001, 0.001], '1469': [0.001, 0.001], '1470': [0.001, 0.001], '1471': [0.001, 0.001], '1472': [0.001, 0.001], '1473': [0.001, 0.001], '1474': [0.001, 0.001], '1475': [0.001, 0.001], '1476': [0.001, 0.001], '1477': [0.001, 0.001], '1478': [0.001, 0.001], '1479': [0.001, 0.001], '1480': [0.001, 0.001], '1481': [0.001, 0.001], '1482': [0.001, 0.001], '1483': [0.001, 0.001], '1484': [0.001, 0.001], '1485': [0.001, 0.001], '1486': [0.001, 0.001], '1487': [0.001, 0.001], '1488': [0.001, 0.001], '1489': [0.001, 0.001], '1490': [0.001, 0.001], '1491': [0.001, 0.001], '1492': [0.001, 0.001], '1493': [0.001, 0.001], '1494': [0.001, 0.001], '1495': [0.001, 0.001], '1496': [0.001, 0.001], '1497': [0.001, 0.001], '1498': [0.001, 0.001], '1499': [0.001, 0.001], '1500': [0.001, 0.001], '1501': [0.001, 0.001], '1502': [0.001, 0.001], '1503': [0.001, 0.001], '1504': [0.001, 0.001], '1505': [0.001, 0.001], '1506': [0.001, 0.001], '1507': [0.001, 0.001], '1508': [0.001, 0.001], '1509': [0.001, 0.001], '1510': [0.001, 0.001], '1511': [0.001, 0.001], '1512': [0.001, 0.001], '1513': [0.001, 0.001], '1514': [0.001, 0.001], '1515': [0.001, 0.001], '1516': [0.001, 0.001], '1517': [0.001, 0.001], '1518': [0.001, 0.001], '1519': [0.001, 0.001], '1520': [0.001, 0.001], '1521': [0.001, 0.001], '1522': [0.001, 0.001], '1523': [0.001, 0.001], '1524': [0.001, 0.001], '1525': [0.001, 0.001], '1526': [0.001, 0.001], '1527': [0.001, 0.001], '1528': [0.001, 0.001], '1529': [0.001, 0.001], '1530': [0.001, 0.001], '1531': [0.001, 0.001], '1532': [0.001, 0.001], '1533': [0.001, 0.001], '1534': [0.001, 0.001], '1535': [0.001, 0.001], '1536': [0.001, 0.001], '1537': [0.001, 0.001], '1538': [0.001, 0.001], '1539': [0.001, 0.001], '1540': [0.001, 0.001], '1541': [0.001, 0.001], '1542': [0.001, 0.001], '1543': [0.001, 0.001], '1544': [0.001, 0.001], '1545': [0.001, 0.001], '1546': [0.001, 0.001], '1547': [0.001, 0.001], '1548': [0.001, 0.001], '1549': [0.001, 0.001], '1550': [0.001, 0.001], '1551': [0.001, 0.001], '1552': [0.001, 0.001], '1553': [0.001, 0.001], '1554': [0.001, 0.001], '1555': [0.001, 0.001], '1556': [0.001, 0.001], '1557': [0.001, 0.001], '1558': [0.001, 0.001], '1559': [0.001, 0.001], '1560': [0.001, 0.001], '1561': [0.001, 0.001], '1562': [0.001, 0.001], '1563': [0.001, 0.001], '1564': [0.001, 0.001], '1565': [0.001, 0.001], '1566': [0.001, 0.001], '1567': [0.001, 0.001], '1568': [0.001, 0.001], '1569': [0.001, 0.001], '1570': [0.001, 0.001], '1571': [0.001, 0.001], '1572': [0.001, 0.001], '1573': [0.001, 0.001], '1574': [0.001, 0.001], '1575': [0.001, 0.001], '1576': [0.001, 0.001], '1577': [0.001, 0.001], '1578': [0.001, 0.001], '1579': [0.001, 0.001], '1580': [0.001, 0.001], '1581': [0.001, 0.001], '1582': [0.001, 0.001], '1583': [0.001, 0.001], '1584': [0.001, 0.001], '1585': [0.001, 0.001], '1586': [0.001, 0.001], '1587': [0.001, 0.001], '1588': [0.001, 0.001], '1589': [0.001, 0.001], '1590': [0.001, 0.001], '1591': [0.001, 0.001], '1592': [0.001, 0.001], '1593': [0.001, 0.001], '1594': [0.001, 0.001], '1595': [0.001, 0.001], '1596': [0.001, 0.001], '1597': [0.001, 0.001], '1598': [0.001, 0.001], '1599': [0.001, 0.001], '1600': [0.001, 0.001], '1601': [0.001, 0.001], '1602': [0.001, 0.001], '1603': [0.001, 0.001], '1604': [0.001, 0.001], '1605': [0.001, 0.001], '1606': [0.001, 0.001], '1607': [0.001, 0.001], '1608': [0.001, 0.001], '1609': [0.001, 0.001], '1610': [0.001, 0.001], '1611': [0.001, 0.001], '1612': [0.001, 0.001], '1613': [0.001, 0.001], '1614': [0.001, 0.001], '1615': [0.001, 0.001], '1616': [0.001, 0.001], '1617': [0.001, 0.001], '1618': [0.001, 0.001], '1619': [0.001, 0.001], '1620': [0.001, 0.001], '1621': [0.001, 0.001], '1622': [0.001, 0.001], '1623': [0.001, 0.001], '1624': [0.001, 0.001], '1625': [0.001, 0.001], '1626': [0.001, 0.001], '1627': [0.001, 0.001], '1628': [0.001, 0.001], '1629': [0.001, 0.001], '1630': [0.001, 0.001], '1631': [0.001, 0.001], '1632': [0.001, 0.001], '1633': [0.001, 0.001], '1634': [0.001, 0.001], '1635': [0.001, 0.001], '1636': [0.001, 0.001], '1637': [0.001, 0.001], '1638': [0.001, 0.001], '1639': [0.001, 0.001], '1640': [0.001, 0.001], '1641': [0.001, 0.001], '1642': [0.001, 0.001], '1643': [0.001, 0.001], '1644': [0.001, 0.001], '1645': [0.001, 0.001], '1646': [0.001, 0.001], '1647': [0.001, 0.001], '1648': [0.001, 0.001], '1649': [0.001, 0.001], '1650': [0.001, 0.001], '1651': [0.001, 0.001], '1652': [0.001, 0.001], '1653': [0.001, 0.001], '1654': [0.001, 0.001], '1655': [0.001, 0.001], '1656': [0.001, 0.001], '1657': [0.001, 0.001], '1658': [0.001, 0.001], '1659': [0.001, 0.001], '1660': [0.001, 0.001], '1661': [0.001, 0.001], '1662': [0.001, 0.001], '1663': [0.001, 0.001], '1664': [0.001, 0.001], '1665': [0.001, 0.001], '1666': [0.001, 0.001], '1667': [0.001, 0.001], }
 
model = RK4(ODE, 0.0, y, 1, 21600, None, lowerbound, upperbound)
